Description: Upstream changes introduced in version 2:1.0.0-1
 This patch has been created by dpkg-source during the package build.
 Here's the last changelog entry, hopefully it gives details on why
 those changes were made:
 .
 nginx (2:1.0.0-1) lucid; urgency=low
 .
   * Upgraded to nginx 1.0.0
   * Updated module configuration
   * Added newrelic patch (See: http://support.newrelic.com/kb/docs/queue-time)
 .
 The person named in the Author field signed this changelog entry.
Author: Christopher Deutsch <christopher@rightscale.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- nginx-1.0.0.orig/LICENSE
+++ nginx-1.0.0/LICENSE
@@ -1,5 +1,6 @@
 /* 
- * Copyright (C) 2002-2011 Igor Sysoev
+ * Copyright (C) 2002-2012 Igor Sysoev
+ * Copyright (C) 2011,2012 Nginx, Inc.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
--- nginx-1.0.0.orig/configure
+++ nginx-1.0.0/configure
@@ -1,6 +1,7 @@
 #!/bin/sh
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 . auto/options
@@ -51,8 +52,7 @@ fi
 . auto/os/conf
 
 if [ "$NGX_PLATFORM" != win32 ]; then
-    . auto/os/features
-    . auto/threads
+    . auto/unix
 fi
 
 . auto/modules
@@ -99,10 +99,6 @@ have=NGX_HTTP_SCGI_TEMP_PATH value="\"$N
 . auto/lib/make
 . auto/install
 
-if [ "$NGX_PLATFORM" != win32 ]; then
-    . auto/unix
-fi
-
 # STUB
 . auto/stubs
 
--- nginx-1.0.0.orig/CHANGES.ru
+++ nginx-1.0.0/CHANGES.ru
@@ -1,5318 +1,5705 @@
 
-Изменения в nginx 1.0.0                                           12.04.2011
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 1.0.14                                          15.03.2012
 
-    *) Исправление: cache manager мог нагружать процессор после 
-       переконфигурации.
-       Спасибо Максиму Дунину.
+    *) п▒п╣п╥п╬п©п╟я│п╫п╬я│я┌я▄: я│п╬п╢п╣я─п╤п╦п╪п╬п╣ я─п╟п╫п╣п╣ п╬я│п╡п╬п╠п╬п╤п╢я▒п╫п╫п╬п╧ п©п╟п╪я▐я┌п╦ п╪п╬пЁп╩п╬ п╠я▀я┌я▄
+       п╬я┌п©я─п╟п╡п╩п╣п╫п╬ п╨п╩п╦п╣п╫я┌я┐, п╣я│п╩п╦ п╠я█п╨п╣п╫п╢ п╡п╬п╥п╡я─п╟я┴п╟п╩ я│п©п╣я├п╦п╟п╩я▄п╫п╬ я│п╬п╥п╢п╟п╫п╫я▀п╧ п╬я┌п╡п╣я┌.
+       п║п©п╟я│п╦п╠п╬ Matthew Daley.
 
-    *) Исправление: директива "image_filter crop" неправильно работала в 
-       сочетании с "image_filter rotate 180".
 
-    *) Исправление: директива "satisfy any" запрещала выдачу 
-       пользовательской страницы для 401 кода.
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 1.0.13                                          05.03.2012
 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ return п╦ error_page я┌п╣п©п╣я─я▄ п╪п╬пЁя┐я┌ п╦я│п©п╬п╩я▄п╥п╬п╡п╟я┌я▄я│я▐
+       п╢п╩я▐ п╡п╬п╥п╡я─п╟я┌п╟ п©п╣я─п╣п╫п╟п©я─п╟п╡п╩п╣п╫п╦п╧ я│ п╨п╬п╢п╬п╪ 307.
 
-Изменения в nginx 0.9.7                                           04.04.2011
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault,
+       п╣я│п╩п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╟я│я▄ п╢п╦я─п╣п╨я┌п╦п╡п╟ resolver п╦ п╫п╟ пЁп╩п╬п╠п╟п╩я▄п╫п╬п╪ я┐я─п╬п╡п╫п╣ п╫п╣ п╠я▀п╩п╟
+       п╥п╟п╢п╟п╫п╟ п╢п╦я─п╣п╨я┌п╦п╡п╟ error_log.
+       п║п©п╟я│п╦п╠п╬ п═п╬п╪п╟п╫я┐ п░я─я┐я┌я▌п╫я▐п╫я┐.
 
-    *) Добавление: теперь соединения в состоянии keepalive могут быть 
-       закрыты преждевременно, если у воркера нет свободных соединений.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┐я┌п╣я┤п╣п╨ п©п╟п╪я▐я┌п╦.
+       п║п©п╟я│п╦п╠п╬ Lanshun Zhou.
 
-    *) Добавление: параметр rotate директивы image_filter.
-       Спасибо Adam Bocim.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╪п╬пЁ п╫п╣п╨п╬я─я─п╣п╨я┌п╫п╬ я│п╬п╬п╠я┴п╟я┌я▄ п╬п╠ п╬я┬п╦п╠п╨п╣ "upstream
+       prematurely closed connection" п╡п╪п╣я│я┌п╬ "upstream sent too big header".
+       п║п©п╟я│п╦п╠п╬ Feibo Li.
 
-    *) Исправление: ситуации, когда бэкенд в директивах fastcgi_pass, 
-       scgi_pass или uwsgi_pass задан выражением и ссылается на описанный 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ ZFS я─п╟п╥п╪п╣я─ п╨я█я┬п╟ п╫п╟ п╢п╦я│п╨п╣ п╪п╬пЁ я│я┤п╦я┌п╟я┌я▄я│я▐
+       п╫п╣п╨п╬я─я─п╣п╨я┌п╫п╬; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 1.0.1.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╨п╬п╩п╦я┤п╣я│я┌п╡п╬ п╡п╫я┐я┌я─п╣п╫п╫п╦я┘ п©п╣я─п╣п╫п╟п©я─п╟п╡п╩п╣п╫п╦п╧ п╡ п╦п╪п╣п╫п╬п╡п╟п╫п╫я▀п╣
+       location'я▀ п╫п╣ п╬пЁя─п╟п╫п╦я┤п╦п╡п╟п╩п╬я│я▄.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_store я│
+       SSI-п©п╬п╢п╥п╟п©я─п╬я│п╟п╪п╦ п╡я─п╣п╪п╣п╫п╫я▀п╣ я└п╟п╧п╩я▀ п╪п╬пЁп╩п╦ п╫п╣ я┐п╢п╟п╩я▐я┌я▄я│я▐.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╫п╣п╨п╬я┌п╬я─я▀я┘ я│п╩я┐я┤п╟я▐я┘ п╫п╣п╨я█я┬п╦я─я┐п╣п╪я▀п╣ п©п╣я─п╣п╪п╣п╫п╫я▀п╣ (я┌п╟п╨п╦п╣, п╨п╟п╨
+       $args) п╡п╬п╥п╡я─п╟я┴п╟п╩п╦ я│я┌п╟я─п╬п╣ п©я┐я│я┌п╬п╣ п╥п╟п╨я█я┬п╦я─п╬п╡п╟п╫п╫п╬п╣ п╥п╫п╟я┤п╣п╫п╦п╣.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_redirect п╪п╬пЁп╩п╦ п╫п╟я│п╩п╣п╢п╬п╡п╟я┌я▄я│я▐
+       п╫п╣п╨п╬я─я─п╣п╨я┌п╫п╬.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ я│ п╪п╬п╢я┐п╩п╣п╪ ngx_http_perl_module, п╣я│п╩п╦
+       п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩я│я▐ п©п╟я─п╟п╪п╣я┌я─ --with-openssl.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╨п╬п╪п©п╦п╩я▐я┌п╬я─п╬п╪ icc 12.1.
+
+
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 1.0.12                                          06.02.2012
+
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─я▀ TLSv1.1 п╦ TLSv1.2 п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ ssl_protocols.
+
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: SSI п╨п╬п╪п╟п╫п╢п╟ if п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╡я▀п╢п╣п╩п╣п╫п╦я▐ п╡ я─п╣пЁя┐п╩я▐я─п╫я▀я┘
+       п╡я▀я─п╟п╤п╣п╫п╦я▐я┘.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: SSI п╨п╬п╪п╟п╫п╢п╟ if п╫п╣ я─п╟п╠п╬я┌п╟п╩п╟ п╡п╫я┐я┌я─п╦ п╨п╬п╪п╟п╫п╢я▀ block.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╬п╠я─п╟п╠п╬я┌п╨п╣ п╬я┬п╦п╠п╬п╨ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ AIO п╫п╟ FreeBSD.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╦п╫п╦я├п╦п╟п╩п╦п╥п╟я├п╦п╦ п╠п╦п╠п╩п╦п╬я┌п╣п╨п╦ OpenSSL.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ worker_cpu_affinity п╪п╬пЁп╩п╟ п╫п╣ я─п╟п╠п╬я┌п╟я┌я▄.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ limit_conn_log_level п╦ limit_req_log_level
+       п╪п╬пЁп╩п╦ п╫п╣ я─п╟п╠п╬я┌п╟я┌я▄.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ read_ahead п╪п╬пЁп╩п╟ п╫п╣ я─п╟п╠п╬я┌п╟я┌я▄ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦
+       я│п╬п╡п╪п╣я│я┌п╫п╬ я│ try_files п╦ open_file_cache.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ proxy_cache_use_stale я│ п©п╟я─п╟п╪п╣я┌я─п╬п╪ error п╫п╣
+       п╡п╬п╥п╡я─п╟я┴п╟п╩п╟ п╬я┌п╡п╣я┌ п╦п╥ п╨я█я┬п╟, п╣я│п╩п╦ п╡я│п╣ п╠я█п╨п╣п╫п╢я▀ п╠я▀п╩п╦ п©я─п╦п╥п╫п╟п╫я▀
+       п╫п╣я─п╟п╠п╬я┌п╟я▌я┴п╦п╪п╦.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡ п©п╟я─п╟п╪п╣я┌я─п╣ inactive п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_cache_path
+       п╠я▀п╩п╬ я┐п╨п╟п╥п╟п╫п╬ п╪п╟п╩п╬п╣ п╡я─п╣п╪я▐, п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦
+       segmentation fault.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┌п╡п╣я┌я▀ п╦п╥ п╨я█я┬п╟ п╪п╬пЁп╩п╦ п╥п╟п╡п╦я│п╟я┌я▄.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╬п╠я─п╟п╠п╬я┌п╨п╣ п╬я┬п╦п╠п╬п╨ п©я─п╦ я│п╬п╣п╢п╦п╫п╣п╫п╦п╦ я│ п╠я█п╨п╣п╫п╢п╬п╪.
+       п║п©п╟я│п╦п╠п╬ Piotr Sikora.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╪п╣я┌п╬п╢п╣ epoll.
+       п║п©п╟я│п╦п╠п╬ Yichun Zhang.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $sent_http_cache_control п╪п╬пЁп╩п╟ я│п╬п╢п╣я─п╤п╟я┌я▄
+       п╫п╣п╡п╣я─п╫п╬п╣ п╥п╫п╟я┤п╣п╫п╦п╣ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀ expires.
+       п║п©п╟я│п╦п╠п╬ Yichun Zhang.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ limit_rate п╫п╣ п©п╬п╥п╡п╬п╩я▐п╩п╟ п©п╣я─п╣п╢п╟п╡п╟я┌я▄ п╫п╟ п©п╬п╩п╫п╬п╧
+       я│п╨п╬я─п╬я│я┌п╦, п╢п╟п╤п╣ п╣я│п╩п╦ п╠я▀п╩ я┐п╨п╟п╥п╟п╫ п╬я┤п╣п╫я▄ п╠п╬п╩я▄я┬п╬п╧ п╩п╦п╪п╦я┌.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ sendfile_max_chunk п╫п╣ я─п╟п╠п╬я┌п╟п╩п╟, п╣я│п╩п╦
+       п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╟я│я▄ п╢п╦я─п╣п╨я┌п╦п╡п╟ limit_rate.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ Solaris; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
+       1.0.11.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╪п╬п╢я┐п╩п╣ ngx_http_scgi_module.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╪п╬п╢я┐п╩п╣ ngx_http_mp4_module.
+
+
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 1.0.11                                          15.12.2011
+
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╢п╡п╬п╧п╫я▀п╣ п╨п╟п╡я▀я┤п╨п╦ я█п╨я─п╟п╫п╦я─я┐п╣я┌я│я▐ п©я─п╦ п╡я▀п╡п╬п╢п╣
+       SSI-п╨п╬п╪п╟п╫п╢п╬п╧ echo.
+       п║п©п╟я│п╦п╠п╬ п≈п╟я┐я─я┐ п░п╠п╟я│п╪п╦я─п╥п╬п╣п╡я┐.
+
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ image_filter_sharpen.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault,
+       п╣я│п╩п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╬я│я▄ SNI; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 1.0.9.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я│п╦пЁп╫п╟п╩ SIGWINCH п©п╣я─п╣я│я┌п╟п╡п╟п╩ я─п╟п╠п╬я┌п╟я┌я▄ п©п╬я│п╩п╣ п©п╣я─п╡п╬пЁп╬
+       п╬п╠п╫п╬п╡п╩п╣п╫п╦я▐ п╦я│п©п╬п╩п╫я▐п╣п╪п╬пЁп╬ я└п╟п╧п╩п╟; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 1.0.9.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я│я┌я─п╬п╨п╦ "If-Modified-Since", "If-Range" п╦ п╦п╪ п©п╬п╢п╬п╠п╫я▀п╣ п╡
+       п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╥п╟п©я─п╬я│п╟ п╨п╩п╦п╣п╫я┌п╟ п╪п╬пЁп╩п╦ п©п╣я─п╣п╢п╟п╡п╟я┌я▄я│я▐ п╠я█п╨п╣п╫п╢я┐ п©я─п╦ п╨я█я┬п╦я─п╬п╡п╟п╫п╦п╦;
+       п╦п╩п╦ п╫п╣ п©п╣я─п╣п╢п╟п╡п╟я┌я▄я│я▐ п©я─п╦ п╡я▀п╨п╩я▌я┤п╣п╫п╫п╬п╪ п╨я█я┬п╦я─п╬п╡п╟п╫п╦п╦, п╣я│п╩п╦ п╨я█я┬п╦я─п╬п╡п╟п╫п╦п╣
+       п╠я▀п╩п╬ п╡п╨п╩я▌я┤п╣п╫п╬ п╡ п╢я─я┐пЁп╬п╧ я┤п╟я│я┌п╦ п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ scgi_param п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ я│п╬я│я┌п╟п╡п╫я▀я┘
+       п©п╟я─п╟п╪п╣я┌я─п╬п╡.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ add_header п╦ expires п╫п╣ я─п╟п╠п╬я┌п╟п╩п╦ п╢п╩я▐ п╬я┌п╡п╣я┌п╬п╡ я│
+       п╨п╬п╢п╬п╪ 206, п╣я│п╩п╦ п╥п╟п©я─п╬я│ п©я─п╬п╨я│п╦я─п╬п╡п╟п╩я│я▐.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ "expires @time".
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╪п╬п╢я┐п╩п╣ ngx_http_flv_module.
+       п║п©п╟я│п╦п╠п╬ Piotr Sikora.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╪п╬п╢я┐п╩п╣ ngx_http_mp4_module.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ FreeBSD 10.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ AIX.
+
+
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 1.0.10                                          15.11.2011
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault,
+       п╣я│п╩п╦ resolver п©п╬п╩я┐я┤п╦п╩ п╠п╬п╩я▄я┬п╬п╧ DNS-п╬я┌п╡п╣я┌.
+       п║п©п╟я│п╦п╠п╬ Ben Hawkes.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╡я▀я┤п╦я│п╩п╣п╫п╦п╦ п╨п╩я▌я┤п╟ п╢п╩я▐ п╨я█я┬п╦я─п╬п╡п╟п╫п╦я▐, п╣я│п╩п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╟я│я▄
+       п╡п╫я┐я┌я─п╣п╫п╫я▐я▐ я─п╣п╟п╩п╦п╥п╟я├п╦я▐ MD5; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 1.0.4.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_mp4_module п╡я▀п╢п╟п╡п╟п╩ п╫п╣п╡п╣я─п╫я┐я▌ я│я┌я─п╬п╨я┐
+       "Content-Length" п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╬я┌п╡п╣я┌п╟, п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩я│я▐ п╟я─пЁя┐п╪п╣п╫я┌ start.
+       п║п©п╟я│п╦п╠п╬ Piotr Sikora.
+
+
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 1.0.9                                           01.11.2011
+
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ я│п╦п╪п╡п╬п╩я▀ 0x7F-0xFF п╡ access_log п╥п╟п©п╦я│я▀п╡п╟я▌я┌я│я▐ п╡ п╡п╦п╢п╣
+       \xXX.
+
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: SIGWINCH я│п╦пЁп╫п╟п╩ я┌п╣п©п╣я─я▄ я─п╟п╠п╬я┌п╟п╣я┌ я┌п╬п╩я▄п╨п╬ п╡ я─п╣п╤п╦п╪п╣ п╢п╣п╪п╬п╫п╟.
+
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ "proxy/fastcgi/scgi/uwsgi_ignore_headers"
+       я┌п╣п©п╣я─я▄ п©п╬п╢п╢п╣я─п╤п╦п╡п╟я▌я┌ п╥п╫п╟я┤п╣п╫п╦я▐ X-Accel-Limit-Rate, X-Accel-Buffering п╦
+       X-Accel-Charset.
+
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┐п╪п╣п╫я▄я┬п╣п╫п╦п╣ п©п╬я┌я─п╣п╠п╩п╣п╫п╦я▐ п©п╟п╪я▐я┌п╦ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ SSL.
+
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╫п╟ NetBSD п©п╬п╢п╢п╣я─п╤п╦п╡п╟я▌я┌я│я▐ accept я└п╦п╩я▄я┌я─я▀.
+
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ uwsgi_buffering п╦ scgi_buffering.
+       п║п©п╟я│п╦п╠п╬ Peter Smit.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╫п╟ я│я┌п╟я─я┌п╣ п╦п╩п╦ п╡п╬ п╡я─п╣п╪я▐ п©п╣я─п╣п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦ п©я─п╬п╦я│я┘п╬п╢п╦п╩
+       segmentation fault, п╣я│п╩п╦ п╢п╦я─п╣п╨я┌п╦п╡п╟ ssl п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╟я│я▄ п╫п╟ я┐я─п╬п╡п╫п╣ http
+       п╦ п╫п╣ п╠я▀п╩ я┐п╨п╟п╥п╟п╫ ssl_certificate.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╫п╣п╨п╬я┌п╬я─я▀п╣ UTF-8 я│п╦п╪п╡п╬п╩я▀ п╬п╠я─п╟п╠п╟я┌я▀п╡п╟п╩п╦я│я▄ п╫п╣п©я─п╟п╡п╦п╩я▄п╫п╬.
+       п║п©п╟я│п╦п╠п╬ п░п╩п╣п╨я│п╣я▌ п я┐я├я┐.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ п╪п╬п╢я┐п╩я▐ ngx_http_rewrite_module, п╥п╟п╢п╟п╫п╫я▀п╣ п╫п╟
+       я┐я─п╬п╡п╫п╣ server, п©я─п╦п╪п╣п╫я▐п╩п╦я│я▄ п©п╬п╡я┌п╬я─п╫п╬, п╣я│п╩п╦ п╢п╩я▐ п╥п╟п©я─п╬я│п╟ п╫п╣ п╫п╟я┘п╬п╢п╦п╩п╬я│я▄
+       п╫п╦ п╬п╢п╫п╬пЁп╬ location'п╟.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ "aio sendfile" п╪п╬пЁп╩п╟ п©я─п╬п╦я│я┘п╬п╢п╦я┌я▄
+       я┐я┌п╣я┤п╨п╟ я│п╬п╨п╣я┌п╬п╡.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ я└п╟п╧п╩п╬п╡п╬пЁп╬ AIO я│п╬п╣п╢п╦п╫п╣п╫п╦я▐ я│ п╠я▀я│я┌я─я▀п╪п╦
+       п╨п╩п╦п╣п╫я┌п╟п╪п╦ п╪п╬пЁп╩п╦ п╠я▀я┌я▄ п╥п╟п╨я─я▀я┌я▀ п©п╬ п╦я│я┌п╣я┤п╣п╫п╦я▌ send_timeout.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╪п╬п╢я┐п╩п╣ ngx_http_autoindex_module.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_mp4_module п╫п╣ п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╩ п©п╣я─п╣п╪п╬я┌п╨я┐ п╫п╟
+       32-п╠п╦я┌п╫я▀я┘ п©п╩п╟я┌я└п╬я─п╪п╟я┘.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ proxy_cache_bypass п╪п╬пЁп╩п╦ п╠я▀я┌я▄
+       п╥п╟п╨я█я┬п╦я─п╬п╡п╟п╫я▀ п╫п╣п╨я█я┬п╦я─я┐п╣п╪я▀п╣ п╬я┌п╡п╣я┌я▀.
+       п║п©п╟я│п╦п╠п╬ John Ferlito.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╥п╟п╨я█я┬п╦я─п╬п╡п╟п╫п╫я▀п╣ п╬я┌п╡п╣я┌я▀ я│ п©я┐я│я┌я▀п╪ я┌п╣п╩п╬п╪ п╡п╬п╥п╡я─п╟я┴п╟п╩п╦я│я▄
+       п╫п╣п╨п╬я─я─п╣п╨я┌п╫п╬; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.31.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┌п╡п╣я┌я▀ я│ п╨п╬п╢п╬п╪ 201 п╪п╬п╢я┐п╩я▐ ngx_http_dav_module п╠я▀п╩п╦
+       п╫п╣п╨п╬я─я─п╣п╨я┌п╫я▀; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.32.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ return.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ ssl_verify_client, ssl_verify_depth п╦
+       ssl_prefer_server_cipher п╪п╬пЁп╩п╦ я─п╟п╠п╬я┌п╟я┌я▄ п╫п╣п╨п╬я─я─п╣п╨я┌п╫п╬, п╣я│п╩п╦
+       п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩я│я▐ SNI.
+
+
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 1.0.8                                           01.10.2011
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ я│ п╪п╬п╢я┐п╩п╣п╪ ngx_http_mp4_module п╦ п╠п╣п╥
+       п©п╟я─п╟п╪п╣я┌я─п╟ --with-debug.
+
+
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 1.0.7                                           30.09.2011
+
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄, п╣я│п╩п╦ я│я┐п╪п╪п╟я─п╫я▀п╧ я─п╟п╥п╪п╣я─ п╡я│п╣я┘ п╢п╦п╟п©п╟п╥п╬п╫п╬п╡ п╠п╬п╩я▄я┬п╣
+       я─п╟п╥п╪п╣я─п╟ п╦я│я┘п╬п╢п╫п╬пЁп╬ п╬я┌п╡п╣я┌п╟, я┌п╬ nginx п╡п╬п╥п╡я─п╟я┴п╟п╣я┌ я┌п╬п╩я▄п╨п╬ п╦я│я┘п╬п╢п╫я▀п╧ п╬я┌п╡п╣я┌,
+       п╫п╣ п╬п╠я─п╟п╠п╟я┌я▀п╡п╟я▐ п╢п╦п╟п©п╟п╥п╬п╫я▀.
+
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ max_ranges.
+
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_mp4_module.
+
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ worker_aio_requests.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ nginx п╠я▀п╩ я│п╬п╠я─п╟п╫ я│ я└п╟п╧п╩п╬п╡я▀п╪ AIO, п╬п╫ п╫п╣ п╪п╬пЁ
+       п╥п╟п©я┐я│п╨п╟я┌я▄я│я▐ п╫п╟ Linux п╠п╣п╥ п©п╬п╢п╢п╣я─п╤п╨п╦ AIO.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╬п╠я─п╟п╠п╬я┌п╨п╣ п╬я┬п╦п╠п╬п╨ п©я─п╦ я─п╟п╠п╬я┌п╣ я│ Linux AIO.
+       п║п©п╟я│п╦п╠п╬ Hagai Avrahami.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ Linux AIO, п╦я│п©п╬п╩я▄п╥я┐п╣п╪я▀п╪ я│п╬п╡п╪п╣я│я┌п╫п╬ я│ open_file_cache.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: open_file_cache п╫п╣ п╬п╠п╫п╬п╡п╩я▐п╩ п╦п╫я└п╬я─п╪п╟я├п╦я▌ п╬ я└п╟п╧п╩п╣, п╣я│п╩п╦
+       я└п╟п╧п╩ п╠я▀п╩ п╦п╥п╪п╣п╫я▒п╫ п╫п╣ п╟я┌п╬п╪п╟я─п╫п╬.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┐п╪п╣п╫я▄я┬п╣п╫п╬ п©п╬я┌я─п╣п╠п╩п╣п╫п╦п╣ п©п╟п╪я▐я┌п╦ п╢п╩я▐ п╢п╬п╩пЁп╬п╤п╦п╡я┐я┴п╦я┘ п╥п╟п©я─п╬я│п╬п╡.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╢п╦я─п╣п╨я┌п╦п╡п╟я┘ proxy/fastcgi/scgi/
+       uwsgi_ignore_client_abort.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ MacOSX 10.7.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬п╠я─п╟п╠п╬я┌п╨п╟ я┌п╣п╩п╟ п╥п╟п©я─п╬я│п╟ п╪п╬пЁп╩п╟ п╠я▀я┌я▄ п╫п╣п╡п╣я─п╫п╬п╧, п╣я│п╩п╦ п╨п╩п╦п╣п╫я┌
+       п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩ pipelining.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ request_body_in_single_buf.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╢п╦я─п╣п╨я┌п╦п╡п╟я┘ proxy_set_body п╦ proxy_pass_request_body
+       п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ SSL-я│п╬п╣п╢п╦п╫п╣п╫п╦я▐ я│ п╠я█п╨п╣п╫п╢п╬п╪.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╟пЁя─я┐п╤п╟п╩ п©я─п╬я├п╣я│я│п╬я─, п╣я│п╩п╦ п╡я│п╣ я│п╣я─п╡п╣я─я▀ п╡ upstream'п╣
+       п╠я▀п╩п╦ п©п╬п╪п╣я┤п╣п╫я▀ я└п╩п╟пЁп╬п╪ down.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п©п╣я─п╣п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault,
+       п╣я│п╩п╦ п╡ п©я─п╣п╢я▀п╢я┐я┴п╣п╧ п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦ п╠я▀п╩ п╬п©я─п╣п╢п╣п╩я▒п╫, п╫п╬ п╫п╣ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩я│я▐
+       ssl_session_cache.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╠п╬п╩я▄я┬п╬пЁп╬ п╨п╬п╩п╦я┤п╣я│я┌п╡п╟ backup-я│п╣я─п╡п╣я─п╬п╡ п╡
+       я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault.
+
+
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 1.0.6                                           29.08.2011
+
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┐п╪п╣п╫я▄я┬п╣п╫п╦п╣ п╡я─п╣п╪п╣п╫п╦ я─п╟п╠п╬я┌я▀ п╥п╟пЁя─я┐п╥я┤п╦п╨п╟ п╨я█я┬п╟.
+
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┐п╪п╣п╫я▄я┬п╣п╫п╦п╣ п╡я─п╣п╪п╣п╫п╦ п╥п╟пЁя─я┐п╥п╨п╦ п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╧ я│ п╠п╬п╩я▄я┬п╦п╪
+       п╨п╬п╩п╦я┤п╣я│я┌п╡п╬п╪ HTTPS я│п╣я─п╡п╣я─п╬п╡.
+
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ nginx п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ я┬п╦я└я─я▀ я│ п╬п╠п╪п╣п╫п╬п╪ ECDHE-п╨п╩я▌я┤п╟п╪п╦.
+       п║п©п╟я│п╦п╠п╬ Adrian Kotelba.
+
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ lingering_close.
+
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ я─п╟п╥п╢п╣п╩я▐п╣п╪я▀п╣ п╥п╬п╫я▀ п╦ п╨я█я┬п╦ п╦я│п©п╬п╩я▄п╥я┐я▌я┌ я│п╣п╪п╟я└п╬я─я▀ POSIX
+       п╫п╟ Solaris.
+       п║п©п╟я│п╦п╠п╬ п■п╣п╫п╦я│я┐ п≤п╡п╟п╫п╬п╡я┐.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ Linux 3.0.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╢п╦я─п╣п╨я┌п╦п╡ fastcgi/scgi/uwsgi_param я│п╬
+       п╥п╫п╟я┤п╣п╫п╦я▐п╪п╦, п╫п╟я┤п╦п╫п╟я▌я┴п╦п╪п╦я│я▐ я│п╬ я│я┌я─п╬п╨п╦ "HTTP_", п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ
+       п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.40.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╥п╟п╨я─я▀я┌п╦я▐ я│п╬п╣п╢п╦п╫п╣п╫п╦я▐ п╢п╩я▐ pipelined-п╥п╟п©я─п╬я│п╬п╡.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ п╥п╟п©я─п╣я┴п╟п╩ я│п╤п╟я┌п╦п╣ п©я─п╦ п©п╬п╩я┐я┤п╣п╫п╦п╦ п╥п╫п╟я┤п╣п╫п╦я▐
+       "gzip;q=0" п╡ я│я┌я─п╬п╨п╣ "Accept-Encoding" п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╥п╟п©я─п╬я│п╟ п╨п╩п╦п╣п╫я┌п╟.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┌п╟п╧п╪п╟я┐я┌п╟ п©я─п╦ п╫п╣п╠я┐я└п╣я─п╦п╥п╦я─п╬п╡п╟п╫п╫п╬п╪ п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╦п╦.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┐я┌п╣я┤п╨п╦ п©п╟п╪я▐я┌п╦ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п©п╣я─п╣п╪п╣п╫п╫я▀я┘ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣
+       proxy_pass п©я─п╦ я─п╟п╠п╬я┌п╣ я│ п╠я█п╨п╣п╫п╢п╬п╪ п©п╬ HTTPS.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п©я─п╬п╡п╣я─п╨п╣ п©п╟я─п╟п╪п╣я┌я─п╟ п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_pass, п╥п╟п╢п╟п╫п╫п╬пЁп╬
+       п©п╣я─п╣п╪п╣п╫п╫я▀п╪п╦.
+       п║п©п╟я│п╦п╠п╬ Lanshun Zhou.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: SSL п╫п╣ я─п╟п╠п╬я┌п╟п╩ п╫п╟ QNX.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: SSL п╪п╬п╢я┐п╩п╦ п╫п╣ я│п╬п╠п╦я─п╟п╩п╦я│я▄ gcc 4.6 п╠п╣п╥ п©п╟я─п╟п╪п╣я┌я─п╟
+       --with-debug.
+
+
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 1.0.5                                           19.07.2011
+
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п©п╬ я┐п╪п╬п╩я┤п╟п╫п╦я▌ п╦я│п©п╬п╩я▄п╥я┐я▌я┌я│я▐ я│п╩п╣п╢я┐я▌я┴п╦п╣ я┬п╦я└я─я▀ SSL:
+       "HIGH:!aNULL:!MD5".
+       п║п©п╟я│п╦п╠п╬ Rob Stradling.
+
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ referer_hash_max_size п╦
+       referer_hash_bucket_size.
+       п║п©п╟я│п╦п╠п╬ Witold Filipczyk.
+
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $uid_reset.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╨я█я┬п╦я─п╬п╡п╟п╫п╦я▐ п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ
+       п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault.
+       п║п©п╟я│п╦п╠п╬ Lanshun Zhou.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╨я█я┬п╦я─п╬п╡п╟п╫п╦я▐ я─п╟п╠п╬я┤п╦п╣ п©я─п╬я├п╣я│я│я▀ п╪п╬пЁп╩п╦
+       п╥п╟я├п╦п╨п╩п╦я┌я▄я│я▐ п╡п╬ п╡я─п╣п╪я▐ п©п╣я─п╣п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.48.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я│п╬п╬п╠я┴п╣п╫п╦я▐ "stalled cache updating".
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
+
+
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 1.0.4                                           01.06.2011
+
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╡ я─п╣пЁя┐п╩я▐я─п╫я▀я┘ п╡я▀я─п╟п╤п╣п╫п╦я▐я┘ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ map п╪п╬п╤п╫п╬
+       п╥п╟п╢п╟я┌я▄ я┤я┐п╡я│я┌п╡п╦я┌п╣п╩я▄п╫п╬я│я┌я▄ п╨ я─п╣пЁп╦я│я┌я─я┐ я│ п©п╬п╪п╬я┴я▄я▌ п©я─п╣я└п╦п╨я│п╬п╡ "~" п╦ "~*".
+
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ я─п╟п╥п╢п╣п╩я▐п╣п╪я▀п╣ п╥п╬п╫я▀ п╦ п╨я█я┬п╦ п╦я│п©п╬п╩я▄п╥я┐я▌я┌ я│п╣п╪п╟я└п╬я─я▀ POSIX
+       п╫п╟ Linux.
+       п║п©п╟я│п╦п╠п╬ п■п╣п╫п╦я│я┐ п⌡п╟я┌я▀п©п╬п╡я┐.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я│п╬п╬п╠я┴п╣п╫п╦я▐ "stalled cache updating".
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ я│ п©п╟я─п╟п╪п╣я┌я─п╬п╪
+       --without-http_auth_basic_module; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 1.0.3.
+
+
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 1.0.3                                           25.05.2011
+
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ auth_basic_user_file п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ я┬п╦я└я─п╬п╡п╟п╫п╦п╣
+       п©п╟я─п╬п╩я▐ п╪п╣я┌п╬п╢п╟п╪п╦ "$apr1", "{PLAIN}" п╦ "{SSHA}".
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
+
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ geoip_org п╦ п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $geoip_org.
+       п║п©п╟я│п╦п╠п╬ п░п╩п╣п╨я│п╟п╫п╢я─я┐ пёя│п╨п╬п╡я┐, Arnaud Granal п╦ п■п╣п╫п╦я│я┐ п⌡п╟я┌я▀п©п╬п╡я┐.
+
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩п╦ ngx_http_geo_module п╦ ngx_http_geoip_module
+       п©п╬п╢п╢п╣я─п╤п╦п╡п╟я▌я┌ п╟п╢я─п╣я│п╟ IPv4, п╬я┌п╬п╠я─п╟п╤я▒п╫п╫я▀п╣ п╫п╟ IPv6 п╟п╢я─п╣я│п╟.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п©я─п╬п╡п╣я─п╨п╣ п╟п╢я─п╣я│п╟ IPv4, п╬я┌п╬п╠я─п╟п╤я▒п╫п╫п╬пЁп╬ п╫п╟ п╟п╢я─п╣я│ IPv6, п╡
+       я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault, п╣я│п╩п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀ access
+       п╦п╩п╦ deny п╠я▀п╩п╦ п╬п©я─п╣п╢п╣п╩п╣п╫я▀ я┌п╬п╩я▄п╨п╬ п╢п╩я▐ п╟п╢я─п╣я│п╬п╡ IPv6; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
+       0.8.22.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╥п╟п╨я█я┬п╦я─п╬п╡п╟п╫п╫я▀п╧ п╬я┌п╡п╣я┌ п╪п╬пЁ п╠я▀я┌я▄ п╦я│п©п╬я─я┤п╣п╫, п╣я│п╩п╦ п╥п╫п╟я┤п╣п╫п╦я▐
+       п╢п╦я─п╣п╨я┌п╦п╡ proxy/fastcgi/scgi/uwsgi_cache_bypass п╦ proxy/fastcgi/scgi/
+       uwsgi_no_cache п╠я▀п╩п╦ я─п╟п╥п╫я▀п╪п╦; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.46.
+
+
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 1.0.2                                           10.05.2011
+
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ я─п╟п╥п╢п╣п╩я▐п╣п╪я▀п╣ п╥п╬п╫я▀ п╦ п╨я█я┬п╦ п╦я│п©п╬п╩я▄п╥я┐я▌я┌ я│п╣п╪п╟я└п╬я─я▀ POSIX.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ я─п╟п╠п╬я┌п╣ п©п╟я─п╟п╪п╣я┌я─п╟ rotate п╢п╦я─п╣п╨я┌п╦п╡я▀ image_filter.
+       п║п©п╟я│п╦п╠п╬ Adam Bocim.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ Solaris; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 1.0.1.
+
+
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 1.0.1                                           03.05.2011
+
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╢п╦я─п╣п╨я┌п╦п╡п╟ split_clients п╦я│п©п╬п╩я▄п╥я┐п╣я┌ п╟п╩пЁп╬я─п╦я┌п╪
+       MurmurHash2 п╦п╥-п╥п╟ п╩я┐я┤я┬п╣пЁп╬ я─п╟я│п©я─п╣п╢п╣п╩п╣п╫п╦я▐.
+       п║п©п╟я│п╦п╠п╬ п·п╩п╣пЁя┐ п°п╟п╪п╬п╫я┌п╬п╡я┐.
+
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╢п╩п╦п╫п╫я▀п╣ я│я┌я─п╬п╨п╦, п╫п╟я┤п╦п╫п╟я▌я┴п╦п╣я│я▐ я│ п╫я┐п╩я▐, п╫п╣ я│я┤п╦я┌п╟я▌я┌я│я▐
+       п╩п╬п╤п╫я▀п╪п╦ п╥п╫п╟я┤п╣п╫п╦я▐п╪п╦.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
+
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п©п╬ я┐п╪п╬п╩я┤п╟п╫п╦я▌ nginx п╦я│п©п╬п╩я▄п╥я┐п╣я┌ п╥п╫п╟я┤п╣п╫п╦п╣ 511 п╢п╩я▐
+       listen backlog п╫п╟ Linux.
+
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫я▀п╣ $upstream_... п╪п╬п╤п╫п╬ п╦я│п©п╬п╩я▄п╥п╬п╡п╟я┌я▄ п╡ SSI п╦
+       п©п╣я─п╩п╬п╡п╬п╪ п╪п╬п╢я┐п╩я▐я┘.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ nginx п╩я┐я┤я┬п╣ п╬пЁя─п╟п╫п╦я┤п╦п╡п╟п╣я┌ я─п╟п╥п╪п╣я─ п╨я█я┬п╟ п╫п╟ п╢п╦я│п╨п╣.
+       п║п©п╟я│п╦п╠п╬ п·п╩п╣пЁя┐ п°п╟п╪п╬п╫я┌п╬п╡я┐.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п©п╟я─я│п╦п╫пЁп╣ п╫п╣п©я─п╟п╡п╦п╩я▄п╫п╬пЁп╬ IPv4 п╟п╢я─п╣я│п╟ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦
+       segmentation fault; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.22.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ gcc 4.6 п╠п╣п╥ п©п╟я─п╟п╪п╣я┌я─п╟ --with-debug.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ Solaris 9 п╦ п╠п╬п╩п╣п╣ я─п╟п╫п╫п╦я┘; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.9.3.
+       п║п©п╟я│п╦п╠п╬ Dagobert Michelsen.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $request_time п╦п╪п╣п╩п╟ п╫п╣п╡п╣я─п╫я▀п╣ п╥п╫п╟я┤п╣п╫п╦я▐, п╣я│п╩п╦
+       п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╦я│я▄ п©п╬п╢п╥п╟п©я─п╬я│я▀; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.47.
+       п║п©п╟я│п╦п╠п╬ п≤пЁп╬я─я▌ п░. п▓п╟п╩я▄п╨п╬п╡я┐.
+
+
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 1.0.0                                           12.04.2011
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: cache manager п╪п╬пЁ п╫п╟пЁя─я┐п╤п╟я┌я▄ п©я─п╬я├п╣я│я│п╬я─ п©п╬я│п╩п╣
+       п©п╣я─п╣п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ "image_filter crop" п╫п╣п©я─п╟п╡п╦п╩я▄п╫п╬ я─п╟п╠п╬я┌п╟п╩п╟ п╡
+       я│п╬я┤п╣я┌п╟п╫п╦п╦ я│ "image_filter rotate 180".
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ "satisfy any" п╥п╟п©я─п╣я┴п╟п╩п╟ п╡я▀п╢п╟я┤я┐
+       п©п╬п╩я▄п╥п╬п╡п╟я┌п╣п╩я▄я│п╨п╬п╧ я│я┌я─п╟п╫п╦я├я▀ п╢п╩я▐ 401 п╨п╬п╢п╟.
+
+
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.9.7                                           04.04.2011
+
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ я│п╬п╣п╢п╦п╫п╣п╫п╦я▐ п╡ я│п╬я│я┌п╬я▐п╫п╦п╦ keepalive п╪п╬пЁя┐я┌ п╠я▀я┌я▄
+       п╥п╟п╨я─я▀я┌я▀ п©я─п╣п╤п╢п╣п╡я─п╣п╪п╣п╫п╫п╬, п╣я│п╩п╦ я┐ п╡п╬я─п╨п╣я─п╟ п╫п╣я┌ я│п╡п╬п╠п╬п╢п╫я▀я┘ я│п╬п╣п╢п╦п╫п╣п╫п╦п╧.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
+
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ rotate п╢п╦я─п╣п╨я┌п╦п╡я▀ image_filter.
+       п║п©п╟я│п╦п╠п╬ Adam Bocim.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я│п╦я┌я┐п╟я├п╦п╦, п╨п╬пЁп╢п╟ п╠я█п╨п╣п╫п╢ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╟я┘ fastcgi_pass,
+       scgi_pass п╦п╩п╦ uwsgi_pass п╥п╟п╢п╟п╫ п╡я▀я─п╟п╤п╣п╫п╦п╣п╪ п╦ я│я│я▀п╩п╟п╣я┌я│я▐ п╫п╟ п╬п©п╦я│п╟п╫п╫я▀п╧
        upstream.
 
 
-Изменения в nginx 0.9.6                                           21.03.2011
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.9.6                                           21.03.2011
 
-    *) Добавление: директива map поддерживает регулярные выражения в 
-       качестве значения первого параметра.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ map п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ я─п╣пЁя┐п╩я▐я─п╫я▀п╣ п╡я▀я─п╟п╤п╣п╫п╦я▐ п╡
+       п╨п╟я┤п╣я│я┌п╡п╣ п╥п╫п╟я┤п╣п╫п╦я▐ п©п╣я─п╡п╬пЁп╬ п©п╟я─п╟п╪п╣я┌я─п╟.
 
-    *) Добавление: переменная $time_iso8601 для access_log.
-       Спасибо Michael Lustfield.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $time_iso8601 п╢п╩я▐ access_log.
+       п║п©п╟я│п╦п╠п╬ Michael Lustfield.
 
 
-Изменения в nginx 0.9.5                                           21.02.2011
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.9.5                                           21.02.2011
 
-    *) Изменение: теперь по умолчанию nginx использует значение -1 для 
-       listen backlog на Linux.
-       Спасибо Андрею Нигматулину.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п©п╬ я┐п╪п╬п╩я┤п╟п╫п╦я▌ nginx п╦я│п©п╬п╩я▄п╥я┐п╣я┌ п╥п╫п╟я┤п╣п╫п╦п╣ -1 п╢п╩я▐
+       listen backlog п╫п╟ Linux.
+       п║п©п╟я│п╦п╠п╬ п░п╫п╢я─п╣я▌ п²п╦пЁп╪п╟я┌я┐п╩п╦п╫я┐.
 
-    *) Добавление: параметр utf8 в директивах geoip_country и 
-       geoip_city.
-       Спасибо Денису Латыпову.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ utf8 п╡ п╢п╦я─п╣п╨я┌п╦п╡п╟я┘ geoip_country п╦ geoip_city.
+       п║п©п╟я│п╦п╠п╬ п■п╣п╫п╦я│я┐ п⌡п╟я┌я▀п©п╬п╡я┐.
 
-    *) Исправление: исправление в умолчательной директиве proxy_redirect, 
-       если в директиве proxy_pass не был описан URI.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╦я│п©я─п╟п╡п╩п╣п╫п╦п╣ п╡ я┐п╪п╬п╩я┤п╟я┌п╣п╩я▄п╫п╬п╧ п╢п╦я─п╣п╨я┌п╦п╡п╣ proxy_redirect,
+       п╣я│п╩п╦ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ proxy_pass п╫п╣ п╠я▀п╩ п╬п©п╦я│п╟п╫ URI.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: директива error_page не работала с нестандартными 
-       кодами ошибок; ошибка появилась в 0.8.53.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ error_page п╫п╣ я─п╟п╠п╬я┌п╟п╩п╟ я│ п╫п╣я│я┌п╟п╫п╢п╟я─я┌п╫я▀п╪п╦ п╨п╬п╢п╟п╪п╦
+       п╬я┬п╦п╠п╬п╨; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.53.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
 
-Изменения в nginx 0.9.4                                           21.01.2011
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.9.4                                           21.01.2011
 
-    *) Добавление: директива server_name поддерживает переменную $hostname.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ server_name п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п©п╣я─п╣п╪п╣п╫п╫я┐я▌ $hostname.
 
-    *) Добавление: 494 код для ошибки "Request Header Too Large".
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: 494 п╨п╬п╢ п╢п╩я▐ п╬я┬п╦п╠п╨п╦ "Request Header Too Large".
 
 
-Изменения в nginx 0.9.3                                           13.12.2010
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.9.3                                           13.12.2010
 
-    *) Исправление: если для пары IPv6-адрес:порт описан только один 
-       сервер, то выделения в регулярных выражениях в директиве server_name 
-       не работали.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╢п╩я▐ п©п╟я─я▀ IPv6-п╟п╢я─п╣я│:п©п╬я─я┌ п╬п©п╦я│п╟п╫ я┌п╬п╩я▄п╨п╬ п╬п╢п╦п╫ я│п╣я─п╡п╣я─,
+       я┌п╬ п╡я▀п╢п╣п╩п╣п╫п╦я▐ п╡ я─п╣пЁя┐п╩я▐я─п╫я▀я┘ п╡я▀я─п╟п╤п╣п╫п╦я▐я┘ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ server_name п╫п╣
+       я─п╟п╠п╬я┌п╟п╩п╦.
 
-    *) Исправление: nginx не собирался под Solaris; ошибка появилась в 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п©п╬п╢ Solaris; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
        0.9.0.
 
 
-Изменения в nginx 0.9.2                                           06.12.2010
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.9.2                                           06.12.2010
 
-    *) Добавление: поддержка строки "If-Unmodified-Since" в заголовке 
-       запросе клиента.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╬п╢п╢п╣я─п╤п╨п╟ я│я┌я─п╬п╨п╦ "If-Unmodified-Since" п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣
+       п╥п╟п©я─п╬я│п╣ п╨п╩п╦п╣п╫я┌п╟.
 
-    *) Изменение: использование accept(), если accept4() не реализован; 
-       ошибка появилась в 0.9.0.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╣ accept(), п╣я│п╩п╦ accept4() п╫п╣ я─п╣п╟п╩п╦п╥п╬п╡п╟п╫;
+       п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.9.0.
 
-    *) Исправление: nginx не собирался под Cygwin; ошибка появилась в 0.9.0.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п©п╬п╢ Cygwin; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.9.0.
 
-    *) Исправление: уязвимости в OpenSSL CVE-2010-4180.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┐я▐п╥п╡п╦п╪п╬я│я┌п╦ п╡ OpenSSL CVE-2010-4180.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
 
-Изменения в nginx 0.9.1                                           30.11.2010
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.9.1                                           30.11.2010
 
-    *) Исправление: директивы вида "return CODE message" не работали; 
-       ошибка появилась в 0.9.0.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ п╡п╦п╢п╟ "return CODE message" п╫п╣ я─п╟п╠п╬я┌п╟п╩п╦; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.9.0.
 
 
-Изменения в nginx 0.9.0                                           29.11.2010
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.9.0                                           29.11.2010
 
-    *) Добавление: директива keepalive_disable.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ keepalive_disable.
 
-    *) Добавление: директива map поддерживает переменные в качестве 
-       значения определяемой переменной.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ map п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п©п╣я─п╣п╪п╣п╫п╫я▀п╣ п╡ п╨п╟я┤п╣я│я┌п╡п╣ п╥п╫п╟я┤п╣п╫п╦я▐
+       п╬п©я─п╣п╢п╣п╩я▐п╣п╪п╬п╧ п©п╣я─п╣п╪п╣п╫п╫п╬п╧.
 
-    *) Добавление: директива map поддерживает пустые строки в качестве 
-       значения первого параметра.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ map п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п©я┐я│я┌я▀п╣ я│я┌я─п╬п╨п╦ п╡ п╨п╟я┤п╣я│я┌п╡п╣
+       п╥п╫п╟я┤п╣п╫п╦я▐ п©п╣я─п╡п╬пЁп╬ п©п╟я─п╟п╪п╣я┌я─п╟.
 
-    *) Добавление: директива map поддерживает выражения в первом параметре.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ map п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╡я▀я─п╟п╤п╣п╫п╦я▐ п╡ п©п╣я─п╡п╬п╪ п©п╟я─п╟п╪п╣я┌я─п╣.
 
-    *) Добавление: страница руководства nginx(8).
-       Спасибо Сергею Осокину.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я│я┌я─п╟п╫п╦я├п╟ я─я┐п╨п╬п╡п╬п╢я│я┌п╡п╟ nginx(8).
+       п║п©п╟я│п╦п╠п╬ п║п╣я─пЁп╣я▌ п·я│п╬п╨п╦п╫я┐.
 
-    *) Добавление: поддержка accept4() в Linux.
-       Спасибо Simon Liu.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╬п╢п╢п╣я─п╤п╨п╟ accept4() п╡ Linux.
+       п║п©п╟я│п╦п╠п╬ Simon Liu.
 
-    *) Изменение: устранение предупреждения линкера о "sys_errlist" и 
-       "sys_nerr" под Linux; предупреждение появилось в 0.8.35.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┐я│я┌я─п╟п╫п╣п╫п╦п╣ п©я─п╣п╢я┐п©я─п╣п╤п╢п╣п╫п╦я▐ п╩п╦п╫п╨п╣я─п╟ п╬ "sys_errlist" п╦
+       "sys_nerr" п©п╬п╢ Linux; п©я─п╣п╢я┐п©я─п╣п╤п╢п╣п╫п╦п╣ п©п╬я▐п╡п╦п╩п╬я│я▄ п╡ 0.8.35.
 
-    *) Исправление: при использовании директивы auth_basic в рабочем 
-       процессе мог произойти segmentation fault.
-       Спасибо Михаилу Лалетину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀ auth_basic п╡ я─п╟п╠п╬я┤п╣п╪
+       п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault.
+       п║п©п╟я│п╦п╠п╬ п°п╦я┘п╟п╦п╩я┐ п⌡п╟п╩п╣я┌п╦п╫я┐.
 
-    *) Исправление: совместимость с модулем ngx_http_eval_module; ошибка 
-       появилась в 0.8.42.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я│п╬п╡п╪п╣я│я┌п╦п╪п╬я│я┌я▄ я│ п╪п╬п╢я┐п╩п╣п╪ ngx_http_eval_module; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.42.
 
 
-Изменения в nginx 0.8.53                                          18.10.2010
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.53                                          18.10.2010
 
-    *) Добавление: теперь директива error_page позволяет менять код статуса 
-       у редиректа.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╢п╦я─п╣п╨я┌п╦п╡п╟ error_page п©п╬п╥п╡п╬п╩я▐п╣я┌ п╪п╣п╫я▐я┌я▄ п╨п╬п╢ я│я┌п╟я┌я┐я│п╟
+       я┐ я─п╣п╢п╦я─п╣п╨я┌п╟.
 
-    *) Добавление: директива gzip_disable поддерживает специальную маску 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ gzip_disable п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ я│п©п╣я├п╦п╟п╩я▄п╫я┐я▌ п╪п╟я│п╨я┐
        degradation.
 
-    *) Исправление: при использовании файлового AIO могла происходить 
-       утечка сокетов.
-       Спасибо Максиму Дунину.
-
-    *) Исправление: если в первом сервере не была описана директива listen 
-       и нигде явно не описан сервер по умолчанию, то сервером по умолчанию 
-       становился следующий сервер с директивой listen; ошибка появилась в 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ я└п╟п╧п╩п╬п╡п╬пЁп╬ AIO п╪п╬пЁп╩п╟ п©я─п╬п╦я│я┘п╬п╢п╦я┌я▄ я┐я┌п╣я┤п╨п╟
+       я│п╬п╨п╣я┌п╬п╡.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡ п©п╣я─п╡п╬п╪ я│п╣я─п╡п╣я─п╣ п╫п╣ п╠я▀п╩п╟ п╬п©п╦я│п╟п╫п╟ п╢п╦я─п╣п╨я┌п╦п╡п╟ listen п╦
+       п╫п╦пЁп╢п╣ я▐п╡п╫п╬ п╫п╣ п╬п©п╦я│п╟п╫ я│п╣я─п╡п╣я─ п©п╬ я┐п╪п╬п╩я┤п╟п╫п╦я▌, я┌п╬ я│п╣я─п╡п╣я─п╬п╪ п©п╬ я┐п╪п╬п╩я┤п╟п╫п╦я▌
+       я│я┌п╟п╫п╬п╡п╦п╩я│я▐ я│п╩п╣п╢я┐я▌я┴п╦п╧ я│п╣я─п╡п╣я─ я│ п╢п╦я─п╣п╨я┌п╦п╡п╬п╧ listen; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
        0.8.21.
 
 
-Изменения в nginx 0.8.52                                          28.09.2010
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.52                                          28.09.2010
 
-    *) Исправление: nginx использовал режим SSL для listen сокета, если для 
-       него был установлен любой listen-параметр; ошибка появилась в 0.8.51.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩ я─п╣п╤п╦п╪ SSL п╢п╩я▐ listen я│п╬п╨п╣я┌п╟, п╣я│п╩п╦ п╢п╩я▐
+       п╫п╣пЁп╬ п╠я▀п╩ я┐я│я┌п╟п╫п╬п╡п╩п╣п╫ п╩я▌п╠п╬п╧ listen-п©п╟я─п╟п╪п╣я┌я─; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.51.
 
 
-Изменения в nginx 0.8.51                                          27.09.2010
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.51                                          27.09.2010
 
-    *) Изменение: директива secure_link_expires упразднена.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ secure_link_expires я┐п©я─п╟п╥п╢п╫п╣п╫п╟.
 
-    *) Изменение: уровень логгирования ошибок resolver'а понижен с уровня 
-       alert на error.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┐я─п╬п╡п╣п╫я▄ п╩п╬пЁпЁп╦я─п╬п╡п╟п╫п╦я▐ п╬я┬п╦п╠п╬п╨ resolver'п╟ п©п╬п╫п╦п╤п╣п╫ я│ я┐я─п╬п╡п╫я▐
+       alert п╫п╟ error.
 
-    *) Добавление: теперь параметр "ssl" listen-сокета можно устанавливать 
-       несколько раз.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п©п╟я─п╟п╪п╣я┌я─ "ssl" listen-я│п╬п╨п╣я┌п╟ п╪п╬п╤п╫п╬ я┐я│я┌п╟п╫п╟п╡п╩п╦п╡п╟я┌я▄
+       п╫п╣я│п╨п╬п╩я▄п╨п╬ я─п╟п╥.
 
 
-Изменения в nginx 0.8.50                                          02.09.2010
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.50                                          02.09.2010
 
-    *) Добавление: директивы secure_link, secure_link_md5 и 
-       secure_link_expires модуля ngx_http_secure_link_module.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ secure_link, secure_link_md5 п╦
+       secure_link_expires п╪п╬п╢я┐п╩я▐ ngx_http_secure_link_module.
 
-    *) Добавление: ключ -q.
-       Спасибо Геннадию Махомеду.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╨п╩я▌я┤ -q.
+       п║п©п╟я│п╦п╠п╬ п⌠п╣п╫п╫п╟п╢п╦я▌ п°п╟я┘п╬п╪п╣п╢я┐.
 
-    *) Исправление: при использовании кэширования рабочие процессы и могли 
-       зациклиться во время переконфигурации; ошибка появилась в 0.8.48.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╨я█я┬п╦я─п╬п╡п╟п╫п╦я▐ я─п╟п╠п╬я┤п╦п╣ п©я─п╬я├п╣я│я│я▀ п╦ п╪п╬пЁп╩п╦
+       п╥п╟я├п╦п╨п╩п╦я┌я▄я│я▐ п╡п╬ п╡я─п╣п╪я▐ п©п╣я─п╣п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.48.
 
-    *) Исправление: в директиве gzip_disable.
-       Спасибо Derrick Petzold.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ gzip_disable.
+       п║п©п╟я│п╦п╠п╬ Derrick Petzold.
 
-    *) Исправление: nginx/Windows не мог посылать сигналы stop, quit, 
-       reopen, reload процессу, запущенному в другой сессии.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx/Windows п╫п╣ п╪п╬пЁ п©п╬я│я▀п╩п╟я┌я▄ я│п╦пЁп╫п╟п╩я▀ stop, quit,
+       reopen, reload п©я─п╬я├п╣я│я│я┐, п╥п╟п©я┐я┴п╣п╫п╫п╬п╪я┐ п╡ п╢я─я┐пЁп╬п╧ я│п╣я│я│п╦п╦.
 
 
-Изменения в nginx 0.8.49                                          09.08.2010
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.49                                          09.08.2010
 
-    *) Добавление: директива image_filter_jpeg_quality поддерживает 
-       переменные.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ image_filter_jpeg_quality п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌
+       п©п╣я─п╣п╪п╣п╫п╫я▀п╣.
 
-    *) Исправление: при использовании переменной $geoip_region_name в 
-       рабочем процессе мог произойти segmentation fault; ошибка появилась 
-       в 0.8.48.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п©п╣я─п╣п╪п╣п╫п╫п╬п╧ $geoip_region_name п╡
+       я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
+       0.8.48.
 
-    *) Исправление: ошибки, перехваченные error_page, кэшировались только 
-       до следующего запроса; ошибка появилась в 0.8.48.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦, п©п╣я─п╣я┘п╡п╟я┤п╣п╫п╫я▀п╣ error_page, п╨я█я┬п╦я─п╬п╡п╟п╩п╦я│я▄ я┌п╬п╩я▄п╨п╬ п╢п╬
+       я│п╩п╣п╢я┐я▌я┴п╣пЁп╬ п╥п╟п©я─п╬я│п╟; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.48.
 
 
-Изменения в nginx 0.8.48                                          03.08.2010
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.48                                          03.08.2010
 
-    *) Изменение: теперь по умолчанию директива server_name имеет значение 
-       пустое имя "".
-       Спасибо Геннадию Махомеду.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п©п╬ я┐п╪п╬п╩я┤п╟п╫п╦я▌ п╢п╦я─п╣п╨я┌п╦п╡п╟ server_name п╦п╪п╣п╣я┌ п╥п╫п╟я┤п╣п╫п╦п╣
+       п©я┐я│я┌п╬п╣ п╦п╪я▐ "".
+       п║п©п╟я│п╦п╠п╬ п⌠п╣п╫п╫п╟п╢п╦я▌ п°п╟я┘п╬п╪п╣п╢я┐.
 
-    *) Изменение: теперь по умолчанию директива server_name_in_redirect 
-       имеет значение off.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п©п╬ я┐п╪п╬п╩я┤п╟п╫п╦я▌ п╢п╦я─п╣п╨я┌п╦п╡п╟ server_name_in_redirect
+       п╦п╪п╣п╣я┌ п╥п╫п╟я┤п╣п╫п╦п╣ off.
 
-    *) Добавление: переменные $geoip_dma_code, $geoip_area_code и 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫я▀п╣ $geoip_dma_code, $geoip_area_code п╦
        $geoip_region_name.
-       Спасибо Christine McGonagle.
+       п║п©п╟я│п╦п╠п╬ Christine McGonagle.
 
-    *) Исправление: директивы proxy_pass, fastcgi_pass, uwsgi_pass и 
-       scgi_pass не наследовались в блоки limit_except.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_pass, fastcgi_pass, uwsgi_pass п╦
+       scgi_pass п╫п╣ п╫п╟я│п╩п╣п╢п╬п╡п╟п╩п╦я│я▄ п╡ п╠п╩п╬п╨п╦ limit_except.
 
-    *) Исправление: директивы proxy_cache_min_uses, fastcgi_cache_min_uses 
-       uwsgi_cache_min_uses и scgi_cache_min_uses не работали; ошибка 
-       появилась в 0.8.46.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_cache_min_uses, fastcgi_cache_min_uses
+       uwsgi_cache_min_uses п╦ scgi_cache_min_uses п╫п╣ я─п╟п╠п╬я┌п╟п╩п╦; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.46.
 
-    *) Исправление: директива fastcgi_split_path_info неверно использовала 
-       выделения, если в выделения попадала только часть URI.
-       Спасибо Юрию Тарадаю и Frank Enderle.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ fastcgi_split_path_info п╫п╣п╡п╣я─п╫п╬ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╟
+       п╡я▀п╢п╣п╩п╣п╫п╦я▐, п╣я│п╩п╦ п╡ п╡я▀п╢п╣п╩п╣п╫п╦я▐ п©п╬п©п╟п╢п╟п╩п╟ я┌п╬п╩я▄п╨п╬ я┤п╟я│я┌я▄ URI.
+       п║п©п╟я│п╦п╠п╬ п╝я─п╦я▌ п╒п╟я─п╟п╢п╟я▌ п╦ Frank Enderle.
 
-    *) Исправление: директива rewrite не экранировала символ ";" при 
-       копировании из URI в аргументы. 
-       Спасибо Daisuke Murase.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ rewrite п╫п╣ я█п╨я─п╟п╫п╦я─п╬п╡п╟п╩п╟ я│п╦п╪п╡п╬п╩ ";" п©я─п╦
+       п╨п╬п©п╦я─п╬п╡п╟п╫п╦п╦ п╦п╥ URI п╡ п╟я─пЁя┐п╪п╣п╫я┌я▀.
+       п║п©п╟я│п╦п╠п╬ Daisuke Murase.
 
-    *) Исправление: модуль ngx_http_image_filter_module закрывал 
-       соединение, если изображение было больше размера image_filter_buffer.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_image_filter_module п╥п╟п╨я─я▀п╡п╟п╩ я│п╬п╣п╢п╦п╫п╣п╫п╦п╣,
+       п╣я│п╩п╦ п╦п╥п╬п╠я─п╟п╤п╣п╫п╦п╣ п╠я▀п╩п╬ п╠п╬п╩я▄я┬п╣ я─п╟п╥п╪п╣я─п╟ image_filter_buffer.
 
 
-Изменения в nginx 0.8.47                                          28.07.2010
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.47                                          28.07.2010
 
-    *) Исправление: переменная $request_time имела неверные значения для 
-       подзапросов.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $request_time п╦п╪п╣п╩п╟ п╫п╣п╡п╣я─п╫я▀п╣ п╥п╫п╟я┤п╣п╫п╦я▐ п╢п╩я▐
+       п©п╬п╢п╥п╟п©я─п╬я│п╬п╡.
 
-    *) Исправление: ошибки, перехваченные error_page, не кэшировались.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦, п©п╣я─п╣я┘п╡п╟я┤п╣п╫п╫я▀п╣ error_page, п╫п╣ п╨я█я┬п╦я─п╬п╡п╟п╩п╦я│я▄.
 
-    *) Исправление: если использовался параметр max_size, то cache manager 
-       мог зациклиться; ошибка появилась в 0.8.46.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩я│я▐ п©п╟я─п╟п╪п╣я┌я─ max_size, я┌п╬ cache manager
+       п╪п╬пЁ п╥п╟я├п╦п╨п╩п╦я┌я▄я│я▐; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.46.
 
 
-Изменения в nginx 0.8.46                                          19.07.2010
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.46                                          19.07.2010
 
-    *) Изменение: директивы proxy_no_cache, fastcgi_no_cache, 
-       uwsgi_no_cache и scgi_no_cache теперь влияют только на сохранение 
-       закэшированного ответа.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_no_cache, fastcgi_no_cache, uwsgi_no_cache
+       п╦ scgi_no_cache я┌п╣п©п╣я─я▄ п╡п╩п╦я▐я▌я┌ я┌п╬п╩я▄п╨п╬ п╫п╟ я│п╬я┘я─п╟п╫п╣п╫п╦п╣ п╥п╟п╨я█я┬п╦я─п╬п╡п╟п╫п╫п╬пЁп╬
+       п╬я┌п╡п╣я┌п╟.
 
-    *) Добавление: директивы proxy_cache_bypass, fastcgi_cache_bypass, 
-       uwsgi_cache_bypass и scgi_cache_bypass.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_cache_bypass, fastcgi_cache_bypass,
+       uwsgi_cache_bypass п╦ scgi_cache_bypass.
 
-    *) Исправление: nginx не освобождал память в keys_zone кэшей в случае 
-       ошибки работы с бэкендом: память освобождалась только по истечении 
-       времени неактивности или при недостатке памяти.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ п╬я│п╡п╬п╠п╬п╤п╢п╟п╩ п©п╟п╪я▐я┌я▄ п╡ keys_zone п╨я█я┬п╣п╧ п╡ я│п╩я┐я┤п╟п╣
+       п╬я┬п╦п╠п╨п╦ я─п╟п╠п╬я┌я▀ я│ п╠я█п╨п╣п╫п╢п╬п╪: п©п╟п╪я▐я┌я▄ п╬я│п╡п╬п╠п╬п╤п╢п╟п╩п╟я│я▄ я┌п╬п╩я▄п╨п╬ п©п╬ п╦я│я┌п╣я┤п╣п╫п╦п╦
+       п╡я─п╣п╪п╣п╫п╦ п╫п╣п╟п╨я┌п╦п╡п╫п╬я│я┌п╦ п╦п╩п╦ п©я─п╦ п╫п╣п╢п╬я│я┌п╟я┌п╨п╣ п©п╟п╪я▐я┌п╦.
 
 
-Изменения в nginx 0.8.45                                          13.07.2010
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.45                                          13.07.2010
 
-    *) Добавление: улучшения в модуле ngx_http_xslt_filter.
-       Спасибо Laurence Rowe.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┐п╩я┐я┤я┬п╣п╫п╦я▐ п╡ п╪п╬п╢я┐п╩п╣ ngx_http_xslt_filter.
+       п║п©п╟я│п╦п╠п╬ Laurence Rowe.
 
-    *) Исправление: ответ SSI модуля мог передаваться не полностью после 
-       команды include с параметром wait="yes"; ошибка появилась в 0.7.25. 
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┌п╡п╣я┌ SSI п╪п╬п╢я┐п╩я▐ п╪п╬пЁ п©п╣я─п╣п╢п╟п╡п╟я┌я▄я│я▐ п╫п╣ п©п╬п╩п╫п╬я│я┌я▄я▌ п©п╬я│п╩п╣
+       п╨п╬п╪п╟п╫п╢я▀ include я│ п©п╟я─п╟п╪п╣я┌я─п╬п╪ wait="yes"; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.25.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: директива listen не поддерживала параметр setfib=0.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ listen п╫п╣ п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╩п╟ п©п╟я─п╟п╪п╣я┌я─ setfib=0.
 
 
-Изменения в nginx 0.8.44                                          05.07.2010
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.44                                          05.07.2010
 
-    *) Изменение: теперь nginx по умолчанию не кэширует ответы бэкендов, в 
-       заголовке которых есть строка "Set-Cookie".
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ nginx п©п╬ я┐п╪п╬п╩я┤п╟п╫п╦я▌ п╫п╣ п╨я█я┬п╦я─я┐п╣я┌ п╬я┌п╡п╣я┌я▀ п╠я█п╨п╣п╫п╢п╬п╡, п╡
+       п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╨п╬я┌п╬я─я▀я┘ п╣я│я┌я▄ я│я┌я─п╬п╨п╟ "Set-Cookie".
 
-    *) Добавление: директива listen поддерживает параметр setfib.
-       Спасибо Андрею Филонову.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ listen п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п©п╟я─п╟п╪п╣я┌я─ setfib.
+       п║п©п╟я│п╦п╠п╬ п░п╫п╢я─п╣я▌ п╓п╦п╩п╬п╫п╬п╡я┐.
 
-    *) Исправление: директива sub_filter могла изменять регистр букв при 
-       частичном совпадении.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ sub_filter п╪п╬пЁп╩п╟ п╦п╥п╪п╣п╫я▐я┌я▄ я─п╣пЁп╦я│я┌я─ п╠я┐п╨п╡ п©я─п╦
+       я┤п╟я│я┌п╦я┤п╫п╬п╪ я│п╬п╡п©п╟п╢п╣п╫п╦п╦.
 
-    *) Исправление: совместимость с HP/UX.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я│п╬п╡п╪п╣я│я┌п╦п╪п╬я│я┌я▄ я│ HP/UX.
 
-    *) Исправление: совместимость с компилятором AIX xlC_r.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я│п╬п╡п╪п╣я│я┌п╦п╪п╬я│я┌я▄ я│ п╨п╬п╪п©п╦п╩я▐я┌п╬я─п╬п╪ AIX xlC_r.
 
-    *) Исправление: nginx считал большие пакеты SSLv2 как обычные текстовые 
-       запросы.
-       Спасибо Miroslaw Jaworski.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx я│я┤п╦я┌п╟п╩ п╠п╬п╩я▄я┬п╦п╣ п©п╟п╨п╣я┌я▀ SSLv2 п╨п╟п╨ п╬п╠я▀я┤п╫я▀п╣ я┌п╣п╨я│я┌п╬п╡я▀п╣
+       п╥п╟п©я─п╬я│я▀.
+       п║п©п╟я│п╦п╠п╬ Miroslaw Jaworski.
 
 
-Изменения в nginx 0.8.43                                          30.06.2010
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.43                                          30.06.2010
 
-    *) Добавление: ускорение загрузки больших баз geo-диапазонов.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┐я│п╨п╬я─п╣п╫п╦п╣ п╥п╟пЁя─я┐п╥п╨п╦ п╠п╬п╩я▄я┬п╦я┘ п╠п╟п╥ geo-п╢п╦п╟п©п╟п╥п╬п╫п╬п╡.
 
-    *) Исправление: перенаправление ошибки в "location /zero {return 204;}" 
-       без изменения кода ответа оставляло тело ошибки; ошибка появилась в 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╫п╟п©я─п╟п╡п╩п╣п╫п╦п╣ п╬я┬п╦п╠п╨п╦ п╡ "location /zero {return 204;}"
+       п╠п╣п╥ п╦п╥п╪п╣п╫п╣п╫п╦я▐ п╨п╬п╢п╟ п╬я┌п╡п╣я┌п╟ п╬я│я┌п╟п╡п╩я▐п╩п╬ я┌п╣п╩п╬ п╬я┬п╦п╠п╨п╦; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
        0.8.42.
 
-    *) Исправление: nginx мог закрывать IPv6 listen сокет во время 
-       переконфигурации.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╪п╬пЁ п╥п╟п╨я─я▀п╡п╟я┌я▄ IPv6 listen я│п╬п╨п╣я┌ п╡п╬ п╡я─п╣п╪я▐
+       п©п╣я─п╣п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: переменную $uid_set можно использовать на любой стадии 
-       обработки запроса.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫я┐я▌ $uid_set п╪п╬п╤п╫п╬ п╦я│п©п╬п╩я▄п╥п╬п╡п╟я┌я▄ п╫п╟ п╩я▌п╠п╬п╧ я│я┌п╟п╢п╦п╦
+       п╬п╠я─п╟п╠п╬я┌п╨п╦ п╥п╟п©я─п╬я│п╟.
 
 
-Изменения в nginx 0.8.42                                          21.06.2010
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.42                                          21.06.2010
 
-    *) Изменение: теперь nginx проверяет location'ы, заданные регулярными 
-       выражениями, если запрос полностью совпал с location'ом, заданным 
-       строкой префикса. Предыдущее поведение появилось в 0.7.1.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ nginx п©я─п╬п╡п╣я─я▐п╣я┌ location'я▀, п╥п╟п╢п╟п╫п╫я▀п╣ я─п╣пЁя┐п╩я▐я─п╫я▀п╪п╦
+       п╡я▀я─п╟п╤п╣п╫п╦я▐п╪п╦, п╣я│п╩п╦ п╥п╟п©я─п╬я│ п©п╬п╩п╫п╬я│я┌я▄я▌ я│п╬п╡п©п╟п╩ я│ location'п╬п╪, п╥п╟п╢п╟п╫п╫я▀п╪
+       я│я┌я─п╬п╨п╬п╧ п©я─п╣я└п╦п╨я│п╟. п÷я─п╣п╢я▀п╢я┐я┴п╣п╣ п©п╬п╡п╣п╢п╣п╫п╦п╣ п©п╬я▐п╡п╦п╩п╬я│я▄ п╡ 0.7.1.
 
-    *) Добавление: модуль ngx_http_scgi_module.
-       Спасибо Manlio Perillo.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_scgi_module.
+       п║п©п╟я│п╦п╠п╬ Manlio Perillo.
 
-    *) Добавление: в директиве return можно добавлять текст ответа.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ return п╪п╬п╤п╫п╬ п╢п╬п╠п╟п╡п╩я▐я┌я▄ я┌п╣п╨я│я┌ п╬я┌п╡п╣я┌п╟.
 
 
-Изменения в nginx 0.8.41                                          15.06.2010
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.41                                          15.06.2010
 
-    *) Безопасность: рабочий процесс nginx/Windows мог завершаться аварийно 
-       при запросе файла с неверной кодировкой UTF-8.
+    *) п▒п╣п╥п╬п©п╟я│п╫п╬я│я┌я▄: я─п╟п╠п╬я┤п╦п╧ п©я─п╬я├п╣я│я│ nginx/Windows п╪п╬пЁ п╥п╟п╡п╣я─я┬п╟я┌я▄я│я▐ п╟п╡п╟я─п╦п╧п╫п╬
+       п©я─п╦ п╥п╟п©я─п╬я│п╣ я└п╟п╧п╩п╟ я│ п╫п╣п╡п╣я─п╫п╬п╧ п╨п╬п╢п╦я─п╬п╡п╨п╬п╧ UTF-8.
 
-    *) Изменение: теперь nginx разрешает использовать пробелы в строке 
-       запроса.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ nginx я─п╟п╥я─п╣я┬п╟п╣я┌ п╦я│п©п╬п╩я▄п╥п╬п╡п╟я┌я▄ п©я─п╬п╠п╣п╩я▀ п╡ я│я┌я─п╬п╨п╣
+       п╥п╟п©я─п╬я│п╟.
 
-    *) Исправление: директива proxy_redirect неправильно изменяла строку 
-       "Refresh" в заголовке ответа бэкенда.
-       Спасибо Андрею Андрееву и Максиму Согину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ proxy_redirect п╫п╣п©я─п╟п╡п╦п╩я▄п╫п╬ п╦п╥п╪п╣п╫я▐п╩п╟ я│я┌я─п╬п╨я┐
+       "Refresh" п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╬я┌п╡п╣я┌п╟ п╠я█п╨п╣п╫п╢п╟.
+       п║п©п╟я│п╦п╠п╬ п░п╫п╢я─п╣я▌ п░п╫п╢я─п╣п╣п╡я┐ п╦ п°п╟п╨я│п╦п╪я┐ п║п╬пЁп╦п╫я┐.
 
-    *) Исправление: nginx не поддерживал путь без имени хоста в строке 
-       "Destination" в заголовке запроса.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╩ п©я┐я┌я▄ п╠п╣п╥ п╦п╪п╣п╫п╦ я┘п╬я│я┌п╟ п╡ я│я┌я─п╬п╨п╣
+       "Destination" п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╥п╟п©я─п╬я│п╟.
 
 
-Изменения в nginx 0.8.40                                          07.06.2010
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.40                                          07.06.2010
 
-    *) Безопасность: теперь nginx/Windows игнорирует имя потока файла по 
-       умолчанию.
-       Спасибо Jose Antonio Vazquez Gonzalez.
+    *) п▒п╣п╥п╬п©п╟я│п╫п╬я│я┌я▄: я┌п╣п©п╣я─я▄ nginx/Windows п╦пЁп╫п╬я─п╦я─я┐п╣я┌ п╦п╪я▐ п©п╬я┌п╬п╨п╟ я└п╟п╧п╩п╟ п©п╬
+       я┐п╪п╬п╩я┤п╟п╫п╦я▌.
+       п║п©п╟я│п╦п╠п╬ Jose Antonio Vazquez Gonzalez.
 
-    *) Добавление: модуль ngx_http_uwsgi_module.
-       Спасибо Roberto De Ioris.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_uwsgi_module.
+       п║п©п╟я│п╦п╠п╬ Roberto De Ioris.
 
-    *) Добавление: директива fastcgi_param со значением, начинающимся со 
-       строки "HTTP_", изменяет строку заголовка в запросе клиента.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ fastcgi_param я│п╬ п╥п╫п╟я┤п╣п╫п╦п╣п╪, п╫п╟я┤п╦п╫п╟я▌я┴п╦п╪я│я▐ я│п╬
+       я│я┌я─п╬п╨п╦ "HTTP_", п╦п╥п╪п╣п╫я▐п╣я┌ я│я┌я─п╬п╨я┐ п╥п╟пЁп╬п╩п╬п╡п╨п╟ п╡ п╥п╟п©я─п╬я│п╣ п╨п╩п╦п╣п╫я┌п╟.
 
-    *) Исправление: строки "If-Modified-Since", "If-Range" и им подобные в 
-       заголовке запроса клиента передавались FastCGI-серверу при 
-       кэшировании.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я│я┌я─п╬п╨п╦ "If-Modified-Since", "If-Range" п╦ п╦п╪ п©п╬п╢п╬п╠п╫я▀п╣ п╡
+       п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╥п╟п©я─п╬я│п╟ п╨п╩п╦п╣п╫я┌п╟ п©п╣я─п╣п╢п╟п╡п╟п╩п╦я│я▄ FastCGI-я│п╣я─п╡п╣я─я┐ п©я─п╦
+       п╨я█я┬п╦я─п╬п╡п╟п╫п╦п╦.
 
-    *) Исправление: listen unix domain сокет нельзя было изменить во время 
-       переконфигурации.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: listen unix domain я│п╬п╨п╣я┌ п╫п╣п╩я▄п╥я▐ п╠я▀п╩п╬ п╦п╥п╪п╣п╫п╦я┌я▄ п╡п╬ п╡я─п╣п╪я▐
+       п©п╣я─п╣п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
 
-Изменения в nginx 0.8.39                                          31.05.2010
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.39                                          31.05.2010
 
-    *) Исправление: наследуемая директива alias неправильно работала во 
-       вложенном location'е.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╫п╟я│п╩п╣п╢я┐п╣п╪п╟я▐ п╢п╦я─п╣п╨я┌п╦п╡п╟ alias п╫п╣п©я─п╟п╡п╦п╩я▄п╫п╬ я─п╟п╠п╬я┌п╟п╩п╟ п╡п╬
+       п╡п╩п╬п╤п╣п╫п╫п╬п╪ location'п╣.
 
-    *) Исправление: в комбинации директив alias с переменными и try_files;
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╨п╬п╪п╠п╦п╫п╟я├п╦п╦ п╢п╦я─п╣п╨я┌п╦п╡ alias я│ п©п╣я─п╣п╪п╣п╫п╫я▀п╪п╦ п╦ try_files;
 
-    *) Исправление: listen unix domain и IPv6 сокеты не наследовались во 
-       время обновления без перерыва.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: listen unix domain п╦ IPv6 я│п╬п╨п╣я┌я▀ п╫п╣ п╫п╟я│п╩п╣п╢п╬п╡п╟п╩п╦я│я▄ п╡п╬
+       п╡я─п╣п╪я▐ п╬п╠п╫п╬п╡п╩п╣п╫п╦я▐ п╠п╣п╥ п©п╣я─п╣я─я▀п╡п╟.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
 
-Изменения в nginx 0.8.38                                          24.05.2010
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.38                                          24.05.2010
 
-    *) Добавление: директивы proxy_no_cache и fastcgi_no_cache.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_no_cache п╦ fastcgi_no_cache.
 
-    *) Добавление: теперь при использовании переменной $scheme в директиве 
-       rewrite автоматически делается редирект.
-       Спасибо Piotr Sikora.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п©п╣я─п╣п╪п╣п╫п╫п╬п╧ $scheme п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣
+       rewrite п╟п╡я┌п╬п╪п╟я┌п╦я┤п╣я│п╨п╦ п╢п╣п╩п╟п╣я┌я│я▐ я─п╣п╢п╦я─п╣п╨я┌.
+       п║п©п╟я│п╦п╠п╬ Piotr Sikora.
 
-    *) Исправление: теперь задержки в директиве limit_req соответствует 
-       описанному алгоритму.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╥п╟п╢п╣я─п╤п╨п╦ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ limit_req я│п╬п╬я┌п╡п╣я┌я│я┌п╡я┐п╣я┌
+       п╬п©п╦я│п╟п╫п╫п╬п╪я┐ п╟п╩пЁп╬я─п╦я┌п╪я┐.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: переменную $uid_got нельзя было использовать в SSI и 
-       перловом модулях.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫я┐я▌ $uid_got п╫п╣п╩я▄п╥я▐ п╠я▀п╩п╬ п╦я│п©п╬п╩я▄п╥п╬п╡п╟я┌я▄ п╡ SSI п╦
+       п©п╣я─п╩п╬п╡п╬п╪ п╪п╬п╢я┐п╩я▐я┘.
 
 
-Изменения в nginx 0.8.37                                          17.05.2010
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.37                                          17.05.2010
 
-    *) Добавление: модуль ngx_http_split_clients_module.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_split_clients_module.
 
-    *) Добавление: директива map поддерживает ключи больше 255 символов.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ map п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╨п╩я▌я┤п╦ п╠п╬п╩я▄я┬п╣ 255 я│п╦п╪п╡п╬п╩п╬п╡.
 
-    *) Исправление: nginx игнорировал значения "private" и "no-store" в 
-       строке "Cache-Control" в заголовке ответа бэкенда.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╦пЁп╫п╬я─п╦я─п╬п╡п╟п╩ п╥п╫п╟я┤п╣п╫п╦я▐ "private" п╦ "no-store" п╡
+       я│я┌я─п╬п╨п╣ "Cache-Control" п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╬я┌п╡п╣я┌п╟ п╠я█п╨п╣п╫п╢п╟.
 
-    *) Исправление: параметр stub в SSI-директиве include не использовался, 
-       если пустой ответ имел код 200.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ stub п╡ SSI-п╢п╦я─п╣п╨я┌п╦п╡п╣ include п╫п╣ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩я│я▐,
+       п╣я│п╩п╦ п©я┐я│я┌п╬п╧ п╬я┌п╡п╣я┌ п╦п╪п╣п╩ п╨п╬п╢ 200.
 
-    *) Исправление: если проксированный или FastCGI запрос внутренне 
-       перенаправлялся в другой проксированный или FastCGI location, то в 
-       рабочем процессе мог произойти segmentation fault; ошибка появилась 
-       в 0.8.33.
-       Спасибо Yichun Zhang.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╫я▀п╧ п╦п╩п╦ FastCGI п╥п╟п©я─п╬я│ п╡п╫я┐я┌я─п╣п╫п╫п╣
+       п©п╣я─п╣п╫п╟п©я─п╟п╡п╩я▐п╩я│я▐ п╡ п╢я─я┐пЁп╬п╧ п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╫я▀п╧ п╦п╩п╦ FastCGI location, я┌п╬ п╡
+       я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
+       0.8.33.
+       п║п©п╟я│п╦п╠п╬ Yichun Zhang.
 
-    *) Исправление: соединения IMAP к серверу Zimbra могло зависнуть до 
-       таймаута.
-       Спасибо Alan Batie.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я│п╬п╣п╢п╦п╫п╣п╫п╦я▐ IMAP п╨ я│п╣я─п╡п╣я─я┐ Zimbra п╪п╬пЁп╩п╬ п╥п╟п╡п╦я│п╫я┐я┌я▄ п╢п╬
+       я┌п╟п╧п╪п╟я┐я┌п╟.
+       п║п©п╟я│п╦п╠п╬ Alan Batie.
 
 
-Изменения в nginx 0.8.36                                          22.04.2010
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.36                                          22.04.2010
 
-    *) Исправление: модуль ngx_http_dav_module неправильно обрабатывал 
-       методы DELETE, COPY и MOVE для симлинков.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_dav_module п╫п╣п©я─п╟п╡п╦п╩я▄п╫п╬ п╬п╠я─п╟п╠п╟я┌я▀п╡п╟п╩
+       п╪п╣я┌п╬п╢я▀ DELETE, COPY п╦ MOVE п╢п╩я▐ я│п╦п╪п╩п╦п╫п╨п╬п╡.
 
-    *) Исправление: модуль SSI в подзапросах использовал закэшированные в 
-       основном запросе значения переменных $query_string, $arg_... и им 
-       подобных.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ SSI п╡ п©п╬п╢п╥п╟п©я─п╬я│п╟я┘ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩ п╥п╟п╨я█я┬п╦я─п╬п╡п╟п╫п╫я▀п╣ п╡
+       п╬я│п╫п╬п╡п╫п╬п╪ п╥п╟п©я─п╬я│п╣ п╥п╫п╟я┤п╣п╫п╦я▐ п©п╣я─п╣п╪п╣п╫п╫я▀я┘ $query_string, $arg_... п╦ п╦п╪
+       п©п╬п╢п╬п╠п╫я▀я┘.
 
-    *) Исправление: значение переменной повторно экранировалось после 
-       каждого вывода SSI-команды echo; ошибка появилась в 0.6.14.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╥п╫п╟я┤п╣п╫п╦п╣ п©п╣я─п╣п╪п╣п╫п╫п╬п╧ п©п╬п╡я┌п╬я─п╫п╬ я█п╨я─п╟п╫п╦я─п╬п╡п╟п╩п╬я│я▄ п©п╬я│п╩п╣
+       п╨п╟п╤п╢п╬пЁп╬ п╡я▀п╡п╬п╢п╟ SSI-п╨п╬п╪п╟п╫п╢я▀ echo; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.6.14.
 
-    *) Исправление: рабочий процесс зависал при запросе файла FIFO.
-       Спасибо Vicente Aguilar и Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я─п╟п╠п╬я┤п╦п╧ п©я─п╬я├п╣я│я│ п╥п╟п╡п╦я│п╟п╩ п©я─п╦ п╥п╟п©я─п╬я│п╣ я└п╟п╧п╩п╟ FIFO.
+       п║п©п╟я│п╦п╠п╬ Vicente Aguilar п╦ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: совместимость с OpenSSL-1.0.0 на 64-битном Linux.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я│п╬п╡п╪п╣я│я┌п╦п╪п╬я│я┌я▄ я│ OpenSSL-1.0.0 п╫п╟ 64-п╠п╦я┌п╫п╬п╪ Linux.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: nginx не собирался с параметром --without-http-cache; 
-       ошибка появилась в 0.8.35.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ я│ п©п╟я─п╟п╪п╣я┌я─п╬п╪ --without-http-cache;
+       п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.35.
 
 
-Изменения в nginx 0.8.35                                          01.04.2010
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.35                                          01.04.2010
 
-    *) Изменение: теперь charset-фильтр работает до SSI-фильтра.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ charset-я└п╦п╩я▄я┌я─ я─п╟п╠п╬я┌п╟п╣я┌ п╢п╬ SSI-я└п╦п╩я▄я┌я─п╟.
 
-    *) Добавление: директива chunked_transfer_encoding.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ chunked_transfer_encoding.
 
-    *) Исправление: символ "&" при копировании в аргументы в правилах 
-       rewrite не экранировался.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я│п╦п╪п╡п╬п╩ "&" п©я─п╦ п╨п╬п©п╦я─п╬п╡п╟п╫п╦п╦ п╡ п╟я─пЁя┐п╪п╣п╫я┌я▀ п╡ п©я─п╟п╡п╦п╩п╟я┘
+       rewrite п╫п╣ я█п╨я─п╟п╫п╦я─п╬п╡п╟п╩я│я▐.
 
-    *) Исправление: nginx мог завершаться аварийно во время обработки 
-       сигнала или при использовании директивы timer_resolution на 
-       платформах, не поддерживающих методы kqueue или eventport.
-       Спасибо George Xie и Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╪п╬пЁ п╥п╟п╡п╣я─я┬п╟я┌я▄я│я▐ п╟п╡п╟я─п╦п╧п╫п╬ п╡п╬ п╡я─п╣п╪я▐ п╬п╠я─п╟п╠п╬я┌п╨п╦
+       я│п╦пЁп╫п╟п╩п╟ п╦п╩п╦ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀ timer_resolution п╫п╟
+       п©п╩п╟я┌я└п╬я─п╪п╟я┘, п╫п╣ п©п╬п╢п╢п╣я─п╤п╦п╡п╟я▌я┴п╦я┘ п╪п╣я┌п╬п╢я▀ kqueue п╦п╩п╦ eventport.
+       п║п©п╟я│п╦п╠п╬ George Xie п╦ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: если временные файлы и постоянное место хранения 
-       располагались на разных файловых системах, то у постоянных файлов 
-       время изменения было неверным.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡я─п╣п╪п╣п╫п╫я▀п╣ я└п╟п╧п╩я▀ п╦ п©п╬я│я┌п╬я▐п╫п╫п╬п╣ п╪п╣я│я┌п╬ я┘я─п╟п╫п╣п╫п╦я▐
+       я─п╟я│п©п╬п╩п╟пЁп╟п╩п╦я│я▄ п╫п╟ я─п╟п╥п╫я▀я┘ я└п╟п╧п╩п╬п╡я▀я┘ я│п╦я│я┌п╣п╪п╟я┘, я┌п╬ я┐ п©п╬я│я┌п╬я▐п╫п╫я▀я┘ я└п╟п╧п╩п╬п╡
+       п╡я─п╣п╪я▐ п╦п╥п╪п╣п╫п╣п╫п╦я▐ п╠я▀п╩п╬ п╫п╣п╡п╣я─п╫я▀п╪.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: модуль ngx_http_memcached_module мог выдавать ошибку 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_memcached_module п╪п╬пЁ п╡я▀п╢п╟п╡п╟я┌я▄ п╬я┬п╦п╠п╨я┐
        "memcached sent invalid trailer".
-       Спасибо Максиму Дунину.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: nginx не мог собрать библиотеку zlib-1.2.4 из исходных 
-       текстов.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ п╪п╬пЁ я│п╬п╠я─п╟я┌я▄ п╠п╦п╠п╩п╦п╬я┌п╣п╨я┐ zlib-1.2.4 п╦п╥ п╦я│я┘п╬п╢п╫я▀я┘
+       я┌п╣п╨я│я┌п╬п╡.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: в рабочем процессе происходил segmentation fault, если 
-       перед ответом FastCGI-сервера было много вывода в stderr; ошибка 
-       появилась в 0.8.34.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault, п╣я│п╩п╦
+       п©п╣я─п╣п╢ п╬я┌п╡п╣я┌п╬п╪ FastCGI-я│п╣я─п╡п╣я─п╟ п╠я▀п╩п╬ п╪п╫п╬пЁп╬ п╡я▀п╡п╬п╢п╟ п╡ stderr; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.34.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
 
-Изменения в nginx 0.8.34                                          03.03.2010
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.34                                          03.03.2010
 
-    *) Исправление: nginx не поддерживал все шифры, используемые в 
-       клиентских сертификатах.
-       Спасибо Иннокентию Еникееву.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╩ п╡я│п╣ я┬п╦я└я─я▀, п╦я│п©п╬п╩я▄п╥я┐п╣п╪я▀п╣ п╡
+       п╨п╩п╦п╣п╫я┌я│п╨п╦я┘ я│п╣я─я┌п╦я└п╦п╨п╟я┌п╟я┘.
+       п║п©п╟я│п╦п╠п╬ п≤п╫п╫п╬п╨п╣п╫я┌п╦я▌ п∙п╫п╦п╨п╣п╣п╡я┐.
 
-    *) Исправление: nginx неправильно кэшировал FastCGI-ответы, если перед 
-       ответом было много вывода в stderr.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣п©я─п╟п╡п╦п╩я▄п╫п╬ п╨я█я┬п╦я─п╬п╡п╟п╩ FastCGI-п╬я┌п╡п╣я┌я▀, п╣я│п╩п╦ п©п╣я─п╣п╢
+       п╬я┌п╡п╣я┌п╬п╪ п╠я▀п╩п╬ п╪п╫п╬пЁп╬ п╡я▀п╡п╬п╢п╟ п╡ stderr.
 
-    *) Исправление: nginx не поддерживал HTTPS-рефереры.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╩ HTTPS-я─п╣я└п╣я─п╣я─я▀.
 
-    *) Исправление: nginx/Windows мог не находить файлы, если путь в 
-       конфигурации был задан в другом регистре; ошибка появилась в 0.8.33.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx/Windows п╪п╬пЁ п╫п╣ п╫п╟я┘п╬п╢п╦я┌я▄ я└п╟п╧п╩я▀, п╣я│п╩п╦ п©я┐я┌я▄ п╡
+       п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦ п╠я▀п╩ п╥п╟п╢п╟п╫ п╡ п╢я─я┐пЁп╬п╪ я─п╣пЁп╦я│я┌я─п╣; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.33.
 
-    *) Исправление: переменная $date_local выдавала неверное время, если 
-       использовался формат "%s".
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $date_local п╡я▀п╢п╟п╡п╟п╩п╟ п╫п╣п╡п╣я─п╫п╬п╣ п╡я─п╣п╪я▐, п╣я│п╩п╦
+       п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩я│я▐ я└п╬я─п╪п╟я┌ "%s".
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: если ssl_session_cache не был установлен или установлен 
-       в none, то при проверке клиентского сертификаты могла происходить 
-       ошибка "session id context uninitialized"; ошибка появилась в 0.7.1.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ ssl_session_cache п╫п╣ п╠я▀п╩ я┐я│я┌п╟п╫п╬п╡п╩п╣п╫ п╦п╩п╦ я┐я│я┌п╟п╫п╬п╡п╩п╣п╫
+       п╡ none, я┌п╬ п©я─п╦ п©я─п╬п╡п╣я─п╨п╣ п╨п╩п╦п╣п╫я┌я│п╨п╬пЁп╬ я│п╣я─я┌п╦я└п╦п╨п╟я┌я▀ п╪п╬пЁп╩п╟ п©я─п╬п╦я│я┘п╬п╢п╦я┌я▄
+       п╬я┬п╦п╠п╨п╟ "session id context uninitialized"; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.1.
 
-    *) Исправление: geo-диапазон возвращал значение по умолчанию, если 
-       диапазон включал в себя одну и более сетей размером /16 и не 
-       начинался на границе сети размером /16.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: geo-п╢п╦п╟п©п╟п╥п╬п╫ п╡п╬п╥п╡я─п╟я┴п╟п╩ п╥п╫п╟я┤п╣п╫п╦п╣ п©п╬ я┐п╪п╬п╩я┤п╟п╫п╦я▌, п╣я│п╩п╦
+       п╢п╦п╟п©п╟п╥п╬п╫ п╡п╨п╩я▌я┤п╟п╩ п╡ я│п╣п╠я▐ п╬п╢п╫я┐ п╦ п╠п╬п╩п╣п╣ я│п╣я┌п╣п╧ я─п╟п╥п╪п╣я─п╬п╪ /16 п╦ п╫п╣
+       п╫п╟я┤п╦п╫п╟п╩я│я▐ п╫п╟ пЁя─п╟п╫п╦я├п╣ я│п╣я┌п╦ я─п╟п╥п╪п╣я─п╬п╪ /16.
 
-    *) Исправление: блок, используемый в параметре stub в SSI-директиве 
-       include, выводился с MIME-типом "text/plain".
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╠п╩п╬п╨, п╦я│п©п╬п╩я▄п╥я┐п╣п╪я▀п╧ п╡ п©п╟я─п╟п╪п╣я┌я─п╣ stub п╡ SSI-п╢п╦я─п╣п╨я┌п╦п╡п╣
+       include, п╡я▀п╡п╬п╢п╦п╩я│я▐ я│ MIME-я┌п╦п©п╬п╪ "text/plain".
 
-    *) Исправление: $r->sleep() не работал; ошибка появилась в 0.8.11.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: $r->sleep() п╫п╣ я─п╟п╠п╬я┌п╟п╩; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.11.
 
 
-Изменения в nginx 0.8.33                                          01.02.2010
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.33                                          01.02.2010
 
-    *) Безопасность: теперь nginx/Windows игнорирует пробелы в конце URI. 
-       Спасибо Dan Crowley, Core Security Technologies.
+    *) п▒п╣п╥п╬п©п╟я│п╫п╬я│я┌я▄: я┌п╣п©п╣я─я▄ nginx/Windows п╦пЁп╫п╬я─п╦я─я┐п╣я┌ п©я─п╬п╠п╣п╩я▀ п╡ п╨п╬п╫я├п╣ URI.
+       п║п©п╟я│п╦п╠п╬ Dan Crowley, Core Security Technologies.
 
-    *) Безопасность: теперь nginx/Windows игнорирует короткие имена файлов. 
-       Спасибо Dan Crowley, Core Security Technologies.
+    *) п▒п╣п╥п╬п©п╟я│п╫п╬я│я┌я▄: я┌п╣п©п╣я─я▄ nginx/Windows п╦пЁп╫п╬я─п╦я─я┐п╣я┌ п╨п╬я─п╬я┌п╨п╦п╣ п╦п╪п╣п╫п╟ я└п╟п╧п╩п╬п╡.
+       п║п©п╟я│п╦п╠п╬ Dan Crowley, Core Security Technologies.
 
-    *) Изменение: теперь keepalive соединения после запросов POST не 
-       запрещаются для MSIE 7.0+.
-       Спасибо Adam Lounds.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ keepalive я│п╬п╣п╢п╦п╫п╣п╫п╦я▐ п©п╬я│п╩п╣ п╥п╟п©я─п╬я│п╬п╡ POST п╫п╣
+       п╥п╟п©я─п╣я┴п╟я▌я┌я│я▐ п╢п╩я▐ MSIE 7.0+.
+       п║п©п╟я│п╦п╠п╬ Adam Lounds.
 
-    *) Изменение: теперь keepalive соединения запрещены для Safari.
-       Спасибо Joshua Sierles.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ keepalive я│п╬п╣п╢п╦п╫п╣п╫п╦я▐ п╥п╟п©я─п╣я┴п╣п╫я▀ п╢п╩я▐ Safari.
+       п║п©п╟я│п╦п╠п╬ Joshua Sierles.
 
-    *) Исправление: если проксированный или FastCGI запрос внутренне 
-       перенаправлялся в другой проксированный или FastCGI location, то 
-       переменная $upstream_response_time могла иметь ненормально большое 
-       значение; ошибка появилась в 0.8.7.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╫я▀п╧ п╦п╩п╦ FastCGI п╥п╟п©я─п╬я│ п╡п╫я┐я┌я─п╣п╫п╫п╣
+       п©п╣я─п╣п╫п╟п©я─п╟п╡п╩я▐п╩я│я▐ п╡ п╢я─я┐пЁп╬п╧ п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╫я▀п╧ п╦п╩п╦ FastCGI location, я┌п╬
+       п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $upstream_response_time п╪п╬пЁп╩п╟ п╦п╪п╣я┌я▄ п╫п╣п╫п╬я─п╪п╟п╩я▄п╫п╬ п╠п╬п╩я▄я┬п╬п╣
+       п╥п╫п╟я┤п╣п╫п╦п╣; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.7.
 
-    *) Исправление: в рабочем процессе мог произойти segmentation fault при 
-       отбрасывания тела запроса; ошибка появилась в 0.8.11.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault п©я─п╦
+       п╬я┌п╠я─п╟я│я▀п╡п╟п╫п╦я▐ я┌п╣п╩п╟ п╥п╟п©я─п╬я│п╟; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.11.
 
 
-Изменения в nginx 0.8.32                                          11.01.2010
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.32                                          11.01.2010
 
-    *) Исправление: ошибки при использовании кодировки UTF-8 в 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╨п╬п╢п╦я─п╬п╡п╨п╦ UTF-8 п╡
        ngx_http_autoindex_module.
-       Спасибо Максиму Дунину.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: именованные выделения в регулярных выражениях работали 
-       только для двух переменных.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╦п╪п╣п╫п╬п╡п╟п╫п╫я▀п╣ п╡я▀п╢п╣п╩п╣п╫п╦я▐ п╡ я─п╣пЁя┐п╩я▐я─п╫я▀я┘ п╡я▀я─п╟п╤п╣п╫п╦я▐я┘ я─п╟п╠п╬я┌п╟п╩п╦
+       я┌п╬п╩я▄п╨п╬ п╢п╩я▐ п╢п╡я┐я┘ п©п╣я─п╣п╪п╣п╫п╫я▀я┘.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: теперь в строке заголовка запроса "Host" используется 
-       имя "localhost", если в директиве auth_http указан unix domain 
-       сокет.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╡ я│я┌я─п╬п╨п╣ п╥п╟пЁп╬п╩п╬п╡п╨п╟ п╥п╟п©я─п╬я│п╟ "Host" п╦я│п©п╬п╩я▄п╥я┐п╣я┌я│я▐
+       п╦п╪я▐ "localhost", п╣я│п╩п╦ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ auth_http я┐п╨п╟п╥п╟п╫ unix domain я│п╬п╨п╣я┌.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: nginx не поддерживал передачу chunk'ами для 201-ых 
-       ответов.
-       Спасибо Julian Reich.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╩ п©п╣я─п╣п╢п╟я┤я┐ chunk'п╟п╪п╦ п╢п╩я▐ 201-я▀я┘
+       п╬я┌п╡п╣я┌п╬п╡.
+       п║п©п╟я│п╦п╠п╬ Julian Reich.
 
-    *) Исправление: если директива "expires modified" выставляла дату в 
-       прошлом, то в строке заголовка ответа "Cache-Control" выдавалось 
-       отрицательное число.
-       Спасибо Алексею Капранову.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╢п╦я─п╣п╨я┌п╦п╡п╟ "expires modified" п╡я▀я│я┌п╟п╡п╩я▐п╩п╟ п╢п╟я┌я┐ п╡
+       п©я─п╬я┬п╩п╬п╪, я┌п╬ п╡ я│я┌я─п╬п╨п╣ п╥п╟пЁп╬п╩п╬п╡п╨п╟ п╬я┌п╡п╣я┌п╟ "Cache-Control" п╡я▀п╢п╟п╡п╟п╩п╬я│я▄
+       п╬я┌я─п╦я├п╟я┌п╣п╩я▄п╫п╬п╣ я┤п╦я│п╩п╬.
+       п║п©п╟я│п╦п╠п╬ п░п╩п╣п╨я│п╣я▌ п п╟п©я─п╟п╫п╬п╡я┐.
 
 
-Изменения в nginx 0.8.31                                          23.12.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.31                                          23.12.2009
 
-    *) Добавление: теперь директива error_page может перенаправлять ответы 
-       со статусом 301 и 302.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╢п╦я─п╣п╨я┌п╦п╡п╟ error_page п╪п╬п╤п╣я┌ п©п╣я─п╣п╫п╟п©я─п╟п╡п╩я▐я┌я▄ п╬я┌п╡п╣я┌я▀
+       я│п╬ я│я┌п╟я┌я┐я│п╬п╪ 301 п╦ 302.
 
-    *) Добавление: переменные $geoip_city_continent_code, $geoip_latitude и 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫я▀п╣ $geoip_city_continent_code, $geoip_latitude п╦
        $geoip_longitude.
-       Спасибо Arvind Sundararajan.
+       п║п©п╟я│п╦п╠п╬ Arvind Sundararajan.
 
-    *) Добавление: модуль ngx_http_image_filter_module теперь всегда 
-       удаляет EXIF и другие данные, если они занимают больше 5% в 
-       JPEG-файле.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_image_filter_module я┌п╣п©п╣я─я▄ п╡я│п╣пЁп╢п╟ я┐п╢п╟п╩я▐п╣я┌
+       EXIF п╦ п╢я─я┐пЁп╦п╣ п╢п╟п╫п╫я▀п╣, п╣я│п╩п╦ п╬п╫п╦ п╥п╟п╫п╦п╪п╟я▌я┌ п╠п╬п╩я▄я┬п╣ 5% п╡ JPEG-я└п╟п╧п╩п╣.
 
-    *) Исправление: nginx закрывал соединение при запросе закэшированного 
-       ответа с пустым телом.
-       Спасибо Piotr Sikora.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╥п╟п╨я─я▀п╡п╟п╩ я│п╬п╣п╢п╦п╫п╣п╫п╦п╣ п©я─п╦ п╥п╟п©я─п╬я│п╣ п╥п╟п╨я█я┬п╦я─п╬п╡п╟п╫п╫п╬пЁп╬
+       п╬я┌п╡п╣я┌п╟ я│ п©я┐я│я┌я▀п╪ я┌п╣п╩п╬п╪.
+       п║п©п╟я│п╦п╠п╬ Piotr Sikora.
 
-    *) Исправление: nginx мог не собираться gcc 4.x при использовании 
-       оптимизации -O2 и выше.
-       Спасибо Максиму Дунину и Денису Латыпову.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╪п╬пЁ п╫п╣ я│п╬п╠п╦я─п╟я┌я▄я│я▐ gcc 4.x п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦
+       п╬п©я┌п╦п╪п╦п╥п╟я├п╦п╦ -O2 п╦ п╡я▀я┬п╣.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐ п╦ п■п╣п╫п╦я│я┐ п⌡п╟я┌я▀п©п╬п╡я┐.
 
-    *) Исправление: регулярные выражения в location всегда тестировались с 
-       учётом регистра; ошибка появилась в 0.8.25.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я─п╣пЁя┐п╩я▐я─п╫я▀п╣ п╡я▀я─п╟п╤п╣п╫п╦я▐ п╡ location п╡я│п╣пЁп╢п╟ я┌п╣я│я┌п╦я─п╬п╡п╟п╩п╦я│я▄ я│
+       я┐я┤я▒я┌п╬п╪ я─п╣пЁп╦я│я┌я─п╟; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.25.
 
-    *) Исправление: nginx кэшировал 304 ответ, если в заголовке 
-       проксируемого запроса была строка "If-None-Match".
-       Спасибо Tim Dettrick и David Kostal.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╨я█я┬п╦я─п╬п╡п╟п╩ 304 п╬я┌п╡п╣я┌, п╣я│п╩п╦ п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣
+       п©я─п╬п╨я│п╦я─я┐п╣п╪п╬пЁп╬ п╥п╟п©я─п╬я│п╟ п╠я▀п╩п╟ я│я┌я─п╬п╨п╟ "If-None-Match".
+       п║п©п╟я│п╦п╠п╬ Tim Dettrick п╦ David Kostal.
 
-    *) Исправление: nginx/Windows пытался дважды удалить временный файл при 
-       перезаписи уже существующего файла.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx/Windows п©я▀я┌п╟п╩я│я▐ п╢п╡п╟п╤п╢я▀ я┐п╢п╟п╩п╦я┌я▄ п╡я─п╣п╪п╣п╫п╫я▀п╧ я└п╟п╧п╩ п©я─п╦
+       п©п╣я─п╣п╥п╟п©п╦я│п╦ я┐п╤п╣ я│я┐я┴п╣я│я┌п╡я┐я▌я┴п╣пЁп╬ я└п╟п╧п╩п╟.
 
 
-Изменения в nginx 0.8.30                                          15.12.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.30                                          15.12.2009
 
-    *) Изменение: теперь по умолчанию размер буфера директивы 
-       large_client_header_buffers равен 8K.
-       Спасибо Andrew Cholakian.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п©п╬ я┐п╪п╬п╩я┤п╟п╫п╦я▌ я─п╟п╥п╪п╣я─ п╠я┐я└п╣я─п╟ п╢п╦я─п╣п╨я┌п╦п╡я▀
+       large_client_header_buffers я─п╟п╡п╣п╫ 8K.
+       п║п©п╟я│п╦п╠п╬ Andrew Cholakian.
 
-    *) Добавление: файл conf/fastcgi.conf для простых конфигураций FastCGI.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я└п╟п╧п╩ conf/fastcgi.conf п╢п╩я▐ п©я─п╬я│я┌я▀я┘ п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╧ FastCGI.
 
-    *) Исправление: nginx/Windows пытался дважды переименовать временный 
-       файл при перезаписи уже существующего файла.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx/Windows п©я▀я┌п╟п╩я│я▐ п╢п╡п╟п╤п╢я▀ п©п╣я─п╣п╦п╪п╣п╫п╬п╡п╟я┌я▄ п╡я─п╣п╪п╣п╫п╫я▀п╧
+       я└п╟п╧п╩ п©я─п╦ п©п╣я─п╣п╥п╟п©п╦я│п╦ я┐п╤п╣ я│я┐я┴п╣я│я┌п╡я┐я▌я┴п╣пЁп╬ я└п╟п╧п╩п╟.
 
-    *) Исправление: ошибки double free or corruption, возникающей, если имя 
-       хоста не было найдено; ошибка появилась в 0.8.22.
-       Спасибо Константину Свисту.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ double free or corruption, п╡п╬п╥п╫п╦п╨п╟я▌я┴п╣п╧, п╣я│п╩п╦ п╦п╪я▐
+       я┘п╬я│я┌п╟ п╫п╣ п╠я▀п╩п╬ п╫п╟п╧п╢п╣п╫п╬; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.22.
+       п║п©п╟я│п╦п╠п╬ п п╬п╫я│я┌п╟п╫я┌п╦п╫я┐ п║п╡п╦я│я┌я┐.
 
-    *) Исправление: в использовании libatomic на некоторых платформах.
-       Спасибо W-Mark Kubacki.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ libatomic п╫п╟ п╫п╣п╨п╬я┌п╬я─я▀я┘ п©п╩п╟я┌я└п╬я─п╪п╟я┘.
+       п║п©п╟я│п╦п╠п╬ W-Mark Kubacki.
 
 
-Изменения в nginx 0.8.29                                          30.11.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.29                                          30.11.2009
 
-    *) Изменение: теперь для проксируемых ответов HTTP/0.9 в лог пишется 
-       код ответа "009".
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╢п╩я▐ п©я─п╬п╨я│п╦я─я┐п╣п╪я▀я┘ п╬я┌п╡п╣я┌п╬п╡ HTTP/0.9 п╡ п╩п╬пЁ п©п╦я┬п╣я┌я│я▐ п╨п╬п╢
+       п╬я┌п╡п╣я┌п╟ "009".
 
-    *) Добавление: директивы addition_types, charset_types, gzip_types, 
-       ssi_types, sub_filter_types и xslt_types поддерживают параметр "*".
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ addition_types, charset_types, gzip_types,
+       ssi_types, sub_filter_types п╦ xslt_types п©п╬п╢п╢п╣я─п╤п╦п╡п╟я▌я┌ п©п╟я─п╟п╪п╣я┌я─ "*".
 
-    *) Добавление: использование встроенных атомарных операций GCC 4.1+.
-       Спасибо W-Mark Kubacki.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╣ п╡я│я┌я─п╬п╣п╫п╫я▀я┘ п╟я┌п╬п╪п╟я─п╫я▀я┘ п╬п©п╣я─п╟я├п╦п╧ GCC 4.1+.
+       п║п©п╟я│п╦п╠п╬ W-Mark Kubacki.
 
-    *) Добавление: параметр --with-libatomic[=DIR] в configure.
-       Спасибо W-Mark Kubacki.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ --with-libatomic[=DIR] п╡ configure.
+       п║п©п╟я│п╦п╠п╬ W-Mark Kubacki.
 
-    *) Исправление: listen unix domain сокет имели ограниченные права 
-       доступа.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: listen unix domain я│п╬п╨п╣я┌ п╦п╪п╣п╩п╦ п╬пЁя─п╟п╫п╦я┤п╣п╫п╫я▀п╣ п©я─п╟п╡п╟
+       п╢п╬я│я┌я┐п©п╟.
 
-    *) Исправление: закэшированные ответы ответов HTTP/0.9 неправильно 
-       обрабатывались.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╥п╟п╨я█я┬п╦я─п╬п╡п╟п╫п╫я▀п╣ п╬я┌п╡п╣я┌я▀ п╬я┌п╡п╣я┌п╬п╡ HTTP/0.9 п╫п╣п©я─п╟п╡п╦п╩я▄п╫п╬
+       п╬п╠я─п╟п╠п╟я┌я▀п╡п╟п╩п╦я│я▄.
 
-    *) Исправление: именованные выделения в регулярных выражениях, заданные 
-       как "?P<...>", не работали в директиве server_name.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╦п╪п╣п╫п╬п╡п╟п╫п╫я▀п╣ п╡я▀п╢п╣п╩п╣п╫п╦я▐ п╡ я─п╣пЁя┐п╩я▐я─п╫я▀я┘ п╡я▀я─п╟п╤п╣п╫п╦я▐я┘, п╥п╟п╢п╟п╫п╫я▀п╣
+       п╨п╟п╨ "?P<...>", п╫п╣ я─п╟п╠п╬я┌п╟п╩п╦ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ server_name.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
 
-Изменения в nginx 0.8.28                                          23.11.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.28                                          23.11.2009
 
-    *) Исправление: nginx не собирался с параметром --without-pcre; ошибка 
-       появилась в 0.8.25.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ я│ п©п╟я─п╟п╪п╣я┌я─п╬п╪ --without-pcre; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.25.
 
 
-Изменения в nginx 0.8.27                                          17.11.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.27                                          17.11.2009
 
-    *) Исправление: регулярные выражения не работали в nginx/Windows; 
-       ошибка появилась в 0.8.25.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я─п╣пЁя┐п╩я▐я─п╫я▀п╣ п╡я▀я─п╟п╤п╣п╫п╦я▐ п╫п╣ я─п╟п╠п╬я┌п╟п╩п╦ п╡ nginx/Windows; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.25.
 
 
-Изменения в nginx 0.8.26                                          16.11.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.26                                          16.11.2009
 
-    *) Исправление: ошибки при использовании выделений в директиве rewrite; 
-       ошибка появилась в 0.8.25.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╡я▀п╢п╣п╩п╣п╫п╦п╧ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ rewrite;
+       п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.25.
 
-    *) Исправление: nginx не собирался без параметра --with-debug; ошибка 
-       появилась в 0.8.25.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╠п╣п╥ п©п╟я─п╟п╪п╣я┌я─п╟ --with-debug; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.25.
 
 
-Изменения в nginx 0.8.25                                          16.11.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.25                                          16.11.2009
 
-    *) Изменение: теперь в лог ошибок не пишется сообщение, если переменная 
-       не найдена с помощью метода $r->variable().
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╡ п╩п╬пЁ п╬я┬п╦п╠п╬п╨ п╫п╣ п©п╦я┬п╣я┌я│я▐ я│п╬п╬п╠я┴п╣п╫п╦п╣, п╣я│п╩п╦ п©п╣я─п╣п╪п╣п╫п╫п╟я▐
+       п╫п╣ п╫п╟п╧п╢п╣п╫п╟ я│ п©п╬п╪п╬я┴я▄я▌ п╪п╣я┌п╬п╢п╟ $r->variable().
 
-    *) Добавление: модуль ngx_http_degradation_module.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_degradation_module.
 
-    *) Добавление: именованные выделения в регулярных выражениях.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╦п╪п╣п╫п╬п╡п╟п╫п╫я▀п╣ п╡я▀п╢п╣п╩п╣п╫п╦я▐ п╡ я─п╣пЁя┐п╩я▐я─п╫я▀я┘ п╡я▀я─п╟п╤п╣п╫п╦я▐я┘.
 
-    *) Добавление: теперь при использовании переменных в директиве 
-       proxy_pass не требуется задавать URI.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п©п╣я─п╣п╪п╣п╫п╫я▀я┘ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣
+       proxy_pass п╫п╣ я┌я─п╣п╠я┐п╣я┌я│я▐ п╥п╟п╢п╟п╡п╟я┌я▄ URI.
 
-    *) Добавление: теперь директива msie_padding работает и для Chrome.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╢п╦я─п╣п╨я┌п╦п╡п╟ msie_padding я─п╟п╠п╬я┌п╟п╣я┌ п╦ п╢п╩я▐ Chrome.
 
-    *) Исправление: в рабочем процессе происходил segmentation fault при 
-       недостатке памяти; ошибка появилась в 0.8.18.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault п©я─п╦
+       п╫п╣п╢п╬я│я┌п╟я┌п╨п╣ п©п╟п╪я▐я┌п╦; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.18.
 
-    *) Исправление: nginx передавал сжатые ответы клиентам, не 
-       поддерживающим сжатие, при настройках gzip_static on и gzip_vary 
-       off; ошибка появилась в 0.8.16.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п©п╣я─п╣п╢п╟п╡п╟п╩ я│п╤п╟я┌я▀п╣ п╬я┌п╡п╣я┌я▀ п╨п╩п╦п╣п╫я┌п╟п╪, п╫п╣
+       п©п╬п╢п╢п╣я─п╤п╦п╡п╟я▌я┴п╦п╪ я│п╤п╟я┌п╦п╣, п©я─п╦ п╫п╟я│я┌я─п╬п╧п╨п╟я┘ gzip_static on п╦ gzip_vary off;
+       п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.16.
 
 
-Изменения в nginx 0.8.24                                          11.11.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.24                                          11.11.2009
 
-    *) Исправление: nginx всегда добавлял строку "Content-Encoding: gzip" в 
-       заголовок 304-ых ответов модуля ngx_http_gzip_static_module.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╡я│п╣пЁп╢п╟ п╢п╬п╠п╟п╡п╩я▐п╩ я│я┌я─п╬п╨я┐ "Content-Encoding: gzip" п╡
+       п╥п╟пЁп╬п╩п╬п╡п╬п╨ 304-я▀я┘ п╬я┌п╡п╣я┌п╬п╡ п╪п╬п╢я┐п╩я▐ ngx_http_gzip_static_module.
 
-    *) Исправление: nginx не собирался без параметра --with-debug; ошибка 
-       появилась в 0.8.23.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╠п╣п╥ п©п╟я─п╟п╪п╣я┌я─п╟ --with-debug; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.23.
 
-    *) Исправление: параметр "unix:" в директиве set_real_ip_from 
-       неправильно наследовался с предыдущего уровня.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ "unix:" п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ set_real_ip_from
+       п╫п╣п©я─п╟п╡п╦п╩я▄п╫п╬ п╫п╟я│п╩п╣п╢п╬п╡п╟п╩я│я▐ я│ п©я─п╣п╢я▀п╢я┐я┴п╣пЁп╬ я┐я─п╬п╡п╫я▐.
 
-    *) Исправление: в resolver'е при определении пустого имени.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ resolver'п╣ п©я─п╦ п╬п©я─п╣п╢п╣п╩п╣п╫п╦п╦ п©я┐я│я┌п╬пЁп╬ п╦п╪п╣п╫п╦.
 
 
-Изменения в nginx 0.8.23                                          11.11.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.23                                          11.11.2009
 
-    *) Безопасность: теперь SSL/TLS renegotiation запрещён.
-       Спасибо Максиму Дунину.
+    *) п▒п╣п╥п╬п©п╟я│п╫п╬я│я┌я▄: я┌п╣п©п╣я─я▄ SSL/TLS renegotiation п╥п╟п©я─п╣я┴я▒п╫.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: listen unix domain сокет не наследовался во время 
-       обновления без перерыва.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: listen unix domain я│п╬п╨п╣я┌ п╫п╣ п╫п╟я│п╩п╣п╢п╬п╡п╟п╩я│я▐ п╡п╬ п╡я─п╣п╪я▐
+       п╬п╠п╫п╬п╡п╩п╣п╫п╦я▐ п╠п╣п╥ п©п╣я─п╣я─я▀п╡п╟.
 
-    *) Исправление: параметр "unix:" в директиве set_real_ip_from не 
-       работал без ещё одной директивы с любым IP-адресом.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ "unix:" п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ set_real_ip_from п╫п╣ я─п╟п╠п╬я┌п╟п╩
+       п╠п╣п╥ п╣я┴я▒ п╬п╢п╫п╬п╧ п╢п╦я─п╣п╨я┌п╦п╡я▀ я│ п╩я▌п╠я▀п╪ IP-п╟п╢я─п╣я│п╬п╪.
 
-    *) Исправление: segmentation fault и зацикливания в resolver'е.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: segmentation fault п╦ п╥п╟я├п╦п╨п╩п╦п╡п╟п╫п╦я▐ п╡ resolver'п╣.
 
-    *) Исправление: в resolver'е.
-       Спасибо Артёму Бохану.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ resolver'п╣.
+       п║п©п╟я│п╦п╠п╬ п░я─я┌я▒п╪я┐ п▒п╬я┘п╟п╫я┐.
 
 
-Изменения в nginx 0.8.22                                          03.11.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.22                                          03.11.2009
 
-    *) Добавление: директивы proxy_bind, fastcgi_bind и memcached_bind.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_bind, fastcgi_bind п╦ memcached_bind.
 
-    *) Добавление: директивы access и deny поддерживают IPv6.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ access п╦ deny п©п╬п╢п╢п╣я─п╤п╦п╡п╟я▌я┌ IPv6.
 
-    *) Добавление: директива set_real_ip_from поддерживает IPv6 адреса в 
-       заголовках запроса.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ set_real_ip_from п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ IPv6 п╟п╢я─п╣я│п╟ п╡
+       п╥п╟пЁп╬п╩п╬п╡п╨п╟я┘ п╥п╟п©я─п╬я│п╟.
 
-    *) Добавление: параметр "unix:" в директиве set_real_ip_from.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ "unix:" п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ set_real_ip_from.
 
-    *) Исправление: nginx не удалял unix domain сокет после тестирования 
-       конфигурации.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я┐п╢п╟п╩я▐п╩ unix domain я│п╬п╨п╣я┌ п©п╬я│п╩п╣ я┌п╣я│я┌п╦я─п╬п╡п╟п╫п╦я▐
+       п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦.
 
-    *) Исправление: nginx удалял unix domain сокет во время обновления без 
-       перерыва.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx я┐п╢п╟п╩я▐п╩ unix domain я│п╬п╨п╣я┌ п╡п╬ п╡я─п╣п╪я▐ п╬п╠п╫п╬п╡п╩п╣п╫п╦я▐ п╠п╣п╥
+       п©п╣я─п╣я─я▀п╡п╟.
 
-    *) Исправление: оператор "!-x" не работал.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬п©п╣я─п╟я┌п╬я─ "!-x" п╫п╣ я─п╟п╠п╬я┌п╟п╩.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: в рабочем процессе мог произойти segmentation fault при 
-       использовании limit_rate в HTTPS сервере.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault п©я─п╦
+       п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ limit_rate п╡ HTTPS я│п╣я─п╡п╣я─п╣.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: при записи в лог переменной $limit_rate в рабочем 
-       процессе происходил segmentation fault.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╥п╟п©п╦я│п╦ п╡ п╩п╬пЁ п©п╣я─п╣п╪п╣п╫п╫п╬п╧ $limit_rate п╡ я─п╟п╠п╬я┤п╣п╪
+       п©я─п╬я├п╣я│я│п╣ п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: в рабочем процессе мог произойти segmentation fault, 
-       если внутри блока server не было директивы listen; ошибка появилась 
-       в 0.8.21.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault,
+       п╣я│п╩п╦ п╡п╫я┐я┌я─п╦ п╠п╩п╬п╨п╟ server п╫п╣ п╠я▀п╩п╬ п╢п╦я─п╣п╨я┌п╦п╡я▀ listen; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
+       0.8.21.
 
 
-Изменения в nginx 0.8.21                                          26.10.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.21                                          26.10.2009
 
-    *) Добавление: теперь ключ -V показывает статус поддержки TLS SNI.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╨п╩я▌я┤ -V п©п╬п╨п╟п╥я▀п╡п╟п╣я┌ я│я┌п╟я┌я┐я│ п©п╬п╢п╢п╣я─п╤п╨п╦ TLS SNI.
 
-    *) Добавление: директива listen модуля HTTP поддерживает unix domain 
-       сокеты.
-       Спасибо Hongli Lai.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ listen п╪п╬п╢я┐п╩я▐ HTTP п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ unix domain
+       я│п╬п╨п╣я┌я▀.
+       п║п©п╟я│п╦п╠п╬ Hongli Lai.
 
-    *) Добавление: параметр "default_server" в директиве listen.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ "default_server" п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ listen.
 
-    *) Добавление: теперь параметр "default" не обязателен для установки 
-       параметров listen-сокета.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п©п╟я─п╟п╪п╣я┌я─ "default" п╫п╣ п╬п╠я▐п╥п╟я┌п╣п╩п╣п╫ п╢п╩я▐ я┐я│я┌п╟п╫п╬п╡п╨п╦
+       п©п╟я─п╟п╪п╣я┌я─п╬п╡ listen-я│п╬п╨п╣я┌п╟.
 
-    *) Исправление: nginx не поддерживал даты в 2038 году на 32-битных 
-       платформах;
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╩ п╢п╟я┌я▀ п╡ 2038 пЁп╬п╢я┐ п╫п╟ 32-п╠п╦я┌п╫я▀я┘
+       п©п╩п╟я┌я└п╬я─п╪п╟я┘;
 
-    *) Исправление: утечки сокетов; ошибка появилась в 0.8.11.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┐я┌п╣я┤п╨п╦ я│п╬п╨п╣я┌п╬п╡; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.11.
 
 
-Изменения в nginx 0.8.20                                          14.10.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.20                                          14.10.2009
 
-    *) Изменение: теперь по умолчанию используются следующие шифры SSL: 
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п©п╬ я┐п╪п╬п╩я┤п╟п╫п╦я▌ п╦я│п©п╬п╩я▄п╥я┐я▌я┌я│я▐ я│п╩п╣п╢я┐я▌я┴п╦п╣ я┬п╦я└я─я▀ SSL:
        "HIGH:!ADH:!MD5".
 
-    *) Исправление: модуль ngx_http_autoindex_module не показывал последний 
-       слэш для линков на каталоги; ошибка появилась в 0.7.15.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_autoindex_module п╫п╣ п©п╬п╨п╟п╥я▀п╡п╟п╩ п©п╬я│п╩п╣п╢п╫п╦п╧
+       я│п╩я█я┬ п╢п╩я▐ п╩п╦п╫п╨п╬п╡ п╫п╟ п╨п╟я┌п╟п╩п╬пЁп╦; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.15.
 
-    *) Исправление: nginx не закрывал лог, заданный параметром конфигурации 
-       --error-log-path; ошибка появилась в 0.7.53.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ п╥п╟п╨я─я▀п╡п╟п╩ п╩п╬пЁ, п╥п╟п╢п╟п╫п╫я▀п╧ п©п╟я─п╟п╪п╣я┌я─п╬п╪ п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦
+       --error-log-path; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.53.
 
-    *) Исправление: nginx не считал запятую разделителем в строке 
-       "Cache-Control" в заголовке ответа бэкенда.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│я┤п╦я┌п╟п╩ п╥п╟п©я▐я┌я┐я▌ я─п╟п╥п╢п╣п╩п╦я┌п╣п╩п╣п╪ п╡ я│я┌я─п╬п╨п╣
+       "Cache-Control" п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╬я┌п╡п╣я┌п╟ п╠я█п╨п╣п╫п╢п╟.
 
-    *) Исправление: nginx/Windows мог не создать временный файл, файл в 
-       кэше или файл с помощью директив proxy/fastcgi_store, если рабочий 
-       процесс не имел достаточно прав для работы с каталогами верхнего 
-       уровня.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx/Windows п╪п╬пЁ п╫п╣ я│п╬п╥п╢п╟я┌я▄ п╡я─п╣п╪п╣п╫п╫я▀п╧ я└п╟п╧п╩, я└п╟п╧п╩ п╡ п╨я█я┬п╣
+       п╦п╩п╦ я└п╟п╧п╩ я│ п©п╬п╪п╬я┴я▄я▌ п╢п╦я─п╣п╨я┌п╦п╡ proxy/fastcgi_store, п╣я│п╩п╦ я─п╟п╠п╬я┤п╦п╧ п©я─п╬я├п╣я│я│
+       п╫п╣ п╦п╪п╣п╩ п╢п╬я│я┌п╟я┌п╬я┤п╫п╬ п©я─п╟п╡ п╢п╩я▐ я─п╟п╠п╬я┌я▀ я│ п╨п╟я┌п╟п╩п╬пЁп╟п╪п╦ п╡п╣я─я┘п╫п╣пЁп╬ я┐я─п╬п╡п╫я▐.
 
-    *) Исправление: строки "Set-Cookie" и "P3P" в заголовке ответа 
-       FastCGI-сервера не скрывались при кэшировании, если не 
-       использовались директивы fastcgi_hide_header с любыми параметрами.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я│я┌я─п╬п╨п╦ "Set-Cookie" п╦ "P3P" п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╬я┌п╡п╣я┌п╟
+       FastCGI-я│п╣я─п╡п╣я─п╟ п╫п╣ я│п╨я─я▀п╡п╟п╩п╦я│я▄ п©я─п╦ п╨я█я┬п╦я─п╬п╡п╟п╫п╦п╦, п╣я│п╩п╦ п╫п╣ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╦я│я▄
+       п╢п╦я─п╣п╨я┌п╦п╡я▀ fastcgi_hide_header я│ п╩я▌п╠я▀п╪п╦ п©п╟я─п╟п╪п╣я┌я─п╟п╪п╦.
 
-    *) Исправление: nginx неверно считал размер кэша на диске.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣п╡п╣я─п╫п╬ я│я┤п╦я┌п╟п╩ я─п╟п╥п╪п╣я─ п╨я█я┬п╟ п╫п╟ п╢п╦я│п╨п╣.
 
 
-Изменения в nginx 0.8.19                                          06.10.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.19                                          06.10.2009
 
-    *) Изменение: теперь протокол SSLv2 по умолчанию запрещён.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п©я─п╬я┌п╬п╨п╬п╩ SSLv2 п©п╬ я┐п╪п╬п╩я┤п╟п╫п╦я▌ п╥п╟п©я─п╣я┴я▒п╫.
 
-    *) Изменение: теперь по умолчанию используются следующие шифры SSL: 
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п©п╬ я┐п╪п╬п╩я┤п╟п╫п╦я▌ п╦я│п©п╬п╩я▄п╥я┐я▌я┌я│я▐ я│п╩п╣п╢я┐я▌я┴п╦п╣ я┬п╦я└я─я▀ SSL:
        "ALL:!ADH:RC4+RSA:+HIGH:+MEDIUM".
 
-    *) Исправление: директива limit_req не работала; ошибка появилась в 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ limit_req п╫п╣ я─п╟п╠п╬я┌п╟п╩п╟; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
        0.8.18.
 
 
-Изменения в nginx 0.8.18                                          06.10.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.18                                          06.10.2009
 
-    *) Добавление: директива read_ahead.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ read_ahead.
 
-    *) Добавление: теперь можно использовать несколько директив 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╪п╬п╤п╫п╬ п╦я│п©п╬п╩я▄п╥п╬п╡п╟я┌я▄ п╫п╣я│п╨п╬п╩я▄п╨п╬ п╢п╦я─п╣п╨я┌п╦п╡
        perl_modules.
 
-    *) Добавление: директивы limit_req_log_level и limit_conn_log_level.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ limit_req_log_level п╦ limit_conn_log_level.
 
-    *) Исправление: теперь директива limit_req соответствует алгоритму 
-       leaky bucket.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╢п╦я─п╣п╨я┌п╦п╡п╟ limit_req я│п╬п╬я┌п╡п╣я┌я│я┌п╡я┐п╣я┌ п╟п╩пЁп╬я─п╦я┌п╪я┐ leaky
+       bucket.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: nginx не работал на Linux/sparc.
-       Спасибо Marcus Ramberg.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я─п╟п╠п╬я┌п╟п╩ п╫п╟ Linux/sparc.
+       п║п©п╟я│п╦п╠п╬ Marcus Ramberg.
 
-    *) Исправление: nginx слал символ '\0' в строке "Location" в заголовке 
-       в ответе на запрос MKCOL.
-       Спасибо Xie Zhenye.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx я│п╩п╟п╩ я│п╦п╪п╡п╬п╩ '\0' п╡ я│я┌я─п╬п╨п╣ "Location" п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╡
+       п╬я┌п╡п╣я┌п╣ п╫п╟ п╥п╟п©я─п╬я│ MKCOL.
+       п║п©п╟я│п╦п╠п╬ Xie Zhenye.
 
-    *) Исправление: вместо кода ответа 499 в лог записывался код 0; ошибка 
-       появилась в 0.8.11.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡п╪п╣я│я┌п╬ п╨п╬п╢п╟ п╬я┌п╡п╣я┌п╟ 499 п╡ п╩п╬пЁ п╥п╟п©п╦я│я▀п╡п╟п╩я│я▐ п╨п╬п╢ 0; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.11.
 
-    *) Исправление: утечки сокетов; ошибка появилась в 0.8.11.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┐я┌п╣я┤п╨п╦ я│п╬п╨п╣я┌п╬п╡; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.11.
 
 
-Изменения в nginx 0.8.17                                          28.09.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.17                                          28.09.2009
 
-    *) Безопасность: теперь символы "/../" запрещены в строке "Destination" 
-       в заголовке запроса.
+    *) п▒п╣п╥п╬п©п╟я│п╫п╬я│я┌я▄: я┌п╣п©п╣я─я▄ я│п╦п╪п╡п╬п╩я▀ "/../" п╥п╟п©я─п╣я┴п╣п╫я▀ п╡ я│я┌я─п╬п╨п╣ "Destination"
+       п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╥п╟п©я─п╬я│п╟.
 
-    *) Изменение: теперь значение переменной $host всегда в нижнем регистре.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╥п╫п╟я┤п╣п╫п╦п╣ п©п╣я─п╣п╪п╣п╫п╫п╬п╧ $host п╡я│п╣пЁп╢п╟ п╡ п╫п╦п╤п╫п╣п╪ я─п╣пЁп╦я│я┌я─п╣.
 
-    *) Добавление: переменная $ssl_session_id.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $ssl_session_id.
 
-    *) Исправление: утечки сокетов; ошибка появилась в 0.8.11.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┐я┌п╣я┤п╨п╦ я│п╬п╨п╣я┌п╬п╡; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.11.
 
 
-Изменения в nginx 0.8.16                                          22.09.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.16                                          22.09.2009
 
-    *) Добавление: директива image_filter_transparency.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ image_filter_transparency.
 
-    *) Исправление: директива "addition_types" была неверно названа 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ "addition_types" п╠я▀п╩п╟ п╫п╣п╡п╣я─п╫п╬ п╫п╟п╥п╡п╟п╫п╟
        "addtion_types".
 
-    *) Исправление: порчи кэша resolver'а.
-       Спасибо Matthew Dempsky.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╬я─я┤п╦ п╨я█я┬п╟ resolver'п╟.
+       п║п©п╟я│п╦п╠п╬ Matthew Dempsky.
 
-    *) Исправление: утечки памяти в resolver'е.
-       Спасибо Matthew Dempsky.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┐я┌п╣я┤п╨п╦ п©п╟п╪я▐я┌п╦ п╡ resolver'п╣.
+       п║п©п╟я│п╦п╠п╬ Matthew Dempsky.
 
-    *) Исправление: неверная строка запроса в переменной $request 
-       записывалась в access_log только при использовании error_log на 
-       уровне info или debug.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╫п╣п╡п╣я─п╫п╟я▐ я│я┌я─п╬п╨п╟ п╥п╟п©я─п╬я│п╟ п╡ п©п╣я─п╣п╪п╣п╫п╫п╬п╧ $request
+       п╥п╟п©п╦я│я▀п╡п╟п╩п╟я│я▄ п╡ access_log я┌п╬п╩я▄п╨п╬ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ error_log п╫п╟
+       я┐я─п╬п╡п╫п╣ info п╦п╩п╦ debug.
 
-    *) Исправление: в поддержке альфа-канала PNG в модуле 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п©п╬п╢п╢п╣я─п╤п╨п╣ п╟п╩я▄я└п╟-п╨п╟п╫п╟п╩п╟ PNG п╡ п╪п╬п╢я┐п╩п╣
        ngx_http_image_filter_module.
 
-    *) Исправление: nginx всегда добавлял строку "Vary: Accept-Encoding" в 
-       заголовок ответа, если обе директивы gzip_static и gzip_vary были 
-       включены.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╡я│п╣пЁп╢п╟ п╢п╬п╠п╟п╡п╩я▐п╩ я│я┌я─п╬п╨я┐ "Vary: Accept-Encoding" п╡
+       п╥п╟пЁп╬п╩п╬п╡п╬п╨ п╬я┌п╡п╣я┌п╟, п╣я│п╩п╦ п╬п╠п╣ п╢п╦я─п╣п╨я┌п╦п╡я▀ gzip_static п╦ gzip_vary п╠я▀п╩п╦
+       п╡п╨п╩я▌я┤п╣п╫я▀.
 
-    *) Исправление: в поддержке кодировки UTF-8 директивой try_files в 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п©п╬п╢п╢п╣я─п╤п╨п╣ п╨п╬п╢п╦я─п╬п╡п╨п╦ UTF-8 п╢п╦я─п╣п╨я┌п╦п╡п╬п╧ try_files п╡
        nginx/Windows.
 
-    *) Исправление: ошибки при использовании post_action; ошибка появилась 
-       в 0.8.11.
-       Спасибо Игорю Артемьеву.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ post_action; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
+       0.8.11.
+       п║п©п╟я│п╦п╠п╬ п≤пЁп╬я─я▌ п░я─я┌п╣п╪я▄п╣п╡я┐.
 
 
-Изменения в nginx 0.8.15                                          14.09.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.15                                          14.09.2009
 
-    *) Безопасность: при обработке специально созданного запроса в рабочем 
-       процессе мог произойти segmentation fault.
-       Спасибо Chris Ries.
+    *) п▒п╣п╥п╬п©п╟я│п╫п╬я│я┌я▄: п©я─п╦ п╬п╠я─п╟п╠п╬я┌п╨п╣ я│п©п╣я├п╦п╟п╩я▄п╫п╬ я│п╬п╥п╢п╟п╫п╫п╬пЁп╬ п╥п╟п©я─п╬я│п╟ п╡ я─п╟п╠п╬я┤п╣п╪
+       п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault.
+       п║п©п╟я│п╦п╠п╬ Chris Ries.
 
-    *) Исправление: если были описаны имена .domain.tld, .sub.domain.tld и 
-       .domain-some.tld, то имя .sub.domain.tld попадало под маску 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╠я▀п╩п╦ п╬п©п╦я│п╟п╫я▀ п╦п╪п╣п╫п╟ .domain.tld, .sub.domain.tld п╦
+       .domain-some.tld, я┌п╬ п╦п╪я▐ .sub.domain.tld п©п╬п©п╟п╢п╟п╩п╬ п©п╬п╢ п╪п╟я│п╨я┐
        .domain.tld.
 
-    *) Исправление: в поддержке прозрачности в модуле 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п©п╬п╢п╢п╣я─п╤п╨п╣ п©я─п╬п╥я─п╟я┤п╫п╬я│я┌п╦ п╡ п╪п╬п╢я┐п╩п╣
        ngx_http_image_filter_module.
 
-    *) Исправление: в файловом AIO.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ я└п╟п╧п╩п╬п╡п╬п╪ AIO.
 
-    *) Исправление: ошибки при использовании X-Accel-Redirect; ошибка 
-       появилась в 0.8.11.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ X-Accel-Redirect; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.11.
 
-    *) Исправление: ошибки при использовании встроенного перла; ошибка 
-       появилась в 0.8.11.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╡я│я┌я─п╬п╣п╫п╫п╬пЁп╬ п©п╣я─п╩п╟; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.11.
 
 
-Изменения в nginx 0.8.14                                          07.09.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.14                                          07.09.2009
 
-    *) Исправление: устаревший закэшированный запрос мог залипнуть в 
-       состоянии "UPDATING".
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┐я│я┌п╟я─п╣п╡я┬п╦п╧ п╥п╟п╨я█я┬п╦я─п╬п╡п╟п╫п╫я▀п╧ п╥п╟п©я─п╬я│ п╪п╬пЁ п╥п╟п╩п╦п©п╫я┐я┌я▄ п╡
+       я│п╬я│я┌п╬я▐п╫п╦п╦ "UPDATING".
 
-    *) Исправление: при использовании error_log на уровне info или debug в 
-       рабочем процессе мог произойти segmentation fault.
-       Спасибо Сергею Боченкову.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ error_log п╫п╟ я┐я─п╬п╡п╫п╣ info п╦п╩п╦ debug п╡
+       я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault.
+       п║п©п╟я│п╦п╠п╬ п║п╣я─пЁп╣я▌ п▒п╬я┤п╣п╫п╨п╬п╡я┐.
 
-    *) Исправление: ошибки при использовании встроенного перла; ошибка 
-       появилась в 0.8.11.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╡я│я┌я─п╬п╣п╫п╫п╬пЁп╬ п©п╣я─п╩п╟; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.11.
 
-    *) Исправление: директива error_page не перенаправляла ошибку 413; 
-       ошибка появилась в 0.6.10.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ error_page п╫п╣ п©п╣я─п╣п╫п╟п©я─п╟п╡п╩я▐п╩п╟ п╬я┬п╦п╠п╨я┐ 413;
+       п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.6.10.
 
 
-Изменения в nginx 0.8.13                                          31.08.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.13                                          31.08.2009
 
-    *) Исправление: в директиве "aio sendfile"; ошибка появилась в 0.8.12.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ "aio sendfile"; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.12.
 
-    *) Исправление: nginx не собирался без параметра --with-file-aio на 
-       FreeBSD; ошибка появилась в 0.8.12.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╠п╣п╥ п©п╟я─п╟п╪п╣я┌я─п╟ --with-file-aio п╫п╟
+       FreeBSD; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.12.
 
 
-Изменения в nginx 0.8.12                                          31.08.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.12                                          31.08.2009
 
-    *) Добавление: параметр sendfile в директиве aio во FreeBSD.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ sendfile п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ aio п╡п╬ FreeBSD.
 
-    *) Исправление: ошибки при использовании try_files; ошибка появилась в 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ try_files; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
        0.8.11.
 
-    *) Исправление: ошибки при использовании memcached; ошибка появилась в 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ memcached; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
        0.8.11.
 
 
-Изменения в nginx 0.8.11                                          28.08.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.11                                          28.08.2009
 
-    *) Изменение: теперь директива "gzip_disable msie6" не запрещает сжатие 
-       для MSIE 6.0 SV1.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╢п╦я─п╣п╨я┌п╦п╡п╟ "gzip_disable msie6" п╫п╣ п╥п╟п©я─п╣я┴п╟п╣я┌ я│п╤п╟я┌п╦п╣
+       п╢п╩я▐ MSIE 6.0 SV1.
 
-    *) Добавление: поддержка файлового AIO во FreeBSD и Linux.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╬п╢п╢п╣я─п╤п╨п╟ я└п╟п╧п╩п╬п╡п╬пЁп╬ AIO п╡п╬ FreeBSD п╦ Linux.
 
-    *) Добавление: директива directio_alignment.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ directio_alignment.
 
 
-Изменения в nginx 0.8.10                                          24.08.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.10                                          24.08.2009
 
-    *) Исправление: утечек памяти при использовании базы GeoIP City.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┐я┌п╣я┤п╣п╨ п©п╟п╪я▐я┌п╦ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╠п╟п╥я▀ GeoIP City.
 
-    *) Исправление: ошибки при копировании временных файлов в постоянное 
-       место хранения; ошибка появилась в 0.8.9.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ п©я─п╦ п╨п╬п©п╦я─п╬п╡п╟п╫п╦п╦ п╡я─п╣п╪п╣п╫п╫я▀я┘ я└п╟п╧п╩п╬п╡ п╡ п©п╬я│я┌п╬я▐п╫п╫п╬п╣
+       п╪п╣я│я┌п╬ я┘я─п╟п╫п╣п╫п╦я▐; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.9.
 
 
-Изменения в nginx 0.8.9                                           17.08.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.9                                           17.08.2009
 
-    *) Добавление: теперь стартовый загрузчик кэша работает в отдельном 
-       процесс; это должно улучшить обработку больших кэшей.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ я│я┌п╟я─я┌п╬п╡я▀п╧ п╥п╟пЁя─я┐п╥я┤п╦п╨ п╨я█я┬п╟ я─п╟п╠п╬я┌п╟п╣я┌ п╡ п╬я┌п╢п╣п╩я▄п╫п╬п╪
+       п©я─п╬я├п╣я│я│; я█я┌п╬ п╢п╬п╩п╤п╫п╬ я┐п╩я┐я┤я┬п╦я┌я▄ п╬п╠я─п╟п╠п╬я┌п╨я┐ п╠п╬п╩я▄я┬п╦я┘ п╨я█я┬п╣п╧.
 
-    *) Добавление: теперь временные файлы и постоянное место хранения могут 
-       располагаться на разных файловых системах.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╡я─п╣п╪п╣п╫п╫я▀п╣ я└п╟п╧п╩я▀ п╦ п©п╬я│я┌п╬я▐п╫п╫п╬п╣ п╪п╣я│я┌п╬ я┘я─п╟п╫п╣п╫п╦я▐ п╪п╬пЁя┐я┌
+       я─п╟я│п©п╬п╩п╟пЁп╟я┌я▄я│я▐ п╫п╟ я─п╟п╥п╫я▀я┘ я└п╟п╧п╩п╬п╡я▀я┘ я│п╦я│я┌п╣п╪п╟я┘.
 
 
-Изменения в nginx 0.8.8                                           10.08.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.8                                           10.08.2009
 
-    *) Исправление: в обработке заголовков ответа, разделённых в 
-       FastCGI-записях.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╬п╠я─п╟п╠п╬я┌п╨п╣ п╥п╟пЁп╬п╩п╬п╡п╨п╬п╡ п╬я┌п╡п╣я┌п╟, я─п╟п╥п╢п╣п╩я▒п╫п╫я▀я┘ п╡
+       FastCGI-п╥п╟п©п╦я│я▐я┘.
 
-    *) Исправление: если запрос обрабатывался в двух проксированных или 
-       FastCGI location'ах и в первом из них использовалось кэширование, то 
-       в рабочем процессе происходил segmentation fault; ошибка появилась в 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╥п╟п©я─п╬я│ п╬п╠я─п╟п╠п╟я┌я▀п╡п╟п╩я│я▐ п╡ п╢п╡я┐я┘ п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╫я▀я┘ п╦п╩п╦
+       FastCGI location'п╟я┘ п╦ п╡ п©п╣я─п╡п╬п╪ п╦п╥ п╫п╦я┘ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╬я│я▄ п╨я█я┬п╦я─п╬п╡п╟п╫п╦п╣, я┌п╬
+       п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
        0.8.7.
 
 
-Изменения в nginx 0.8.7                                           27.07.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.7                                           27.07.2009
 
-    *) Изменение: минимальная поддерживаемая версия OpenSSL - 0.9.7.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╪п╦п╫п╦п╪п╟п╩я▄п╫п╟я▐ п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣п╪п╟я▐ п╡п╣я─я│п╦я▐ OpenSSL - 0.9.7.
 
-    *) Изменение: параметр ask директивы ssl_verify_client изменён на 
-       параметр optional и теперь он проверяет клиентский сертификат, если 
-       он был предложен.
-       Спасибо Brice Figureau.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ ask п╢п╦я─п╣п╨я┌п╦п╡я▀ ssl_verify_client п╦п╥п╪п╣п╫я▒п╫ п╫п╟
+       п©п╟я─п╟п╪п╣я┌я─ optional п╦ я┌п╣п©п╣я─я▄ п╬п╫ п©я─п╬п╡п╣я─я▐п╣я┌ п╨п╩п╦п╣п╫я┌я│п╨п╦п╧ я│п╣я─я┌п╦я└п╦п╨п╟я┌, п╣я│п╩п╦
+       п╬п╫ п╠я▀п╩ п©я─п╣п╢п╩п╬п╤п╣п╫.
+       п║п©п╟я│п╦п╠п╬ Brice Figureau.
 
-    *) Добавление: переменная $ssl_client_verify.
-       Спасибо Brice Figureau.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $ssl_client_verify.
+       п║п©п╟я│п╦п╠п╬ Brice Figureau.
 
-    *) Добавление: директива ssl_crl.
-       Спасибо Brice Figureau.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ ssl_crl.
+       п║п©п╟я│п╦п╠п╬ Brice Figureau.
 
-    *) Добавление: параметр proxy директивы geo.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ proxy п╢п╦я─п╣п╨я┌п╦п╡я▀ geo.
 
-    *) Добавление: директива image_filter поддерживает переменные для 
-       задания размеров.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ image_filter п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п©п╣я─п╣п╪п╣п╫п╫я▀п╣ п╢п╩я▐
+       п╥п╟п╢п╟п╫п╦я▐ я─п╟п╥п╪п╣я─п╬п╡.
 
-    *) Исправление: использование переменной $ssl_client_cert портило 
-       память; ошибка появилась в 0.7.7.
-       Спасибо Сергею Журавлёву.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╣ п©п╣я─п╣п╪п╣п╫п╫п╬п╧ $ssl_client_cert п©п╬я─я┌п╦п╩п╬
+       п©п╟п╪я▐я┌я▄; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.7.
+       п║п©п╟я│п╦п╠п╬ п║п╣я─пЁп╣я▌ п√я┐я─п╟п╡п╩я▒п╡я┐.
 
-    *) Исправление: директивы proxy_pass_header и fastcgi_pass_header" не 
-       передавали клиенту строки "X-Accel-Redirect", "X-Accel-Limit-Rate", 
-       "X-Accel-Buffering" и "X-Accel-Charset" из заголовка ответа 
-       бэкенда.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_pass_header п╦ fastcgi_pass_header" п╫п╣
+       п©п╣я─п╣п╢п╟п╡п╟п╩п╦ п╨п╩п╦п╣п╫я┌я┐ я│я┌я─п╬п╨п╦ "X-Accel-Redirect", "X-Accel-Limit-Rate",
+       "X-Accel-Buffering" п╦ "X-Accel-Charset" п╦п╥ п╥п╟пЁп╬п╩п╬п╡п╨п╟ п╬я┌п╡п╣я┌п╟ п╠я█п╨п╣п╫п╢п╟.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: в обработке строк "Last-Modified" и "Accept-Ranges" в 
-       заголовке ответа бэкенда; ошибка появилась в 0.7.44.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╬п╠я─п╟п╠п╬я┌п╨п╣ я│я┌я─п╬п╨ "Last-Modified" п╦ "Accept-Ranges" п╡
+       п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╬я┌п╡п╣я┌п╟ п╠я█п╨п╣п╫п╢п╟; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.44.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: ошибки "[alert] zero size buf" при получении пустых 
-       ответы в подзапросах; ошибка появилась в 0.8.5.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ "[alert] zero size buf" п©я─п╦ п©п╬п╩я┐я┤п╣п╫п╦п╦ п©я┐я│я┌я▀я┘
+       п╬я┌п╡п╣я┌я▀ п╡ п©п╬п╢п╥п╟п©я─п╬я│п╟я┘; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.5.
 
 
-Изменения в nginx 0.8.6                                           20.07.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.6                                           20.07.2009
 
-    *) Добавление: модуль ngx_http_geoip_module.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_geoip_module.
 
-    *) Исправление: XSLT-фильтр мог выдавать ошибку "not well formed XML 
-       document" для правильного документа.
-       Спасибо Kuramoto Eiji.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: XSLT-я└п╦п╩я▄я┌я─ п╪п╬пЁ п╡я▀п╢п╟п╡п╟я┌я▄ п╬я┬п╦п╠п╨я┐ "not well formed XML
+       document" п╢п╩я▐ п©я─п╟п╡п╦п╩я▄п╫п╬пЁп╬ п╢п╬п╨я┐п╪п╣п╫я┌п╟.
+       п║п©п╟я│п╦п╠п╬ Kuramoto Eiji.
 
-    *) Исправление: в MacOSX, Cygwin и nginx/Windows при проверке 
-       location'ов, заданных регулярным выражением, теперь всегда делается 
-       сравнение без учёта регистра символов.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ MacOSX, Cygwin п╦ nginx/Windows п©я─п╦ п©я─п╬п╡п╣я─п╨п╣
+       location'п╬п╡, п╥п╟п╢п╟п╫п╫я▀я┘ я─п╣пЁя┐п╩я▐я─п╫я▀п╪ п╡я▀я─п╟п╤п╣п╫п╦п╣п╪, я┌п╣п©п╣я─я▄ п╡я│п╣пЁп╢п╟ п╢п╣п╩п╟п╣я┌я│я▐
+       я│я─п╟п╡п╫п╣п╫п╦п╣ п╠п╣п╥ я┐я┤я▒я┌п╟ я─п╣пЁп╦я│я┌я─п╟ я│п╦п╪п╡п╬п╩п╬п╡.
 
-    *) Исправление: теперь nginx/Windows игнорирует точки в конце URI.
-       Спасибо Hugo Leisink.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ nginx/Windows п╦пЁп╫п╬я─п╦я─я┐п╣я┌ я┌п╬я┤п╨п╦ п╡ п╨п╬п╫я├п╣ URI.
+       п║п©п╟я│п╦п╠п╬ Hugo Leisink.
 
-    *) Исправление: имя файла указанного в --conf-path игнорировалось при 
-       установке; ошибка появилась в 0.6.6.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╦п╪я▐ я└п╟п╧п╩п╟ я┐п╨п╟п╥п╟п╫п╫п╬пЁп╬ п╡ --conf-path п╦пЁп╫п╬я─п╦я─п╬п╡п╟п╩п╬я│я▄ п©я─п╦
+       я┐я│я┌п╟п╫п╬п╡п╨п╣; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.6.6.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
 
-Изменения в nginx 0.8.5                                           13.07.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.5                                           13.07.2009
 
-    *) Исправление: теперь nginx разрешает подчёркивания в методе запроса.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ nginx я─п╟п╥я─п╣я┬п╟п╣я┌ п©п╬п╢я┤я▒я─п╨п╦п╡п╟п╫п╦я▐ п╡ п╪п╣я┌п╬п╢п╣ п╥п╟п©я─п╬я│п╟.
 
-    *) Исправление: при использовании HTTP Basic-аутентификации на Windows 
-       для неверных имени/пароля возвращалась 500-ая ошибка.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ HTTP Basic-п╟я┐я┌п╣п╫я┌п╦я└п╦п╨п╟я├п╦п╦ п╫п╟ Windows
+       п╢п╩я▐ п╫п╣п╡п╣я─п╫я▀я┘ п╦п╪п╣п╫п╦/п©п╟я─п╬п╩я▐ п╡п╬п╥п╡я─п╟я┴п╟п╩п╟я│я▄ 500-п╟я▐ п╬я┬п╦п╠п╨п╟.
 
-    *) Исправление: ответы модуля ngx_http_perl_module не работали в 
-       подзапросах.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┌п╡п╣я┌я▀ п╪п╬п╢я┐п╩я▐ ngx_http_perl_module п╫п╣ я─п╟п╠п╬я┌п╟п╩п╦ п╡
+       п©п╬п╢п╥п╟п©я─п╬я│п╟я┘.
 
-    *) Исправление: в модуле ngx_http_limit_req_module.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╪п╬п╢я┐п╩п╣ ngx_http_limit_req_module.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
 
-Изменения в nginx 0.8.4                                           22.06.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.4                                           22.06.2009
 
-    *) Исправление: nginx не собирался с параметром --without-http-cache; 
-       ошибка появилась в 0.8.3.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ я│ п©п╟я─п╟п╪п╣я┌я─п╬п╪ --without-http-cache;
+       п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.3.
 
 
-Изменения в nginx 0.8.3                                           19.06.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.3                                           19.06.2009
 
-    *) Добавление: переменная $upstream_cache_status.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $upstream_cache_status.
 
-    *) Исправление: nginx не собирался на MacOSX 10.6.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ MacOSX 10.6.
 
-    *) Исправление: nginx не собирался с параметром --without-http-cache; 
-       ошибка появилась в 0.8.2.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ я│ п©п╟я─п╟п╪п╣я┌я─п╬п╪ --without-http-cache;
+       п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.8.2.
 
-    *) Исправление: если использовался перехват 401 ошибки от бэкенда и 
-       бэкенд не возвращал строку "WWW-Authenticate" в заголовке ответа, то 
-       в рабочем процессе происходил segmentation fault.
-       Спасибо Евгению Мычло.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩я│я▐ п©п╣я─п╣я┘п╡п╟я┌ 401 п╬я┬п╦п╠п╨п╦ п╬я┌ п╠я█п╨п╣п╫п╢п╟ п╦
+       п╠я█п╨п╣п╫п╢ п╫п╣ п╡п╬п╥п╡я─п╟я┴п╟п╩ я│я┌я─п╬п╨я┐ "WWW-Authenticate" п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╬я┌п╡п╣я┌п╟, я┌п╬
+       п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault.
+       п║п©п╟я│п╦п╠п╬ п∙п╡пЁп╣п╫п╦я▌ п°я▀я┤п╩п╬.
 
 
-Изменения в nginx 0.8.2                                           15.06.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.2                                           15.06.2009
 
-    *) Исправление: во взаимодействии open_file_cache и proxy/fastcgi кэша 
-       на старте.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡п╬ п╡п╥п╟п╦п╪п╬п╢п╣п╧я│я┌п╡п╦п╦ open_file_cache п╦ proxy/fastcgi п╨я█я┬п╟
+       п╫п╟ я│я┌п╟я─я┌п╣.
 
-    *) Исправление: open_file_cache мог кэшировать открытые файлы очень 
-       долго; ошибка появилась в 0.7.4.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: open_file_cache п╪п╬пЁ п╨я█я┬п╦я─п╬п╡п╟я┌я▄ п╬я┌п╨я─я▀я┌я▀п╣ я└п╟п╧п╩я▀ п╬я┤п╣п╫я▄
+       п╢п╬п╩пЁп╬; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.4.
 
 
-Изменения в nginx 0.8.1                                           08.06.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.1                                           08.06.2009
 
-    *) Добавление: параметр updating в директивах proxy_cache_use_stale и 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ updating п╡ п╢п╦я─п╣п╨я┌п╦п╡п╟я┘ proxy_cache_use_stale п╦
        fastcgi_cache_use_stale.
 
-    *) Исправление: строки "If-Modified-Since", "If-Range" и им подобные в 
-       заголовке запроса клиента передавались бэкенду при кэшировании, если 
-       не использовалась директива proxy_set_header с любыми параметрами.
-
-    *) Исправление: строки "Set-Cookie" и "P3P" в заголовке ответа бэкенда 
-       не скрывались при кэшировании, если не использовались директивы 
-       proxy_hide_header/fastcgi_hide_header с любыми параметрами.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я│я┌я─п╬п╨п╦ "If-Modified-Since", "If-Range" п╦ п╦п╪ п©п╬п╢п╬п╠п╫я▀п╣ п╡
+       п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╥п╟п©я─п╬я│п╟ п╨п╩п╦п╣п╫я┌п╟ п©п╣я─п╣п╢п╟п╡п╟п╩п╦я│я▄ п╠я█п╨п╣п╫п╢я┐ п©я─п╦ п╨я█я┬п╦я─п╬п╡п╟п╫п╦п╦, п╣я│п╩п╦
+       п╫п╣ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╟я│я▄ п╢п╦я─п╣п╨я┌п╦п╡п╟ proxy_set_header я│ п╩я▌п╠я▀п╪п╦ п©п╟я─п╟п╪п╣я┌я─п╟п╪п╦.
+
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я│я┌я─п╬п╨п╦ "Set-Cookie" п╦ "P3P" п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╬я┌п╡п╣я┌п╟ п╠я█п╨п╣п╫п╢п╟
+       п╫п╣ я│п╨я─я▀п╡п╟п╩п╦я│я▄ п©я─п╦ п╨я█я┬п╦я─п╬п╡п╟п╫п╦п╦, п╣я│п╩п╦ п╫п╣ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╦я│я▄ п╢п╦я─п╣п╨я┌п╦п╡я▀
+       proxy_hide_header/fastcgi_hide_header я│ п╩я▌п╠я▀п╪п╦ п©п╟я─п╟п╪п╣я┌я─п╟п╪п╦.
 
-    *) Исправление: модуль ngx_http_image_filter_module не понимал формат 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_image_filter_module п╫п╣ п©п╬п╫п╦п╪п╟п╩ я└п╬я─п╪п╟я┌
        GIF87a.
-       Спасибо Денису Ильиных.
+       п║п©п╟я│п╦п╠п╬ п■п╣п╫п╦я│я┐ п≤п╩я▄п╦п╫я▀я┘.
 
-    *) Исправление: nginx не собирался на Solaris 10 и более ранних; ошибка 
-       появилась в 0.7.56.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ Solaris 10 п╦ п╠п╬п╩п╣п╣ я─п╟п╫п╫п╦я┘; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.56.
 
 
-Изменения в nginx 0.8.0                                           02.06.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.8.0                                           02.06.2009
 
-    *) Добавление: директива keepalive_requests.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ keepalive_requests.
 
-    *) Добавление: директива limit_rate_after.
-       Спасибо Ivan Debnar.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ limit_rate_after.
+       п║п©п╟я│п╦п╠п╬ Ivan Debnar.
 
-    *) Исправление: XSLT-фильтр не работал в подзапросах.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: XSLT-я└п╦п╩я▄я┌я─ п╫п╣ я─п╟п╠п╬я┌п╟п╩ п╡ п©п╬п╢п╥п╟п©я─п╬я│п╟я┘.
 
-    *) Исправление: обработке относительных путей в nginx/Windows.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬п╠я─п╟п╠п╬я┌п╨п╣ п╬я┌п╫п╬я│п╦я┌п╣п╩я▄п╫я▀я┘ п©я┐я┌п╣п╧ п╡ nginx/Windows.
 
-    *) Исправление: в proxy_store, fastcgi_store, proxy_cache и 
-       fastcgi_cache в nginx/Windows.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ proxy_store, fastcgi_store, proxy_cache п╦
+       fastcgi_cache п╡ nginx/Windows.
 
-    *) Исправление: в обработке ошибок выделения памяти.
-       Спасибо Максиму Дунину и Кириллу Коринскому.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╬п╠я─п╟п╠п╬я┌п╨п╣ п╬я┬п╦п╠п╬п╨ п╡я▀п╢п╣п╩п╣п╫п╦я▐ п©п╟п╪я▐я┌п╦.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐ п╦ п п╦я─п╦п╩п╩я┐ п п╬я─п╦п╫я│п╨п╬п╪я┐.
 
 
-Изменения в nginx 0.7.59                                          25.05.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.59                                          25.05.2009
 
-    *) Добавление: директивы proxy_cache_methods и fastcgi_cache_methods.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_cache_methods п╦ fastcgi_cache_methods.
 
-    *) Исправление: утечки сокетов; ошибка появилась в 0.7.25.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┐я┌п╣я┤п╨п╦ я│п╬п╨п╣я┌п╬п╡; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.25.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: при использовании переменной $request_body в рабочем 
-       процессе происходил segmentation fault, если в запросе не было тела; 
-       ошибка появилась в 0.7.58.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п©п╣я─п╣п╪п╣п╫п╫п╬п╧ $request_body п╡ я─п╟п╠п╬я┤п╣п╪
+       п©я─п╬я├п╣я│я│п╣ п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault, п╣я│п╩п╦ п╡ п╥п╟п©я─п╬я│п╣ п╫п╣ п╠я▀п╩п╬ я┌п╣п╩п╟;
+       п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.58.
 
-    *) Исправление: SSL-модули могли не собираться на Solaris и Linux; 
-       ошибка появилась в 0.7.56.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: SSL-п╪п╬п╢я┐п╩п╦ п╪п╬пЁп╩п╦ п╫п╣ я│п╬п╠п╦я─п╟я┌я▄я│я▐ п╫п╟ Solaris п╦ Linux;
+       п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.56.
 
-    *) Исправление: ответы модуля ngx_http_xslt_filter_module не 
-       обрабатывались SSI-, charset- и gzip-фильтрами.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┌п╡п╣я┌я▀ п╪п╬п╢я┐п╩я▐ ngx_http_xslt_filter_module п╫п╣
+       п╬п╠я─п╟п╠п╟я┌я▀п╡п╟п╩п╦я│я▄ SSI-, charset- п╦ gzip-я└п╦п╩я▄я┌я─п╟п╪п╦.
 
-    *) Исправление: директива charset не ставила кодировку для ответов 
-       модуля ngx_http_gzip_static_module.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ charset п╫п╣ я│я┌п╟п╡п╦п╩п╟ п╨п╬п╢п╦я─п╬п╡п╨я┐ п╢п╩я▐ п╬я┌п╡п╣я┌п╬п╡
+       п╪п╬п╢я┐п╩я▐ ngx_http_gzip_static_module.
 
 
-Изменения в nginx 0.7.58                                          18.05.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.58                                          18.05.2009
 
-    *) Добавление: директива listen почтового прокси-сервера поддерживает 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ listen п©п╬я┤я┌п╬п╡п╬пЁп╬ п©я─п╬п╨я│п╦-я│п╣я─п╡п╣я─п╟ п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌
        IPv6.
 
-    *) Добавление: директива image_filter_jpeg_quality.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ image_filter_jpeg_quality.
 
-    *) Добавление: директива client_body_in_single_buffer.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ client_body_in_single_buffer.
 
-    *) Добавление: переменная $request_body.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $request_body.
 
-    *) Исправление: в модуле ngx_http_autoindex_module в ссылках на имена 
-       файлов, содержащих символ ":".
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╪п╬п╢я┐п╩п╣ ngx_http_autoindex_module п╡ я│я│я▀п╩п╨п╟я┘ п╫п╟ п╦п╪п╣п╫п╟
+       я└п╟п╧п╩п╬п╡, я│п╬п╢п╣я─п╤п╟я┴п╦я┘ я│п╦п╪п╡п╬п╩ ":".
 
-    *) Исправление: процедура "make upgrade" не работала; ошибка появилась 
-       в 0.7.53.
-       Спасибо Денису Латыпову.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╬я├п╣п╢я┐я─п╟ "make upgrade" п╫п╣ я─п╟п╠п╬я┌п╟п╩п╟; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
+       0.7.53.
+       п║п©п╟я│п╦п╠п╬ п■п╣п╫п╦я│я┐ п⌡п╟я┌я▀п©п╬п╡я┐.
 
 
-Изменения в nginx 0.7.57                                          12.05.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.57                                          12.05.2009
 
-    *) Исправление: при перенаправлении ошибок модуля 
-       ngx_http_image_filter_module в именованный location в рабочем 
-       процессе происходил floating-point fault; ошибка появилась в 0.7.56.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п©п╣я─п╣п╫п╟п©я─п╟п╡п╩п╣п╫п╦п╦ п╬я┬п╦п╠п╬п╨ п╪п╬п╢я┐п╩я▐
+       ngx_http_image_filter_module п╡ п╦п╪п╣п╫п╬п╡п╟п╫п╫я▀п╧ location п╡ я─п╟п╠п╬я┤п╣п╪
+       п©я─п╬я├п╣я│я│п╣ п©я─п╬п╦я│я┘п╬п╢п╦п╩ floating-point fault; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.56.
 
 
-Изменения в nginx 0.7.56                                          11.05.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.56                                          11.05.2009
 
-    *) Добавление: nginx/Windows поддерживает IPv6 в директиве listen 
-       модуля HTTP.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: nginx/Windows п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ IPv6 п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ listen п╪п╬п╢я┐п╩я▐
+       HTTP.
 
-    *) Исправление: в модуле ngx_http_image_filter_module.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╪п╬п╢я┐п╩п╣ ngx_http_image_filter_module.
 
 
-Изменения в nginx 0.7.55                                          06.05.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.55                                          06.05.2009
 
-    *) Исправление: параметры http_XXX в директивах proxy_cache_use_stale и 
-       fastcgi_cache_use_stale не работали.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─я▀ http_XXX п╡ п╢п╦я─п╣п╨я┌п╦п╡п╟я┘ proxy_cache_use_stale п╦
+       fastcgi_cache_use_stale п╫п╣ я─п╟п╠п╬я┌п╟п╩п╦.
 
-    *) Исправление: fastcgi кэш не кэшировал ответы, состоящие только из 
-       заголовка.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: fastcgi п╨я█я┬ п╫п╣ п╨я█я┬п╦я─п╬п╡п╟п╩ п╬я┌п╡п╣я┌я▀, я│п╬я│я┌п╬я▐я┴п╦п╣ я┌п╬п╩я▄п╨п╬ п╦п╥
+       п╥п╟пЁп╬п╩п╬п╡п╨п╟.
 
-    *) Исправление: ошибки "select() failed (9: Bad file descriptor)" в 
-       nginx/Unix и "select() failed (10038: ...)" в nginx/Windows.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ "select() failed (9: Bad file descriptor)" п╡
+       nginx/Unix п╦ "select() failed (10038: ...)" п╡ nginx/Windows.
 
-    *) Исправление: при использовании директивы debug_connection в рабочем 
-       процессе мог произойти segmentation fault; ошибка появилась в 0.7.54.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀ debug_connection п╡ я─п╟п╠п╬я┤п╣п╪
+       п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.54.
 
-    *) Исправление: в сборке модуля ngx_http_image_filter_module.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ я│п╠п╬я─п╨п╣ п╪п╬п╢я┐п╩я▐ ngx_http_image_filter_module.
 
-    *) Исправление: файлы больше 2G не передавались с использованием 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я└п╟п╧п╩я▀ п╠п╬п╩я▄я┬п╣ 2G п╫п╣ п©п╣я─п╣п╢п╟п╡п╟п╩п╦я│я▄ я│ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╣п╪
        $r->sendfile.
-       Спасибо Максиму Дунину.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
 
-Изменения в nginx 0.7.54                                          01.05.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.54                                          01.05.2009
 
-    *) Добавление: модуль ngx_http_image_filter_module.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_image_filter_module.
 
-    *) Добавление: директивы proxy_ignore_headers и fastcgi_ignore_headers.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_ignore_headers п╦ fastcgi_ignore_headers.
 
-    *) Исправление: при использовании переменных "open_file_cache_errors 
-       on" в рабочем процессе мог произойти segmentation fault; ошибка 
-       появилась в 0.7.53.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п©п╣я─п╣п╪п╣п╫п╫я▀я┘ "open_file_cache_errors on"
+       п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄
+       п╡ 0.7.53.
 
-    *) Исправление: директива "port_in_redirect off" не работала; ошибка 
-       появилась в 0.7.39.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ "port_in_redirect off" п╫п╣ я─п╟п╠п╬я┌п╟п╩п╟; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.39.
 
-    *) Исправление: улучшение обработки ошибок метода select.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┐п╩я┐я┤я┬п╣п╫п╦п╣ п╬п╠я─п╟п╠п╬я┌п╨п╦ п╬я┬п╦п╠п╬п╨ п╪п╣я┌п╬п╢п╟ select.
 
-    *) Исправление: ошибки "select() failed (10022: ...)" в nginx/Windows.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ "select() failed (10022: ...)" п╡ nginx/Windows.
 
-    *) Исправление: в текстовых сообщениях об ошибках в nginx/Windows; 
-       ошибка появилась в 0.7.53.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ я┌п╣п╨я│я┌п╬п╡я▀я┘ я│п╬п╬п╠я┴п╣п╫п╦я▐я┘ п╬п╠ п╬я┬п╦п╠п╨п╟я┘ п╡ nginx/Windows;
+       п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.53.
 
 
-Изменения в nginx 0.7.53                                          27.04.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.53                                          27.04.2009
 
-    *) Изменение: теперь лог, указанный в --error-log-path, создаётся с 
-       самого начала работы.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╩п╬пЁ, я┐п╨п╟п╥п╟п╫п╫я▀п╧ п╡ --error-log-path, я│п╬п╥п╢п╟я▒я┌я│я▐ я│
+       я│п╟п╪п╬пЁп╬ п╫п╟я┤п╟п╩п╟ я─п╟п╠п╬я┌я▀.
 
-    *) Добавление: теперь ошибки и предупреждения при старте записываются в 
-       error_log и выводятся на stderr.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╬я┬п╦п╠п╨п╦ п╦ п©я─п╣п╢я┐п©я─п╣п╤п╢п╣п╫п╦я▐ п©я─п╦ я│я┌п╟я─я┌п╣ п╥п╟п©п╦я│я▀п╡п╟я▌я┌я│я▐ п╡
+       error_log п╦ п╡я▀п╡п╬п╢я▐я┌я│я▐ п╫п╟ stderr.
 
-    *) Добавление: при сборке с пустым параметром --prefix= nginx 
-       использует как префикс каталог, в котором он был запущен.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ я│п╠п╬я─п╨п╣ я│ п©я┐я│я┌я▀п╪ п©п╟я─п╟п╪п╣я┌я─п╬п╪ --prefix= nginx п╦я│п©п╬п╩я▄п╥я┐п╣я┌
+       п╨п╟п╨ п©я─п╣я└п╦п╨я│ п╨п╟я┌п╟п╩п╬пЁ, п╡ п╨п╬я┌п╬я─п╬п╪ п╬п╫ п╠я▀п╩ п╥п╟п©я┐я┴п╣п╫.
 
-    *) Добавление: ключ -p.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╨п╩я▌я┤ -p.
 
-    *) Добавление: ключ -s на Unix-платформах.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╨п╩я▌я┤ -s п╫п╟ Unix-п©п╩п╟я┌я└п╬я─п╪п╟я┘.
 
-    *) Добавление: ключи -? и -h.
-       Спасибо Jerome Loyet.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╨п╩я▌я┤п╦ -? п╦ -h.
+       п║п©п╟я│п╦п╠п╬ Jerome Loyet.
 
-    *) Добавление: теперь ключи можно задавать в сжатой форме.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╨п╩я▌я┤п╦ п╪п╬п╤п╫п╬ п╥п╟п╢п╟п╡п╟я┌я▄ п╡ я│п╤п╟я┌п╬п╧ я└п╬я─п╪п╣.
 
-    *) Исправление: nginx/Windows не работал, если файл конфигурации был 
-       задан ключом -c.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx/Windows п╫п╣ я─п╟п╠п╬я┌п╟п╩, п╣я│п╩п╦ я└п╟п╧п╩ п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦ п╠я▀п╩
+       п╥п╟п╢п╟п╫ п╨п╩я▌я┤п╬п╪ -c.
 
-    *) Исправление: при использовании директив proxy_store, fastcgi_store, 
-       proxy_cache или fastcgi_cache временные файлы могли не удаляться.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╢п╦я─п╣п╨я┌п╦п╡ proxy_store, fastcgi_store,
+       proxy_cache п╦п╩п╦ fastcgi_cache п╡я─п╣п╪п╣п╫п╫я▀п╣ я└п╟п╧п╩я▀ п╪п╬пЁп╩п╦ п╫п╣ я┐п╢п╟п╩я▐я┌я▄я│я▐.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: в заголовке Auth-Method запроса серверу аутентификации 
-       почтового прокси-сервера передавалось неверное значение; ошибка 
-       появилась в 0.7.34.
-       Спасибо Simon Lecaille.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣ Auth-Method п╥п╟п©я─п╬я│п╟ я│п╣я─п╡п╣я─я┐ п╟я┐я┌п╣п╫я┌п╦я└п╦п╨п╟я├п╦п╦
+       п©п╬я┤я┌п╬п╡п╬пЁп╬ п©я─п╬п╨я│п╦-я│п╣я─п╡п╣я─п╟ п©п╣я─п╣п╢п╟п╡п╟п╩п╬я│я▄ п╫п╣п╡п╣я─п╫п╬п╣ п╥п╫п╟я┤п╣п╫п╦п╣; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.34.
+       п║п©п╟я│п╦п╠п╬ Simon Lecaille.
 
-    *) Исправление: при логгировании на Linux не писались текстовые 
-       описания системных ошибок; ошибка появилась в 0.7.45.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╩п╬пЁпЁп╦я─п╬п╡п╟п╫п╦п╦ п╫п╟ Linux п╫п╣ п©п╦я│п╟п╩п╦я│я▄ я┌п╣п╨я│я┌п╬п╡я▀п╣ п╬п©п╦я│п╟п╫п╦я▐
+       я│п╦я│я┌п╣п╪п╫я▀я┘ п╬я┬п╦п╠п╬п╨; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.45.
 
-    *) Исправление: директива fastcgi_cache_min_uses не работала.
-       Спасибо Андрею Воробьёву.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ fastcgi_cache_min_uses п╫п╣ я─п╟п╠п╬я┌п╟п╩п╟.
+       п║п©п╟я│п╦п╠п╬ п░п╫п╢я─п╣я▌ п▓п╬я─п╬п╠я▄я▒п╡я┐.
 
 
-Изменения в nginx 0.7.52                                          20.04.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.52                                          20.04.2009
 
-    *) Добавление: первая бинарная версия под Windows.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╡п╟я▐ п╠п╦п╫п╟я─п╫п╟я▐ п╡п╣я─я│п╦я▐ п©п╬п╢ Windows.
 
-    *) Исправление: корректная обработка метода HEAD при кэшировании.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╨п╬я─я─п╣п╨я┌п╫п╟я▐ п╬п╠я─п╟п╠п╬я┌п╨п╟ п╪п╣я┌п╬п╢п╟ HEAD п©я─п╦ п╨я█я┬п╦я─п╬п╡п╟п╫п╦п╦.
 
-    *) Исправление: корректная обработка строк "If-Modified-Since", 
-       "If-Range" и им подобных в заголовке запроса клиента при кэшировании.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╨п╬я─я─п╣п╨я┌п╫п╟я▐ п╬п╠я─п╟п╠п╬я┌п╨п╟ я│я┌я─п╬п╨ "If-Modified-Since",
+       "If-Range" п╦ п╦п╪ п©п╬п╢п╬п╠п╫я▀я┘ п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╥п╟п©я─п╬я│п╟ п╨п╩п╦п╣п╫я┌п╟ п©я─п╦ п╨я█я┬п╦я─п╬п╡п╟п╫п╦п╦.
 
-    *) Исправление: теперь строки "Set-Cookie" и "P3P" скрываются в 
-       заголовке ответа для закэшированных ответов.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ я│я┌я─п╬п╨п╦ "Set-Cookie" п╦ "P3P" я│п╨я─я▀п╡п╟я▌я┌я│я▐ п╡
+       п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╬я┌п╡п╣я┌п╟ п╢п╩я▐ п╥п╟п╨я█я┬п╦я─п╬п╡п╟п╫п╫я▀я┘ п╬я┌п╡п╣я┌п╬п╡.
 
-    *) Исправление: если nginx был собран с модулем ngx_http_perl_module и 
-       perl поддерживал потоки, то при выходе основного процесса могла 
-       выдаваться ошибка "panic: MUTEX_LOCK".
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ nginx п╠я▀п╩ я│п╬п╠я─п╟п╫ я│ п╪п╬п╢я┐п╩п╣п╪ ngx_http_perl_module п╦
+       perl п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╩ п©п╬я┌п╬п╨п╦, я┌п╬ п©я─п╦ п╡я▀я┘п╬п╢п╣ п╬я│п╫п╬п╡п╫п╬пЁп╬ п©я─п╬я├п╣я│я│п╟ п╪п╬пЁп╩п╟
+       п╡я▀п╢п╟п╡п╟я┌я▄я│я▐ п╬я┬п╦п╠п╨п╟ "panic: MUTEX_LOCK".
 
-    *) Исправление: nginx не собирался с параметром --without-http-cache; 
-       ошибка появилась в 0.7.48.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ я│ п©п╟я─п╟п╪п╣я┌я─п╬п╪ --without-http-cache;
+       п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.48.
 
-    *) Исправление: nginx не собирался на платформах, отличных от i386, 
-       amd64, sparc и ppc; ошибка появилась в 0.7.42.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ п©п╩п╟я┌я└п╬я─п╪п╟я┘, п╬я┌п╩п╦я┤п╫я▀я┘ п╬я┌ i386,
+       amd64, sparc п╦ ppc; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.42.
 
 
-Изменения в nginx 0.7.51                                          12.04.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.51                                          12.04.2009
 
-    *) Добавление: директива try_files поддерживает код ответа в последнем 
-       параметре.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ try_files п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╨п╬п╢ п╬я┌п╡п╣я┌п╟ п╡ п©п╬я│п╩п╣п╢п╫п╣п╪
+       п©п╟я─п╟п╪п╣я┌я─п╣.
 
-    *) Добавление: теперь в директиве return можно использовать любой код 
-       ответа.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ return п╪п╬п╤п╫п╬ п╦я│п©п╬п╩я▄п╥п╬п╡п╟я┌я▄ п╩я▌п╠п╬п╧ п╨п╬п╢
+       п╬я┌п╡п╣я┌п╟.
 
-    *) Исправление: директива error_page делала внешний редирект без строки 
-       запроса; ошибка появилась в 0.7.44.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ error_page п╢п╣п╩п╟п╩п╟ п╡п╫п╣я┬п╫п╦п╧ я─п╣п╢п╦я─п╣п╨я┌ п╠п╣п╥ я│я┌я─п╬п╨п╦
+       п╥п╟п©я─п╬я│п╟; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.44.
 
-    *) Исправление: если сервера слушали на нескольких явно описанных 
-       адресах, то виртуальные сервера могли не работать; ошибка появилась 
-       в 0.7.39.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ я│п╣я─п╡п╣я─п╟ я│п╩я┐я┬п╟п╩п╦ п╫п╟ п╫п╣я│п╨п╬п╩я▄п╨п╦я┘ я▐п╡п╫п╬ п╬п©п╦я│п╟п╫п╫я▀я┘
+       п╟п╢я─п╣я│п╟я┘, я┌п╬ п╡п╦я─я┌я┐п╟п╩я▄п╫я▀п╣ я│п╣я─п╡п╣я─п╟ п╪п╬пЁп╩п╦ п╫п╣ я─п╟п╠п╬я┌п╟я┌я▄; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
+       0.7.39.
 
 
-Изменения в nginx 0.7.50                                          06.04.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.50                                          06.04.2009
 
-    *) Исправление: переменные $arg_... не работали; ошибка появилась в 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫я▀п╣ $arg_... п╫п╣ я─п╟п╠п╬я┌п╟п╩п╦; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
        0.7.49.
 
 
-Изменения в nginx 0.7.49                                          06.04.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.49                                          06.04.2009
 
-    *) Исправление: при использовании переменных $arg_... в рабочем 
-       процессе мог произойти segmentation fault; ошибка появилась в 0.7.48.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п©п╣я─п╣п╪п╣п╫п╫я▀я┘ $arg_... п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣
+       п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.48.
 
 
-Изменения в nginx 0.7.48                                          06.04.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.48                                          06.04.2009
 
-    *) Добавление: директива proxy_cache_key.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ proxy_cache_key.
 
-    *) Исправление: теперь nginx учитывает при кэшировании строки 
-       "X-Accel-Expires", "Expires" и "Cache-Control" в заголовке ответа 
-       бэкенда.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ nginx я┐я┤п╦я┌я▀п╡п╟п╣я┌ п©я─п╦ п╨я█я┬п╦я─п╬п╡п╟п╫п╦п╦ я│я┌я─п╬п╨п╦
+       "X-Accel-Expires", "Expires" п╦ "Cache-Control" п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╬я┌п╡п╣я┌п╟
+       п╠я█п╨п╣п╫п╢п╟.
 
-    *) Исправление: теперь nginx кэширует только ответы на запросы GET.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ nginx п╨я█я┬п╦я─я┐п╣я┌ я┌п╬п╩я▄п╨п╬ п╬я┌п╡п╣я┌я▀ п╫п╟ п╥п╟п©я─п╬я│я▀ GET.
 
-    *) Исправление: директива fastcgi_cache_key не наследовалась.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ fastcgi_cache_key п╫п╣ п╫п╟я│п╩п╣п╢п╬п╡п╟п╩п╟я│я▄.
 
-    *) Исправление: переменные $arg_... не работали с SSI-подзапросами.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫я▀п╣ $arg_... п╫п╣ я─п╟п╠п╬я┌п╟п╩п╦ я│ SSI-п©п╬п╢п╥п╟п©я─п╬я│п╟п╪п╦.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: nginx не собирался с библиотекой uclibc.
-       Спасибо Timothy Redaelli.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ я│ п╠п╦п╠п╩п╦п╬я┌п╣п╨п╬п╧ uclibc.
+       п║п©п╟я│п╦п╠п╬ Timothy Redaelli.
 
-    *) Исправление: nginx не собирался на OpenBSD; ошибка появилась 
-       в 0.7.46.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ OpenBSD; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄
+       п╡ 0.7.46.
 
 
-Изменения в nginx 0.7.47                                          01.04.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.47                                          01.04.2009
 
-    *) Исправление: nginx не собирался на FreeBSD 6 и более ранних версиях; 
-       ошибка появилась в 0.7.46.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ FreeBSD 6 п╦ п╠п╬п╩п╣п╣ я─п╟п╫п╫п╦я┘ п╡п╣я─я│п╦я▐я┘;
+       п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.46.
 
-    *) Исправление: nginx не собирался на MacOSX; ошибка появилась в 0.7.46.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ MacOSX; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.46.
 
-    *) Исправление: если использовался параметр max_size, то cache manager 
-       мог удалить весь кэш; ошибка появилась в 0.7.46.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩я│я▐ п©п╟я─п╟п╪п╣я┌я─ max_size, я┌п╬ cache manager
+       п╪п╬пЁ я┐п╢п╟п╩п╦я┌я▄ п╡п╣я│я▄ п╨я█я┬; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.46.
 
-    *) Изменение: в рабочем процессе мог произойти segmentation fault, если 
-       директивы proxy_cache/fastcgi_cache и proxy_cache_valid/ 
-       fastcgi_cache_valid не были заданы на одном уровне; ошибка появилась 
-       в 0.7.46.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault, п╣я│п╩п╦
+       п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_cache/fastcgi_cache п╦ proxy_cache_valid/
+       fastcgi_cache_valid п╫п╣ п╠я▀п╩п╦ п╥п╟п╢п╟п╫я▀ п╫п╟ п╬п╢п╫п╬п╪ я┐я─п╬п╡п╫п╣; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄
+       п╡ 0.7.46.
 
-    *) Исправление: в рабочем процессе мог произойти segmentation fault при 
-       перенаправлении запроса проксированному или FastCGI-серверу с 
-       помощью error_page или try_files; ошибка появилась в 0.7.44.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault п©я─п╦
+       п©п╣я─п╣п╫п╟п©я─п╟п╡п╩п╣п╫п╦п╦ п╥п╟п©я─п╬я│п╟ п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╫п╬п╪я┐ п╦п╩п╦ FastCGI-я│п╣я─п╡п╣я─я┐ я│ п©п╬п╪п╬я┴я▄я▌
+       error_page п╦п╩п╦ try_files; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.44.
 
 
-Изменения в nginx 0.7.46                                          30.03.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.46                                          30.03.2009
 
-    *) Исправление: архив предыдущего релиза был неверным.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╟я─я┘п╦п╡ п©я─п╣п╢я▀п╢я┐я┴п╣пЁп╬ я─п╣п╩п╦п╥п╟ п╠я▀п╩ п╫п╣п╡п╣я─п╫я▀п╪.
 
 
-Изменения в nginx 0.7.45                                          30.03.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.45                                          30.03.2009
 
-    *) Изменение: теперь директивы proxy_cache и proxy_cache_valid можно 
-       задавать на разных уровнях.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_cache п╦ proxy_cache_valid п╪п╬п╤п╫п╬
+       п╥п╟п╢п╟п╡п╟я┌я▄ п╫п╟ я─п╟п╥п╫я▀я┘ я┐я─п╬п╡п╫я▐я┘.
 
-    *) Изменение: параметр clean_time в директиве proxy_cache_path удалён.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ clean_time п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ proxy_cache_path я┐п╢п╟п╩я▒п╫.
 
-    *) Добавление: параметр max_size в директиве proxy_cache_path.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ max_size п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ proxy_cache_path.
 
-    *) Добавление: предварительная поддержка кэширования в модуле 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©я─п╣п╢п╡п╟я─п╦я┌п╣п╩я▄п╫п╟я▐ п©п╬п╢п╢п╣я─п╤п╨п╟ п╨я█я┬п╦я─п╬п╡п╟п╫п╦я▐ п╡ п╪п╬п╢я┐п╩п╣
        ngx_http_fastcgi_module.
 
-    *) Добавление: теперь при ошибках выделения в разделяемой памяти в логе 
-       указываются названия директивы и зоны.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п©я─п╦ п╬я┬п╦п╠п╨п╟я┘ п╡я▀п╢п╣п╩п╣п╫п╦я▐ п╡ я─п╟п╥п╢п╣п╩я▐п╣п╪п╬п╧ п©п╟п╪я▐я┌п╦ п╡ п╩п╬пЁп╣
+       я┐п╨п╟п╥я▀п╡п╟я▌я┌я│я▐ п╫п╟п╥п╡п╟п╫п╦я▐ п╢п╦я─п╣п╨я┌п╦п╡я▀ п╦ п╥п╬п╫я▀.
 
-    *) Исправление: директива "add_header last-modified ''" не удаляла в 
-       заголовке ответа строку "Last-Modified"; ошибка появилась в 0.7.44.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ "add_header last-modified ''" п╫п╣ я┐п╢п╟п╩я▐п╩п╟ п╡
+       п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╬я┌п╡п╣я┌п╟ я│я┌я─п╬п╨я┐ "Last-Modified"; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.44.
 
-    *) Исправление: в директиве auth_basic_user_file не работал 
-       относительный путь, заданный строкой без переменных; ошибка 
-       появилась в 0.7.44.
-       Спасибо Jerome Loyet.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ auth_basic_user_file п╫п╣ я─п╟п╠п╬я┌п╟п╩
+       п╬я┌п╫п╬я│п╦я┌п╣п╩я▄п╫я▀п╧ п©я┐я┌я▄, п╥п╟п╢п╟п╫п╫я▀п╧ я│я┌я─п╬п╨п╬п╧ п╠п╣п╥ п©п╣я─п╣п╪п╣п╫п╫я▀я┘; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄
+       п╡ 0.7.44.
+       п║п©п╟я│п╦п╠п╬ Jerome Loyet.
 
-    *) Исправление: в директиве alias, заданной переменными без ссылок на 
-       выделения в регулярных выражениях; ошибка появилась в 0.7.42.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ alias, п╥п╟п╢п╟п╫п╫п╬п╧ п©п╣я─п╣п╪п╣п╫п╫я▀п╪п╦ п╠п╣п╥ я│я│я▀п╩п╬п╨ п╫п╟
+       п╡я▀п╢п╣п╩п╣п╫п╦я▐ п╡ я─п╣пЁя┐п╩я▐я─п╫я▀я┘ п╡я▀я─п╟п╤п╣п╫п╦я▐я┘; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.42.
 
 
-Изменения в nginx 0.7.44                                          23.03.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.44                                          23.03.2009
 
-    *) Добавление: предварительная поддержка кэширования в модуле 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©я─п╣п╢п╡п╟я─п╦я┌п╣п╩я▄п╫п╟я▐ п©п╬п╢п╢п╣я─п╤п╨п╟ п╨я█я┬п╦я─п╬п╡п╟п╫п╦я▐ п╡ п╪п╬п╢я┐п╩п╣
        ngx_http_proxy_module.
 
-    *) Добавление: параметр --with-pcre в configure.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ --with-pcre п╡ configure.
 
-    *) Добавление: теперь директива try_files может быть использована на 
-       уровне server.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╢п╦я─п╣п╨я┌п╦п╡п╟ try_files п╪п╬п╤п╣я┌ п╠я▀я┌я▄ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╟ п╫п╟
+       я┐я─п╬п╡п╫п╣ server.
 
-    *) Исправление: директива try_files неправильно обрабатывала строку 
-       запроса в последнем параметре.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ try_files п╫п╣п©я─п╟п╡п╦п╩я▄п╫п╬ п╬п╠я─п╟п╠п╟я┌я▀п╡п╟п╩п╟ я│я┌я─п╬п╨я┐
+       п╥п╟п©я─п╬я│п╟ п╡ п©п╬я│п╩п╣п╢п╫п╣п╪ п©п╟я─п╟п╪п╣я┌я─п╣.
 
-    *) Исправление: директива try_files могла неверно тестировать каталоги.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ try_files п╪п╬пЁп╩п╟ п╫п╣п╡п╣я─п╫п╬ я┌п╣я│я┌п╦я─п╬п╡п╟я┌я▄ п╨п╟я┌п╟п╩п╬пЁп╦.
 
-    *) Исправление: если для пары адрес:порт описан только один сервер, то 
-       выделения в регулярных выражениях в директиве server_name не 
-       работали.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╢п╩я▐ п©п╟я─я▀ п╟п╢я─п╣я│:п©п╬я─я┌ п╬п©п╦я│п╟п╫ я┌п╬п╩я▄п╨п╬ п╬п╢п╦п╫ я│п╣я─п╡п╣я─, я┌п╬
+       п╡я▀п╢п╣п╩п╣п╫п╦я▐ п╡ я─п╣пЁя┐п╩я▐я─п╫я▀я┘ п╡я▀я─п╟п╤п╣п╫п╦я▐я┘ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ server_name п╫п╣
+       я─п╟п╠п╬я┌п╟п╩п╦.
 
 
-Изменения в nginx 0.7.43                                          18.03.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.43                                          18.03.2009
 
-    *) Исправление: запрос обрабатывался неверно, если директива root 
-       использовала переменные; ошибка появилась в 0.7.42.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╥п╟п©я─п╬я│ п╬п╠я─п╟п╠п╟я┌я▀п╡п╟п╩я│я▐ п╫п╣п╡п╣я─п╫п╬, п╣я│п╩п╦ п╢п╦я─п╣п╨я┌п╦п╡п╟ root
+       п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╟ п©п╣я─п╣п╪п╣п╫п╫я▀п╣; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.42.
 
-    *) Исправление: если сервер слушал на адресах типа "*", то значение 
-       переменной $server_addr было "0.0.0.0"; ошибка появилась в 0.7.36.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ я│п╣я─п╡п╣я─ я│п╩я┐я┬п╟п╩ п╫п╟ п╟п╢я─п╣я│п╟я┘ я┌п╦п©п╟ "*", я┌п╬ п╥п╫п╟я┤п╣п╫п╦п╣
+       п©п╣я─п╣п╪п╣п╫п╫п╬п╧ $server_addr п╠я▀п╩п╬ "0.0.0.0"; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.36.
 
 
-Изменения в nginx 0.7.42                                          16.03.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.42                                          16.03.2009
 
-    *) Изменение: ошибка "Invalid argument", возвращаемая 
-       setsockopt(TCP_NODELAY) на Solaris, теперь игнорируется.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╟ "Invalid argument", п╡п╬п╥п╡я─п╟я┴п╟п╣п╪п╟я▐
+       setsockopt(TCP_NODELAY) п╫п╟ Solaris, я┌п╣п©п╣я─я▄ п╦пЁп╫п╬я─п╦я─я┐п╣я┌я│я▐.
 
-    *) Изменение: при отсутствии файла, указанного в директиве 
-       auth_basic_user_file, теперь возвращается ошибка 403 вместо 500.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п©я─п╦ п╬я┌я│я┐я┌я│я┌п╡п╦п╦ я└п╟п╧п╩п╟, я┐п╨п╟п╥п╟п╫п╫п╬пЁп╬ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣
+       auth_basic_user_file, я┌п╣п©п╣я─я▄ п╡п╬п╥п╡я─п╟я┴п╟п╣я┌я│я▐ п╬я┬п╦п╠п╨п╟ 403 п╡п╪п╣я│я┌п╬ 500.
 
-    *) Добавление: директива auth_basic_user_file поддерживает переменные. 
-       Спасибо Кириллу Коринскому.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ auth_basic_user_file п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п©п╣я─п╣п╪п╣п╫п╫я▀п╣.
+       п║п©п╟я│п╦п╠п╬ п п╦я─п╦п╩п╩я┐ п п╬я─п╦п╫я│п╨п╬п╪я┐.
 
-    *) Добавление: директива listen поддерживает параметр ipv6only.
-       Спасибо Zhang Hua.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ listen п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п©п╟я─п╟п╪п╣я┌я─ ipv6only.
+       п║п©п╟я│п╦п╠п╬ Zhang Hua.
 
-    *) Исправление: в директиве alias со ссылками на выделения в регулярных 
-       выражениях; ошибка появилась в 0.7.40.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ alias я│п╬ я│я│я▀п╩п╨п╟п╪п╦ п╫п╟ п╡я▀п╢п╣п╩п╣п╫п╦я▐ п╡ я─п╣пЁя┐п╩я▐я─п╫я▀я┘
+       п╡я▀я─п╟п╤п╣п╫п╦я▐я┘; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.40.
 
-    *) Исправление: совместимость с Tru64 UNIX.
-       Спасибо Dustin Marquess.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я│п╬п╡п╪п╣я│я┌п╦п╪п╬я│я┌я▄ я│ Tru64 UNIX.
+       п║п©п╟я│п╦п╠п╬ Dustin Marquess.
 
-    *) Исправление: nginx не собирался без библиотеки PCRE; ошибка 
-       появилась в 0.7.41.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╠п╣п╥ п╠п╦п╠п╩п╦п╬я┌п╣п╨п╦ PCRE; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄
+       п╡ 0.7.41.
 
 
-Изменения в nginx 0.7.41                                          11.03.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.41                                          11.03.2009
 
-    *) Исправление: в рабочем процессе мог произойти segmentation fault, 
-       если в server_name или location были выделения в регулярных 
-       выражениях; ошибка появилась в 0.7.40.
-       Спасибо Владимиру Сопоту.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault,
+       п╣я│п╩п╦ п╡ server_name п╦п╩п╦ location п╠я▀п╩п╦ п╡я▀п╢п╣п╩п╣п╫п╦я▐ п╡ я─п╣пЁя┐п╩я▐я─п╫я▀я┘
+       п╡я▀я─п╟п╤п╣п╫п╦я▐я┘; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.40.
+       п║п©п╟я│п╦п╠п╬ п▓п╩п╟п╢п╦п╪п╦я─я┐ п║п╬п©п╬я┌я┐.
 
 
-Изменения в nginx 0.7.40                                          09.03.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.40                                          09.03.2009
 
-    *) Добавление: директива location поддерживает выделения в регулярных 
-       выражениях.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ location п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╡я▀п╢п╣п╩п╣п╫п╦я▐ п╡ я─п╣пЁя┐п╩я▐я─п╫я▀я┘
+       п╡я▀я─п╟п╤п╣п╫п╦я▐я┘.
 
-    *) Добавление: директиву alias с ссылками на выделения в регулярных 
-       выражениях можно использовать внутри location'а, заданного 
-       регулярным выражением с выделениями.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я┐ alias я│ я│я│я▀п╩п╨п╟п╪п╦ п╫п╟ п╡я▀п╢п╣п╩п╣п╫п╦я▐ п╡ я─п╣пЁя┐п╩я▐я─п╫я▀я┘
+       п╡я▀я─п╟п╤п╣п╫п╦я▐я┘ п╪п╬п╤п╫п╬ п╦я│п©п╬п╩я▄п╥п╬п╡п╟я┌я▄ п╡п╫я┐я┌я─п╦ location'п╟, п╥п╟п╢п╟п╫п╫п╬пЁп╬ я─п╣пЁя┐п╩я▐я─п╫я▀п╪
+       п╡я▀я─п╟п╤п╣п╫п╦п╣п╪ я│ п╡я▀п╢п╣п╩п╣п╫п╦я▐п╪п╦.
 
-    *) Добавление: директива server_name поддерживает выделения в 
-       регулярных выражениях.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ server_name п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╡я▀п╢п╣п╩п╣п╫п╦я▐ п╡ я─п╣пЁя┐п╩я▐я─п╫я▀я┘
+       п╡я▀я─п╟п╤п╣п╫п╦я▐я┘.
 
-    *) Изменение: модуль ngx_http_autoindex_module не показывал последний 
-       слэш для каталогов на файловой системе XFS; ошибка появилась в 
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_autoindex_module п╫п╣ п©п╬п╨п╟п╥я▀п╡п╟п╩ п©п╬я│п╩п╣п╢п╫п╦п╧
+       я│п╩я█я┬ п╢п╩я▐ п╨п╟я┌п╟п╩п╬пЁп╬п╡ п╫п╟ я└п╟п╧п╩п╬п╡п╬п╧ я│п╦я│я┌п╣п╪п╣ XFS; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
        0.7.15.
-       Спасибо Дмитрию Кузьменко.
+       п║п©п╟я│п╦п╠п╬ п■п╪п╦я┌я─п╦я▌ п я┐п╥я▄п╪п╣п╫п╨п╬.
 
 
-Изменения в nginx 0.7.39                                          02.03.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.39                                          02.03.2009
 
-    *) Исправление: при включённом сжатии большие ответы с использованием 
-       SSI могли зависать; ошибка появилась в 0.7.28.
-       Спасибо Артёму Бохану.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╡п╨п╩я▌я┤я▒п╫п╫п╬п╪ я│п╤п╟я┌п╦п╦ п╠п╬п╩я▄я┬п╦п╣ п╬я┌п╡п╣я┌я▀ я│ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╣п╪
+       SSI п╪п╬пЁп╩п╦ п╥п╟п╡п╦я│п╟я┌я▄; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.28.
+       п║п©п╟я│п╦п╠п╬ п░я─я┌я▒п╪я┐ п▒п╬я┘п╟п╫я┐.
 
-    *) Исправление: при использовании коротких статических вариантов в 
-       директиве try_files в рабочем процессе мог произойти segmentation 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╨п╬я─п╬я┌п╨п╦я┘ я│я┌п╟я┌п╦я┤п╣я│п╨п╦я┘ п╡п╟я─п╦п╟п╫я┌п╬п╡ п╡
+       п╢п╦я─п╣п╨я┌п╦п╡п╣ try_files п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation
        fault.
 
 
-Изменения в nginx 0.7.38                                          23.02.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.38                                          23.02.2009
 
-    *) Добавление: логгирование ошибок аутентификации.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╩п╬пЁпЁп╦я─п╬п╡п╟п╫п╦п╣ п╬я┬п╦п╠п╬п╨ п╟я┐я┌п╣п╫я┌п╦я└п╦п╨п╟я├п╦п╦.
 
-    *) Исправление: имя/пароль, заданные в auth_basic_user_file, 
-       игнорировались после нечётного числа пустых строк.
-       Спасибо Александру Загребину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╦п╪я▐/п©п╟я─п╬п╩я▄, п╥п╟п╢п╟п╫п╫я▀п╣ п╡ auth_basic_user_file,
+       п╦пЁп╫п╬я─п╦я─п╬п╡п╟п╩п╦я│я▄ п©п╬я│п╩п╣ п╫п╣я┤я▒я┌п╫п╬пЁп╬ я┤п╦я│п╩п╟ п©я┐я│я┌я▀я┘ я│я┌я─п╬п╨.
+       п║п©п╟я│п╦п╠п╬ п░п╩п╣п╨я│п╟п╫п╢я─я┐ п≈п╟пЁя─п╣п╠п╦п╫я┐.
 
-    *) Исправление: при использовании длинного пути в unix domain сокете в 
-       главном процессе происходил segmentation fault; ошибка появилась в 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╢п╩п╦п╫п╫п╬пЁп╬ п©я┐я┌п╦ п╡ unix domain я│п╬п╨п╣я┌п╣ п╡
+       пЁп╩п╟п╡п╫п╬п╪ п©я─п╬я├п╣я│я│п╣ п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
        0.7.36.
 
 
-Изменения в nginx 0.7.37                                          21.02.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.37                                          21.02.2009
 
-    *) Исправление: директивы, использующие upstream'ы, не работали; ошибка 
-       появилась в 0.7.36.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀, п╦я│п©п╬п╩я▄п╥я┐я▌я┴п╦п╣ upstream'я▀, п╫п╣ я─п╟п╠п╬я┌п╟п╩п╦; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.36.
 
 
-Изменения в nginx 0.7.36                                          21.02.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.36                                          21.02.2009
 
-    *) Добавление: предварительная поддержка IPv6; директива listen модуля 
-       HTTP поддерживает IPv6.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©я─п╣п╢п╡п╟я─п╦я┌п╣п╩я▄п╫п╟я▐ п©п╬п╢п╢п╣я─п╤п╨п╟ IPv6; п╢п╦я─п╣п╨я┌п╦п╡п╟ listen п╪п╬п╢я┐п╩я▐
+       HTTP п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ IPv6.
 
-    *) Исправление: переменная $ancient_browser не работала для браузеров, 
-       заданных директивами modern_browser.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $ancient_browser п╫п╣ я─п╟п╠п╬я┌п╟п╩п╟ п╢п╩я▐ п╠я─п╟я┐п╥п╣я─п╬п╡,
+       п╥п╟п╢п╟п╫п╫я▀я┘ п╢п╦я─п╣п╨я┌п╦п╡п╟п╪п╦ modern_browser.
 
 
-Изменения в nginx 0.7.35                                          16.02.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.35                                          16.02.2009
 
-    *) Исправление: директива ssl_engine не использовала SSL-акселератор 
-       для асимметричных шифров.
-       Спасибо Marcin Gozdalik.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ ssl_engine п╫п╣ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╟ SSL-п╟п╨я│п╣п╩п╣я─п╟я┌п╬я─ п╢п╩я▐
+       п╟я│п╦п╪п╪п╣я┌я─п╦я┤п╫я▀я┘ я┬п╦я└я─п╬п╡.
+       п║п©п╟я│п╦п╠п╬ Marcin Gozdalik.
 
-    *) Исправление: директива try_files выставляла MIME-type, исходя из 
-       расширения первоначального запроса.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ try_files п╡я▀я│я┌п╟п╡п╩я▐п╩п╟ MIME-type, п╦я│я┘п╬п╢я▐ п╦п╥
+       я─п╟я│я┬п╦я─п╣п╫п╦я▐ п©п╣я─п╡п╬п╫п╟я┤п╟п╩я▄п╫п╬пЁп╬ п╥п╟п©я─п╬я│п╟.
 
-    *) Исправление: в директивах server_name, valid_referers и map 
-       неправильно обрабатывались имена вида "*domain.tld", если 
-       использовались маски вида ".domain.tld" и ".subdomain.domain.tld"; 
-       ошибка появилась в 0.7.9.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╢п╦я─п╣п╨я┌п╦п╡п╟я┘ server_name, valid_referers п╦ map
+       п╫п╣п©я─п╟п╡п╦п╩я▄п╫п╬ п╬п╠я─п╟п╠п╟я┌я▀п╡п╟п╩п╦я│я▄ п╦п╪п╣п╫п╟ п╡п╦п╢п╟ "*domain.tld", п╣я│п╩п╦
+       п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╦я│я▄ п╪п╟я│п╨п╦ п╡п╦п╢п╟ ".domain.tld" п╦ ".subdomain.domain.tld";
+       п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.9.
 
 
-Изменения в nginx 0.7.34                                          10.02.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.34                                          10.02.2009
 
-    *) Добавление: параметр off в директиве if_modified_since.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ off п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ if_modified_since.
 
-    *) Добавление: теперь после команды XCLIENT nginx посылает команду 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п©п╬я│п╩п╣ п╨п╬п╪п╟п╫п╢я▀ XCLIENT nginx п©п╬я│я▀п╩п╟п╣я┌ п╨п╬п╪п╟п╫п╢я┐
        HELO/EHLO.
-       Спасибо Максиму Дунину.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Добавление: поддержка Microsoft-специфичного режима 
-       "AUTH LOGIN with User Name" в почтовом прокси-сервере.
-       Спасибо Максиму Дунину.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╬п╢п╢п╣я─п╤п╨п╟ Microsoft-я│п©п╣я├п╦я└п╦я┤п╫п╬пЁп╬ я─п╣п╤п╦п╪п╟
+       "AUTH LOGIN with User Name" п╡ п©п╬я┤я┌п╬п╡п╬п╪ п©я─п╬п╨я│п╦-я│п╣я─п╡п╣я─п╣.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: в директиве rewrite, возвращающей редирект, старые 
-       аргументы присоединялись к новым через символ "?" вместо "&";
-       ошибка появилась в 0.1.18.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ rewrite, п╡п╬п╥п╡я─п╟я┴п╟я▌я┴п╣п╧ я─п╣п╢п╦я─п╣п╨я┌, я│я┌п╟я─я▀п╣
+       п╟я─пЁя┐п╪п╣п╫я┌я▀ п©я─п╦я│п╬п╣п╢п╦п╫я▐п╩п╦я│я▄ п╨ п╫п╬п╡я▀п╪ я┤п╣я─п╣п╥ я│п╦п╪п╡п╬п╩ "?" п╡п╪п╣я│я┌п╬ "&";
+       п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.1.18.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: nginx не собирался на AIX.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ AIX.
 
 
-Изменения в nginx 0.7.33                                          02.02.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.33                                          02.02.2009
 
-    *) Исправление: если на запрос с телом возвращался редирект, то ответ 
-       мог быть двойным при использовании методов epoll или rtsig.
-       Спасибо Eden Li.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╫п╟ п╥п╟п©я─п╬я│ я│ я┌п╣п╩п╬п╪ п╡п╬п╥п╡я─п╟я┴п╟п╩я│я▐ я─п╣п╢п╦я─п╣п╨я┌, я┌п╬ п╬я┌п╡п╣я┌
+       п╪п╬пЁ п╠я▀я┌я▄ п╢п╡п╬п╧п╫я▀п╪ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╪п╣я┌п╬п╢п╬п╡ epoll п╦п╩п╦ rtsig.
+       п║п©п╟я│п╦п╠п╬ Eden Li.
 
-    *) Исправление: для некоторых типов редиректов в переменной 
-       $sent_http_location было пустое значение.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╩я▐ п╫п╣п╨п╬я┌п╬я─я▀я┘ я┌п╦п©п╬п╡ я─п╣п╢п╦я─п╣п╨я┌п╬п╡ п╡ п©п╣я─п╣п╪п╣п╫п╫п╬п╧
+       $sent_http_location п╠я▀п╩п╬ п©я┐я│я┌п╬п╣ п╥п╫п╟я┤п╣п╫п╦п╣.
 
-    *) Исправление: при использовании директивы resolver в SMTP 
-       прокси-сервере в рабочем процессе мог произойти segmentation fault.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀ resolver п╡ SMTP
+       п©я─п╬п╨я│п╦-я│п╣я─п╡п╣я─п╣ п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault.
 
 
-Изменения в nginx 0.7.32                                          26.01.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.32                                          26.01.2009
 
-    *) Добавление: теперь в директиве try_files можно явно указать проверку 
-       каталога.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ try_files п╪п╬п╤п╫п╬ я▐п╡п╫п╬ я┐п╨п╟п╥п╟я┌я▄ п©я─п╬п╡п╣я─п╨я┐
+       п╨п╟я┌п╟п╩п╬пЁп╟.
 
-    *) Исправление: fastcgi_store не всегда сохранял файлы.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: fastcgi_store п╫п╣ п╡я│п╣пЁп╢п╟ я│п╬я┘я─п╟п╫я▐п╩ я└п╟п╧п╩я▀.
 
-    *) Исправление: в гео-диапазонах.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ пЁп╣п╬-п╢п╦п╟п©п╟п╥п╬п╫п╟я┘.
 
-    *) Исправление: ошибки выделения больших блоков в разделяемой памяти, 
-       если nginx был собран без отладки.
-       Спасибо Андрею Квасову.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ п╡я▀п╢п╣п╩п╣п╫п╦я▐ п╠п╬п╩я▄я┬п╦я┘ п╠п╩п╬п╨п╬п╡ п╡ я─п╟п╥п╢п╣п╩я▐п╣п╪п╬п╧ п©п╟п╪я▐я┌п╦,
+       п╣я│п╩п╦ nginx п╠я▀п╩ я│п╬п╠я─п╟п╫ п╠п╣п╥ п╬я┌п╩п╟п╢п╨п╦.
+       п║п©п╟я│п╦п╠п╬ п░п╫п╢я─п╣я▌ п п╡п╟я│п╬п╡я┐.
 
 
-Изменения в nginx 0.7.31                                          19.01.2009
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.31                                          19.01.2009
 
-    *) Изменение: теперь директива try_files проверяет только файлы, 
-       игнорируя каталоги.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╢п╦я─п╣п╨я┌п╦п╡п╟ try_files п©я─п╬п╡п╣я─я▐п╣я┌ я┌п╬п╩я▄п╨п╬ я└п╟п╧п╩я▀,
+       п╦пЁп╫п╬я─п╦я─я┐я▐ п╨п╟я┌п╟п╩п╬пЁп╦.
 
-    *) Добавление: директива fastcgi_split_path_info.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ fastcgi_split_path_info.
 
-    *) Исправления в поддержке строки "Expect" в заголовке запроса.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦я▐ п╡ п©п╬п╢п╢п╣я─п╤п╨п╣ я│я┌я─п╬п╨п╦ "Expect" п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╥п╟п©я─п╬я│п╟.
 
-    *) Исправления в гео-диапазонах.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦я▐ п╡ пЁп╣п╬-п╢п╦п╟п©п╟п╥п╬п╫п╟я┘.
 
-    *) Исправление: при отсутствии ответа ngx_http_memcached_module 
-       возвращал в теле ответа строку "END" вместо 404-ой страницы по 
-       умолчанию; ошибка появилась в 0.7.18.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╬я┌я│я┐я┌я│я┌п╡п╦п╦ п╬я┌п╡п╣я┌п╟ ngx_http_memcached_module
+       п╡п╬п╥п╡я─п╟я┴п╟п╩ п╡ я┌п╣п╩п╣ п╬я┌п╡п╣я┌п╟ я│я┌я─п╬п╨я┐ "END" п╡п╪п╣я│я┌п╬ 404-п╬п╧ я│я┌я─п╟п╫п╦я├я▀ п©п╬
+       я┐п╪п╬п╩я┤п╟п╫п╦я▌; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.18.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: при проксировании SMPT nginx выдавал сообщение 
-       "250 2.0.0 OK" вместо "235 2.0.0 OK"; ошибка появилась в 0.7.22.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╦п╦ SMPT nginx п╡я▀п╢п╟п╡п╟п╩ я│п╬п╬п╠я┴п╣п╫п╦п╣
+       "250 2.0.0 OK" п╡п╪п╣я│я┌п╬ "235 2.0.0 OK"; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.22.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
 
-Изменения в nginx 0.7.30                                          24.12.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.30                                          24.12.2008
 
-    *) Исправление: в рабочем процессе происходил segmentation fault, если 
-       в директивах fastcgi_pass или proxy_pass использовались переменные и 
-       имя хоста должно было резолвиться; ошибка появилась в 0.7.29.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault, п╣я│п╩п╦ п╡
+       п╢п╦я─п╣п╨я┌п╦п╡п╟я┘ fastcgi_pass п╦п╩п╦ proxy_pass п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╦я│я▄ п©п╣я─п╣п╪п╣п╫п╫я▀п╣ п╦
+       п╦п╪я▐ я┘п╬я│я┌п╟ п╢п╬п╩п╤п╫п╬ п╠я▀п╩п╬ я─п╣п╥п╬п╩п╡п╦я┌я▄я│я▐; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.29.
 
 
-Изменения в nginx 0.7.29                                          24.12.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.29                                          24.12.2008
 
-    *) Исправление: директивы fastcgi_pass и proxy_pass не поддерживали 
-       переменные при использовании unix domain сокетов.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ fastcgi_pass п╦ proxy_pass п╫п╣ п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╩п╦
+       п©п╣я─п╣п╪п╣п╫п╫я▀п╣ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ unix domain я│п╬п╨п╣я┌п╬п╡.
 
-    *) Исправления в обработке подзапросов; ошибки появились в 0.7.25.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦я▐ п╡ п╬п╠я─п╟п╠п╬я┌п╨п╣ п©п╬п╢п╥п╟п©я─п╬я│п╬п╡; п╬я┬п╦п╠п╨п╦ п©п╬я▐п╡п╦п╩п╦я│я▄ п╡ 0.7.25.
 
-    *) Исправление: ответ "100 Continue" выдавался для запросов версии 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┌п╡п╣я┌ "100 Continue" п╡я▀п╢п╟п╡п╟п╩я│я▐ п╢п╩я▐ п╥п╟п©я─п╬я│п╬п╡ п╡п╣я─я│п╦п╦
        HTTP/1.0;
-       Спасибо Максиму Дунину.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: в выделении памяти в модуле ngx_http_gzip_filter_module 
-       под Cygwin.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╡я▀п╢п╣п╩п╣п╫п╦п╦ п©п╟п╪я▐я┌п╦ п╡ п╪п╬п╢я┐п╩п╣ ngx_http_gzip_filter_module
+       п©п╬п╢ Cygwin.
 
 
-Изменения в nginx 0.7.28                                          22.12.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.28                                          22.12.2008
 
-    *) Изменение: в выделении памяти в модуле ngx_http_gzip_filter_module.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╡ п╡я▀п╢п╣п╩п╣п╫п╦п╦ п©п╟п╪я▐я┌п╦ п╡ п╪п╬п╢я┐п╩п╣ ngx_http_gzip_filter_module.
 
-    *) Изменение: значения по умолчанию для директивы gzip_buffers изменены 
-       с 4 4k/8k на 32 4k или 16 8k.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╥п╫п╟я┤п╣п╫п╦я▐ п©п╬ я┐п╪п╬п╩я┤п╟п╫п╦я▌ п╢п╩я▐ п╢п╦я─п╣п╨я┌п╦п╡я▀ gzip_buffers п╦п╥п╪п╣п╫п╣п╫я▀
+       я│ 4 4k/8k п╫п╟ 32 4k п╦п╩п╦ 16 8k.
 
 
-Изменения в nginx 0.7.27                                          15.12.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.27                                          15.12.2008
 
-    *) Добавление: директива try_files.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ try_files.
 
-    *) Добавление: директива fastcgi_pass поддерживает переменные.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ fastcgi_pass п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п©п╣я─п╣п╪п╣п╫п╫я▀п╣.
 
-    *) Добавление: теперь директива geo может брать адрес из переменной.
-       Спасибо Андрею Нигматулину.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╢п╦я─п╣п╨я┌п╦п╡п╟ geo п╪п╬п╤п╣я┌ п╠я─п╟я┌я▄ п╟п╢я─п╣я│ п╦п╥ п©п╣я─п╣п╪п╣п╫п╫п╬п╧.
+       п║п©п╟я│п╦п╠п╬ п░п╫п╢я─п╣я▌ п²п╦пЁп╪п╟я┌я┐п╩п╦п╫я┐.
 
-    *) Добавление: теперь модификатор location'а можно указывать без 
-       пробела перед названием.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╪п╬п╢п╦я└п╦п╨п╟я┌п╬я─ location'п╟ п╪п╬п╤п╫п╬ я┐п╨п╟п╥я▀п╡п╟я┌я▄ п╠п╣п╥ п©я─п╬п╠п╣п╩п╟
+       п©п╣я─п╣п╢ п╫п╟п╥п╡п╟п╫п╦п╣п╪.
 
-    *) Добавление: переменная $upstream_response_length.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $upstream_response_length.
 
-    *) Исправление: теперь директива add_header не добавляет пустое 
-       значение.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╢п╦я─п╣п╨я┌п╦п╡п╟ add_header п╫п╣ п╢п╬п╠п╟п╡п╩я▐п╣я┌ п©я┐я│я┌п╬п╣
+       п╥п╫п╟я┤п╣п╫п╦п╣.
 
-    *) Исправление: при запросе файла нулевой длины nginx закрывал 
-       соединение, ничего не передав; ошибка появилась в 0.7.25.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╥п╟п©я─п╬я│п╣ я└п╟п╧п╩п╟ п╫я┐п╩п╣п╡п╬п╧ п╢п╩п╦п╫я▀ nginx п╥п╟п╨я─я▀п╡п╟п╩
+       я│п╬п╣п╢п╦п╫п╣п╫п╦п╣, п╫п╦я┤п╣пЁп╬ п╫п╣ п©п╣я─п╣п╢п╟п╡; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.25.
 
-    *) Исправление: метод MOVE не мог перемещать файл в несуществующий 
-       каталог.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╣я┌п╬п╢ MOVE п╫п╣ п╪п╬пЁ п©п╣я─п╣п╪п╣я┴п╟я┌я▄ я└п╟п╧п╩ п╡ п╫п╣я│я┐я┴п╣я│я┌п╡я┐я▌я┴п╦п╧
+       п╨п╟я┌п╟п╩п╬пЁ.
 
-    *) Исправление: если в сервере не был описан ни один именованный 
-       location, но такой location использовался в директиве error_page, то 
-       в рабочем процессе происходил segmentation fault.
-       Спасибо Сергею Боченкову.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡ я│п╣я─п╡п╣я─п╣ п╫п╣ п╠я▀п╩ п╬п©п╦я│п╟п╫ п╫п╦ п╬п╢п╦п╫ п╦п╪п╣п╫п╬п╡п╟п╫п╫я▀п╧
+       location, п╫п╬ я┌п╟п╨п╬п╧ location п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩я│я▐ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ error_page, я┌п╬
+       п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault.
+       п║п©п╟я│п╦п╠п╬ п║п╣я─пЁп╣я▌ п▒п╬я┤п╣п╫п╨п╬п╡я┐.
 
 
-Изменения в nginx 0.7.26                                          08.12.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.26                                          08.12.2008
 
-    *) Исправление: в обработке подзапросов; ошибка появилась в 0.7.25.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╬п╠я─п╟п╠п╬я┌п╨п╣ п©п╬п╢п╥п╟п©я─п╬я│п╬п╡; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.25.
 
 
-Изменения в nginx 0.7.25                                          08.12.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.25                                          08.12.2008
 
-    *) Изменение: в обработке подзапросов.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╡ п╬п╠я─п╟п╠п╬я┌п╨п╣ п©п╬п╢п╥п╟п©я─п╬я│п╬п╡.
 
-    *) Изменение: теперь разрешаются POST'ы без строки "Content-Length" в 
-       заголовке запроса.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ я─п╟п╥я─п╣я┬п╟я▌я┌я│я▐ POST'я▀ п╠п╣п╥ я│я┌я─п╬п╨п╦ "Content-Length" п╡
+       п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╥п╟п©я─п╬я│п╟.
 
-    *) Исправление: теперь директивы limit_req и limit_conn указывают 
-       причину запрета запроса.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╢п╦я─п╣п╨я┌п╦п╡я▀ limit_req п╦ limit_conn я┐п╨п╟п╥я▀п╡п╟я▌я┌
+       п©я─п╦я┤п╦п╫я┐ п╥п╟п©я─п╣я┌п╟ п╥п╟п©я─п╬я│п╟.
 
-    *) Исправление: в параметре delete директивы geo.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п©п╟я─п╟п╪п╣я┌я─п╣ delete п╢п╦я─п╣п╨я┌п╦п╡я▀ geo.
 
 
-Изменения в nginx 0.7.24                                          01.12.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.24                                          01.12.2008
 
-    *) Добавление: директива if_modified_since.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ if_modified_since.
 
-    *) Исправление: nginx не обрабатывал ответ FastCGI-сервера, если перед 
-       ответом сервер передавал много сообщений в stderr.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ п╬п╠я─п╟п╠п╟я┌я▀п╡п╟п╩ п╬я┌п╡п╣я┌ FastCGI-я│п╣я─п╡п╣я─п╟, п╣я│п╩п╦ п©п╣я─п╣п╢
+       п╬я┌п╡п╣я┌п╬п╪ я│п╣я─п╡п╣я─ п©п╣я─п╣п╢п╟п╡п╟п╩ п╪п╫п╬пЁп╬ я│п╬п╬п╠я┴п╣п╫п╦п╧ п╡ stderr.
 
-    *) Исправление: переменные "$cookie_..." не работали в SSI and в 
-       перловом модуле.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫я▀п╣ "$cookie_..." п╫п╣ я─п╟п╠п╬я┌п╟п╩п╦ п╡ SSI and п╡
+       п©п╣я─п╩п╬п╡п╬п╪ п╪п╬п╢я┐п╩п╣.
 
 
-Изменения в nginx 0.7.23                                          27.11.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.23                                          27.11.2008
 
-    *) Добавление: параметры delete и ranges в директиве geo.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─я▀ delete п╦ ranges п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ geo.
 
-    *) Добавление: ускорение загрузки geo-базы с большим числом значений.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┐я│п╨п╬я─п╣п╫п╦п╣ п╥п╟пЁя─я┐п╥п╨п╦ geo-п╠п╟п╥я▀ я│ п╠п╬п╩я▄я┬п╦п╪ я┤п╦я│п╩п╬п╪ п╥п╫п╟я┤п╣п╫п╦п╧.
 
-    *) Добавление: уменьшение памяти, необходимой для загрузки geo-базы.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┐п╪п╣п╫я▄я┬п╣п╫п╦п╣ п©п╟п╪я▐я┌п╦, п╫п╣п╬п╠я┘п╬п╢п╦п╪п╬п╧ п╢п╩я▐ п╥п╟пЁя─я┐п╥п╨п╦ geo-п╠п╟п╥я▀.
 
 
-Изменения в nginx 0.7.22                                          20.11.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.22                                          20.11.2008
 
-    *) Добавление: параметр none в директиве smtp_auth.
-       Спасибо Максиму Дунину.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ none п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ smtp_auth.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Добавление: переменные "$cookie_...".
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫я▀п╣ "$cookie_...".
 
-    *) Исправление: директива directio не работала с файловой системой XFS.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ directio п╫п╣ я─п╟п╠п╬я┌п╟п╩п╟ я│ я└п╟п╧п╩п╬п╡п╬п╧ я│п╦я│я┌п╣п╪п╬п╧ XFS.
 
-    *) Исправление: resolver не понимал большие DNS-ответы.
-       Спасибо Zyb.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: resolver п╫п╣ п©п╬п╫п╦п╪п╟п╩ п╠п╬п╩я▄я┬п╦п╣ DNS-п╬я┌п╡п╣я┌я▀.
+       п║п©п╟я│п╦п╠п╬ Zyb.
 
 
-Изменения в nginx 0.7.21                                          11.11.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.21                                          11.11.2008
 
-    *) Изменения в модуле ngx_http_limit_req_module.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ п╪п╬п╢я┐п╩п╣ ngx_http_limit_req_module.
 
-    *) Добавление: поддержка EXSLT в модуле ngx_http_xslt_module.
-       Спасибо Денису Латыпову.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╬п╢п╢п╣я─п╤п╨п╟ EXSLT п╡ п╪п╬п╢я┐п╩п╣ ngx_http_xslt_module.
+       п║п©п╟я│п╦п╠п╬ п■п╣п╫п╦я│я┐ п⌡п╟я┌я▀п©п╬п╡я┐.
 
-    *) Изменение: совместимость с glibc 2.3.
-       Спасибо Eric Benson и Максиму Дунину.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я│п╬п╡п╪п╣я│я┌п╦п╪п╬я│я┌я▄ я│ glibc 2.3.
+       п║п©п╟я│п╦п╠п╬ Eric Benson п╦ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: nginx не запускался на MacOSX 10.4 и более ранних; 
-       ошибка появилась в 0.7.6.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ п╥п╟п©я┐я│п╨п╟п╩я│я▐ п╫п╟ MacOSX 10.4 п╦ п╠п╬п╩п╣п╣ я─п╟п╫п╫п╦я┘;
+       п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.6.
 
 
-Изменения в nginx 0.7.20                                          10.11.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.20                                          10.11.2008
 
-    *) Изменения в модуле ngx_http_gzip_filter_module.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ п╪п╬п╢я┐п╩п╣ ngx_http_gzip_filter_module.
 
-    *) Добавление: модуль ngx_http_limit_req_module.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_limit_req_module.
 
-    *) Исправление: на платформах sparc и ppc рабочие процессы могли 
-       выходить по сигналу SIGBUS; ошибка появилась в 0.7.3.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╫п╟ п©п╩п╟я┌я└п╬я─п╪п╟я┘ sparc п╦ ppc я─п╟п╠п╬я┤п╦п╣ п©я─п╬я├п╣я│я│я▀ п╪п╬пЁп╩п╦
+       п╡я▀я┘п╬п╢п╦я┌я▄ п©п╬ я│п╦пЁп╫п╟п╩я┐ SIGBUS; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.3.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: директивы вида "proxy_pass http://host/some:uri" не 
-       работали; ошибка появилась в 0.7.12.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ п╡п╦п╢п╟ "proxy_pass http://host/some:uri" п╫п╣
+       я─п╟п╠п╬я┌п╟п╩п╦; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.12.
 
-    *) Исправление: при использовании HTTPS запросы могли завершаться с 
-       ошибкой "bad write retry".
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ HTTPS п╥п╟п©я─п╬я│я▀ п╪п╬пЁп╩п╦ п╥п╟п╡п╣я─я┬п╟я┌я▄я│я▐ я│
+       п╬я┬п╦п╠п╨п╬п╧ "bad write retry".
 
-    *) Исправление: модуль ngx_http_secure_link_module не работал внутри 
-       location'ов с именами меньше 3 символов.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_secure_link_module п╫п╣ я─п╟п╠п╬я┌п╟п╩ п╡п╫я┐я┌я─п╦
+       location'п╬п╡ я│ п╦п╪п╣п╫п╟п╪п╦ п╪п╣п╫я▄я┬п╣ 3 я│п╦п╪п╡п╬п╩п╬п╡.
 
-    *) Исправление: переменная $server_addr могла не иметь значения.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $server_addr п╪п╬пЁп╩п╟ п╫п╣ п╦п╪п╣я┌я▄ п╥п╫п╟я┤п╣п╫п╦я▐.
 
 
-Изменения в nginx 0.7.19                                          13.10.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.19                                          13.10.2008
 
-    *) Исправление: обновление номера версии.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬п╠п╫п╬п╡п╩п╣п╫п╦п╣ п╫п╬п╪п╣я─п╟ п╡п╣я─я│п╦п╦.
 
 
-Изменения в nginx 0.7.18                                          13.10.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.18                                          13.10.2008
 
-    *) Изменение: директива underscores_in_headers; теперь nginx по 
-       умолчанию не разрешает подчёркивания в именах строк в заголовке 
-       запроса клиента.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ underscores_in_headers; я┌п╣п©п╣я─я▄ nginx п©п╬
+       я┐п╪п╬п╩я┤п╟п╫п╦я▌ п╫п╣ я─п╟п╥я─п╣я┬п╟п╣я┌ п©п╬п╢я┤я▒я─п╨п╦п╡п╟п╫п╦я▐ п╡ п╦п╪п╣п╫п╟я┘ я│я┌я─п╬п╨ п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣
+       п╥п╟п©я─п╬я│п╟ п╨п╩п╦п╣п╫я┌п╟.
 
-    *) Добавление: модуль ngx_http_secure_link_module.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_secure_link_module.
 
-    *) Добавление: директива real_ip_header поддерживает любой заголовок.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ real_ip_header п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╩я▌п╠п╬п╧ п╥п╟пЁп╬п╩п╬п╡п╬п╨.
 
-    *) Добавление: директива log_subrequest.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ log_subrequest.
 
-    *) Добавление: переменная $realpath_root.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $realpath_root.
 
-    *) Добавление: параметры http_502 и http_504 в директиве 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─я▀ http_502 п╦ http_504 п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣
        proxy_next_upstream.
 
-    *) Исправление: параметр http_503 в директивах proxy_next_upstream или 
-       fastcgi_next_upstream не работал.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ http_503 п╡ п╢п╦я─п╣п╨я┌п╦п╡п╟я┘ proxy_next_upstream п╦п╩п╦
+       fastcgi_next_upstream п╫п╣ я─п╟п╠п╬я┌п╟п╩.
 
-    *) Исправление: nginx мог выдавать строку "Transfer-Encoding: chunked" 
-       для запросов HEAD.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╪п╬пЁ п╡я▀п╢п╟п╡п╟я┌я▄ я│я┌я─п╬п╨я┐ "Transfer-Encoding: chunked"
+       п╢п╩я▐ п╥п╟п©я─п╬я│п╬п╡ HEAD.
 
-    *) Исправление: теперь accept-лимит зависит от числа worker_connections.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ accept-п╩п╦п╪п╦я┌ п╥п╟п╡п╦я│п╦я┌ п╬я┌ я┤п╦я│п╩п╟ worker_connections.
 
 
-Изменения в nginx 0.7.17                                          15.09.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.17                                          15.09.2008
 
-    *) Добавление: директива directio теперь работает на Linux.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ directio я┌п╣п©п╣я─я▄ я─п╟п╠п╬я┌п╟п╣я┌ п╫п╟ Linux.
 
-    *) Добавление: переменная $pid.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $pid.
 
-    *) Исправление: оптимизация directio, появившаяся в 0.7.15, не работала 
-       при использовании open_file_cache.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬п©я┌п╦п╪п╦п╥п╟я├п╦я▐ directio, п©п╬я▐п╡п╦п╡я┬п╟я▐я│я▐ п╡ 0.7.15, п╫п╣ я─п╟п╠п╬я┌п╟п╩п╟
+       п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ open_file_cache.
 
-    *) Исправление: access_log с переменными не работал на Linux; ошибка 
-       появилась в 0.7.7.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: access_log я│ п©п╣я─п╣п╪п╣п╫п╫я▀п╪п╦ п╫п╣ я─п╟п╠п╬я┌п╟п╩ п╫п╟ Linux; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.7.
 
-    *) Исправление: модуль ngx_http_charset_module не понимал название 
-       кодировки в кавычках, полученное от бэкенда.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_charset_module п╫п╣ п©п╬п╫п╦п╪п╟п╩ п╫п╟п╥п╡п╟п╫п╦п╣
+       п╨п╬п╢п╦я─п╬п╡п╨п╦ п╡ п╨п╟п╡я▀я┤п╨п╟я┘, п©п╬п╩я┐я┤п╣п╫п╫п╬п╣ п╬я┌ п╠я█п╨п╣п╫п╢п╟.
 
 
-Изменения в nginx 0.7.16                                          08.09.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.16                                          08.09.2008
 
-    *) Исправление: nginx не собирался на 64-битных платформах; ошибка 
-       появилась в 0.7.15.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ 64-п╠п╦я┌п╫я▀я┘ п©п╩п╟я┌я└п╬я─п╪п╟я┘; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.15.
 
 
-Изменения в nginx 0.7.15                                          08.09.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.15                                          08.09.2008
 
-    *) Добавление: модуль ngx_http_random_index_module.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_random_index_module.
 
-    *) Добавление: директива directio оптимизирована для запросов файлов, 
-       начинающихся с произвольной позиции.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ directio п╬п©я┌п╦п╪п╦п╥п╦я─п╬п╡п╟п╫п╟ п╢п╩я▐ п╥п╟п©я─п╬я│п╬п╡ я└п╟п╧п╩п╬п╡,
+       п╫п╟я┤п╦п╫п╟я▌я┴п╦я┘я│я▐ я│ п©я─п╬п╦п╥п╡п╬п╩я▄п╫п╬п╧ п©п╬п╥п╦я├п╦п╦.
 
-    *) Добавление: директива directio при необходимости запрещает 
-       использование sendfile.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ directio п©я─п╦ п╫п╣п╬п╠я┘п╬п╢п╦п╪п╬я│я┌п╦ п╥п╟п©я─п╣я┴п╟п╣я┌
+       п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╣ sendfile.
 
-    *) Добавление: теперь nginx разрешает подчёркивания в именах строк в 
-       заголовке запроса клиента.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ nginx я─п╟п╥я─п╣я┬п╟п╣я┌ п©п╬п╢я┤я▒я─п╨п╦п╡п╟п╫п╦я▐ п╡ п╦п╪п╣п╫п╟я┘ я│я┌я─п╬п╨ п╡
+       п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╥п╟п©я─п╬я│п╟ п╨п╩п╦п╣п╫я┌п╟.
 
 
-Изменения в nginx 0.7.14                                          01.09.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.14                                          01.09.2008
 
-    *) Изменение: теперь директивы ssl_certificate и ssl_certificate_key не 
-       имеют значений по умолчанию.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╢п╦я─п╣п╨я┌п╦п╡я▀ ssl_certificate п╦ ssl_certificate_key п╫п╣
+       п╦п╪п╣я▌я┌ п╥п╫п╟я┤п╣п╫п╦п╧ п©п╬ я┐п╪п╬п╩я┤п╟п╫п╦я▌.
 
-    *) Добавление: директива listen поддерживает параметр ssl.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ listen п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п©п╟я─п╟п╪п╣я┌я─ ssl.
 
-    *) Добавление: теперь при переконфигурации nginx учитывает изменение 
-       временной зоны на FreeBSD и Linux.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п©я─п╦ п©п╣я─п╣п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦ nginx я┐я┤п╦я┌я▀п╡п╟п╣я┌ п╦п╥п╪п╣п╫п╣п╫п╦п╣
+       п╡я─п╣п╪п╣п╫п╫п╬п╧ п╥п╬п╫я▀ п╫п╟ FreeBSD п╦ Linux.
 
-    *) Исправление: параметры директивы listen, такие как backlog, rcvbuf и 
-       прочие, не устанавливались, если сервером по умолчанию был не первый 
-       сервер.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─я▀ п╢п╦я─п╣п╨я┌п╦п╡я▀ listen, я┌п╟п╨п╦п╣ п╨п╟п╨ backlog, rcvbuf п╦
+       п©я─п╬я┤п╦п╣, п╫п╣ я┐я│я┌п╟п╫п╟п╡п╩п╦п╡п╟п╩п╦я│я▄, п╣я│п╩п╦ я│п╣я─п╡п╣я─п╬п╪ п©п╬ я┐п╪п╬п╩я┤п╟п╫п╦я▌ п╠я▀п╩ п╫п╣ п©п╣я─п╡я▀п╧
+       я│п╣я─п╡п╣я─.
 
-    *) Исправление: при использовании в качестве аргументов части URI, 
-       выделенного с помощью директивы rewrite, эти аргументы не 
-       экранировались.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╡ п╨п╟я┤п╣я│я┌п╡п╣ п╟я─пЁя┐п╪п╣п╫я┌п╬п╡ я┤п╟я│я┌п╦ URI,
+       п╡я▀п╢п╣п╩п╣п╫п╫п╬пЁп╬ я│ п©п╬п╪п╬я┴я▄я▌ п╢п╦я─п╣п╨я┌п╦п╡я▀ rewrite, я█я┌п╦ п╟я─пЁя┐п╪п╣п╫я┌я▀ п╫п╣
+       я█п╨я─п╟п╫п╦я─п╬п╡п╟п╩п╦я│я▄.
 
-    *) Исправление: улучшения тестирования правильности конфигурационного 
-       файла.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┐п╩я┐я┤я┬п╣п╫п╦я▐ я┌п╣я│я┌п╦я─п╬п╡п╟п╫п╦я▐ п©я─п╟п╡п╦п╩я▄п╫п╬я│я┌п╦ п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╬п╫п╫п╬пЁп╬
+       я└п╟п╧п╩п╟.
 
 
-Изменения в nginx 0.7.13                                          26.08.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.13                                          26.08.2008
 
-    *) Исправление: nginx не собирался на Linux и Solaris; ошибка появилась 
-       в 0.7.12.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ Linux п╦ Solaris; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄
+       п╡ 0.7.12.
 
 
-Изменения в nginx 0.7.12                                          26.08.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.12                                          26.08.2008
 
-    *) Добавление: директива server_name поддерживает пустое имя "".
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ server_name п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п©я┐я│я┌п╬п╣ п╦п╪я▐ "".
 
-    *) Добавление: директива gzip_disable поддерживает специальную маску 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ gzip_disable п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ я│п©п╣я├п╦п╟п╩я▄п╫я┐я▌ п╪п╟я│п╨я┐
        msie6.
 
-    *) Исправление: при использовании параметра max_fails=0 в upstream'е с 
-       несколькими серверами рабочий процесс выходил по сигналу SIGFPE.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п©п╟я─п╟п╪п╣я┌я─п╟ max_fails=0 п╡ upstream'п╣ я│
+       п╫п╣я│п╨п╬п╩я▄п╨п╦п╪п╦ я│п╣я─п╡п╣я─п╟п╪п╦ я─п╟п╠п╬я┤п╦п╧ п©я─п╬я├п╣я│я│ п╡я▀я┘п╬п╢п╦п╩ п©п╬ я│п╦пЁп╫п╟п╩я┐ SIGFPE.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: при перенаправлении запроса с помощью директивы 
-       error_page терялось тело запроса.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п©п╣я─п╣п╫п╟п©я─п╟п╡п╩п╣п╫п╦п╦ п╥п╟п©я─п╬я│п╟ я│ п©п╬п╪п╬я┴я▄я▌ п╢п╦я─п╣п╨я┌п╦п╡я▀
+       error_page я┌п╣я─я▐п╩п╬я│я▄ я┌п╣п╩п╬ п╥п╟п©я─п╬я│п╟.
 
-    *) Исправление: при перенаправлении запроса с методом HEAD с помощью 
-       директивы error_page возвращался полный ответ.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п©п╣я─п╣п╫п╟п©я─п╟п╡п╩п╣п╫п╦п╦ п╥п╟п©я─п╬я│п╟ я│ п╪п╣я┌п╬п╢п╬п╪ HEAD я│ п©п╬п╪п╬я┴я▄я▌
+       п╢п╦я─п╣п╨я┌п╦п╡я▀ error_page п╡п╬п╥п╡я─п╟я┴п╟п╩я│я▐ п©п╬п╩п╫я▀п╧ п╬я┌п╡п╣я┌.
 
-    *) Исправление: метод $r->header_in() не возвращал значения строк 
-       "Host", "User-Agent", и "Connection" из заголовка запроса; ошибка 
-       появилась в 0.7.0.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╣я┌п╬п╢ $r->header_in() п╫п╣ п╡п╬п╥п╡я─п╟я┴п╟п╩ п╥п╫п╟я┤п╣п╫п╦я▐ я│я┌я─п╬п╨
+       "Host", "User-Agent", п╦ "Connection" п╦п╥ п╥п╟пЁп╬п╩п╬п╡п╨п╟ п╥п╟п©я─п╬я│п╟; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.0.
 
 
-Изменения в nginx 0.7.11                                          18.08.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.11                                          18.08.2008
 
-    *) Изменение: теперь ngx_http_charset_module по умолчанию не работает 
-       MIME-типом text/css.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ ngx_http_charset_module п©п╬ я┐п╪п╬п╩я┤п╟п╫п╦я▌ п╫п╣ я─п╟п╠п╬я┌п╟п╣я┌
+       MIME-я┌п╦п©п╬п╪ text/css.
 
-    *) Добавление: теперь nginx возвращает код 405 для метода POST при 
-       запросе статического файла, только если файл существует.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ nginx п╡п╬п╥п╡я─п╟я┴п╟п╣я┌ п╨п╬п╢ 405 п╢п╩я▐ п╪п╣я┌п╬п╢п╟ POST п©я─п╦
+       п╥п╟п©я─п╬я│п╣ я│я┌п╟я┌п╦я┤п╣я│п╨п╬пЁп╬ я└п╟п╧п╩п╟, я┌п╬п╩я▄п╨п╬ п╣я│п╩п╦ я└п╟п╧п╩ я│я┐я┴п╣я│я┌п╡я┐п╣я┌.
 
-    *) Добавление: директива proxy_ssl_session_reuse.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ proxy_ssl_session_reuse.
 
-    *) Исправление: после перенаправления запроса с помощью 
-       "X-Accel-Redirect" директива proxy_pass без URI могла использовать 
-       оригинальный запрос.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╬я│п╩п╣ п©п╣я─п╣п╫п╟п©я─п╟п╡п╩п╣п╫п╦я▐ п╥п╟п©я─п╬я│п╟ я│ п©п╬п╪п╬я┴я▄я▌
+       "X-Accel-Redirect" п╢п╦я─п╣п╨я┌п╦п╡п╟ proxy_pass п╠п╣п╥ URI п╪п╬пЁп╩п╟ п╦я│п©п╬п╩я▄п╥п╬п╡п╟я┌я▄
+       п╬я─п╦пЁп╦п╫п╟п╩я▄п╫я▀п╧ п╥п╟п©я─п╬я│.
 
-    *) Исправление: если у каталога были права доступа только на поиск 
-       файлов и первый индексный файл отсутствовал, то nginx возвращал 
-       ошибку 500.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ я┐ п╨п╟я┌п╟п╩п╬пЁп╟ п╠я▀п╩п╦ п©я─п╟п╡п╟ п╢п╬я│я┌я┐п©п╟ я┌п╬п╩я▄п╨п╬ п╫п╟ п©п╬п╦я│п╨
+       я└п╟п╧п╩п╬п╡ п╦ п©п╣я─п╡я▀п╧ п╦п╫п╢п╣п╨я│п╫я▀п╧ я└п╟п╧п╩ п╬я┌я│я┐я┌я│я┌п╡п╬п╡п╟п╩, я┌п╬ nginx п╡п╬п╥п╡я─п╟я┴п╟п╩
+       п╬я┬п╦п╠п╨я┐ 500.
 
-    *) Исправление: ошибок во вложенных location'ах; ошибки появились в 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╬п╨ п╡п╬ п╡п╩п╬п╤п╣п╫п╫я▀я┘ location'п╟я┘; п╬я┬п╦п╠п╨п╦ п©п╬я▐п╡п╦п╩п╦я│я▄ п╡
        0.7.1.
 
 
-Изменения в nginx 0.7.10                                          13.08.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.10                                          13.08.2008
 
-    *) Исправление: ошибок в директивах addition_types, charset_types, 
-       gzip_types, ssi_types, sub_filter_types и xslt_types; ошибки 
-       появились в 0.7.9.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╬п╨ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╟я┘ addition_types, charset_types,
+       gzip_types, ssi_types, sub_filter_types п╦ xslt_types; п╬я┬п╦п╠п╨п╦
+       п©п╬я▐п╡п╦п╩п╦я│я▄ п╡ 0.7.9.
 
-    *) Исправление: рекурсивной error_page для 500 ошибки.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я─п╣п╨я┐я─я│п╦п╡п╫п╬п╧ error_page п╢п╩я▐ 500 п╬я┬п╦п╠п╨п╦.
 
-    *) Исправление: теперь модуль ngx_http_realip_module устанавливает 
-       адрес не для всего keepalive соединения, а для каждого запроса по 
-       этому соединению.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╪п╬п╢я┐п╩я▄ ngx_http_realip_module я┐я│я┌п╟п╫п╟п╡п╩п╦п╡п╟п╣я┌ п╟п╢я─п╣я│
+       п╫п╣ п╢п╩я▐ п╡я│п╣пЁп╬ keepalive я│п╬п╣п╢п╦п╫п╣п╫п╦я▐, п╟ п╢п╩я▐ п╨п╟п╤п╢п╬пЁп╬ п╥п╟п©я─п╬я│п╟ п©п╬ я█я┌п╬п╪я┐
+       я│п╬п╣п╢п╦п╫п╣п╫п╦я▌.
 
 
-Изменения в nginx 0.7.9                                           12.08.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.9                                           12.08.2008
 
-    *) Изменение: теперь ngx_http_charset_module по умолчанию работает со 
-       следующими MIME-типами: text/html, text/css, text/xml, text/plain, 
-       text/vnd.wap.wml, application/x-javascript и application/rss+xml.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ ngx_http_charset_module п©п╬ я┐п╪п╬п╩я┤п╟п╫п╦я▌ я─п╟п╠п╬я┌п╟п╣я┌ я│п╬
+       я│п╩п╣п╢я┐я▌я┴п╦п╪п╦ MIME-я┌п╦п©п╟п╪п╦: text/html, text/css, text/xml, text/plain,
+       text/vnd.wap.wml, application/x-javascript п╦ application/rss+xml.
 
-    *) Добавление: директивы charset_types и addition_types.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ charset_types п╦ addition_types.
 
-    *) Добавление: теперь директивы gzip_types, ssi_types и 
-       sub_filter_types используют хэш.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╢п╦я─п╣п╨я┌п╦п╡я▀ gzip_types, ssi_types п╦ sub_filter_types
+       п╦я│п©п╬п╩я▄п╥я┐я▌я┌ я┘я█я┬.
 
-    *) Добавление: модуль ngx_cpp_test_module.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_cpp_test_module.
 
-    *) Добавление: директива expires поддерживает суточное время.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ expires п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ я│я┐я┌п╬я┤п╫п╬п╣ п╡я─п╣п╪я▐.
 
-    *) Добавление: улучшения и исправления в модуле 
-       ngx_http_xslt_module.
-       Спасибо Денису Латыпову и Максиму Дунину.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┐п╩я┐я┤я┬п╣п╫п╦я▐ п╦ п╦я│п©я─п╟п╡п╩п╣п╫п╦я▐ п╡ п╪п╬п╢я┐п╩п╣ ngx_http_xslt_module.
+       п║п©п╟я│п╦п╠п╬ п■п╣п╫п╦я│я┐ п⌡п╟я┌я▀п©п╬п╡я┐ п╦ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: директива log_not_found не работала при поиске 
-       индексных файлов.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ log_not_found п╫п╣ я─п╟п╠п╬я┌п╟п╩п╟ п©я─п╦ п©п╬п╦я│п╨п╣ п╦п╫п╢п╣п╨я│п╫я▀я┘
+       я└п╟п╧п╩п╬п╡.
 
-    *) Исправление: HTTPS-соединения могли зависнуть, если использовались 
-       методы kqueue, epoll, rtsig или eventport; ошибка появилась в 0.7.7.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: HTTPS-я│п╬п╣п╢п╦п╫п╣п╫п╦я▐ п╪п╬пЁп╩п╦ п╥п╟п╡п╦я│п╫я┐я┌я▄, п╣я│п╩п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╦я│я▄
+       п╪п╣я┌п╬п╢я▀ kqueue, epoll, rtsig п╦п╩п╦ eventport; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.7.
 
-    *) Исправление: если в директивах server_name, valid_referers и map 
-       использовалась маска вида "*.domain.tld" и при этом полное имя вида 
-       "domain.tld" не было описано, то это имя попадало под маску; ошибка 
-       появилась в 0.3.18.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╟я┘ server_name, valid_referers п╦ map
+       п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╟я│я▄ п╪п╟я│п╨п╟ п╡п╦п╢п╟ "*.domain.tld" п╦ п©я─п╦ я█я┌п╬п╪ п©п╬п╩п╫п╬п╣ п╦п╪я▐ п╡п╦п╢п╟
+       "domain.tld" п╫п╣ п╠я▀п╩п╬ п╬п©п╦я│п╟п╫п╬, я┌п╬ я█я┌п╬ п╦п╪я▐ п©п╬п©п╟п╢п╟п╩п╬ п©п╬п╢ п╪п╟я│п╨я┐; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.3.18.
 
 
-Изменения в nginx 0.7.8                                           04.08.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.8                                           04.08.2008
 
-    *) Добавление: модуль ngx_http_xslt_module.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_xslt_module.
 
-    *) Добавление: переменные "$arg_...".
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫я▀п╣ "$arg_...".
 
-    *) Добавление: поддержка directio в Solaris.
-       Спасибо Ivan Debnar.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╬п╢п╢п╣я─п╤п╨п╟ directio п╡ Solaris.
+       п║п©п╟я│п╦п╠п╬ Ivan Debnar.
 
-    *) Исправление: теперь, если FastCGI-сервер присылает строку "Location" 
-       в заголовке ответа без строки статуса, то nginx использует код 
-       статуса 302.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄, п╣я│п╩п╦ FastCGI-я│п╣я─п╡п╣я─ п©я─п╦я│я▀п╩п╟п╣я┌ я│я┌я─п╬п╨я┐ "Location"
+       п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╬я┌п╡п╣я┌п╟ п╠п╣п╥ я│я┌я─п╬п╨п╦ я│я┌п╟я┌я┐я│п╟, я┌п╬ nginx п╦я│п©п╬п╩я▄п╥я┐п╣я┌ п╨п╬п╢
+       я│я┌п╟я┌я┐я│п╟ 302.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
 
-Изменения в nginx 0.7.7                                           30.07.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.7                                           30.07.2008
 
-    *) Изменение: теперь ошибка EAGAIN при вызове connect() не считается 
-       временной.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╬я┬п╦п╠п╨п╟ EAGAIN п©я─п╦ п╡я▀п╥п╬п╡п╣ connect() п╫п╣ я│я┤п╦я┌п╟п╣я┌я│я▐
+       п╡я─п╣п╪п╣п╫п╫п╬п╧.
 
-    *) Изменение: значением переменной $ssl_client_cert теперь является 
-       сертификат, перед каждой строкой которого, кроме первой, вставляется 
-       символ табуляции; неизменённый сертификат доступен через переменную 
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╥п╫п╟я┤п╣п╫п╦п╣п╪ п©п╣я─п╣п╪п╣п╫п╫п╬п╧ $ssl_client_cert я┌п╣п©п╣я─я▄ я▐п╡п╩я▐п╣я┌я│я▐
+       я│п╣я─я┌п╦я└п╦п╨п╟я┌, п©п╣я─п╣п╢ п╨п╟п╤п╢п╬п╧ я│я┌я─п╬п╨п╬п╧ п╨п╬я┌п╬я─п╬пЁп╬, п╨я─п╬п╪п╣ п©п╣я─п╡п╬п╧, п╡я│я┌п╟п╡п╩я▐п╣я┌я│я▐
+       я│п╦п╪п╡п╬п╩ я┌п╟п╠я┐п╩я▐я├п╦п╦; п╫п╣п╦п╥п╪п╣п╫я▒п╫п╫я▀п╧ я│п╣я─я┌п╦я└п╦п╨п╟я┌ п╢п╬я│я┌я┐п©п╣п╫ я┤п╣я─п╣п╥ п©п╣я─п╣п╪п╣п╫п╫я┐я▌
        $ssl_client_raw_cert.
 
-    *) Добавление: параметр ask директивы ssl_verify_client.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ ask п╢п╦я─п╣п╨я┌п╦п╡я▀ ssl_verify_client.
 
-    *) Добавление: улучшения в обработке byte-range.
-       Спасибо Максиму Дунину.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┐п╩я┐я┤я┬п╣п╫п╦я▐ п╡ п╬п╠я─п╟п╠п╬я┌п╨п╣ byte-range.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Добавление: директива directio.
-       Спасибо Jiang Hong.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ directio.
+       п║п©п╟я│п╦п╠п╬ Jiang Hong.
 
-    *) Добавление: поддержка sendfile() в MacOSX 10.5.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╬п╢п╢п╣я─п╤п╨п╟ sendfile() п╡ MacOSX 10.5.
 
-    *) Исправление: в MacOSX и Cygwin при проверке location'ов теперь 
-       делается сравнение без учёта регистра символов; однако, сравнение 
-       ограничено только однобайтными locale'ями.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ MacOSX п╦ Cygwin п©я─п╦ п©я─п╬п╡п╣я─п╨п╣ location'п╬п╡ я┌п╣п©п╣я─я▄
+       п╢п╣п╩п╟п╣я┌я│я▐ я│я─п╟п╡п╫п╣п╫п╦п╣ п╠п╣п╥ я┐я┤я▒я┌п╟ я─п╣пЁп╦я│я┌я─п╟ я│п╦п╪п╡п╬п╩п╬п╡; п╬п╢п╫п╟п╨п╬, я│я─п╟п╡п╫п╣п╫п╦п╣
+       п╬пЁя─п╟п╫п╦я┤п╣п╫п╬ я┌п╬п╩я▄п╨п╬ п╬п╢п╫п╬п╠п╟п╧я┌п╫я▀п╪п╦ locale'я▐п╪п╦.
 
-    *) Исправление: соединения почтового прокси-сервера зависали в режиме 
-       SSL, если использовались методы select, poll или /dev/poll.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я│п╬п╣п╢п╦п╫п╣п╫п╦я▐ п©п╬я┤я┌п╬п╡п╬пЁп╬ п©я─п╬п╨я│п╦-я│п╣я─п╡п╣я─п╟ п╥п╟п╡п╦я│п╟п╩п╦ п╡ я─п╣п╤п╦п╪п╣
+       SSL, п╣я│п╩п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╦я│я▄ п╪п╣я┌п╬п╢я▀ select, poll п╦п╩п╦ /dev/poll.
 
-    *) Исправление: ошибки при использовании кодировки UTF-8 в 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╨п╬п╢п╦я─п╬п╡п╨п╦ UTF-8 п╡
        ngx_http_autoindex_module.
 
 
-Изменения в nginx 0.7.6                                           07.07.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.6                                           07.07.2008
 
-    *) Исправление: теперь при использовании переменных в директиве 
-       access_log всегда проверяется существовании root'а для запроса.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п©п╣я─п╣п╪п╣п╫п╫я▀я┘ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣
+       access_log п╡я│п╣пЁп╢п╟ п©я─п╬п╡п╣я─я▐п╣я┌я│я▐ я│я┐я┴п╣я│я┌п╡п╬п╡п╟п╫п╦п╦ root'п╟ п╢п╩я▐ п╥п╟п©я─п╬я│п╟.
 
-    *) Исправление: модуль ngx_http_flv_module не поддерживал несколько 
-       значений в аргументах запроса.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_flv_module п╫п╣ п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╩ п╫п╣я│п╨п╬п╩я▄п╨п╬
+       п╥п╫п╟я┤п╣п╫п╦п╧ п╡ п╟я─пЁя┐п╪п╣п╫я┌п╟я┘ п╥п╟п©я─п╬я│п╟.
 
 
-Изменения в nginx 0.7.5                                           01.07.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.5                                           01.07.2008
 
-    *) Исправления в поддержке переменных в директиве access_log; ошибки 
-       появились в 0.7.4.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦я▐ п╡ п©п╬п╢п╢п╣я─п╤п╨п╣ п©п╣я─п╣п╪п╣п╫п╫я▀я┘ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ access_log; п╬я┬п╦п╠п╨п╦
+       п©п╬я▐п╡п╦п╩п╦я│я▄ п╡ 0.7.4.
 
-    *) Исправление: nginx не собирался с параметром 
-       --without-http_gzip_module; ошибка появилась в 0.7.3.
-       Спасибо Кириллу Коринскому.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ я│ п©п╟я─п╟п╪п╣я┌я─п╬п╪
+       --without-http_gzip_module; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.3.
+       п║п©п╟я│п╦п╠п╬ п п╦я─п╦п╩п╩я┐ п п╬я─п╦п╫я│п╨п╬п╪я┐.
 
-    *) Исправление: при совместном использовании sub_filter и SSI ответы 
-       могли передаваться неверно.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ я│п╬п╡п╪п╣я│я┌п╫п╬п╪ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ sub_filter п╦ SSI п╬я┌п╡п╣я┌я▀
+       п╪п╬пЁп╩п╦ п©п╣я─п╣п╢п╟п╡п╟я┌я▄я│я▐ п╫п╣п╡п╣я─п╫п╬.
 
 
-Изменения в nginx 0.7.4                                           30.06.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.4                                           30.06.2008
 
-    *) Добавление: директива access_log поддерживает переменные.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ access_log п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п©п╣я─п╣п╪п╣п╫п╫я▀п╣.
 
-    *) Добавление: директива open_log_file_cache.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ open_log_file_cache.
 
-    *) Добавление: ключ -g.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╨п╩я▌я┤ -g.
 
-    *) Добавление: поддержка строки "Expect" в заголовке запроса.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╬п╢п╢п╣я─п╤п╨п╟ я│я┌я─п╬п╨п╦ "Expect" п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╥п╟п©я─п╬я│п╟.
 
-    *) Исправление: большие включения в SSI могли передавались не полностью.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╠п╬п╩я▄я┬п╦п╣ п╡п╨п╩я▌я┤п╣п╫п╦я▐ п╡ SSI п╪п╬пЁп╩п╦ п©п╣я─п╣п╢п╟п╡п╟п╩п╦я│я▄ п╫п╣ п©п╬п╩п╫п╬я│я┌я▄я▌.
 
 
-Изменения в nginx 0.7.3                                           23.06.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.3                                           23.06.2008
 
-    *) Изменение: MIME-тип для расширения rss изменён на 
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: MIME-я┌п╦п© п╢п╩я▐ я─п╟я│я┬п╦я─п╣п╫п╦я▐ rss п╦п╥п╪п╣п╫я▒п╫ п╫п╟
        "application/rss+xml".
 
-    *) Изменение: теперь директива "gzip_vary on" выдаёт строку 
-       "Vary: Accept-Encoding" в заголовке ответа и для несжатых ответов.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╢п╦я─п╣п╨я┌п╦п╡п╟ "gzip_vary on" п╡я▀п╢п╟я▒я┌ я│я┌я─п╬п╨я┐
+       "Vary: Accept-Encoding" п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╬я┌п╡п╣я┌п╟ п╦ п╢п╩я▐ п╫п╣я│п╤п╟я┌я▀я┘ п╬я┌п╡п╣я┌п╬п╡.
 
-    *) Добавление: теперь при использовании протокола "https://" в 
-       директиве rewrite автоматически делается редирект.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п©я─п╬я┌п╬п╨п╬п╩п╟ "https://" п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣
+       rewrite п╟п╡я┌п╬п╪п╟я┌п╦я┤п╣я│п╨п╦ п╢п╣п╩п╟п╣я┌я│я▐ я─п╣п╢п╦я─п╣п╨я┌.
 
-    *) Исправление: директива proxy_pass не работала с протоколом HTTPS; 
-       ошибка появилась в 0.6.9.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ proxy_pass п╫п╣ я─п╟п╠п╬я┌п╟п╩п╟ я│ п©я─п╬я┌п╬п╨п╬п╩п╬п╪ HTTPS;
+       п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.6.9.
 
 
-Изменения в nginx 0.7.2                                           16.06.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.2                                           16.06.2008
 
-    *) Добавление: теперь nginx поддерживает шифры с обменом EDH-ключами.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ nginx п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ я┬п╦я└я─я▀ я│ п╬п╠п╪п╣п╫п╬п╪ EDH-п╨п╩я▌я┤п╟п╪п╦.
 
-    *) Добавление: директива ssl_dhparam.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ ssl_dhparam.
 
-    *) Добавление: переменная $ssl_client_cert.
-       Спасибо Manlio Perillo.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $ssl_client_cert.
+       п║п©п╟я│п╦п╠п╬ Manlio Perillo.
 
-    *) Исправление: после изменения URI с помощью директивы rewrite nginx 
-       не искал новый location; ошибка появилась в 0.7.1.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╬я│п╩п╣ п╦п╥п╪п╣п╫п╣п╫п╦я▐ URI я│ п©п╬п╪п╬я┴я▄я▌ п╢п╦я─п╣п╨я┌п╦п╡я▀ rewrite nginx п╫п╣
+       п╦я│п╨п╟п╩ п╫п╬п╡я▀п╧ location; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.7.1.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: nginx не собирался без библиотеки PCRE; ошибка 
-       появилась в 0.7.1.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╠п╣п╥ п╠п╦п╠п╩п╦п╬я┌п╣п╨п╦ PCRE; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄
+       п╡ 0.7.1.
 
-    *) Исправление: при редиректе запроса к каталогу с добавлением слэша 
-       nginx не добавлял аргументы из оригинального запроса.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ я─п╣п╢п╦я─п╣п╨я┌п╣ п╥п╟п©я─п╬я│п╟ п╨ п╨п╟я┌п╟п╩п╬пЁя┐ я│ п╢п╬п╠п╟п╡п╩п╣п╫п╦п╣п╪ я│п╩я█я┬п╟
+       nginx п╫п╣ п╢п╬п╠п╟п╡п╩я▐п╩ п╟я─пЁя┐п╪п╣п╫я┌я▀ п╦п╥ п╬я─п╦пЁп╦п╫п╟п╩я▄п╫п╬пЁп╬ п╥п╟п©я─п╬я│п╟.
 
 
-Изменения в nginx 0.7.1                                           26.05.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.1                                           26.05.2008
 
-    *) Изменение: теперь поиск location'а делается с помощью дерева.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п©п╬п╦я│п╨ location'п╟ п╢п╣п╩п╟п╣я┌я│я▐ я│ п©п╬п╪п╬я┴я▄я▌ п╢п╣я─п╣п╡п╟.
 
-    *) Изменение: директива optimize_server_names упразднена в связи с 
-       появлением директивы server_name_in_redirect.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ optimize_server_names я┐п©я─п╟п╥п╢п╫п╣п╫п╟ п╡ я│п╡я▐п╥п╦ я│
+       п©п╬я▐п╡п╩п╣п╫п╦п╣п╪ п╢п╦я─п╣п╨я┌п╦п╡я▀ server_name_in_redirect.
 
-    *) Изменение: некоторые давно устаревшие директивы больше не 
-       поддерживаются.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╫п╣п╨п╬я┌п╬я─я▀п╣ п╢п╟п╡п╫п╬ я┐я│я┌п╟я─п╣п╡я┬п╦п╣ п╢п╦я─п╣п╨я┌п╦п╡я▀ п╠п╬п╩я▄я┬п╣ п╫п╣
+       п©п╬п╢п╢п╣я─п╤п╦п╡п╟я▌я┌я│я▐.
 
-    *) Изменение: параметр "none" в директиве ssl_session_cache; теперь 
-       этот параметр используется по умолчанию.
-       Спасибо Rob Mueller.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ "none" п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ ssl_session_cache; я┌п╣п©п╣я─я▄ я█я┌п╬я┌
+       п©п╟я─п╟п╪п╣я┌я─ п╦я│п©п╬п╩я▄п╥я┐п╣я┌я│я▐ п©п╬ я┐п╪п╬п╩я┤п╟п╫п╦я▌.
+       п║п©п╟я│п╦п╠п╬ Rob Mueller.
 
-    *) Исправление: рабочие процессы могли не реагировать на сигналы 
-       переконфигурации и ротации логов.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я─п╟п╠п╬я┤п╦п╣ п©я─п╬я├п╣я│я│я▀ п╪п╬пЁп╩п╦ п╫п╣ я─п╣п╟пЁп╦я─п╬п╡п╟я┌я▄ п╫п╟ я│п╦пЁп╫п╟п╩я▀
+       п©п╣я─п╣п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦ п╦ я─п╬я┌п╟я├п╦п╦ п╩п╬пЁп╬п╡.
 
-    *) Исправление: nginx не собирался на последних Fedora 9 Linux.
-       Спасибо Roxis.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ п©п╬я│п╩п╣п╢п╫п╦я┘ Fedora 9 Linux.
+       п║п©п╟я│п╦п╠п╬ Roxis.
 
 
-Изменения в nginx 0.7.0                                           19.05.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.7.0                                           19.05.2008
 
-    *) Изменение: теперь символы 0x00-0x1F, '"' и '\' в access_log 
-       записываются в виде \xXX.
-       Спасибо Максиму Дунину.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ я│п╦п╪п╡п╬п╩я▀ 0x00-0x1F, '"' п╦ '\' п╡ access_log
+       п╥п╟п©п╦я│я▀п╡п╟я▌я┌я│я▐ п╡ п╡п╦п╢п╣ \xXX.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Изменение: теперь nginx разрешает несколько строк "Host" в заголовке 
-       запроса.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ nginx я─п╟п╥я─п╣я┬п╟п╣я┌ п╫п╣я│п╨п╬п╩я▄п╨п╬ я│я┌я─п╬п╨ "Host" п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣
+       п╥п╟п©я─п╬я│п╟.
 
-    *) Добавление: директива expires поддерживает флаг modified.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ expires п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ я└п╩п╟пЁ modified.
 
-    *) Добавление: переменные $uid_got и $uid_set можно использовать на 
-       любой стадии обработки запроса.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫я▀п╣ $uid_got п╦ $uid_set п╪п╬п╤п╫п╬ п╦я│п©п╬п╩я▄п╥п╬п╡п╟я┌я▄ п╫п╟
+       п╩я▌п╠п╬п╧ я│я┌п╟п╢п╦п╦ п╬п╠я─п╟п╠п╬я┌п╨п╦ п╥п╟п©я─п╬я│п╟.
 
-    *) Добавление: переменная $hostname.
-       Спасибо Андрею Нигматулину.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $hostname.
+       п║п©п╟я│п╦п╠п╬ п░п╫п╢я─п╣я▌ п²п╦пЁп╪п╟я┌я┐п╩п╦п╫я┐.
 
-    *) Добавление: поддержка DESTDIR.
-       Спасибо Todd A. Fisher и Andras Voroskoi.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╬п╢п╢п╣я─п╤п╨п╟ DESTDIR.
+       п║п©п╟я│п╦п╠п╬ Todd A. Fisher п╦ Andras Voroskoi.
 
-    *) Исправление: при использовании keepalive на Linux в рабочем процессе 
-       мог произойти segmentation fault.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ keepalive п╫п╟ Linux п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣
+       п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault.
 
 
-Изменения в nginx 0.6.31                                          12.05.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.6.31                                          12.05.2008
 
-    *) Исправление: nginx не обрабатывал ответ FastCGI-сервера, если строка 
-       заголовка ответ была в конце записи FastCGI; ошибка появилась в 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ п╬п╠я─п╟п╠п╟я┌я▀п╡п╟п╩ п╬я┌п╡п╣я┌ FastCGI-я│п╣я─п╡п╣я─п╟, п╣я│п╩п╦ я│я┌я─п╬п╨п╟
+       п╥п╟пЁп╬п╩п╬п╡п╨п╟ п╬я┌п╡п╣я┌ п╠я▀п╩п╟ п╡ п╨п╬п╫я├п╣ п╥п╟п©п╦я│п╦ FastCGI; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
        0.6.2.
-       Спасибо Сергею Серову.
+       п║п©п╟я│п╦п╠п╬ п║п╣я─пЁп╣я▌ п║п╣я─п╬п╡я┐.
 
-    *) Исправление: при удалении файла и использовании директивы 
-       open_file_cache_errors off в рабочем процессе мог произойти 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ я┐п╢п╟п╩п╣п╫п╦п╦ я└п╟п╧п╩п╟ п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀
+       open_file_cache_errors off п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦
        segmentation fault.
 
 
-Изменения в nginx 0.6.30                                          29.04.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.6.30                                          29.04.2008
 
-    *) Изменение: теперь, если маске, заданной в директиве include, не 
-       соответствует ни один файл, то nginx не выдаёт ошибку.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄, п╣я│п╩п╦ п╪п╟я│п╨п╣, п╥п╟п╢п╟п╫п╫п╬п╧ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ include, п╫п╣
+       я│п╬п╬я┌п╡п╣я┌я│я┌п╡я┐п╣я┌ п╫п╦ п╬п╢п╦п╫ я└п╟п╧п╩, я┌п╬ nginx п╫п╣ п╡я▀п╢п╟я▒я┌ п╬я┬п╦п╠п╨я┐.
 
-    *) Добавление: теперь время в директивах можно задавать без пробела, 
-       например, "1h50m".
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╡я─п╣п╪я▐ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╟я┘ п╪п╬п╤п╫п╬ п╥п╟п╢п╟п╡п╟я┌я▄ п╠п╣п╥ п©я─п╬п╠п╣п╩п╟,
+       п╫п╟п©я─п╦п╪п╣я─, "1h50m".
 
-    *) Исправление: утечек памяти, если директива ssl_verify_client имела 
-       значение on.
-       Спасибо Chavelle Vincent.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┐я┌п╣я┤п╣п╨ п©п╟п╪я▐я┌п╦, п╣я│п╩п╦ п╢п╦я─п╣п╨я┌п╦п╡п╟ ssl_verify_client п╦п╪п╣п╩п╟
+       п╥п╫п╟я┤п╣п╫п╦п╣ on.
+       п║п©п╟я│п╦п╠п╬ Chavelle Vincent.
 
-    *) Исправление: директива sub_filter могла вставлять заменяемый текст в 
-       вывод.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ sub_filter п╪п╬пЁп╩п╟ п╡я│я┌п╟п╡п╩я▐я┌я▄ п╥п╟п╪п╣п╫я▐п╣п╪я▀п╧ я┌п╣п╨я│я┌ п╡
+       п╡я▀п╡п╬п╢.
 
-    *) Исправление: директива error_page не воспринимала параметры в 
-       перенаправляемом URI.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ error_page п╫п╣ п╡п╬я│п©я─п╦п╫п╦п╪п╟п╩п╟ п©п╟я─п╟п╪п╣я┌я─я▀ п╡
+       п©п╣я─п╣п╫п╟п©я─п╟п╡п╩я▐п╣п╪п╬п╪ URI.
 
-    *) Исправление: теперь при сборке с Cygwin nginx всегда открывает файлы 
-       в бинарном режиме.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п©я─п╦ я│п╠п╬я─п╨п╣ я│ Cygwin nginx п╡я│п╣пЁп╢п╟ п╬я┌п╨я─я▀п╡п╟п╣я┌ я└п╟п╧п╩я▀
+       п╡ п╠п╦п╫п╟я─п╫п╬п╪ я─п╣п╤п╦п╪п╣.
 
-    *) Исправление: nginx не собирался под OpenBSD; ошибка появилась в 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п©п╬п╢ OpenBSD; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
        0.6.15.
 
 
-Изменения в nginx 0.6.29                                          18.03.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.6.29                                          18.03.2008
 
-    *) Добавление: модуль ngx_google_perftools_module.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_google_perftools_module.
 
-    *) Исправление: модуль ngx_http_perl_module не собирался на 64-битных 
-       платформах; ошибка появилась в 0.6.27.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_perl_module п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ 64-п╠п╦я┌п╫я▀я┘
+       п©п╩п╟я┌я└п╬я─п╪п╟я┘; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.6.27.
 
 
-Изменения в nginx 0.6.28                                          13.03.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.6.28                                          13.03.2008
 
-    *) Исправление: метод rtsig не собирался; ошибка появилась в 0.6.27.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╣я┌п╬п╢ rtsig п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.6.27.
 
 
-Изменения в nginx 0.6.27                                          12.03.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.6.27                                          12.03.2008
 
-    *) Изменение: теперь на Linux 2.6.18+ по умолчанию не собирается метод 
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╫п╟ Linux 2.6.18+ п©п╬ я┐п╪п╬п╩я┤п╟п╫п╦я▌ п╫п╣ я│п╬п╠п╦я─п╟п╣я┌я│я▐ п╪п╣я┌п╬п╢
        rtsig.
 
-    *) Изменение: теперь при перенаправлении запроса в именованный location 
-       с помощью директивы error_page метод запроса не изменяется.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п©я─п╦ п©п╣я─п╣п╫п╟п©я─п╟п╡п╩п╣п╫п╦п╦ п╥п╟п©я─п╬я│п╟ п╡ п╦п╪п╣п╫п╬п╡п╟п╫п╫я▀п╧ location
+       я│ п©п╬п╪п╬я┴я▄я▌ п╢п╦я─п╣п╨я┌п╦п╡я▀ error_page п╪п╣я┌п╬п╢ п╥п╟п©я─п╬я│п╟ п╫п╣ п╦п╥п╪п╣п╫я▐п╣я┌я│я▐.
 
-    *) Добавление: директивы resolver и resolver_timeout в SMTP 
-       прокси-сервере.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ resolver п╦ resolver_timeout п╡ SMTP
+       п©я─п╬п╨я│п╦-я│п╣я─п╡п╣я─п╣.
 
-    *) Добавление: директива post_action поддерживает именованные 
-       location'ы.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ post_action п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╦п╪п╣п╫п╬п╡п╟п╫п╫я▀п╣
+       location'я▀.
 
-    *) Исправление: при перенаправлении запроса из location'а c 
-       обработчиком proxy, FastCGI или memcached в именованный location со 
-       статическим обработчиком в рабочем процессе происходил segmentation 
-       fault.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п©п╣я─п╣п╫п╟п©я─п╟п╡п╩п╣п╫п╦п╦ п╥п╟п©я─п╬я│п╟ п╦п╥ location'п╟ c п╬п╠я─п╟п╠п╬я┌я┤п╦п╨п╬п╪
+       proxy, FastCGI п╦п╩п╦ memcached п╡ п╦п╪п╣п╫п╬п╡п╟п╫п╫я▀п╧ location я│п╬ я│я┌п╟я┌п╦я┤п╣я│п╨п╦п╪
+       п╬п╠я─п╟п╠п╬я┌я┤п╦п╨п╬п╪ п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault.
 
-    *) Исправление: браузеры не повторяли SSL handshake, если при первом 
-       handshake не оказалось правильного клиентского сертификата. 
-       Спасибо Александру Инюхину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╠я─п╟я┐п╥п╣я─я▀ п╫п╣ п©п╬п╡я┌п╬я─я▐п╩п╦ SSL handshake, п╣я│п╩п╦ п©я─п╦ п©п╣я─п╡п╬п╪
+       handshake п╫п╣ п╬п╨п╟п╥п╟п╩п╬я│я▄ п©я─п╟п╡п╦п╩я▄п╫п╬пЁп╬ п╨п╩п╦п╣п╫я┌я│п╨п╬пЁп╬ я│п╣я─я┌п╦я└п╦п╨п╟я┌п╟.
+       п║п©п╟я│п╦п╠п╬ п░п╩п╣п╨я│п╟п╫п╢я─я┐ п≤п╫я▌я┘п╦п╫я┐.
 
-    *) Исправление: при перенаправлении ошибок 495-497 с помощью директивы 
-       error_page без изменения кода ошибки nginx пытался выделить очень 
-       много памяти.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п©п╣я─п╣п╫п╟п©я─п╟п╡п╩п╣п╫п╦п╦ п╬я┬п╦п╠п╬п╨ 495-497 я│ п©п╬п╪п╬я┴я▄я▌ п╢п╦я─п╣п╨я┌п╦п╡я▀
+       error_page п╠п╣п╥ п╦п╥п╪п╣п╫п╣п╫п╦я▐ п╨п╬п╢п╟ п╬я┬п╦п╠п╨п╦ nginx п©я▀я┌п╟п╩я│я▐ п╡я▀п╢п╣п╩п╦я┌я▄ п╬я┤п╣п╫я▄
+       п╪п╫п╬пЁп╬ п©п╟п╪я▐я┌п╦.
 
-    *) Исправление: утечки памяти в долгоживущих небуфферизированных 
-       соединениях.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┐я┌п╣я┤п╨п╦ п©п╟п╪я▐я┌п╦ п╡ п╢п╬п╩пЁп╬п╤п╦п╡я┐я┴п╦я┘ п╫п╣п╠я┐я└я└п╣я─п╦п╥п╦я─п╬п╡п╟п╫п╫я▀я┘
+       я│п╬п╣п╢п╦п╫п╣п╫п╦я▐я┘.
 
-    *) Исправление: утечки памяти в resolver'е.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┐я┌п╣я┤п╨п╦ п©п╟п╪я▐я┌п╦ п╡ resolver'п╣.
 
-    *) Исправление: при перенаправлении запроса из location'а c 
-       обработчиком proxy в другой location с обработчиком proxy в рабочем 
-       процессе происходил segmentation fault.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п©п╣я─п╣п╫п╟п©я─п╟п╡п╩п╣п╫п╦п╦ п╥п╟п©я─п╬я│п╟ п╦п╥ location'п╟ c п╬п╠я─п╟п╠п╬я┌я┤п╦п╨п╬п╪
+       proxy п╡ п╢я─я┐пЁп╬п╧ location я│ п╬п╠я─п╟п╠п╬я┌я┤п╦п╨п╬п╪ proxy п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣
+       п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault.
 
-    *) Исправление: ошибки в кэшировании переменных $proxy_host и 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ п╡ п╨я█я┬п╦я─п╬п╡п╟п╫п╦п╦ п©п╣я─п╣п╪п╣п╫п╫я▀я┘ $proxy_host п╦
        $proxy_port.
-       Спасибо Сергею Боченкову.
+       п║п©п╟я│п╦п╠п╬ п║п╣я─пЁп╣я▌ п▒п╬я┤п╣п╫п╨п╬п╡я┐.
 
-    *) Исправление: директива proxy_pass с переменными использовала порт, 
-       описанной в другой директиве proxy_pass без переменных, но с таким 
-       же именем хоста.
-       Спасибо Сергею Боченкову.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ proxy_pass я│ п©п╣я─п╣п╪п╣п╫п╫я▀п╪п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╟ п©п╬я─я┌,
+       п╬п©п╦я│п╟п╫п╫п╬п╧ п╡ п╢я─я┐пЁп╬п╧ п╢п╦я─п╣п╨я┌п╦п╡п╣ proxy_pass п╠п╣п╥ п©п╣я─п╣п╪п╣п╫п╫я▀я┘, п╫п╬ я│ я┌п╟п╨п╦п╪ п╤п╣
+       п╦п╪п╣п╫п╣п╪ я┘п╬я│я┌п╟.
+       п║п©п╟я│п╦п╠п╬ п║п╣я─пЁп╣я▌ п▒п╬я┤п╣п╫п╨п╬п╡я┐.
 
-    *) Исправление: во время переконфигурации на некоторых 64-битном 
-       платформах в лог записывался alert "sendmsg() failed (9: Bad file 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡п╬ п╡я─п╣п╪я▐ п©п╣я─п╣п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦ п╫п╟ п╫п╣п╨п╬я┌п╬я─я▀я┘ 64-п╠п╦я┌п╫п╬п╪
+       п©п╩п╟я┌я└п╬я─п╪п╟я┘ п╡ п╩п╬пЁ п╥п╟п©п╦я│я▀п╡п╟п╩я│я▐ alert "sendmsg() failed (9: Bad file
        descriptor)".
 
-    *) Исправление: при повторном использовании в SSI пустого block'а в 
-       качестве заглушки в рабочем процессе происходил segmentation fault.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п©п╬п╡я┌п╬я─п╫п╬п╪ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╡ SSI п©я┐я│я┌п╬пЁп╬ block'п╟ п╡
+       п╨п╟я┤п╣я│я┌п╡п╣ п╥п╟пЁп╩я┐я┬п╨п╦ п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault.
 
-    *) Исправление: ошибки при копировании части URI, содержащего 
-       экранированные символы, в аргументы.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ п©я─п╦ п╨п╬п©п╦я─п╬п╡п╟п╫п╦п╦ я┤п╟я│я┌п╦ URI, я│п╬п╢п╣я─п╤п╟я┴п╣пЁп╬
+       я█п╨я─п╟п╫п╦я─п╬п╡п╟п╫п╫я▀п╣ я│п╦п╪п╡п╬п╩я▀, п╡ п╟я─пЁя┐п╪п╣п╫я┌я▀.
 
 
-Изменения в nginx 0.6.26                                          11.02.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.6.26                                          11.02.2008
 
-    *) Исправление: директивы proxy_store и fastcgi_store не проверяли 
-       длину ответа.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_store п╦ fastcgi_store п╫п╣ п©я─п╬п╡п╣я─я▐п╩п╦ п╢п╩п╦п╫я┐
+       п╬я┌п╡п╣я┌п╟.
 
-    *) Исправление: при использовании большого значения в директиве expires 
-       в рабочем процессе происходил segmentation fault.
-       Спасибо Joaquin Cuenca Abela.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╠п╬п╩я▄я┬п╬пЁп╬ п╥п╫п╟я┤п╣п╫п╦я▐ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ expires
+       п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault.
+       п║п©п╟я│п╦п╠п╬ Joaquin Cuenca Abela.
 
-    *) Исправление: nginx неверно определял длину строки кэша на 
-       Pentium 4.
-       Спасибо Геннадию Махомеду.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣п╡п╣я─п╫п╬ п╬п©я─п╣п╢п╣п╩я▐п╩ п╢п╩п╦п╫я┐ я│я┌я─п╬п╨п╦ п╨я█я┬п╟ п╫п╟ Pentium 4.
+       п║п©п╟я│п╦п╠п╬ п⌠п╣п╫п╫п╟п╢п╦я▌ п°п╟я┘п╬п╪п╣п╢я┐.
 
-    *) Исправление: в проксированных подзапросах и подзапросах к 
-       FastCGI-серверу вместо метода GET использовался оригинальный метод 
-       клиента.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╫я▀я┘ п©п╬п╢п╥п╟п©я─п╬я│п╟я┘ п╦ п©п╬п╢п╥п╟п©я─п╬я│п╟я┘ п╨
+       FastCGI-я│п╣я─п╡п╣я─я┐ п╡п╪п╣я│я┌п╬ п╪п╣я┌п╬п╢п╟ GET п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩я│я▐ п╬я─п╦пЁп╦п╫п╟п╩я▄п╫я▀п╧ п╪п╣я┌п╬п╢
+       п╨п╩п╦п╣п╫я┌п╟.
 
-    *) Исправление: утечки сокетов в режиме HTTPS при использовании 
-       отложенного accept'а.
-       Спасибо Ben Maurer.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┐я┌п╣я┤п╨п╦ я│п╬п╨п╣я┌п╬п╡ п╡ я─п╣п╤п╦п╪п╣ HTTPS п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦
+       п╬я┌п╩п╬п╤п╣п╫п╫п╬пЁп╬ accept'п╟.
+       п║п©п╟я│п╦п╠п╬ Ben Maurer.
 
-    *) Исправление: nginx выдавал ошибочное сообщение "SSL_shutdown() 
-       failed (SSL: )"; ошибка появилась в 0.6.23.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╡я▀п╢п╟п╡п╟п╩ п╬я┬п╦п╠п╬я┤п╫п╬п╣ я│п╬п╬п╠я┴п╣п╫п╦п╣ "SSL_shutdown() failed
+       (SSL: )"; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.6.23.
 
-    *) Исправление: при использовании HTTPS запросы могли завершаться с 
-       ошибкой "bad write retry"; ошибка появилась в 0.6.23.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ HTTPS п╥п╟п©я─п╬я│я▀ п╪п╬пЁп╩п╦ п╥п╟п╡п╣я─я┬п╟я┌я▄я│я▐ я│
+       п╬я┬п╦п╠п╨п╬п╧ "bad write retry"; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.6.23.
 
 
-Изменения в nginx 0.6.25                                          08.01.2008
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.6.25                                          08.01.2008
 
-    *) Изменение: вместо специального параметра "*" в директиве server_name 
-       теперь используется директива server_name_in_redirect.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╡п╪п╣я│я┌п╬ я│п©п╣я├п╦п╟п╩я▄п╫п╬пЁп╬ п©п╟я─п╟п╪п╣я┌я─п╟ "*" п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ server_name
+       я┌п╣п©п╣я─я▄ п╦я│п©п╬п╩я▄п╥я┐п╣я┌я│я▐ п╢п╦я─п╣п╨я┌п╦п╡п╟ server_name_in_redirect.
 
-    *) Изменение: в качестве основного имени в директиве server_name теперь 
-       можно использовать имена с масками и регулярными выражениями.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╡ п╨п╟я┤п╣я│я┌п╡п╣ п╬я│п╫п╬п╡п╫п╬пЁп╬ п╦п╪п╣п╫п╦ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ server_name я┌п╣п©п╣я─я▄
+       п╪п╬п╤п╫п╬ п╦я│п©п╬п╩я▄п╥п╬п╡п╟я┌я▄ п╦п╪п╣п╫п╟ я│ п╪п╟я│п╨п╟п╪п╦ п╦ я─п╣пЁя┐п╩я▐я─п╫я▀п╪п╦ п╡я▀я─п╟п╤п╣п╫п╦я▐п╪п╦.
 
-    *) Изменение: директива satisfy_any заменена директивой satisfy.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ satisfy_any п╥п╟п╪п╣п╫п╣п╫п╟ п╢п╦я─п╣п╨я┌п╦п╡п╬п╧ satisfy.
 
-    *) Изменение: после переконфигурации старые рабочие процесс могли 
-       сильно нагружать процессор при запуске под Linux OpenVZ.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п©п╬я│п╩п╣ п©п╣я─п╣п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦ я│я┌п╟я─я▀п╣ я─п╟п╠п╬я┤п╦п╣ п©я─п╬я├п╣я│я│ п╪п╬пЁп╩п╦ я│п╦п╩я▄п╫п╬
+       п╫п╟пЁя─я┐п╤п╟я┌я▄ п©я─п╬я├п╣я│я│п╬я─ п©я─п╦ п╥п╟п©я┐я│п╨п╣ п©п╬п╢ Linux OpenVZ.
 
-    *) Добавление: директива min_delete_depth.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ min_delete_depth.
 
-    *) Исправление: методы COPY и MOVE не работали с одиночными файлами.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╣я┌п╬п╢я▀ COPY п╦ MOVE п╫п╣ я─п╟п╠п╬я┌п╟п╩п╦ я│ п╬п╢п╦п╫п╬я┤п╫я▀п╪п╦ я└п╟п╧п╩п╟п╪п╦.
 
-    *) Исправление: модуль ngx_http_gzip_static_module не позволял работать 
-       модулю ngx_http_dav_module; ошибка появилась в 0.6.23.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_gzip_static_module п╫п╣ п©п╬п╥п╡п╬п╩я▐п╩ я─п╟п╠п╬я┌п╟я┌я▄
+       п╪п╬п╢я┐п╩я▌ ngx_http_dav_module; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.6.23.
 
-    *) Исправление: утечки сокетов в режиме HTTPS при использовании 
-       отложенного accept'а.
-       Спасибо Ben Maurer.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┐я┌п╣я┤п╨п╦ я│п╬п╨п╣я┌п╬п╡ п╡ я─п╣п╤п╦п╪п╣ HTTPS п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦
+       п╬я┌п╩п╬п╤п╣п╫п╫п╬пЁп╬ accept'п╟.
+       п║п©п╟я│п╦п╠п╬ Ben Maurer.
 
-    *) Исправление: nginx не собирался без библиотеки PCRE; ошибка 
-       появилась в 0.6.23.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╠п╣п╥ п╠п╦п╠п╩п╦п╬я┌п╣п╨п╦ PCRE; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄
+       п╡ 0.6.23.
 
 
-Изменения в nginx 0.6.24                                          27.12.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.6.24                                          27.12.2007
 
-    *) Исправление: при использовании HTTPS в рабочем процессе мог 
-       произойти segmentation fault; ошибка появилась в 0.6.23.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ HTTPS п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦
+       segmentation fault; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.6.23.
 
 
-Изменения в nginx 0.6.23                                          27.12.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.6.23                                          27.12.2007
 
-    *) Изменение: параметр "off" в директиве ssl_session_cache; теперь этот 
-       параметр используется по умолчанию.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ "off" п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ ssl_session_cache; я┌п╣п©п╣я─я▄ я█я┌п╬я┌
+       п©п╟я─п╟п╪п╣я┌я─ п╦я│п©п╬п╩я▄п╥я┐п╣я┌я│я▐ п©п╬ я┐п╪п╬п╩я┤п╟п╫п╦я▌.
 
-    *) Изменение: директива open_file_cache_retest переименована в 
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ open_file_cache_retest п©п╣я─п╣п╦п╪п╣п╫п╬п╡п╟п╫п╟ п╡
        open_file_cache_valid.
 
-    *) Добавление: директива open_file_cache_min_uses.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ open_file_cache_min_uses.
 
-    *) Добавление: модуль ngx_http_gzip_static_module.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_gzip_static_module.
 
-    *) Добавление: директива gzip_disable.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ gzip_disable.
 
-    *) Добавление: директиву memcached_pass можно использовать внутри блока 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я┐ memcached_pass п╪п╬п╤п╫п╬ п╦я│п©п╬п╩я▄п╥п╬п╡п╟я┌я▄ п╡п╫я┐я┌я─п╦ п╠п╩п╬п╨п╟
        if.
 
-    *) Исправление: если внутри одного location'а использовались директивы 
-       "memcached_pass" и "if", то в рабочем процессе происходил 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡п╫я┐я┌я─п╦ п╬п╢п╫п╬пЁп╬ location'п╟ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╦я│я▄ п╢п╦я─п╣п╨я┌п╦п╡я▀
+       "memcached_pass" п╦ "if", я┌п╬ п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п©я─п╬п╦я│я┘п╬п╢п╦п╩
        segmentation fault.
 
-    *) Исправление: если при использовании директивы satisfy_any on" были 
-       заданы директивы не всех модулей доступа, то заданные директивы не 
-       проверялись.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀ satisfy_any on" п╠я▀п╩п╦
+       п╥п╟п╢п╟п╫я▀ п╢п╦я─п╣п╨я┌п╦п╡я▀ п╫п╣ п╡я│п╣я┘ п╪п╬п╢я┐п╩п╣п╧ п╢п╬я│я┌я┐п©п╟, я┌п╬ п╥п╟п╢п╟п╫п╫я▀п╣ п╢п╦я─п╣п╨я┌п╦п╡я▀ п╫п╣
+       п©я─п╬п╡п╣я─я▐п╩п╦я│я▄.
 
-    *) Исправление: параметры, заданные регулярным выражением в директиве 
-       valid_referers, не наследовалась с предыдущего уровня.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─я▀, п╥п╟п╢п╟п╫п╫я▀п╣ я─п╣пЁя┐п╩я▐я─п╫я▀п╪ п╡я▀я─п╟п╤п╣п╫п╦п╣п╪ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣
+       valid_referers, п╫п╣ п╫п╟я│п╩п╣п╢п╬п╡п╟п╩п╟я│я▄ я│ п©я─п╣п╢я▀п╢я┐я┴п╣пЁп╬ я┐я─п╬п╡п╫я▐.
 
-    *) Исправление: директива post_action не работала, если запрос 
-       завершался с кодом 499.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ post_action п╫п╣ я─п╟п╠п╬я┌п╟п╩п╟, п╣я│п╩п╦ п╥п╟п©я─п╬я│
+       п╥п╟п╡п╣я─я┬п╟п╩я│я▐ я│ п╨п╬п╢п╬п╪ 499.
 
-    *) Исправление: оптимизация использования 16K буфера для 
-       SSL-соединения.
-       Спасибо Ben Maurer.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬п©я┌п╦п╪п╦п╥п╟я├п╦я▐ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦я▐ 16K п╠я┐я└п╣я─п╟ п╢п╩я▐ SSL-я│п╬п╣п╢п╦п╫п╣п╫п╦я▐.
+       п║п©п╟я│п╦п╠п╬ Ben Maurer.
 
-    *) Исправление: STARTTLS в режиме SMTP не работал.
-       Спасибо Олегу Мотиенко.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: STARTTLS п╡ я─п╣п╤п╦п╪п╣ SMTP п╫п╣ я─п╟п╠п╬я┌п╟п╩.
+       п║п©п╟я│п╦п╠п╬ п·п╩п╣пЁя┐ п°п╬я┌п╦п╣п╫п╨п╬.
 
-    *) Исправление: при использовании HTTPS запросы могли завершаться с 
-       ошибкой "bad write retry"; ошибка появилась в 0.5.13.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ HTTPS п╥п╟п©я─п╬я│я▀ п╪п╬пЁп╩п╦ п╥п╟п╡п╣я─я┬п╟я┌я▄я│я▐ я│
+       п╬я┬п╦п╠п╨п╬п╧ "bad write retry"; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.5.13.
 
 
-Изменения в nginx 0.6.22                                          19.12.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.6.22                                          19.12.2007
 
-    *) Изменение: теперь все методы модуля ngx_http_perl_module возвращают 
-       значения, скопированные в память, выделенную perl'ом.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╡я│п╣ п╪п╣я┌п╬п╢я▀ п╪п╬п╢я┐п╩я▐ ngx_http_perl_module п╡п╬п╥п╡я─п╟я┴п╟я▌я┌
+       п╥п╫п╟я┤п╣п╫п╦я▐, я│п╨п╬п©п╦я─п╬п╡п╟п╫п╫я▀п╣ п╡ п©п╟п╪я▐я┌я▄, п╡я▀п╢п╣п╩п╣п╫п╫я┐я▌ perl'п╬п╪.
 
-    *) Исправление: если nginx был собран с модулем ngx_http_perl_module, 
-       использовался perl до версии 5.8.6 и perl поддерживал потоки, то во 
-       время переконфигурации основной процесс аварийно выходил; ошибка 
-       появилась в 0.5.9.
-       Спасибо Борису Жмурову.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ nginx п╠я▀п╩ я│п╬п╠я─п╟п╫ я│ п╪п╬п╢я┐п╩п╣п╪ ngx_http_perl_module,
+       п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩я│я▐ perl п╢п╬ п╡п╣я─я│п╦п╦ 5.8.6 п╦ perl п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╩ п©п╬я┌п╬п╨п╦, я┌п╬ п╡п╬
+       п╡я─п╣п╪я▐ п©п╣я─п╣п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦ п╬я│п╫п╬п╡п╫п╬п╧ п©я─п╬я├п╣я│я│ п╟п╡п╟я─п╦п╧п╫п╬ п╡я▀я┘п╬п╢п╦п╩; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.5.9.
+       п║п©п╟я│п╦п╠п╬ п▒п╬я─п╦я│я┐ п√п╪я┐я─п╬п╡я┐.
 
-    *) Исправление: в методы модуля ngx_http_perl_module могли передаваться 
-       неверные результаты выделения в регулярных выражениях.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╪п╣я┌п╬п╢я▀ п╪п╬п╢я┐п╩я▐ ngx_http_perl_module п╪п╬пЁп╩п╦ п©п╣я─п╣п╢п╟п╡п╟я┌я▄я│я▐
+       п╫п╣п╡п╣я─п╫я▀п╣ я─п╣п╥я┐п╩я▄я┌п╟я┌я▀ п╡я▀п╢п╣п╩п╣п╫п╦я▐ п╡ я─п╣пЁя┐п╩я▐я─п╫я▀я┘ п╡я▀я─п╟п╤п╣п╫п╦я▐я┘.
 
-    *) Исправление: если метод $r->has_request_body() вызывался для 
-       запроса, у которого небольшое тело запроса было уже полностью 
-       получено, то в рабочем процессе происходил segmentation fault.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╪п╣я┌п╬п╢ $r->has_request_body() п╡я▀п╥я▀п╡п╟п╩я│я▐ п╢п╩я▐ п╥п╟п©я─п╬я│п╟,
+       я┐ п╨п╬я┌п╬я─п╬пЁп╬ п╫п╣п╠п╬п╩я▄я┬п╬п╣ я┌п╣п╩п╬ п╥п╟п©я─п╬я│п╟ п╠я▀п╩п╬ я┐п╤п╣ п©п╬п╩п╫п╬я│я┌я▄я▌ п©п╬п╩я┐я┤п╣п╫п╬, я┌п╬ п╡
+       я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault.
 
-    *) Исправление: large_client_header_buffers не освобождались перед 
-       переходом в состояние keep-alive.
-       Спасибо Олександру Штепе.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: large_client_header_buffers п╫п╣ п╬я│п╡п╬п╠п╬п╤п╢п╟п╩п╦я│я▄ п©п╣я─п╣п╢
+       п©п╣я─п╣я┘п╬п╢п╬п╪ п╡ я│п╬я│я┌п╬я▐п╫п╦п╣ keep-alive.
+       п║п©п╟я│п╦п╠п╬ п·п╩п╣п╨я│п╟п╫п╢я─я┐ п╗я┌п╣п©п╣.
 
-    *) Исправление: в переменной $upstream_addr не записывался последний 
-       адрес; ошибка появилась в 0.6.18.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п©п╣я─п╣п╪п╣п╫п╫п╬п╧ $upstream_addr п╫п╣ п╥п╟п©п╦я│я▀п╡п╟п╩я│я▐ п©п╬я│п╩п╣п╢п╫п╦п╧
+       п╟п╢я─п╣я│; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.6.18.
 
-    *) Исправление: директива fastcgi_catch_stderr не возвращала ошибку; 
-       теперь она возвращает ошибку 502, которую можно направить на 
-       следующий сервер с помощью "fastcgi_next_upstream invalid_header".
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ fastcgi_catch_stderr п╫п╣ п╡п╬п╥п╡я─п╟я┴п╟п╩п╟ п╬я┬п╦п╠п╨я┐;
+       я┌п╣п©п╣я─я▄ п╬п╫п╟ п╡п╬п╥п╡я─п╟я┴п╟п╣я┌ п╬я┬п╦п╠п╨я┐ 502, п╨п╬я┌п╬я─я┐я▌ п╪п╬п╤п╫п╬ п╫п╟п©я─п╟п╡п╦я┌я▄ п╫п╟
+       я│п╩п╣п╢я┐я▌я┴п╦п╧ я│п╣я─п╡п╣я─ я│ п©п╬п╪п╬я┴я▄я▌ "fastcgi_next_upstream invalid_header".
 
-    *) Исправление: при использовании директивы fastcgi_catch_stderr в 
-       основном процессе происходил segmentation fault; ошибка появилась в 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀ fastcgi_catch_stderr п╡
+       п╬я│п╫п╬п╡п╫п╬п╪ п©я─п╬я├п╣я│я│п╣ п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
        0.6.10.
-       Спасибо Manlio Perillo.
+       п║п©п╟я│п╦п╠п╬ Manlio Perillo.
 
 
-Изменения в nginx 0.6.21                                          03.12.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.6.21                                          03.12.2007
 
-    *) Изменение: если в значениях переменных директивы proxy_pass 
-       используются только IP-адреса, то указывать resolver не нужно.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╣я│п╩п╦ п╡ п╥п╫п╟я┤п╣п╫п╦я▐я┘ п©п╣я─п╣п╪п╣п╫п╫я▀я┘ п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_pass
+       п╦я│п©п╬п╩я▄п╥я┐я▌я┌я│я▐ я┌п╬п╩я▄п╨п╬ IP-п╟п╢я─п╣я│п╟, я┌п╬ я┐п╨п╟п╥я▀п╡п╟я┌я▄ resolver п╫п╣ п╫я┐п╤п╫п╬.
 
-    *) Исправление: при использовании директивы proxy_pass c URI-частью в 
-       рабочем процессе мог произойти segmentation fault; ошибка появилась 
-       в 0.6.19.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_pass c URI-я┤п╟я│я┌я▄я▌ п╡
+       я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
+       0.6.19.
 
-    *) Исправление: если resolver использовался на платформах, не 
-       поддерживающих метод kqueue, то nginx выдавал alert "name is out of 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ resolver п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩я│я▐ п╫п╟ п©п╩п╟я┌я└п╬я─п╪п╟я┘, п╫п╣
+       п©п╬п╢п╢п╣я─п╤п╦п╡п╟я▌я┴п╦я┘ п╪п╣я┌п╬п╢ kqueue, я┌п╬ nginx п╡я▀п╢п╟п╡п╟п╩ alert "name is out of
        response".
-       Спасибо Андрею Нигматулину.
+       п║п©п╟я│п╦п╠п╬ п░п╫п╢я─п╣я▌ п²п╦пЁп╪п╟я┌я┐п╩п╦п╫я┐.
 
-    *) Исправление: При использовании переменной $server_protocol в 
-       FastCGI-параметрах и запросе, длина которого была близка к значению 
-       директивы client_header_buffer_size, nginx выдавал alert "fastcgi: 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п÷я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п©п╣я─п╣п╪п╣п╫п╫п╬п╧ $server_protocol п╡
+       FastCGI-п©п╟я─п╟п╪п╣я┌я─п╟я┘ п╦ п╥п╟п©я─п╬я│п╣, п╢п╩п╦п╫п╟ п╨п╬я┌п╬я─п╬пЁп╬ п╠я▀п╩п╟ п╠п╩п╦п╥п╨п╟ п╨ п╥п╫п╟я┤п╣п╫п╦я▌
+       п╢п╦я─п╣п╨я┌п╦п╡я▀ client_header_buffer_size, nginx п╡я▀п╢п╟п╡п╟п╩ alert "fastcgi:
        the request record is too big".
 
-    *) Исправление: при обычном запросе версии HTTP/0.9 к HTTPS серверу 
-       nginx возвращал обычный ответ.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╬п╠я▀я┤п╫п╬п╪ п╥п╟п©я─п╬я│п╣ п╡п╣я─я│п╦п╦ HTTP/0.9 п╨ HTTPS я│п╣я─п╡п╣я─я┐
+       nginx п╡п╬п╥п╡я─п╟я┴п╟п╩ п╬п╠я▀я┤п╫я▀п╧ п╬я┌п╡п╣я┌.
 
 
-Изменения в nginx 0.6.20                                          28.11.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.6.20                                          28.11.2007
 
-    *) Исправление: при использовании директивы proxy_pass c URI-частью в 
-       рабочем процессе мог произойти segmentation fault; ошибка появилась 
-       в 0.6.19.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_pass c URI-я┤п╟я│я┌я▄я▌ п╡
+       я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
+       0.6.19.
 
 
-Изменения в nginx 0.6.19                                          27.11.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.6.19                                          27.11.2007
 
-    *) Исправление: версия 0.6.18 не собиралась.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡п╣я─я│п╦я▐ 0.6.18 п╫п╣ я│п╬п╠п╦я─п╟п╩п╟я│я▄.
 
 
-Изменения в nginx 0.6.18                                          27.11.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.6.18                                          27.11.2007
 
-    *) Изменение: теперь модуль ngx_http_userid_module в поле куки с 
-       номером процесса добавляет микросекунды на время старта.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╪п╬п╢я┐п╩я▄ ngx_http_userid_module п╡ п©п╬п╩п╣ п╨я┐п╨п╦ я│ п╫п╬п╪п╣я─п╬п╪
+       п©я─п╬я├п╣я│я│п╟ п╢п╬п╠п╟п╡п╩я▐п╣я┌ п╪п╦п╨я─п╬я│п╣п╨я┐п╫п╢я▀ п╫п╟ п╡я─п╣п╪я▐ я│я┌п╟я─я┌п╟.
 
-    *) Изменение: в error_log теперь записывается полная строка запроса 
-       вместо только URI.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╡ error_log я┌п╣п©п╣я─я▄ п╥п╟п©п╦я│я▀п╡п╟п╣я┌я│я▐ п©п╬п╩п╫п╟я▐ я│я┌я─п╬п╨п╟ п╥п╟п©я─п╬я│п╟
+       п╡п╪п╣я│я┌п╬ я┌п╬п╩я▄п╨п╬ URI.
 
-    *) Добавление: директива proxy_pass поддерживает переменные.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ proxy_pass п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п©п╣я─п╣п╪п╣п╫п╫я▀п╣.
 
-    *) Добавление: директивы resolver и resolver_timeout.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ resolver п╦ resolver_timeout.
 
-    *) Добавление: теперь директива "add_header last-modified ''" удаляет в 
-       заголовке ответа строку "Last-Modified".
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╢п╦я─п╣п╨я┌п╦п╡п╟ "add_header last-modified ''" я┐п╢п╟п╩я▐п╣я┌ п╡
+       п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╬я┌п╡п╣я┌п╟ я│я┌я─п╬п╨я┐ "Last-Modified".
 
-    *) Исправление: директива limit_rate не позволяла передавать на полной 
-       скорости, даже если был указан очень большой лимит.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ limit_rate п╫п╣ п©п╬п╥п╡п╬п╩я▐п╩п╟ п©п╣я─п╣п╢п╟п╡п╟я┌я▄ п╫п╟ п©п╬п╩п╫п╬п╧
+       я│п╨п╬я─п╬я│я┌п╦, п╢п╟п╤п╣ п╣я│п╩п╦ п╠я▀п╩ я┐п╨п╟п╥п╟п╫ п╬я┤п╣п╫я▄ п╠п╬п╩я▄я┬п╬п╧ п╩п╦п╪п╦я┌.
 
 
-Изменения в nginx 0.6.17                                          15.11.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.6.17                                          15.11.2007
 
-    *) Добавление: поддержка строки "If-Range" в заголовке запроса.
-       Спасибо Александру Инюхину.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╬п╢п╢п╣я─п╤п╨п╟ я│я┌я─п╬п╨п╦ "If-Range" п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╥п╟п©я─п╬я│п╟.
+       п║п©п╟я│п╦п╠п╬ п░п╩п╣п╨я│п╟п╫п╢я─я┐ п≤п╫я▌я┘п╦п╫я┐.
 
-    *) Исправление: при использовании директивы msie_refresh повторно 
-       экранировались уже экранированные символы; ошибка появилась в 0.6.4.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀ msie_refresh п©п╬п╡я┌п╬я─п╫п╬
+       я█п╨я─п╟п╫п╦я─п╬п╡п╟п╩п╦я│я▄ я┐п╤п╣ я█п╨я─п╟п╫п╦я─п╬п╡п╟п╫п╫я▀п╣ я│п╦п╪п╡п╬п╩я▀; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.6.4.
 
-    *) Исправление: директива autoindex не работала при использовании 
-       "alias /".
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ autoindex п╫п╣ я─п╟п╠п╬я┌п╟п╩п╟ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ "alias
+       /".
 
-    *) Исправление: при использовании подзапросов в рабочем процессе мог 
-       произойти segmentation fault.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п©п╬п╢п╥п╟п©я─п╬я│п╬п╡ п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ
+       п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault.
 
-    *) Исправление: при использовании SSL и gzip большие ответы могли 
-       передаваться не полностью.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ SSL п╦ gzip п╠п╬п╩я▄я┬п╦п╣ п╬я┌п╡п╣я┌я▀ п╪п╬пЁп╩п╦
+       п©п╣я─п╣п╢п╟п╡п╟я┌я▄я│я▐ п╫п╣ п©п╬п╩п╫п╬я│я┌я▄я▌.
 
-    *) Исправление: если ответ проксированного сервера был версии HTTP/0.9, 
-       то переменная $status была равна 0.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╬я┌п╡п╣я┌ п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╫п╬пЁп╬ я│п╣я─п╡п╣я─п╟ п╠я▀п╩ п╡п╣я─я│п╦п╦ HTTP/0.9,
+       я┌п╬ п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $status п╠я▀п╩п╟ я─п╟п╡п╫п╟ 0.
 
 
-Изменения в nginx 0.6.16                                          29.10.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.6.16                                          29.10.2007
 
-    *) Изменение: теперь на Linux используется uname(2) вместо procfs.
-       Спасибо Илье Новикову.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╫п╟ Linux п╦я│п©п╬п╩я▄п╥я┐п╣я┌я│я▐ uname(2) п╡п╪п╣я│я┌п╬ procfs.
+       п║п©п╟я│п╦п╠п╬ п≤п╩я▄п╣ п²п╬п╡п╦п╨п╬п╡я┐.
 
-    *) Исправление: если в директиве error_page использовался символ "?", 
-       то он экранировался при проксировании запроса; ошибка появилась в 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ error_page п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩я│я▐ я│п╦п╪п╡п╬п╩ "?", я┌п╬
+       п╬п╫ я█п╨я─п╟п╫п╦я─п╬п╡п╟п╩я│я▐ п©я─п╦ п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╦п╦ п╥п╟п©я─п╬я│п╟; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
        0.6.11.
 
-    *) Исправление: совместимость с mget.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я│п╬п╡п╪п╣я│я┌п╦п╪п╬я│я┌я▄ я│ mget.
 
 
-Изменения в nginx 0.6.15                                          22.10.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.6.15                                          22.10.2007
 
-    *) Добавление: совместимость с Cygwin.
-       Спасибо Владимиру Кутакову.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я│п╬п╡п╪п╣я│я┌п╦п╪п╬я│я┌я▄ я│ Cygwin.
+       п║п©п╟я│п╦п╠п╬ п▓п╩п╟п╢п╦п╪п╦я─я┐ п я┐я┌п╟п╨п╬п╡я┐.
 
-    *) Добавление: директива merge_slashes.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ merge_slashes.
 
-    *) Добавление: директива gzip_vary.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ gzip_vary.
 
-    *) Добавление: директива server_tokens.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ server_tokens.
 
-    *) Исправление: nginx не раскодировал URI в команде SSI include.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я─п╟я│п╨п╬п╢п╦я─п╬п╡п╟п╩ URI п╡ п╨п╬п╪п╟п╫п╢п╣ SSI include.
 
-    *) Исправление: при использовании переменной в директивах charset или 
-       source_charset на старте или во время переконфигурации происходил 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п©п╣я─п╣п╪п╣п╫п╫п╬п╧ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╟я┘ charset п╦п╩п╦
+       source_charset п╫п╟ я│я┌п╟я─я┌п╣ п╦п╩п╦ п╡п╬ п╡я─п╣п╪я▐ п©п╣я─п╣п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦ п©я─п╬п╦я│я┘п╬п╢п╦п╩
        segmentation fault,
 
-    *) Исправление: nginx возвращал ошибку 400 на запросы вида 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╡п╬п╥п╡я─п╟я┴п╟п╩ п╬я┬п╦п╠п╨я┐ 400 п╫п╟ п╥п╟п©я─п╬я│я▀ п╡п╦п╢п╟
        "GET http://www.domain.com HTTP/1.0".
-       Спасибо James Oakley.
+       п║п©п╟я│п╦п╠п╬ James Oakley.
 
-    *) Исправление: после перенаправления запроса с телом запроса с помощью 
-       директивы error_page nginx пытался снова прочитать тело запроса; 
-       ошибка появилась в 0.6.7.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╬я│п╩п╣ п©п╣я─п╣п╫п╟п©я─п╟п╡п╩п╣п╫п╦я▐ п╥п╟п©я─п╬я│п╟ я│ я┌п╣п╩п╬п╪ п╥п╟п©я─п╬я│п╟ я│ п©п╬п╪п╬я┴я▄я▌
+       п╢п╦я─п╣п╨я┌п╦п╡я▀ error_page nginx п©я▀я┌п╟п╩я│я▐ я│п╫п╬п╡п╟ п©я─п╬я┤п╦я┌п╟я┌я▄ я┌п╣п╩п╬ п╥п╟п©я─п╬я│п╟;
+       п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.6.7.
 
-    *) Исправление: в рабочем процессе происходил segmentation fault, если 
-       у сервера, обрабатывающему запрос, не был явно определён 
-       server_name; ошибка появилась в 0.6.7.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault, п╣я│п╩п╦ я┐
+       я│п╣я─п╡п╣я─п╟, п╬п╠я─п╟п╠п╟я┌я▀п╡п╟я▌я┴п╣п╪я┐ п╥п╟п©я─п╬я│, п╫п╣ п╠я▀п╩ я▐п╡п╫п╬ п╬п©я─п╣п╢п╣п╩я▒п╫ server_name;
+       п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.6.7.
 
 
-Изменения в nginx 0.6.14                                          15.10.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.6.14                                          15.10.2007
 
-    *) Изменение: теперь по умолчанию команда SSI echo использует 
-       кодирование entity.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п©п╬ я┐п╪п╬п╩я┤п╟п╫п╦я▌ п╨п╬п╪п╟п╫п╢п╟ SSI echo п╦я│п©п╬п╩я▄п╥я┐п╣я┌
+       п╨п╬п╢п╦я─п╬п╡п╟п╫п╦п╣ entity.
 
-    *) Добавление: параметр encoding в команде SSI echo.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ encoding п╡ п╨п╬п╪п╟п╫п╢п╣ SSI echo.
 
-    *) Добавление: директиву access_log можно использовать внутри блока 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я┐ access_log п╪п╬п╤п╫п╬ п╦я│п©п╬п╩я▄п╥п╬п╡п╟я┌я▄ п╡п╫я┐я┌я─п╦ п╠п╩п╬п╨п╟
        limit_except.
 
-    *) Исправление: если все сервера апстрима оказывались недоступными, то 
-       до восстановления работоспособности у всех серверов вес становился 
-       равным одному; ошибка появилась в 0.6.6.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡я│п╣ я│п╣я─п╡п╣я─п╟ п╟п©я│я┌я─п╦п╪п╟ п╬п╨п╟п╥я▀п╡п╟п╩п╦я│я▄ п╫п╣п╢п╬я│я┌я┐п©п╫я▀п╪п╦, я┌п╬
+       п╢п╬ п╡п╬я│я│я┌п╟п╫п╬п╡п╩п╣п╫п╦я▐ я─п╟п╠п╬я┌п╬я│п©п╬я│п╬п╠п╫п╬я│я┌п╦ я┐ п╡я│п╣я┘ я│п╣я─п╡п╣я─п╬п╡ п╡п╣я│ я│я┌п╟п╫п╬п╡п╦п╩я│я▐
+       я─п╟п╡п╫я▀п╪ п╬п╢п╫п╬п╪я┐; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.6.6.
 
-    *) Исправление: при использовании переменных $date_local и $date_gmt 
-       вне модуля ngx_http_ssi_filter_module в рабочем процессе происходил 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п©п╣я─п╣п╪п╣п╫п╫я▀я┘ $date_local п╦ $date_gmt п╡п╫п╣
+       п╪п╬п╢я┐п╩я▐ ngx_http_ssi_filter_module п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п©я─п╬п╦я│я┘п╬п╢п╦п╩
        segmentation fault.
 
-    *) Исправление: при использовании включённом отладочном логе в рабочем 
-       процессе мог произойти segmentation fault.
-       Спасибо Андрею Нигматулину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╡п╨п╩я▌я┤я▒п╫п╫п╬п╪ п╬я┌п╩п╟п╢п╬я┤п╫п╬п╪ п╩п╬пЁп╣ п╡ я─п╟п╠п╬я┤п╣п╪
+       п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault.
+       п║п©п╟я│п╦п╠п╬ п░п╫п╢я─п╣я▌ п²п╦пЁп╪п╟я┌я┐п╩п╦п╫я┐.
 
-    *) Исправление: ngx_http_memcached_module не устанавливал 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: ngx_http_memcached_module п╫п╣ я┐я│я┌п╟п╫п╟п╡п╩п╦п╡п╟п╩
        $upstream_response_time.
-       Спасибо Максиму Дунину.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: рабочий процесс мог зациклиться при использовании 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я─п╟п╠п╬я┤п╦п╧ п©я─п╬я├п╣я│я│ п╪п╬пЁ п╥п╟я├п╦п╨п╩п╦я┌я▄я│я▐ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦
        memcached.
 
-    *) Исправление: nginx распознавал параметры "close" и "keep-alive" в 
-       строке "Connection" в заголовке запроса только, если они были в 
-       нижнем регистре; ошибка появилась в 0.6.11.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx я─п╟я│п©п╬п╥п╫п╟п╡п╟п╩ п©п╟я─п╟п╪п╣я┌я─я▀ "close" п╦ "keep-alive" п╡
+       я│я┌я─п╬п╨п╣ "Connection" п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╥п╟п©я─п╬я│п╟ я┌п╬п╩я▄п╨п╬, п╣я│п╩п╦ п╬п╫п╦ п╠я▀п╩п╦ п╡
+       п╫п╦п╤п╫п╣п╪ я─п╣пЁп╦я│я┌я─п╣; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.6.11.
 
-    *) Исправление: sub_filter не работал с пустой строкой замены.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: sub_filter п╫п╣ я─п╟п╠п╬я┌п╟п╩ я│ п©я┐я│я┌п╬п╧ я│я┌я─п╬п╨п╬п╧ п╥п╟п╪п╣п╫я▀.
 
-    *) Исправление: в парсинге sub_filter.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п©п╟я─я│п╦п╫пЁп╣ sub_filter.
 
 
-Изменения в nginx 0.6.13                                          24.09.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.6.13                                          24.09.2007
 
-    *) Исправление: nginx не закрывал файл каталога для запроса HEAD, если 
-       использовался autoindex
-       Спасибо Arkadiusz Patyk.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ п╥п╟п╨я─я▀п╡п╟п╩ я└п╟п╧п╩ п╨п╟я┌п╟п╩п╬пЁп╟ п╢п╩я▐ п╥п╟п©я─п╬я│п╟ HEAD, п╣я│п╩п╦
+       п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩я│я▐ autoindex
+       п║п©п╟я│п╦п╠п╬ Arkadiusz Patyk.
 
 
-Изменения в nginx 0.6.12                                          21.09.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.6.12                                          21.09.2007
 
-    *) Изменение: почтовый прокси-сервер разделён на три модуля: pop3, imap 
-       и smtp.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п©п╬я┤я┌п╬п╡я▀п╧ п©я─п╬п╨я│п╦-я│п╣я─п╡п╣я─ я─п╟п╥п╢п╣п╩я▒п╫ п╫п╟ я┌я─п╦ п╪п╬п╢я┐п╩я▐: pop3, imap
+       п╦ smtp.
 
-    *) Добавление: параметры конфигурации --without-mail_pop3_module, 
-       --without-mail_imap_module и --without-mail_smtp_module.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─я▀ п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦ --without-mail_pop3_module,
+       --without-mail_imap_module п╦ --without-mail_smtp_module.
 
-    *) Добавление: директивы smtp_greeting_delay и smtp_client_buffer 
-       модуля ngx_mail_smtp_module.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ smtp_greeting_delay п╦ smtp_client_buffer п╪п╬п╢я┐п╩я▐
+       ngx_mail_smtp_module.
 
-    *) Исправление: wildcard в конце имени сервера не работали; ошибка 
-       появилась в 0.6.9.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: wildcard п╡ п╨п╬п╫я├п╣ п╦п╪п╣п╫п╦ я│п╣я─п╡п╣я─п╟ п╫п╣ я─п╟п╠п╬я┌п╟п╩п╦; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.6.9.
 
-    *) Исправление: при использовании разделяемой библиотеки PCRE, 
-       расположенной в нестандартном месте, nginx не запускался на Solaris.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ я─п╟п╥п╢п╣п╩я▐п╣п╪п╬п╧ п╠п╦п╠п╩п╦п╬я┌п╣п╨п╦ PCRE,
+       я─п╟я│п©п╬п╩п╬п╤п╣п╫п╫п╬п╧ п╡ п╫п╣я│я┌п╟п╫п╢п╟я─я┌п╫п╬п╪ п╪п╣я│я┌п╣, nginx п╫п╣ п╥п╟п©я┐я│п╨п╟п╩я│я▐ п╫п╟ Solaris.
 
-    *) Исправление: директивы proxy_hide_header и fastcgi_hide_header не 
-       скрывали строки заголовка ответа с именем больше 32 символов.
-       Спасибо Manlio Perillo.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_hide_header п╦ fastcgi_hide_header п╫п╣
+       я│п╨я─я▀п╡п╟п╩п╦ я│я┌я─п╬п╨п╦ п╥п╟пЁп╬п╩п╬п╡п╨п╟ п╬я┌п╡п╣я┌п╟ я│ п╦п╪п╣п╫п╣п╪ п╠п╬п╩я▄я┬п╣ 32 я│п╦п╪п╡п╬п╩п╬п╡.
+       п║п©п╟я│п╦п╠п╬ Manlio Perillo.
 
 
-Изменения в nginx 0.6.11                                          11.09.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.6.11                                          11.09.2007
 
-    *) Исправление: счётчик активных соединений всегда рос при 
-       использовании почтового прокси-сервера.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я│я┤я▒я┌я┤п╦п╨ п╟п╨я┌п╦п╡п╫я▀я┘ я│п╬п╣п╢п╦п╫п╣п╫п╦п╧ п╡я│п╣пЁп╢п╟ я─п╬я│ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦
+       п©п╬я┤я┌п╬п╡п╬пЁп╬ п©я─п╬п╨я│п╦-я│п╣я─п╡п╣я─п╟.
 
-    *) Исправление: если бэкенд возвращал только заголовок ответа при 
-       небуферизированном проксировании, то nginx закрывал соединение с 
-       бэкендом по таймауту.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╠я█п╨п╣п╫п╢ п╡п╬п╥п╡я─п╟я┴п╟п╩ я┌п╬п╩я▄п╨п╬ п╥п╟пЁп╬п╩п╬п╡п╬п╨ п╬я┌п╡п╣я┌п╟ п©я─п╦
+       п╫п╣п╠я┐я└п╣я─п╦п╥п╦я─п╬п╡п╟п╫п╫п╬п╪ п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╦п╦, я┌п╬ nginx п╥п╟п╨я─я▀п╡п╟п╩ я│п╬п╣п╢п╦п╫п╣п╫п╦п╣ я│
+       п╠я█п╨п╣п╫п╢п╬п╪ п©п╬ я┌п╟п╧п╪п╟я┐я┌я┐.
 
-    *) Исправление: nginx не поддерживал несколько строк "Connection" в 
-       заголовке запроса.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╩ п╫п╣я│п╨п╬п╩я▄п╨п╬ я│я┌я─п╬п╨ "Connection" п╡
+       п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╥п╟п©я─п╬я│п╟.
 
-    *) Исправление: если в сервере апстрима был задан max_fails, то после 
-       первой же неудачной попытки вес сервера навсегда становился равным 
-       одному; ошибка появилась в 0.6.6.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡ я│п╣я─п╡п╣я─п╣ п╟п©я│я┌я─п╦п╪п╟ п╠я▀п╩ п╥п╟п╢п╟п╫ max_fails, я┌п╬ п©п╬я│п╩п╣
+       п©п╣я─п╡п╬п╧ п╤п╣ п╫п╣я┐п╢п╟я┤п╫п╬п╧ п©п╬п©я▀я┌п╨п╦ п╡п╣я│ я│п╣я─п╡п╣я─п╟ п╫п╟п╡я│п╣пЁп╢п╟ я│я┌п╟п╫п╬п╡п╦п╩я│я▐ я─п╟п╡п╫я▀п╪
+       п╬п╢п╫п╬п╪я┐; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.6.6.
 
 
-Изменения в nginx 0.6.10                                          03.09.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.6.10                                          03.09.2007
 
-    *) Добавление: директивы open_file_cache, open_file_cache_retest и 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ open_file_cache, open_file_cache_retest п╦
        open_file_cache_errors.
 
-    *) Исправление: утечки сокетов; ошибка появилась в 0.6.7.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┐я┌п╣я┤п╨п╦ я│п╬п╨п╣я┌п╬п╡; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.6.7.
 
-    *) Исправление: В строку заголовка ответа "Content-Type", указанную в 
-       методе $r->send_http_header(), не добавлялась кодировка, указанная в 
-       директиве charset.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п▓ я│я┌я─п╬п╨я┐ п╥п╟пЁп╬п╩п╬п╡п╨п╟ п╬я┌п╡п╣я┌п╟ "Content-Type", я┐п╨п╟п╥п╟п╫п╫я┐я▌ п╡
+       п╪п╣я┌п╬п╢п╣ $r->send_http_header(), п╫п╣ п╢п╬п╠п╟п╡п╩я▐п╩п╟я│я▄ п╨п╬п╢п╦я─п╬п╡п╨п╟, я┐п╨п╟п╥п╟п╫п╫п╟я▐ п╡
+       п╢п╦я─п╣п╨я┌п╦п╡п╣ charset.
 
-    *) Исправление: при использовании метода /dev/poll в рабочем процессе 
-       мог произойти segmentation fault.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╪п╣я┌п╬п╢п╟ /dev/poll п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣
+       п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault.
 
 
-Изменения в nginx 0.6.9                                           28.08.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.6.9                                           28.08.2007
 
-    *) Исправление: рабочий процесс мог зациклиться при использовании 
-       протокола HTTPS; ошибка появилась в 0.6.7.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я─п╟п╠п╬я┤п╦п╧ п©я─п╬я├п╣я│я│ п╪п╬пЁ п╥п╟я├п╦п╨п╩п╦я┌я▄я│я▐ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦
+       п©я─п╬я┌п╬п╨п╬п╩п╟ HTTPS; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.6.7.
 
-    *) Исправление: если сервер слушал на двух адресах или портах, то nginx 
-       не запускался при использовании wildcard в конце имени сервера.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ я│п╣я─п╡п╣я─ я│п╩я┐я┬п╟п╩ п╫п╟ п╢п╡я┐я┘ п╟п╢я─п╣я│п╟я┘ п╦п╩п╦ п©п╬я─я┌п╟я┘, я┌п╬ nginx
+       п╫п╣ п╥п╟п©я┐я│п╨п╟п╩я│я▐ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ wildcard п╡ п╨п╬п╫я├п╣ п╦п╪п╣п╫п╦ я│п╣я─п╡п╣я─п╟.
 
-    *) Исправление: директива ip_hash могла неверно помечать сервера как 
-       нерабочие.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ ip_hash п╪п╬пЁп╩п╟ п╫п╣п╡п╣я─п╫п╬ п©п╬п╪п╣я┤п╟я┌я▄ я│п╣я─п╡п╣я─п╟ п╨п╟п╨
+       п╫п╣я─п╟п╠п╬я┤п╦п╣.
 
-    *) Исправление: nginx не собирался на amd64; ошибка появилась в 0.6.8.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ amd64; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.6.8.
 
 
-Изменения в nginx 0.6.8                                           20.08.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.6.8                                           20.08.2007
 
-    *) Изменение: теперь nginx пытается установить директивы 
-       worker_priority, worker_rlimit_nofile, worker_rlimit_core, 
-       worker_rlimit_sigpending без привилегий root'а.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ nginx п©я▀я┌п╟п╣я┌я│я▐ я┐я│я┌п╟п╫п╬п╡п╦я┌я▄ п╢п╦я─п╣п╨я┌п╦п╡я▀
+       worker_priority, worker_rlimit_nofile, worker_rlimit_core,
+       worker_rlimit_sigpending п╠п╣п╥ п©я─п╦п╡п╦п╩п╣пЁп╦п╧ root'п╟.
 
-    *) Изменение: теперь nginx экранирует символы пробела и "%" при 
-       передаче запроса серверу аутентификации почтового прокси-сервера.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ nginx я█п╨я─п╟п╫п╦я─я┐п╣я┌ я│п╦п╪п╡п╬п╩я▀ п©я─п╬п╠п╣п╩п╟ п╦ "%" п©я─п╦ п©п╣я─п╣п╢п╟я┤п╣
+       п╥п╟п©я─п╬я│п╟ я│п╣я─п╡п╣я─я┐ п╟я┐я┌п╣п╫я┌п╦я└п╦п╨п╟я├п╦п╦ п©п╬я┤я┌п╬п╡п╬пЁп╬ п©я─п╬п╨я│п╦-я│п╣я─п╡п╣я─п╟.
 
-    *) Изменение: теперь nginx экранирует символ "%" в переменной 
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ nginx я█п╨я─п╟п╫п╦я─я┐п╣я┌ я│п╦п╪п╡п╬п╩ "%" п╡ п©п╣я─п╣п╪п╣п╫п╫п╬п╧
        $memcached_key.
 
-    *) Исправление: при указании относительного пути к конфигурационному 
-       файлу в качестве параметра ключа -c nginx определял путь 
-       относительно конфигурационного префикса; ошибка появилась в 0.6.6.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ я┐п╨п╟п╥п╟п╫п╦п╦ п╬я┌п╫п╬я│п╦я┌п╣п╩я▄п╫п╬пЁп╬ п©я┐я┌п╦ п╨ п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╬п╫п╫п╬п╪я┐
+       я└п╟п╧п╩я┐ п╡ п╨п╟я┤п╣я│я┌п╡п╣ п©п╟я─п╟п╪п╣я┌я─п╟ п╨п╩я▌я┤п╟ -c nginx п╬п©я─п╣п╢п╣п╩я▐п╩ п©я┐я┌я▄ п╬я┌п╫п╬я│п╦я┌п╣п╩я▄п╫п╬
+       п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╬п╫п╫п╬пЁп╬ п©я─п╣я└п╦п╨я│п╟; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.6.6.
 
-    *) Исправление: nginx не работал на FreeBSD/sparc64.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я─п╟п╠п╬я┌п╟п╩ п╫п╟ FreeBSD/sparc64.
 
 
-Изменения в nginx 0.6.7                                           15.08.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.6.7                                           15.08.2007
 
-    *) Изменение: теперь пути, указанные в директивах include, 
-       auth_basic_user_file, perl_modules, ssl_certificate, 
-       ssl_certificate_key и ssl_client_certificate, определяются 
-       относительно каталога конфигурационного файла nginx.conf, а не 
-       относительно префикса.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п©я┐я┌п╦, я┐п╨п╟п╥п╟п╫п╫я▀п╣ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╟я┘ include,
+       auth_basic_user_file, perl_modules, ssl_certificate,
+       ssl_certificate_key п╦ ssl_client_certificate, п╬п©я─п╣п╢п╣п╩я▐я▌я┌я│я▐
+       п╬я┌п╫п╬я│п╦я┌п╣п╩я▄п╫п╬ п╨п╟я┌п╟п╩п╬пЁп╟ п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╬п╫п╫п╬пЁп╬ я└п╟п╧п╩п╟ nginx.conf, п╟ п╫п╣
+       п╬я┌п╫п╬я│п╦я┌п╣п╩я▄п╫п╬ п©я─п╣я└п╦п╨я│п╟.
 
-    *) Изменение: параметр --sysconfdir=PATH в configure упразднён.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ --sysconfdir=PATH п╡ configure я┐п©я─п╟п╥п╢п╫я▒п╫.
 
-    *) Изменение: для обновления на лету версий 0.1.x создан специальный 
-       сценарий make upgrade1.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╢п╩я▐ п╬п╠п╫п╬п╡п╩п╣п╫п╦я▐ п╫п╟ п╩п╣я┌я┐ п╡п╣я─я│п╦п╧ 0.1.x я│п╬п╥п╢п╟п╫ я│п©п╣я├п╦п╟п╩я▄п╫я▀п╧
+       я│я├п╣п╫п╟я─п╦п╧ make upgrade1.
 
-    *) Добавление: директивы server_name и valid_referers поддерживают 
-       регулярные выражения.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ server_name п╦ valid_referers п©п╬п╢п╢п╣я─п╤п╦п╡п╟я▌я┌
+       я─п╣пЁя┐п╩я▐я─п╫я▀п╣ п╡я▀я─п╟п╤п╣п╫п╦я▐.
 
-    *) Добавление: директива server в блоке upstream поддерживает параметр 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ server п╡ п╠п╩п╬п╨п╣ upstream п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п©п╟я─п╟п╪п╣я┌я─
        backup.
 
-    *) Добавление: модуль ngx_http_perl_module поддерживает метод 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_perl_module п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╪п╣я┌п╬п╢
        $r->discard_request_body.
 
-    *) Добавление: директива "add_header Last-Modified ..." меняет строку 
-       "Last-Modified" в заголовке ответа.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ "add_header Last-Modified ..." п╪п╣п╫я▐п╣я┌ я│я┌я─п╬п╨я┐
+       "Last-Modified" п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╬я┌п╡п╣я┌п╟.
 
-    *) Исправление: если на запрос с телом возвращался ответ с кодом HTTP 
-       отличным от 200, и после этого запроса соединение переходило в 
-       состояние keep-alive, то на следующий запрос nginx возвращал 400.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╫п╟ п╥п╟п©я─п╬я│ я│ я┌п╣п╩п╬п╪ п╡п╬п╥п╡я─п╟я┴п╟п╩я│я▐ п╬я┌п╡п╣я┌ я│ п╨п╬п╢п╬п╪ HTTP
+       п╬я┌п╩п╦я┤п╫я▀п╪ п╬я┌ 200, п╦ п©п╬я│п╩п╣ я█я┌п╬пЁп╬ п╥п╟п©я─п╬я│п╟ я│п╬п╣п╢п╦п╫п╣п╫п╦п╣ п©п╣я─п╣я┘п╬п╢п╦п╩п╬ п╡
+       я│п╬я│я┌п╬я▐п╫п╦п╣ keep-alive, я┌п╬ п╫п╟ я│п╩п╣п╢я┐я▌я┴п╦п╧ п╥п╟п©я─п╬я│ nginx п╡п╬п╥п╡я─п╟я┴п╟п╩ 400.
 
-    *) Исправление: если в директиве auth_http был задан неправильный 
-       адрес, то в рабочем процессе происходил segmentation fault.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ auth_http п╠я▀п╩ п╥п╟п╢п╟п╫ п╫п╣п©я─п╟п╡п╦п╩я▄п╫я▀п╧ п╟п╢я─п╣я│,
+       я┌п╬ п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault.
 
-    *) Исправление: теперь по умолчанию nginx использует значение 511 для 
-       listen backlog на всех платформах, кроме FreeBSD.
-       Спасибо Jiang Hong.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п©п╬ я┐п╪п╬п╩я┤п╟п╫п╦я▌ nginx п╦я│п©п╬п╩я▄п╥я┐п╣я┌ п╥п╫п╟я┤п╣п╫п╦п╣ 511 п╢п╩я▐
+       listen backlog п╫п╟ п╡я│п╣я┘ п©п╩п╟я┌я└п╬я─п╪п╟я┘, п╨я─п╬п╪п╣ FreeBSD.
+       п║п©п╟я│п╦п╠п╬ Jiang Hong.
 
-    *) Исправление: рабочий процесс мог зациклиться, если server в блоке 
-       upstream был помечен как down; ошибка появилась в 0.6.6.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я─п╟п╠п╬я┤п╦п╧ п©я─п╬я├п╣я│я│ п╪п╬пЁ п╥п╟я├п╦п╨п╩п╦я┌я▄я│я▐, п╣я│п╩п╦ server п╡ п╠п╩п╬п╨п╣
+       upstream п╠я▀п╩ п©п╬п╪п╣я┤п╣п╫ п╨п╟п╨ down; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.6.6.
 
-    *) Исправление: sendfilev() в Solaris теперь не используется при 
-       передаче тела запроса FastCGI-серверу через unix domain сокет.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: sendfilev() п╡ Solaris я┌п╣п©п╣я─я▄ п╫п╣ п╦я│п©п╬п╩я▄п╥я┐п╣я┌я│я▐ п©я─п╦
+       п©п╣я─п╣п╢п╟я┤п╣ я┌п╣п╩п╟ п╥п╟п©я─п╬я│п╟ FastCGI-я│п╣я─п╡п╣я─я┐ я┤п╣я─п╣п╥ unix domain я│п╬п╨п╣я┌.
 
 
-Изменения в nginx 0.6.6                                           30.07.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.6.6                                           30.07.2007
 
-    *) Добавление: параметр --sysconfdir=PATH в configure.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ --sysconfdir=PATH п╡ configure.
 
-    *) Добавление: именованные location'ы.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╦п╪п╣п╫п╬п╡п╟п╫п╫я▀п╣ location'я▀.
 
-    *) Добавление: переменную $args можно устанавливать с помощью set.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫я┐я▌ $args п╪п╬п╤п╫п╬ я┐я│я┌п╟п╫п╟п╡п╩п╦п╡п╟я┌я▄ я│ п©п╬п╪п╬я┴я▄я▌ set.
 
-    *) Добавление: переменная $is_args.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $is_args.
 
-    *) Исправление: равномерное распределение запросов к апстримам с 
-       большими весами.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я─п╟п╡п╫п╬п╪п╣я─п╫п╬п╣ я─п╟я│п©я─п╣п╢п╣п╩п╣п╫п╦п╣ п╥п╟п©я─п╬я│п╬п╡ п╨ п╟п©я│я┌я─п╦п╪п╟п╪ я│
+       п╠п╬п╩я▄я┬п╦п╪п╦ п╡п╣я│п╟п╪п╦.
 
-    *) Исправление: если клиент в почтовом прокси-сервере закрывал 
-       соединение, то nginx мог не закрывать соединение с бэкендом.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╨п╩п╦п╣п╫я┌ п╡ п©п╬я┤я┌п╬п╡п╬п╪ п©я─п╬п╨я│п╦-я│п╣я─п╡п╣я─п╣ п╥п╟п╨я─я▀п╡п╟п╩
+       я│п╬п╣п╢п╦п╫п╣п╫п╦п╣, я┌п╬ nginx п╪п╬пЁ п╫п╣ п╥п╟п╨я─я▀п╡п╟я┌я▄ я│п╬п╣п╢п╦п╫п╣п╫п╦п╣ я│ п╠я█п╨п╣п╫п╢п╬п╪.
 
-    *) Исправление: при использовании одного хоста в качестве бэкендов для 
-       протоколов HTTP и HTTPS без явного указания портов, nginx 
-       использовал только один порт - 80 или 443.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╬п╢п╫п╬пЁп╬ я┘п╬я│я┌п╟ п╡ п╨п╟я┤п╣я│я┌п╡п╣ п╠я█п╨п╣п╫п╢п╬п╡ п╢п╩я▐
+       п©я─п╬я┌п╬п╨п╬п╩п╬п╡ HTTP п╦ HTTPS п╠п╣п╥ я▐п╡п╫п╬пЁп╬ я┐п╨п╟п╥п╟п╫п╦я▐ п©п╬я─я┌п╬п╡, nginx п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩
+       я┌п╬п╩я▄п╨п╬ п╬п╢п╦п╫ п©п╬я─я┌ - 80 п╦п╩п╦ 443.
 
-    *) Исправление: nginx не собирался на Solaris/amd64 Sun Studio 11 и 
-       более ранними версиями; ошибка появилась в 0.6.4.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ Solaris/amd64 Sun Studio 11 п╦
+       п╠п╬п╩п╣п╣ я─п╟п╫п╫п╦п╪п╦ п╡п╣я─я│п╦я▐п╪п╦; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.6.4.
 
 
-Изменения в nginx 0.6.5                                           23.07.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.6.5                                           23.07.2007
 
-    *) Добавление: переменная $nginx_version.
-       Спасибо Николаю Гречуху.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $nginx_version.
+       п║п©п╟я│п╦п╠п╬ п²п╦п╨п╬п╩п╟я▌ п⌠я─п╣я┤я┐я┘я┐.
 
-    *) Добавление: почтовый прокси-сервер поддерживает AUTHENTICATE в 
-       режиме IMAP.
-       Спасибо Максиму Дунину.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╬я┤я┌п╬п╡я▀п╧ п©я─п╬п╨я│п╦-я│п╣я─п╡п╣я─ п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ AUTHENTICATE п╡ я─п╣п╤п╦п╪п╣
+       IMAP.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Добавление: почтовый прокси-сервер поддерживает STARTTLS в режиме 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╬я┤я┌п╬п╡я▀п╧ п©я─п╬п╨я│п╦-я│п╣я─п╡п╣я─ п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ STARTTLS п╡ я─п╣п╤п╦п╪п╣
        SMTP.
-       Спасибо Максиму Дунину.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: теперь nginx экранирует пробел в переменной 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ nginx я█п╨я─п╟п╫п╦я─я┐п╣я┌ п©я─п╬п╠п╣п╩ п╡ п©п╣я─п╣п╪п╣п╫п╫п╬п╧
        $memcached_key.
 
-    *) Исправление: nginx неправильно собирался Sun Studio на 
-       Solaris/amd64.
-       Спасибо Jiang Hong.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣п©я─п╟п╡п╦п╩я▄п╫п╬ я│п╬п╠п╦я─п╟п╩я│я▐ Sun Studio п╫п╟ Solaris/amd64.
+       п║п©п╟я│п╦п╠п╬ Jiang Hong.
 
-    *) Исправление: незначительных потенциальных ошибок.
-       Спасибо Coverity's Scan.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╫п╣п╥п╫п╟я┤п╦я┌п╣п╩я▄п╫я▀я┘ п©п╬я┌п╣п╫я├п╦п╟п╩я▄п╫я▀я┘ п╬я┬п╦п╠п╬п╨.
+       п║п©п╟я│п╦п╠п╬ Coverity's Scan.
 
 
-Изменения в nginx 0.6.4                                           17.07.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.6.4                                           17.07.2007
 
-    *) Безопасность: при использовании директивы msie_refresh был возможен 
+    *) п▒п╣п╥п╬п©п╟я│п╫п╬я│я┌я▄: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀ msie_refresh п╠я▀п╩ п╡п╬п╥п╪п╬п╤п╣п╫
        XSS.
-       Спасибо Максиму Богуку.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п▒п╬пЁя┐п╨я┐.
 
-    *) Изменение: директивы proxy_store и fastcgi_store изменены.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_store п╦ fastcgi_store п╦п╥п╪п╣п╫п╣п╫я▀.
 
-    *) Добавление: директивы proxy_store_access и fastcgi_store_access.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_store_access п╦ fastcgi_store_access.
 
-    *) Исправление: nginx не работал на Solaris/sparc64, если был собран 
-       Sun Studio.
-       Спасибо Андрею Нигматулину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я─п╟п╠п╬я┌п╟п╩ п╫п╟ Solaris/sparc64, п╣я│п╩п╦ п╠я▀п╩ я│п╬п╠я─п╟п╫ Sun
+       Studio.
+       п║п©п╟я│п╦п╠п╬ п░п╫п╢я─п╣я▌ п²п╦пЁп╪п╟я┌я┐п╩п╦п╫я┐.
 
-    *) Изменение: обход ошибки в Sun Studio 12.
-       Спасибо Jiang Hong.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╬п╠я┘п╬п╢ п╬я┬п╦п╠п╨п╦ п╡ Sun Studio 12.
+       п║п©п╟я│п╦п╠п╬ Jiang Hong.
 
 
-Изменения в nginx 0.6.3                                           12.07.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.6.3                                           12.07.2007
 
-    *) Добавление: директивы proxy_store и fastcgi_store.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_store п╦ fastcgi_store.
 
-    *) Исправление: при использовании директивы auth_http_header в рабочем 
-       процессе мог произойти segmentation fault.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀ auth_http_header п╡ я─п╟п╠п╬я┤п╣п╪
+       п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: если использовался метод аутентификации CRAM-MD5, но он 
-       не был разрешён, то в рабочем процессе происходил segmentation fault.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩я│я▐ п╪п╣я┌п╬п╢ п╟я┐я┌п╣п╫я┌п╦я└п╦п╨п╟я├п╦п╦ CRAM-MD5, п╫п╬ п╬п╫
+       п╫п╣ п╠я▀п╩ я─п╟п╥я─п╣я┬я▒п╫, я┌п╬ п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault.
 
-    *) Исправление: при использовании протокола HTTPS в директиве 
-       proxy_pass в рабочем процессе мог произойти segmentation fault.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п©я─п╬я┌п╬п╨п╬п╩п╟ HTTPS п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ proxy_pass
+       п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault.
 
-    *) Исправление: в рабочем процессе мог произойти segmentation fault, 
-       если использовался метод eventport.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault,
+       п╣я│п╩п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩я│я▐ п╪п╣я┌п╬п╢ eventport.
 
-    *) Исправление: директивы proxy_ignore_client_abort и 
-       fastcgi_ignore_client_abort не работали; ошибка появилась в 0.5.13.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_ignore_client_abort п╦
+       fastcgi_ignore_client_abort п╫п╣ я─п╟п╠п╬я┌п╟п╩п╦; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.5.13.
 
 
-Изменения в nginx 0.6.2                                           09.07.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.6.2                                           09.07.2007
 
-    *) Исправление: если заголовок ответа был разделён в FastCGI-записях, 
-       то nginx передавал клиенту мусор в таких заголовках.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╥п╟пЁп╬п╩п╬п╡п╬п╨ п╬я┌п╡п╣я┌п╟ п╠я▀п╩ я─п╟п╥п╢п╣п╩я▒п╫ п╡ FastCGI-п╥п╟п©п╦я│я▐я┘, я┌п╬
+       nginx п©п╣я─п╣п╢п╟п╡п╟п╩ п╨п╩п╦п╣п╫я┌я┐ п╪я┐я│п╬я─ п╡ я┌п╟п╨п╦я┘ п╥п╟пЁп╬п╩п╬п╡п╨п╟я┘.
 
 
-Изменения в nginx 0.6.1                                           17.06.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.6.1                                           17.06.2007
 
-    *) Исправление: в парсинге SSI.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п©п╟я─я│п╦п╫пЁп╣ SSI.
 
-    *) Исправление: при использовании удалённого подзапроса в SSI 
-       последующий подзапрос локального файла мог отдаваться клиенту в 
-       неверном порядке.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ я┐п╢п╟п╩я▒п╫п╫п╬пЁп╬ п©п╬п╢п╥п╟п©я─п╬я│п╟ п╡ SSI
+       п©п╬я│п╩п╣п╢я┐я▌я┴п╦п╧ п©п╬п╢п╥п╟п©я─п╬я│ п╩п╬п╨п╟п╩я▄п╫п╬пЁп╬ я└п╟п╧п╩п╟ п╪п╬пЁ п╬я┌п╢п╟п╡п╟я┌я▄я│я▐ п╨п╩п╦п╣п╫я┌я┐ п╡
+       п╫п╣п╡п╣я─п╫п╬п╪ п©п╬я─я▐п╢п╨п╣.
 
-    *) Исправление: большие включения в SSI, сохранённые во временные 
-       файлы, передавались не полностью.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╠п╬п╩я▄я┬п╦п╣ п╡п╨п╩я▌я┤п╣п╫п╦я▐ п╡ SSI, я│п╬я┘я─п╟п╫я▒п╫п╫я▀п╣ п╡п╬ п╡я─п╣п╪п╣п╫п╫я▀п╣ я└п╟п╧п╩я▀,
+       п©п╣я─п╣п╢п╟п╡п╟п╩п╦я│я▄ п╫п╣ п©п╬п╩п╫п╬я│я┌я▄я▌.
 
-    *) Исправление: значение perl'овой переменной $$ модуля 
-       ngx_http_perl_module было равно номеру главного процесса.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╥п╫п╟я┤п╣п╫п╦п╣ perl'п╬п╡п╬п╧ п©п╣я─п╣п╪п╣п╫п╫п╬п╧ $$ п╪п╬п╢я┐п╩я▐
+       ngx_http_perl_module п╠я▀п╩п╬ я─п╟п╡п╫п╬ п╫п╬п╪п╣я─я┐ пЁп╩п╟п╡п╫п╬пЁп╬ п©я─п╬я├п╣я│я│п╟.
 
 
-Изменения в nginx 0.6.0                                           14.06.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.6.0                                           14.06.2007
 
-    *) Добавление: директивы "server_name", "map", and "valid_referers" 
-       поддерживают маски вида "www.example.*".
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ "server_name", "map", and "valid_referers"
+       п©п╬п╢п╢п╣я─п╤п╦п╡п╟я▌я┌ п╪п╟я│п╨п╦ п╡п╦п╢п╟ "www.example.*".
 
 
-Изменения в nginx 0.5.25                                          11.06.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.5.25                                          11.06.2007
 
-    *) Исправление: nginx не собирался с параметром 
-       --without-http_rewrite_module; ошибка появилась в 0.5.24.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ я│ п©п╟я─п╟п╪п╣я┌я─п╬п╪
+       --without-http_rewrite_module; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.5.24.
 
 
-Изменения в nginx 0.5.24                                          06.06.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.5.24                                          06.06.2007
 
-    *) Безопасность: директива ssl_verify_client не работала, если запрос 
-       выполнялся по протоколу HTTP/0.9.
+    *) п▒п╣п╥п╬п©п╟я│п╫п╬я│я┌я▄: п╢п╦я─п╣п╨я┌п╦п╡п╟ ssl_verify_client п╫п╣ я─п╟п╠п╬я┌п╟п╩п╟, п╣я│п╩п╦ п╥п╟п©я─п╬я│
+       п╡я▀п©п╬п╩п╫я▐п╩я│я▐ п©п╬ п©я─п╬я┌п╬п╨п╬п╩я┐ HTTP/0.9.
 
-    *) Исправление: при использовании сжатия часть ответа могла 
-       передаваться несжатой; ошибка появилась в 0.5.23.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ я│п╤п╟я┌п╦я▐ я┤п╟я│я┌я▄ п╬я┌п╡п╣я┌п╟ п╪п╬пЁп╩п╟ п©п╣я─п╣п╢п╟п╡п╟я┌я▄я│я▐
+       п╫п╣я│п╤п╟я┌п╬п╧; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.5.23.
 
 
-Изменения в nginx 0.5.23                                          04.06.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.5.23                                          04.06.2007
 
-    *) Добавление: модуль ngx_http_ssl_module поддерживает расширение TLS 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_ssl_module п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ я─п╟я│я┬п╦я─п╣п╫п╦п╣ TLS
        Server Name Indication.
 
-    *) Добавление: директива fastcgi_catch_stderr.
-       Спасибо Николаю Гречуху, проект OWOX.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ fastcgi_catch_stderr.
+       п║п©п╟я│п╦п╠п╬ п²п╦п╨п╬п╩п╟я▌ п⌠я─п╣я┤я┐я┘я┐, п©я─п╬п╣п╨я┌ OWOX.
 
-    *) Исправление: на Линуксе в основном процессе происходил segmentation 
-       fault, если два виртуальных сервера должны bind()ится к 
-       пересекающимся портам.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╫п╟ п⌡п╦п╫я┐п╨я│п╣ п╡ п╬я│п╫п╬п╡п╫п╬п╪ п©я─п╬я├п╣я│я│п╣ п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation
+       fault, п╣я│п╩п╦ п╢п╡п╟ п╡п╦я─я┌я┐п╟п╩я▄п╫я▀я┘ я│п╣я─п╡п╣я─п╟ п╢п╬п╩п╤п╫я▀ bind()п╦я┌я│я▐ п╨
+       п©п╣я─п╣я│п╣п╨п╟я▌я┴п╦п╪я│я▐ п©п╬я─я┌п╟п╪.
 
-    *) Исправление: если nginx был собран с модулем ngx_http_perl_module и 
-       perl поддерживал потоки, то во время второй переконфигурации 
-       выдавались ошибки "panic: MUTEX_LOCK" и "perl_parse() failed".
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ nginx п╠я▀п╩ я│п╬п╠я─п╟п╫ я│ п╪п╬п╢я┐п╩п╣п╪ ngx_http_perl_module п╦
+       perl п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╩ п©п╬я┌п╬п╨п╦, я┌п╬ п╡п╬ п╡я─п╣п╪я▐ п╡я┌п╬я─п╬п╧ п©п╣я─п╣п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦
+       п╡я▀п╢п╟п╡п╟п╩п╦я│я▄ п╬я┬п╦п╠п╨п╦ "panic: MUTEX_LOCK" п╦ "perl_parse() failed".
 
-    *) Исправление: в использовании протокола HTTPS в директиве proxy_pass.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п©я─п╬я┌п╬п╨п╬п╩п╟ HTTPS п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ proxy_pass.
 
 
-Изменения в nginx 0.5.22                                          29.05.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.5.22                                          29.05.2007
 
-    *) Исправление: большое тело запроса могло не передаваться бэкенду; 
-       ошибка появилась в 0.5.21.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╠п╬п╩я▄я┬п╬п╣ я┌п╣п╩п╬ п╥п╟п©я─п╬я│п╟ п╪п╬пЁп╩п╬ п╫п╣ п©п╣я─п╣п╢п╟п╡п╟я┌я▄я│я▐ п╠я█п╨п╣п╫п╢я┐;
+       п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.5.21.
 
 
-Изменения в nginx 0.5.21                                          28.05.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.5.21                                          28.05.2007
 
-    *) Исправление: если внутри сервера описано больше примерно десяти 
-       location'ов, то location'ы, заданные с помощью регулярного 
-       выражения, могли выполняться не в том, порядке, в каком они описаны.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡п╫я┐я┌я─п╦ я│п╣я─п╡п╣я─п╟ п╬п©п╦я│п╟п╫п╬ п╠п╬п╩я▄я┬п╣ п©я─п╦п╪п╣я─п╫п╬ п╢п╣я│я▐я┌п╦
+       location'п╬п╡, я┌п╬ location'я▀, п╥п╟п╢п╟п╫п╫я▀п╣ я│ п©п╬п╪п╬я┴я▄я▌ я─п╣пЁя┐п╩я▐я─п╫п╬пЁп╬ п╡я▀я─п╟п╤п╣п╫п╦я▐,
+       п╪п╬пЁп╩п╦ п╡я▀п©п╬п╩п╫я▐я┌я▄я│я▐ п╫п╣ п╡ я┌п╬п╪, п©п╬я─я▐п╢п╨п╣, п╡ п╨п╟п╨п╬п╪ п╬п╫п╦ п╬п©п╦я│п╟п╫я▀.
 
-    *) Исправление: на 64-битной платформе рабочий процесс мог зациклиться, 
-       если 33-тий по счёту или последующий бэкенд упал.
-       Спасибо Антону Поварову.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╫п╟ 64-п╠п╦я┌п╫п╬п╧ п©п╩п╟я┌я└п╬я─п╪п╣ я─п╟п╠п╬я┤п╦п╧ п©я─п╬я├п╣я│я│ п╪п╬пЁ п╥п╟я├п╦п╨п╩п╦я┌я▄я│я▐,
+       п╣я│п╩п╦ 33-я┌п╦п╧ п©п╬ я│я┤я▒я┌я┐ п╦п╩п╦ п©п╬я│п╩п╣п╢я┐я▌я┴п╦п╧ п╠я█п╨п╣п╫п╢ я┐п©п╟п╩.
+       п║п©п╟я│п╦п╠п╬ п░п╫я┌п╬п╫я┐ п÷п╬п╡п╟я─п╬п╡я┐.
 
-    *) Исправление: при использовании библиотеки PCRE на Solaris/sparc64 
-       мог произойти bus error.
-       Спасибо Андрею Нигматулину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╠п╦п╠п╩п╦п╬я┌п╣п╨п╦ PCRE п╫п╟ Solaris/sparc64 п╪п╬пЁ
+       п©я─п╬п╦п╥п╬п╧я┌п╦ bus error.
+       п║п©п╟я│п╦п╠п╬ п░п╫п╢я─п╣я▌ п²п╦пЁп╪п╟я┌я┐п╩п╦п╫я┐.
 
-    *) Исправление: в использовании протокола HTTPS в директиве proxy_pass.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п©я─п╬я┌п╬п╨п╬п╩п╟ HTTPS п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ proxy_pass.
 
 
-Изменения в nginx 0.5.20                                          07.05.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.5.20                                          07.05.2007
 
-    *) Добавление: директива sendfile_max_chunk.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ sendfile_max_chunk.
 
-    *) Добавление: переменные "$http_...", "$sent_http_..." и 
-       "$upstream_http_..." можно менять директивой set.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫я▀п╣ "$http_...", "$sent_http_..." п╦
+       "$upstream_http_..." п╪п╬п╤п╫п╬ п╪п╣п╫я▐я┌я▄ п╢п╦я─п╣п╨я┌п╦п╡п╬п╧ set.
 
-    *) Исправление: при использовании SSI-команды 'if expr="$var = /"' в 
-       рабочем процессе мог произойти segmentation fault.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ SSI-п╨п╬п╪п╟п╫п╢я▀ 'if expr="$var = /"' п╡
+       я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault.
 
-    *) Исправление: завершающая строка multipart range ответа передавалась 
-       неверно.
-       Спасибо Evan Miller.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╥п╟п╡п╣я─я┬п╟я▌я┴п╟я▐ я│я┌я─п╬п╨п╟ multipart range п╬я┌п╡п╣я┌п╟ п©п╣я─п╣п╢п╟п╡п╟п╩п╟я│я▄
+       п╫п╣п╡п╣я─п╫п╬.
+       п║п©п╟я│п╦п╠п╬ Evan Miller.
 
-    *) Исправление: nginx не работал на Solaris/sparc64, если был собран 
-       Sun Studio.
-       Спасибо Андрею Нигматулину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я─п╟п╠п╬я┌п╟п╩ п╫п╟ Solaris/sparc64, п╣я│п╩п╦ п╠я▀п╩ я│п╬п╠я─п╟п╫ Sun
+       Studio.
+       п║п©п╟я│п╦п╠п╬ п░п╫п╢я─п╣я▌ п²п╦пЁп╪п╟я┌я┐п╩п╦п╫я┐.
 
-    *) Исправление: модуль ngx_http_perl_module не собирался make в 
-       Solaris.
-       Спасибо Андрею Нигматулину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_perl_module п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ make п╡ Solaris.
+       п║п©п╟я│п╦п╠п╬ п░п╫п╢я─п╣я▌ п²п╦пЁп╪п╟я┌я┐п╩п╦п╫я┐.
 
 
-Изменения в nginx 0.5.19                                          24.04.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.5.19                                          24.04.2007
 
-    *) Изменение: значение переменной $request_time теперь записывается с 
-       точностью до миллисекунд.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╥п╫п╟я┤п╣п╫п╦п╣ п©п╣я─п╣п╪п╣п╫п╫п╬п╧ $request_time я┌п╣п©п╣я─я▄ п╥п╟п©п╦я│я▀п╡п╟п╣я┌я│я▐ я│
+       я┌п╬я┤п╫п╬я│я┌я▄я▌ п╢п╬ п╪п╦п╩п╩п╦я│п╣п╨я┐п╫п╢.
 
-    *) Изменение: метод $r->rflush в модуле ngx_http_perl_module 
-       переименован в $r->flush.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╪п╣я┌п╬п╢ $r->rflush п╡ п╪п╬п╢я┐п╩п╣ ngx_http_perl_module
+       п©п╣я─п╣п╦п╪п╣п╫п╬п╡п╟п╫ п╡ $r->flush.
 
-    *) Добавление: переменная $upstream_addr.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $upstream_addr.
 
-    *) Добавление: директивы proxy_headers_hash_max_size и 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_headers_hash_max_size п╦
        proxy_headers_hash_bucket_size.
-       Спасибо Володымыру Костырко.
+       п║п©п╟я│п╦п╠п╬ п▓п╬п╩п╬п╢я▀п╪я▀я─я┐ п п╬я│я┌я▀я─п╨п╬.
 
-    *) Исправление: при использовании sendfile и limit_rate на 64-битных 
-       платформах нельзя было передавать файлы больше 2G.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ sendfile п╦ limit_rate п╫п╟ 64-п╠п╦я┌п╫я▀я┘
+       п©п╩п╟я┌я└п╬я─п╪п╟я┘ п╫п╣п╩я▄п╥я▐ п╠я▀п╩п╬ п©п╣я─п╣п╢п╟п╡п╟я┌я▄ я└п╟п╧п╩я▀ п╠п╬п╩я▄я┬п╣ 2G.
 
-    *) Исправление: при использовании sendfile на 64-битном Linux нельзя 
-       было передавать файлы больше 2G.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ sendfile п╫п╟ 64-п╠п╦я┌п╫п╬п╪ Linux п╫п╣п╩я▄п╥я▐
+       п╠я▀п╩п╬ п©п╣я─п╣п╢п╟п╡п╟я┌я▄ я└п╟п╧п╩я▀ п╠п╬п╩я▄я┬п╣ 2G.
 
 
-Изменения в nginx 0.5.18                                          19.04.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.5.18                                          19.04.2007
 
-    *) Добавление: модуль ngx_http_sub_filter_module.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_sub_filter_module.
 
-    *) Добавление: переменные "$upstream_http_...".
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫я▀п╣ "$upstream_http_...".
 
-    *) Добавление: теперь переменные $upstream_status и 
-       $upstream_response_time содержат данные о всех обращениях к 
-       апстримам, сделанным до X-Accel-Redirect.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п©п╣я─п╣п╪п╣п╫п╫я▀п╣ $upstream_status п╦
+       $upstream_response_time я│п╬п╢п╣я─п╤п╟я┌ п╢п╟п╫п╫я▀п╣ п╬ п╡я│п╣я┘ п╬п╠я─п╟я┴п╣п╫п╦я▐я┘ п╨
+       п╟п©я│я┌я─п╦п╪п╟п╪, я│п╢п╣п╩п╟п╫п╫я▀п╪ п╢п╬ X-Accel-Redirect.
 
-    *) Исправление: если nginx был собран с модулем ngx_http_perl_module и 
-       perl не поддерживал multiplicity, то после первой переконфигурации и 
-       после получения любого сигнала в основном процессе происходил 
-       segmentation fault; ошибка появилась в 0.5.9.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ nginx п╠я▀п╩ я│п╬п╠я─п╟п╫ я│ п╪п╬п╢я┐п╩п╣п╪ ngx_http_perl_module п╦
+       perl п╫п╣ п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╩ multiplicity, я┌п╬ п©п╬я│п╩п╣ п©п╣я─п╡п╬п╧ п©п╣я─п╣п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦ п╦
+       п©п╬я│п╩п╣ п©п╬п╩я┐я┤п╣п╫п╦я▐ п╩я▌п╠п╬пЁп╬ я│п╦пЁп╫п╟п╩п╟ п╡ п╬я│п╫п╬п╡п╫п╬п╪ п©я─п╬я├п╣я│я│п╣ п©я─п╬п╦я│я┘п╬п╢п╦п╩
+       segmentation fault; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.5.9.
 
-    *) Исправление: если perl не поддерживал multiplicity, то после 
-       переконфигурации перловый код не работал; ошибка появилась в 0.3.38.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ perl п╫п╣ п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╩ multiplicity, я┌п╬ п©п╬я│п╩п╣
+       п©п╣я─п╣п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦ п©п╣я─п╩п╬п╡я▀п╧ п╨п╬п╢ п╫п╣ я─п╟п╠п╬я┌п╟п╩; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.3.38.
 
 
-Изменения в nginx 0.5.17                                          02.04.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.5.17                                          02.04.2007
 
-    *) Изменение: теперь nginx для метода TRACE всегда возвращает код 405.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ nginx п╢п╩я▐ п╪п╣я┌п╬п╢п╟ TRACE п╡я│п╣пЁп╢п╟ п╡п╬п╥п╡я─п╟я┴п╟п╣я┌ п╨п╬п╢ 405.
 
-    *) Добавление: теперь nginx поддерживает директиву include внутри блока 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ nginx п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╢п╦я─п╣п╨я┌п╦п╡я┐ include п╡п╫я┐я┌я─п╦ п╠п╩п╬п╨п╟
        types.
 
-    *) Исправление: использование переменной $document_root в директиве 
-       root и alias запрещено: оно вызывало рекурсивное переполнение стека.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╣ п©п╣я─п╣п╪п╣п╫п╫п╬п╧ $document_root п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ root
+       п╦ alias п╥п╟п©я─п╣я┴п╣п╫п╬: п╬п╫п╬ п╡я▀п╥я▀п╡п╟п╩п╬ я─п╣п╨я┐я─я│п╦п╡п╫п╬п╣ п©п╣я─п╣п©п╬п╩п╫п╣п╫п╦п╣ я│я┌п╣п╨п╟.
 
-    *) Исправление: в использовании протокола HTTPS в директиве proxy_pass.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п©я─п╬я┌п╬п╨п╬п╩п╟ HTTPS п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ proxy_pass.
 
-    *) Исправление: в некоторых случаях некэшируемые переменные (такие, как 
-       $uri) возвращали старое закэшированное значение.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╫п╣п╨п╬я┌п╬я─я▀я┘ я│п╩я┐я┤п╟я▐я┘ п╫п╣п╨я█я┬п╦я─я┐п╣п╪я▀п╣ п©п╣я─п╣п╪п╣п╫п╫я▀п╣ (я┌п╟п╨п╦п╣, п╨п╟п╨
+       $uri) п╡п╬п╥п╡я─п╟я┴п╟п╩п╦ я│я┌п╟я─п╬п╣ п╥п╟п╨я█я┬п╦я─п╬п╡п╟п╫п╫п╬п╣ п╥п╫п╟я┤п╣п╫п╦п╣.
 
 
-Изменения в nginx 0.5.16                                          26.03.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.5.16                                          26.03.2007
 
-    *) Исправление: в качестве ключа для хэша в директиве ip_hash не 
-       использовалась сеть класса С.
-       Спасибо Павлу Ярковому.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╨п╟я┤п╣я│я┌п╡п╣ п╨п╩я▌я┤п╟ п╢п╩я▐ я┘я█я┬п╟ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ ip_hash п╫п╣
+       п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╟я│я▄ я│п╣я┌я▄ п╨п╩п╟я│я│п╟ п║.
+       п║п©п╟я│п╦п╠п╬ п÷п╟п╡п╩я┐ п╞я─п╨п╬п╡п╬п╪я┐.
 
-    *) Исправление: если в строке "Content-Type" в заголовке ответа бэкенда 
-       был указан charset и строка завершалась символом ";", то в рабочем 
-       процессе мог произойти segmentation fault; ошибка появилась в 0.3.50.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡ я│я┌я─п╬п╨п╣ "Content-Type" п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╬я┌п╡п╣я┌п╟ п╠я█п╨п╣п╫п╢п╟
+       п╠я▀п╩ я┐п╨п╟п╥п╟п╫ charset п╦ я│я┌я─п╬п╨п╟ п╥п╟п╡п╣я─я┬п╟п╩п╟я│я▄ я│п╦п╪п╡п╬п╩п╬п╪ ";", я┌п╬ п╡ я─п╟п╠п╬я┤п╣п╪
+       п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.3.50.
 
-    *) Исправление: ошибки "[alert] zero size buf" при работе с 
-       FastCGI-сервером, если тело запроса, записанное во временный файл, 
-       было кратно 32K.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ "[alert] zero size buf" п©я─п╦ я─п╟п╠п╬я┌п╣ я│
+       FastCGI-я│п╣я─п╡п╣я─п╬п╪, п╣я│п╩п╦ я┌п╣п╩п╬ п╥п╟п©я─п╬я│п╟, п╥п╟п©п╦я│п╟п╫п╫п╬п╣ п╡п╬ п╡я─п╣п╪п╣п╫п╫я▀п╧ я└п╟п╧п╩,
+       п╠я▀п╩п╬ п╨я─п╟я┌п╫п╬ 32K.
 
-    *) Исправление: nginx не собирался на Solaris без параметра 
-       --with-debug; ошибка появилась в 0.5.15.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ Solaris п╠п╣п╥ п©п╟я─п╟п╪п╣я┌я─п╟
+       --with-debug; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.5.15.
 
 
-Изменения в nginx 0.5.15                                          19.03.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.5.15                                          19.03.2007
 
-    *) Добавление: почтовый прокси-сервер поддерживает аутентифицированное 
-       SMTP-проксирование и директивы smtp_auth, smtp_capablities и 
-       xclient.
-       Спасибо Антону Южанинову и Максиму Дунину.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╬я┤я┌п╬п╡я▀п╧ п©я─п╬п╨я│п╦-я│п╣я─п╡п╣я─ п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╟я┐я┌п╣п╫я┌п╦я└п╦я├п╦я─п╬п╡п╟п╫п╫п╬п╣
+       SMTP-п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╦п╣ п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀ smtp_auth, smtp_capablities п╦ xclient.
+       п║п©п╟я│п╦п╠п╬ п░п╫я┌п╬п╫я┐ п╝п╤п╟п╫п╦п╫п╬п╡я┐ п╦ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Добавление: теперь keep-alive соединения закрываются сразу же по 
-       получении сигнала переконфигурации.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ keep-alive я│п╬п╣п╢п╦п╫п╣п╫п╦я▐ п╥п╟п╨я─я▀п╡п╟я▌я┌я│я▐ я│я─п╟п╥я┐ п╤п╣ п©п╬
+       п©п╬п╩я┐я┤п╣п╫п╦п╦ я│п╦пЁп╫п╟п╩п╟ п©п╣я─п╣п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦.
 
-    *) Изменение: директивы imap и auth переименованы соответственно в mail 
-       и pop3_auth.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ imap п╦ auth п©п╣я─п╣п╦п╪п╣п╫п╬п╡п╟п╫я▀ я│п╬п╬я┌п╡п╣я┌я│я┌п╡п╣п╫п╫п╬ п╡ mail
+       п╦ pop3_auth.
 
-    *) Исправление: если использовался метод аутентификации CRAM-MD5 и не 
-       был разрешён метод APOP, то в рабочем процессе происходил 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩я│я▐ п╪п╣я┌п╬п╢ п╟я┐я┌п╣п╫я┌п╦я└п╦п╨п╟я├п╦п╦ CRAM-MD5 п╦ п╫п╣
+       п╠я▀п╩ я─п╟п╥я─п╣я┬я▒п╫ п╪п╣я┌п╬п╢ APOP, я┌п╬ п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п©я─п╬п╦я│я┘п╬п╢п╦п╩
        segmentation fault.
 
-    *) Исправление: при использовании директивы starttls only в протоколе 
-       POP3 nginx разрешал аутентификацию без перехода в режим SSL.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀ starttls only п╡ п©я─п╬я┌п╬п╨п╬п╩п╣
+       POP3 nginx я─п╟п╥я─п╣я┬п╟п╩ п╟я┐я┌п╣п╫я┌п╦я└п╦п╨п╟я├п╦я▌ п╠п╣п╥ п©п╣я─п╣я┘п╬п╢п╟ п╡ я─п╣п╤п╦п╪ SSL.
 
-    *) Исправление: рабочие процессы не выходили после переконфигурации и 
-       не переоткрывали логи, если использовался метод eventport.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я─п╟п╠п╬я┤п╦п╣ п©я─п╬я├п╣я│я│я▀ п╫п╣ п╡я▀я┘п╬п╢п╦п╩п╦ п©п╬я│п╩п╣ п©п╣я─п╣п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦ п╦ п╫п╣
+       п©п╣я─п╣п╬я┌п╨я─я▀п╡п╟п╩п╦ п╩п╬пЁп╦, п╣я│п╩п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩я│я▐ п╪п╣я┌п╬п╢ eventport.
 
-    *) Исправление: при использовании директивы ip_hash рабочий процесс мог 
-       зациклиться.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀ ip_hash я─п╟п╠п╬я┤п╦п╧ п©я─п╬я├п╣я│я│ п╪п╬пЁ
+       п╥п╟я├п╦п╨п╩п╦я┌я▄я│я▐.
 
-    *) Исправление: теперь nginx не пишет в лог некоторые alert'ы, если 
-       используются методы eventport или /dev/poll.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ nginx п╫п╣ п©п╦я┬п╣я┌ п╡ п╩п╬пЁ п╫п╣п╨п╬я┌п╬я─я▀п╣ alert'я▀, п╣я│п╩п╦
+       п╦я│п©п╬п╩я▄п╥я┐я▌я┌я│я▐ п╪п╣я┌п╬п╢я▀ eventport п╦п╩п╦ /dev/poll.
 
 
-Изменения в nginx 0.5.14                                          23.02.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.5.14                                          23.02.2007
 
-    *) Исправление: nginx игнорировал лишние закрывающие скобки "}" в конце 
-       конфигурационного файла.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╦пЁп╫п╬я─п╦я─п╬п╡п╟п╩ п╩п╦я┬п╫п╦п╣ п╥п╟п╨я─я▀п╡п╟я▌я┴п╦п╣ я│п╨п╬п╠п╨п╦ "}" п╡ п╨п╬п╫я├п╣
+       п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╬п╫п╫п╬пЁп╬ я└п╟п╧п╩п╟.
 
 
-Изменения в nginx 0.5.13                                          19.02.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.5.13                                          19.02.2007
 
-    *) Добавление: методы COPY и MOVE.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╣я┌п╬п╢я▀ COPY п╦ MOVE.
 
-    *) Исправление: модуль ngx_http_realip_module устанавливал мусор для 
-       запросов, переданных по keep-alive соединению.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_realip_module я┐я│я┌п╟п╫п╟п╡п╩п╦п╡п╟п╩ п╪я┐я│п╬я─ п╢п╩я▐
+       п╥п╟п©я─п╬я│п╬п╡, п©п╣я─п╣п╢п╟п╫п╫я▀я┘ п©п╬ keep-alive я│п╬п╣п╢п╦п╫п╣п╫п╦я▌.
 
-    *) Исправление: nginx не работал на 64-битном big-endian Linux.
-       Спасибо Андрею Нигматулину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я─п╟п╠п╬я┌п╟п╩ п╫п╟ 64-п╠п╦я┌п╫п╬п╪ big-endian Linux.
+       п║п©п╟я│п╦п╠п╬ п░п╫п╢я─п╣я▌ п²п╦пЁп╪п╟я┌я┐п╩п╦п╫я┐.
 
-    *) Исправление: при получении слишком длинной команды IMAP/POP3-прокси 
-       теперь сразу закрывает соединение, а не по таймауту.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п©п╬п╩я┐я┤п╣п╫п╦п╦ я│п╩п╦я┬п╨п╬п╪ п╢п╩п╦п╫п╫п╬п╧ п╨п╬п╪п╟п╫п╢я▀ IMAP/POP3-п©я─п╬п╨я│п╦
+       я┌п╣п©п╣я─я▄ я│я─п╟п╥я┐ п╥п╟п╨я─я▀п╡п╟п╣я┌ я│п╬п╣п╢п╦п╫п╣п╫п╦п╣, п╟ п╫п╣ п©п╬ я┌п╟п╧п╪п╟я┐я┌я┐.
 
-    *) Исправление: если при использовании метода epoll клиент закрывал 
-       преждевременно соединение со своей стороны, то nginx закрывал это 
-       соединение только по истечении таймаута на передачу.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╪п╣я┌п╬п╢п╟ epoll п╨п╩п╦п╣п╫я┌ п╥п╟п╨я─я▀п╡п╟п╩
+       п©я─п╣п╤п╢п╣п╡я─п╣п╪п╣п╫п╫п╬ я│п╬п╣п╢п╦п╫п╣п╫п╦п╣ я│п╬ я│п╡п╬п╣п╧ я│я┌п╬я─п╬п╫я▀, я┌п╬ nginx п╥п╟п╨я─я▀п╡п╟п╩ я█я┌п╬
+       я│п╬п╣п╢п╦п╫п╣п╫п╦п╣ я┌п╬п╩я▄п╨п╬ п©п╬ п╦я│я┌п╣я┤п╣п╫п╦п╦ я┌п╟п╧п╪п╟я┐я┌п╟ п╫п╟ п©п╣я─п╣п╢п╟я┤я┐.
 
-    *) Исправление: nginx не собирался на платформах, отличных от i386, 
-       amd64, sparc и ppc; ошибка появилась в 0.5.8.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ п©п╩п╟я┌я└п╬я─п╪п╟я┘, п╬я┌п╩п╦я┤п╫я▀я┘ п╬я┌ i386,
+       amd64, sparc п╦ ppc; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.5.8.
 
 
-Изменения в nginx 0.5.12                                          12.02.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.5.12                                          12.02.2007
 
-    *) Исправление: nginx не собирался на платформах, отличных от i386, 
-       amd64, sparc и ppc; ошибка появилась в 0.5.8.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ п©п╩п╟я┌я└п╬я─п╪п╟я┘, п╬я┌п╩п╦я┤п╫я▀я┘ п╬я┌ i386,
+       amd64, sparc п╦ ppc; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.5.8.
 
-    *) Исправление: при использовании временных файлов в время работы с 
-       FastCGI-сервером в рабочем процессе мог произойти segmentation 
-       fault; ошибка появилась в 0.5.8.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╡я─п╣п╪п╣п╫п╫я▀я┘ я└п╟п╧п╩п╬п╡ п╡ п╡я─п╣п╪я▐ я─п╟п╠п╬я┌я▀ я│
+       FastCGI-я│п╣я─п╡п╣я─п╬п╪ п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault;
+       п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.5.8.
 
-    *) Исправление: если переменная $fastcgi_script_name записывалась в 
-       лог, то в рабочем процессе мог произойти segmentation fault.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $fastcgi_script_name п╥п╟п©п╦я│я▀п╡п╟п╩п╟я│я▄ п╡ п╩п╬пЁ,
+       я┌п╬ п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault.
 
-    *) Исправление: ngx_http_perl_module не собирался на Solaris.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: ngx_http_perl_module п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ Solaris.
 
 
-Изменения в nginx 0.5.11                                          05.02.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.5.11                                          05.02.2007
 
-    *) Добавление: теперь configure определяет библиотеку PCRE в 
-       MacPorts.
-       Спасибо Chris McGrath.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ configure п╬п©я─п╣п╢п╣п╩я▐п╣я┌ п╠п╦п╠п╩п╦п╬я┌п╣п╨я┐ PCRE п╡ MacPorts.
+       п║п©п╟я│п╦п╠п╬ Chris McGrath.
 
-    *) Исправление: ответ был неверным, если запрашивалось несколько 
-       диапазонов; ошибка появилась в 0.5.6.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┌п╡п╣я┌ п╠я▀п╩ п╫п╣п╡п╣я─п╫я▀п╪, п╣я│п╩п╦ п╥п╟п©я─п╟я┬п╦п╡п╟п╩п╬я│я▄ п╫п╣я│п╨п╬п╩я▄п╨п╬
+       п╢п╦п╟п©п╟п╥п╬п╫п╬п╡; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.5.6.
 
-    *) Исправление: директива create_full_put_path не могла создавать 
-       промежуточные каталоги, если не была установлена директива 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ create_full_put_path п╫п╣ п╪п╬пЁп╩п╟ я│п╬п╥п╢п╟п╡п╟я┌я▄
+       п©я─п╬п╪п╣п╤я┐я┌п╬я┤п╫я▀п╣ п╨п╟я┌п╟п╩п╬пЁп╦, п╣я│п╩п╦ п╫п╣ п╠я▀п╩п╟ я┐я│я┌п╟п╫п╬п╡п╩п╣п╫п╟ п╢п╦я─п╣п╨я┌п╦п╡п╟
        dav_access.
-       Спасибо Evan Miller.
+       п║п©п╟я│п╦п╠п╬ Evan Miller.
 
-    *) Исправление: вместо кодов ошибок "400" и "408" в access_log мог 
-       записываться код "0".
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡п╪п╣я│я┌п╬ п╨п╬п╢п╬п╡ п╬я┬п╦п╠п╬п╨ "400" п╦ "408" п╡ access_log п╪п╬пЁ
+       п╥п╟п©п╦я│я▀п╡п╟я┌я▄я│я▐ п╨п╬п╢ "0".
 
-    *) Исправление: при сборке с оптимизацией -O2 в рабочем процессе мог 
-       произойти segmentation fault.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ я│п╠п╬я─п╨п╣ я│ п╬п©я┌п╦п╪п╦п╥п╟я├п╦п╣п╧ -O2 п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ
+       п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault.
 
 
-Изменения в nginx 0.5.10                                          26.01.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.5.10                                          26.01.2007
 
-    *) Исправление: во время обновления исполняемого файла новый процесс не 
-       наследовал слушающие сокеты; ошибка появилась в 0.5.9.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡п╬ п╡я─п╣п╪я▐ п╬п╠п╫п╬п╡п╩п╣п╫п╦я▐ п╦я│п©п╬п╩п╫я▐п╣п╪п╬пЁп╬ я└п╟п╧п╩п╟ п╫п╬п╡я▀п╧ п©я─п╬я├п╣я│я│ п╫п╣
+       п╫п╟я│п╩п╣п╢п╬п╡п╟п╩ я│п╩я┐я┬п╟я▌я┴п╦п╣ я│п╬п╨п╣я┌я▀; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.5.9.
 
-    *) Исправление: при сборке с оптимизацией -O2 в рабочем процессе мог 
-       произойти segmentation fault; ошибка появилась в 0.5.1.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ я│п╠п╬я─п╨п╣ я│ п╬п©я┌п╦п╪п╦п╥п╟я├п╦п╣п╧ -O2 п╡ я─п╟п╠п╬я┤п╣п╪ п©я─п╬я├п╣я│я│п╣ п╪п╬пЁ
+       п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.5.1.
 
 
-Изменения в nginx 0.5.9                                           25.01.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.5.9                                           25.01.2007
 
-    *) Изменение: модуль ngx_http_memcached_module теперь в качестве ключа 
-       использует значение переменной $memcached_key.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_memcached_module я┌п╣п©п╣я─я▄ п╡ п╨п╟я┤п╣я│я┌п╡п╣ п╨п╩я▌я┤п╟
+       п╦я│п©п╬п╩я▄п╥я┐п╣я┌ п╥п╫п╟я┤п╣п╫п╦п╣ п©п╣я─п╣п╪п╣п╫п╫п╬п╧ $memcached_key.
 
-    *) Добавление: переменная $memcached_key.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $memcached_key.
 
-    *) Добавление: параметр clean в директиве client_body_in_file_only.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ clean п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ client_body_in_file_only.
 
-    *) Добавление: директива env.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ env.
 
-    *) Добавление: директива sendfile работает внутри блока if.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ sendfile я─п╟п╠п╬я┌п╟п╣я┌ п╡п╫я┐я┌я─п╦ п╠п╩п╬п╨п╟ if.
 
-    *) Добавление: теперь при ошибке записи в access_log nginx записывает 
-       сообщение в error_log, но не чаще одного раза в минуту.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п©я─п╦ п╬я┬п╦п╠п╨п╣ п╥п╟п©п╦я│п╦ п╡ access_log nginx п╥п╟п©п╦я│я▀п╡п╟п╣я┌
+       я│п╬п╬п╠я┴п╣п╫п╦п╣ п╡ error_log, п╫п╬ п╫п╣ я┤п╟я┴п╣ п╬п╢п╫п╬пЁп╬ я─п╟п╥п╟ п╡ п╪п╦п╫я┐я┌я┐.
 
-    *) Исправление: директива "access_log off" не всегда запрещала запись в 
-       лог.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ "access_log off" п╫п╣ п╡я│п╣пЁп╢п╟ п╥п╟п©я─п╣я┴п╟п╩п╟ п╥п╟п©п╦я│я▄ п╡
+       п╩п╬пЁ.
 
 
-Изменения в nginx 0.5.8                                           19.01.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.5.8                                           19.01.2007
 
-    *) Исправление: если использовалась директива 
-       "client_body_in_file_only on" и тело запроса было небольшое, то мог 
-       произойти segmentation fault.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╟я│я▄ п╢п╦я─п╣п╨я┌п╦п╡п╟
+       "client_body_in_file_only on" п╦ я┌п╣п╩п╬ п╥п╟п©я─п╬я│п╟ п╠я▀п╩п╬ п╫п╣п╠п╬п╩я▄я┬п╬п╣, я┌п╬ п╪п╬пЁ
+       п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault.
 
-    *) Исправление: происходил segmentation fault, если использовались 
-       директивы "client_body_in_file_only on" и 
-       "proxy_pass_request_body off" или "fastcgi_pass_request_body off", и 
-       делался переход к следующему бэкенду.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault, п╣я│п╩п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╦я│я▄
+       п╢п╦я─п╣п╨я┌п╦п╡я▀ "client_body_in_file_only on" п╦
+       "proxy_pass_request_body off" п╦п╩п╦ "fastcgi_pass_request_body off", п╦
+       п╢п╣п╩п╟п╩я│я▐ п©п╣я─п╣я┘п╬п╢ п╨ я│п╩п╣п╢я┐я▌я┴п╣п╪я┐ п╠я█п╨п╣п╫п╢я┐.
 
-    *) Исправление: если при использовании директивы "proxy_buffering off" 
-       соединение с клиентом было неактивно, то оно закрывалось по 
-       таймауту, заданному директивой send_timeout; ошибка появилась в 
-       0.4.7.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀ "proxy_buffering off"
+       я│п╬п╣п╢п╦п╫п╣п╫п╦п╣ я│ п╨п╩п╦п╣п╫я┌п╬п╪ п╠я▀п╩п╬ п╫п╣п╟п╨я┌п╦п╡п╫п╬, я┌п╬ п╬п╫п╬ п╥п╟п╨я─я▀п╡п╟п╩п╬я│я▄ п©п╬ я┌п╟п╧п╪п╟я┐я┌я┐,
+       п╥п╟п╢п╟п╫п╫п╬п╪я┐ п╢п╦я─п╣п╨я┌п╦п╡п╬п╧ send_timeout; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.4.7.
 
-    *) Исправление: если при использовании метода epoll клиент закрывал 
-       преждевременно соединение со своей стороны, то nginx закрывал это 
-       соединение только по истечении таймаута на передачу.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╪п╣я┌п╬п╢п╟ epoll п╨п╩п╦п╣п╫я┌ п╥п╟п╨я─я▀п╡п╟п╩
+       п©я─п╣п╤п╢п╣п╡я─п╣п╪п╣п╫п╫п╬ я│п╬п╣п╢п╦п╫п╣п╫п╦п╣ я│п╬ я│п╡п╬п╣п╧ я│я┌п╬я─п╬п╫я▀, я┌п╬ nginx п╥п╟п╨я─я▀п╡п╟п╩ я█я┌п╬
+       я│п╬п╣п╢п╦п╫п╣п╫п╦п╣ я┌п╬п╩я▄п╨п╬ п©п╬ п╦я│я┌п╣я┤п╣п╫п╦п╦ я┌п╟п╧п╪п╟я┐я┌п╟ п╫п╟ п©п╣я─п╣п╢п╟я┤я┐.
 
-    *) Исправление: ошибки "[alert] zero size buf" при работе с 
-       FastCGI-сервером.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ "[alert] zero size buf" п©я─п╦ я─п╟п╠п╬я┌п╣ я│
+       FastCGI-я│п╣я─п╡п╣я─п╬п╪.
 
-    *) Исправление ошибок в директиве limit_zone.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣ п╬я┬п╦п╠п╬п╨ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ limit_zone.
 
 
-Изменения в nginx 0.5.7                                           15.01.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.5.7                                           15.01.2007
 
-    *) Добавление: оптимизация использования памяти в ssl_session_cache.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╬п©я┌п╦п╪п╦п╥п╟я├п╦я▐ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦я▐ п©п╟п╪я▐я┌п╦ п╡ ssl_session_cache.
 
-    *) Исправление ошибок в директивах ssl_session_cache и limit_zone.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣ п╬я┬п╦п╠п╬п╨ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╟я┘ ssl_session_cache п╦ limit_zone.
 
-    *) Исправление: на старте или во время переконфигурации происходил 
-       segmentation fault, если директивы ssl_session_cache или limit_zone 
-       использовались на 64-битных платформах.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╫п╟ я│я┌п╟я─я┌п╣ п╦п╩п╦ п╡п╬ п╡я─п╣п╪я▐ п©п╣я─п╣п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦ п©я─п╬п╦я│я┘п╬п╢п╦п╩
+       segmentation fault, п╣я│п╩п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀ ssl_session_cache п╦п╩п╦ limit_zone
+       п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╦я│я▄ п╫п╟ 64-п╠п╦я┌п╫я▀я┘ п©п╩п╟я┌я└п╬я─п╪п╟я┘.
 
-    *) Исправление: при использовании директив add_before_body или 
-       add_after_body происходил segmentation fault, если в заголовке 
-       ответа нет строки "Content-Type".
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╢п╦я─п╣п╨я┌п╦п╡ add_before_body п╦п╩п╦
+       add_after_body п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault, п╣я│п╩п╦ п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╬я┌п╡п╣я┌п╟
+       п╫п╣я┌ я│я┌я─п╬п╨п╦ "Content-Type".
 
-    *) Исправление: библиотека OpenSSL всегда собиралась с поддержкой 
-       потоков.
-       Спасибо Дену Иванову.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╠п╦п╠п╩п╦п╬я┌п╣п╨п╟ OpenSSL п╡я│п╣пЁп╢п╟ я│п╬п╠п╦я─п╟п╩п╟я│я▄ я│ п©п╬п╢п╢п╣я─п╤п╨п╬п╧
+       п©п╬я┌п╬п╨п╬п╡.
+       п║п©п╟я│п╦п╠п╬ п■п╣п╫я┐ п≤п╡п╟п╫п╬п╡я┐.
 
-    *) Исправление: совместимость библиотеки PCRE-6.5+ и компилятора icc.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я│п╬п╡п╪п╣я│я┌п╦п╪п╬я│я┌я▄ п╠п╦п╠п╩п╦п╬я┌п╣п╨п╦ PCRE-6.5+ п╦ п╨п╬п╪п©п╦п╩я▐я┌п╬я─п╟ icc.
 
 
-Изменения в nginx 0.5.6                                           09.01.2007
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.5.6                                           09.01.2007
 
-    *) Изменение: теперь модуль ngx_http_index_module игнорирует все 
-       методы, кроме GET, HEAD и POST.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╪п╬п╢я┐п╩я▄ ngx_http_index_module п╦пЁп╫п╬я─п╦я─я┐п╣я┌ п╡я│п╣ п╪п╣я┌п╬п╢я▀,
+       п╨я─п╬п╪п╣ GET, HEAD п╦ POST.
 
-    *) Добавление: модуль ngx_http_limit_zone_module.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_limit_zone_module.
 
-    *) Добавление: переменная $binary_remote_addr.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $binary_remote_addr.
 
-    *) Добавление: директивы ssl_session_cache модулей ngx_http_ssl_module 
-       и ngx_imap_ssl_module.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ ssl_session_cache п╪п╬п╢я┐п╩п╣п╧ ngx_http_ssl_module п╦
+       ngx_imap_ssl_module.
 
-    *) Добавление: метод DELETE поддерживает рекурсивное удаление.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╣я┌п╬п╢ DELETE п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ я─п╣п╨я┐я─я│п╦п╡п╫п╬п╣ я┐п╢п╟п╩п╣п╫п╦п╣.
 
-    *) Исправление: при использовании $r->sendfile() byte-ranges 
-       передавались неверно.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ $r->sendfile() byte-ranges
+       п©п╣я─п╣п╢п╟п╡п╟п╩п╦я│я▄ п╫п╣п╡п╣я─п╫п╬.
 
 
-Изменения в nginx 0.5.5                                           24.12.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.5.5                                           24.12.2006
 
-    *) Изменение: ключ -v больше не выводит информацию о компиляторе.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╨п╩я▌я┤ -v п╠п╬п╩я▄я┬п╣ п╫п╣ п╡я▀п╡п╬п╢п╦я┌ п╦п╫я└п╬я─п╪п╟я├п╦я▌ п╬ п╨п╬п╪п©п╦п╩я▐я┌п╬я─п╣.
 
-    *) Добавление: ключ -V.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╨п╩я▌я┤ -V.
 
-    *) Добавление: директива worker_rlimit_core поддерживает указание 
-       размера в K, M и G.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ worker_rlimit_core п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ я┐п╨п╟п╥п╟п╫п╦п╣
+       я─п╟п╥п╪п╣я─п╟ п╡ K, M п╦ G.
 
-    *) Исправление: модуль nginx.pm теперь может устанавливаться 
-       непривилегированным пользователем.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ nginx.pm я┌п╣п©п╣я─я▄ п╪п╬п╤п╣я┌ я┐я│я┌п╟п╫п╟п╡п╩п╦п╡п╟я┌я▄я│я▐
+       п╫п╣п©я─п╦п╡п╦п╩п╣пЁп╦я─п╬п╡п╟п╫п╫я▀п╪ п©п╬п╩я▄п╥п╬п╡п╟я┌п╣п╩п╣п╪.
 
-    *) Исправление: при использовании методов $r->request_body или 
-       $r->request_body_file мог произойти segmentation fault.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╪п╣я┌п╬п╢п╬п╡ $r->request_body п╦п╩п╦
+       $r->request_body_file п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault.
 
-    *) Исправление: ошибок, специфичных для платформы ppc.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╬п╨, я│п©п╣я├п╦я└п╦я┤п╫я▀я┘ п╢п╩я▐ п©п╩п╟я┌я└п╬я─п╪я▀ ppc.
 
 
-Изменения в nginx 0.5.4                                           15.12.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.5.4                                           15.12.2006
 
-    *) Добавление: директиву perl можно использовать внутри блока 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я┐ perl п╪п╬п╤п╫п╬ п╦я│п©п╬п╩я▄п╥п╬п╡п╟я┌я▄ п╡п╫я┐я┌я─п╦ п╠п╩п╬п╨п╟
        limit_except.
 
-    *) Исправление: модуль ngx_http_dav_module требовал строку "Date" в 
-       заголовке запроса для метода DELETE.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_dav_module я┌я─п╣п╠п╬п╡п╟п╩ я│я┌я─п╬п╨я┐ "Date" п╡
+       п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╥п╟п©я─п╬я│п╟ п╢п╩я▐ п╪п╣я┌п╬п╢п╟ DELETE.
 
-    *) Исправление: при использовании одного параметра в директиве 
-       dav_access nginx мог сообщить об ошибке в конфигурации.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╬п╢п╫п╬пЁп╬ п©п╟я─п╟п╪п╣я┌я─п╟ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣
+       dav_access nginx п╪п╬пЁ я│п╬п╬п╠я┴п╦я┌я▄ п╬п╠ п╬я┬п╦п╠п╨п╣ п╡ п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦.
 
-    *) Исправление: при использовании переменной $host мог произойти 
-       segmentation fault; ошибка появилась в 0.4.14.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п©п╣я─п╣п╪п╣п╫п╫п╬п╧ $host п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦
+       segmentation fault; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.4.14.
 
 
-Изменения в nginx 0.5.3                                           13.12.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.5.3                                           13.12.2006
 
-    *) Добавление: модуль ngx_http_perl_module поддерживает методы 
-       $r->status, $r->log_error и $r->sleep.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_perl_module п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╪п╣я┌п╬п╢я▀
+       $r->status, $r->log_error п╦ $r->sleep.
 
-    *) Добавление: метод $r->variable поддерживает переменные, неописанные 
-       в конфигурации nginx'а.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╣я┌п╬п╢ $r->variable п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п©п╣я─п╣п╪п╣п╫п╫я▀п╣, п╫п╣п╬п©п╦я│п╟п╫п╫я▀п╣ п╡
+       п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦ nginx'п╟.
 
-    *) Исправление: метод $r->has_request_body не работал.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╣я┌п╬п╢ $r->has_request_body п╫п╣ я─п╟п╠п╬я┌п╟п╩.
 
 
-Изменения в nginx 0.5.2                                           11.12.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.5.2                                           11.12.2006
 
-    *) Исправление: если в директивах proxy_pass использовалось имя, 
-       указанное в upstream, то nginx пытался найти IP-адрес этого имени; 
-       ошибка появилась в 0.5.1.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╟я┘ proxy_pass п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╬я│я▄ п╦п╪я▐,
+       я┐п╨п╟п╥п╟п╫п╫п╬п╣ п╡ upstream, я┌п╬ nginx п©я▀я┌п╟п╩я│я▐ п╫п╟п╧я┌п╦ IP-п╟п╢я─п╣я│ я█я┌п╬пЁп╬ п╦п╪п╣п╫п╦;
+       п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.5.1.
 
 
-Изменения в nginx 0.5.1                                           11.12.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.5.1                                           11.12.2006
 
-    *) Исправление: директива post_action могла не работать после 
-       неудачного завершения запроса.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ post_action п╪п╬пЁп╩п╟ п╫п╣ я─п╟п╠п╬я┌п╟я┌я▄ п©п╬я│п╩п╣ п╫п╣я┐п╢п╟я┤п╫п╬пЁп╬
+       п╥п╟п╡п╣я─я┬п╣п╫п╦я▐ п╥п╟п©я─п╬я│п╟.
 
-    *) Изменение: обход ошибки в Eudora для Mac; ошибка появилась в 
-       0.4.11.
-       Спасибо Bron Gondwana.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╬п╠я┘п╬п╢ п╬я┬п╦п╠п╨п╦ п╡ Eudora п╢п╩я▐ Mac; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.4.11.
+       п║п©п╟я│п╦п╠п╬ Bron Gondwana.
 
-    *) Исправление: при указании в директиве fastcgi_pass имени описанного 
-       upstream'а выдавалось сообщение "no port in upstream"; ошибка 
-       появилась в 0.5.0.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ я┐п╨п╟п╥п╟п╫п╦п╦ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ fastcgi_pass п╦п╪п╣п╫п╦ п╬п©п╦я│п╟п╫п╫п╬пЁп╬
+       upstream'п╟ п╡я▀п╢п╟п╡п╟п╩п╬я│я▄ я│п╬п╬п╠я┴п╣п╫п╦п╣ "no port in upstream"; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.5.0.
 
-    *) Исправление: если в директивах proxy_pass и fastcgi_pass 
-       использовались одинаковых имена серверов, но с разными портами, то 
-       эти директивы использовали первый описанный порт; ошибка появилась в 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╟я┘ proxy_pass п╦ fastcgi_pass
+       п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╦я│я▄ п╬п╢п╦п╫п╟п╨п╬п╡я▀я┘ п╦п╪п╣п╫п╟ я│п╣я─п╡п╣я─п╬п╡, п╫п╬ я│ я─п╟п╥п╫я▀п╪п╦ п©п╬я─я┌п╟п╪п╦, я┌п╬
+       я█я┌п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╦ п©п╣я─п╡я▀п╧ п╬п©п╦я│п╟п╫п╫я▀п╧ п©п╬я─я┌; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
        0.5.0.
 
-    *) Исправление: если в директивах proxy_pass и fastcgi_pass 
-       использовались unix domain сокеты, то эти директивы использовали 
-       первый описанный сокет; ошибка появилась в 0.5.0.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╟я┘ proxy_pass п╦ fastcgi_pass
+       п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╦я│я▄ unix domain я│п╬п╨п╣я┌я▀, я┌п╬ я█я┌п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╦
+       п©п╣я─п╡я▀п╧ п╬п©п╦я│п╟п╫п╫я▀п╧ я│п╬п╨п╣я┌; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.5.0.
 
-    *) Исправление: ngx_http_auth_basic_module игнорировал пользователя, 
-       если он был указан в последней строке файла паролей и после пароля 
-       не было перевода строки, возврата каретки или символа ":".
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: ngx_http_auth_basic_module п╦пЁп╫п╬я─п╦я─п╬п╡п╟п╩ п©п╬п╩я▄п╥п╬п╡п╟я┌п╣п╩я▐,
+       п╣я│п╩п╦ п╬п╫ п╠я▀п╩ я┐п╨п╟п╥п╟п╫ п╡ п©п╬я│п╩п╣п╢п╫п╣п╧ я│я┌я─п╬п╨п╣ я└п╟п╧п╩п╟ п©п╟я─п╬п╩п╣п╧ п╦ п©п╬я│п╩п╣ п©п╟я─п╬п╩я▐ п╫п╣
+       п╠я▀п╩п╬ п©п╣я─п╣п╡п╬п╢п╟ я│я┌я─п╬п╨п╦, п╡п╬п╥п╡я─п╟я┌п╟ п╨п╟я─п╣я┌п╨п╦ п╦п╩п╦ я│п╦п╪п╡п╬п╩п╟ ":".
 
-    *) Исправление: переменная $upstream_response_time могла быть равна 
-       "0.000", хотя время обработки было больше 1 миллисекунды.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $upstream_response_time п╪п╬пЁп╩п╟ п╠я▀я┌я▄ я─п╟п╡п╫п╟
+       "0.000", я┘п╬я┌я▐ п╡я─п╣п╪я▐ п╬п╠я─п╟п╠п╬я┌п╨п╦ п╠я▀п╩п╬ п╠п╬п╩я▄я┬п╣ 1 п╪п╦п╩п╩п╦я│п╣п╨я┐п╫п╢я▀.
 
 
-Изменения в nginx 0.5.0                                           04.12.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.5.0                                           04.12.2006
 
-    *) Изменение: параметры в виде "%name" в директиве log_format больше не 
-       поддерживаются.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─я▀ п╡ п╡п╦п╢п╣ "%name" п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ log_format п╠п╬п╩я▄я┬п╣ п╫п╣
+       п©п╬п╢п╢п╣я─п╤п╦п╡п╟я▌я┌я│я▐.
 
-    *) Изменение: директивы proxy_upstream_max_fails, 
-       proxy_upstream_fail_timeout, fastcgi_upstream_max_fails, и 
-       fastcgi_upstream_fail_timeout, memcached_upstream_max_fails и 
-       memcached_upstream_fail_timeout больше не поддерживаются.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_upstream_max_fails,
+       proxy_upstream_fail_timeout, fastcgi_upstream_max_fails, п╦
+       fastcgi_upstream_fail_timeout, memcached_upstream_max_fails п╦
+       memcached_upstream_fail_timeout п╠п╬п╩я▄я┬п╣ п╫п╣ п©п╬п╢п╢п╣я─п╤п╦п╡п╟я▌я┌я│я▐.
 
-    *) Добавление: директива server в блоке upstream поддерживает параметры 
-       max_fails, fail_timeout и down.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ server п╡ п╠п╩п╬п╨п╣ upstream п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п©п╟я─п╟п╪п╣я┌я─я▀
+       max_fails, fail_timeout п╦ down.
 
-    *) Добавление: директива ip_hash в блоке upstream.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ ip_hash п╡ п╠п╩п╬п╨п╣ upstream.
 
-    *) Добавление: статус WAIT в строке "Auth-Status" в заголовка ответа 
-       сервера аутентификации IMAP/POP3 прокси.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я│я┌п╟я┌я┐я│ WAIT п╡ я│я┌я─п╬п╨п╣ "Auth-Status" п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╟ п╬я┌п╡п╣я┌п╟
+       я│п╣я─п╡п╣я─п╟ п╟я┐я┌п╣п╫я┌п╦я└п╦п╨п╟я├п╦п╦ IMAP/POP3 п©я─п╬п╨я│п╦.
 
-    *) Исправление: nginx не собирался на 64-битных платформах; ошибка 
-       появилась в 0.4.14.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ 64-п╠п╦я┌п╫я▀я┘ п©п╩п╟я┌я└п╬я─п╪п╟я┘; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.4.14.
 
 
-Изменения в nginx 0.4.14                                          27.11.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.4.14                                          27.11.2006
 
-    *) Добавление: директива proxy_pass_error_message в IMAP/POP3 прокси.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ proxy_pass_error_message п╡ IMAP/POP3 п©я─п╬п╨я│п╦.
 
-    *) Добавление: теперь configure определяет библиотеку PCRE на FreeBSD, 
-       Linux и NetBSD.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ configure п╬п©я─п╣п╢п╣п╩я▐п╣я┌ п╠п╦п╠п╩п╦п╬я┌п╣п╨я┐ PCRE п╫п╟ FreeBSD,
+       Linux п╦ NetBSD.
 
-    *) Исправление: ngx_http_perl_module не работал с перлом, собранным с 
-       поддержкой потоков; ошибка появилась в 0.3.38.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: ngx_http_perl_module п╫п╣ я─п╟п╠п╬я┌п╟п╩ я│ п©п╣я─п╩п╬п╪, я│п╬п╠я─п╟п╫п╫я▀п╪ я│
+       п©п╬п╢п╢п╣я─п╤п╨п╬п╧ п©п╬я┌п╬п╨п╬п╡; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.3.38.
 
-    *) Исправление: ngx_http_perl_module не работал корректно, если перл 
-       вызывался рекурсивно.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: ngx_http_perl_module п╫п╣ я─п╟п╠п╬я┌п╟п╩ п╨п╬я─я─п╣п╨я┌п╫п╬, п╣я│п╩п╦ п©п╣я─п╩
+       п╡я▀п╥я▀п╡п╟п╩я│я▐ я─п╣п╨я┐я─я│п╦п╡п╫п╬.
 
-    *) Исправление: nginx игнорировал имя сервера в строке запроса.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╦пЁп╫п╬я─п╦я─п╬п╡п╟п╩ п╦п╪я▐ я│п╣я─п╡п╣я─п╟ п╡ я│я┌я─п╬п╨п╣ п╥п╟п©я─п╬я│п╟.
 
-    *) Исправление: если FastCGI сервер передавал много в stderr, то 
-       рабочий процесс мог зациклиться.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ FastCGI я│п╣я─п╡п╣я─ п©п╣я─п╣п╢п╟п╡п╟п╩ п╪п╫п╬пЁп╬ п╡ stderr, я┌п╬ я─п╟п╠п╬я┤п╦п╧
+       п©я─п╬я├п╣я│я│ п╪п╬пЁ п╥п╟я├п╦п╨п╩п╦я┌я▄я│я▐.
 
-    *) Исправление: при изменении системного времени переменная 
-       $upstream_response_time могла быть отрицательной.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦п╥п╪п╣п╫п╣п╫п╦п╦ я│п╦я│я┌п╣п╪п╫п╬пЁп╬ п╡я─п╣п╪п╣п╫п╦ п©п╣я─п╣п╪п╣п╫п╫п╟я▐
+       $upstream_response_time п╪п╬пЁп╩п╟ п╠я▀я┌я▄ п╬я┌я─п╦я├п╟я┌п╣п╩я▄п╫п╬п╧.
 
-    *) Исправление: при использовании POP3 серверу аутентификации IMAP/POP3 
-       прокси не передавался параметр Auth-Login-Attempt.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ POP3 я│п╣я─п╡п╣я─я┐ п╟я┐я┌п╣п╫я┌п╦я└п╦п╨п╟я├п╦п╦ IMAP/POP3
+       п©я─п╬п╨я│п╦ п╫п╣ п©п╣я─п╣п╢п╟п╡п╟п╩я│я▐ п©п╟я─п╟п╪п╣я┌я─ Auth-Login-Attempt.
 
-    *) Исправление: при ошибке соединения с сервером аутентификации 
-       IMAP/POP3 прокси мог произойти segmentation fault.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╬я┬п╦п╠п╨п╣ я│п╬п╣п╢п╦п╫п╣п╫п╦я▐ я│ я│п╣я─п╡п╣я─п╬п╪ п╟я┐я┌п╣п╫я┌п╦я└п╦п╨п╟я├п╦п╦
+       IMAP/POP3 п©я─п╬п╨я│п╦ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault.
 
 
-Изменения в nginx 0.4.13                                          15.11.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.4.13                                          15.11.2006
 
-    *) Добавление: директиву proxy_pass можно использовать внутри блока 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я┐ proxy_pass п╪п╬п╤п╫п╬ п╦я│п©п╬п╩я▄п╥п╬п╡п╟я┌я▄ п╡п╫я┐я┌я─п╦ п╠п╩п╬п╨п╟
        limit_except.
 
-    *) Добавление: директива limit_except поддерживает все WebDAV методы.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ limit_except п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╡я│п╣ WebDAV п╪п╣я┌п╬п╢я▀.
 
-    *) Исправление: при использовании директивы add_before_body без 
-       директивы add_after_body ответ передавался не полностью.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀ add_before_body п╠п╣п╥
+       п╢п╦я─п╣п╨я┌п╦п╡я▀ add_after_body п╬я┌п╡п╣я┌ п©п╣я─п╣п╢п╟п╡п╟п╩я│я▐ п╫п╣ п©п╬п╩п╫п╬я│я┌я▄я▌.
 
-    *) Исправление: большое тело запроса не принималось, если 
-       использовались метод epoll и deferred accept().
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╠п╬п╩я▄я┬п╬п╣ я┌п╣п╩п╬ п╥п╟п©я─п╬я│п╟ п╫п╣ п©я─п╦п╫п╦п╪п╟п╩п╬я│я▄, п╣я│п╩п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╦я│я▄
+       п╪п╣я┌п╬п╢ epoll п╦ deferred accept().
 
-    *) Исправление: для ответов модуля ngx_http_autoindex_module не 
-       выставлялась кодировка; ошибка появилась в 0.3.50.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╩я▐ п╬я┌п╡п╣я┌п╬п╡ п╪п╬п╢я┐п╩я▐ ngx_http_autoindex_module п╫п╣
+       п╡я▀я│я┌п╟п╡п╩я▐п╩п╟я│я▄ п╨п╬п╢п╦я─п╬п╡п╨п╟; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.3.50.
 
-    *) Исправление: ошибки "[alert] zero size buf" при работе с 
-       FastCGI-сервером;
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ "[alert] zero size buf" п©я─п╦ я─п╟п╠п╬я┌п╣ я│
+       FastCGI-я│п╣я─п╡п╣я─п╬п╪;
 
-    *) Исправление: параметр конфигурации --group= игнорировался.
-       Спасибо Thomas Moschny.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦ --group= п╦пЁп╫п╬я─п╦я─п╬п╡п╟п╩я│я▐.
+       п║п©п╟я│п╦п╠п╬ Thomas Moschny.
 
-    *) Исправление: 50-й подзапрос в SSI ответе не работал; ошибка 
-       появилась в 0.3.50.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: 50-п╧ п©п╬п╢п╥п╟п©я─п╬я│ п╡ SSI п╬я┌п╡п╣я┌п╣ п╫п╣ я─п╟п╠п╬я┌п╟п╩; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄
+       п╡ 0.3.50.
 
 
-Изменения в nginx 0.4.12                                          31.10.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.4.12                                          31.10.2006
 
-    *) Добавление: модуль ngx_http_perl_module поддерживает метод 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_perl_module п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╪п╣я┌п╬п╢
        $r->variable.
 
-    *) Исправление: при включении в ответ большого статического файла с 
-       помощью SSI ответ мог передаваться не полностью.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╡п╨п╩я▌я┤п╣п╫п╦п╦ п╡ п╬я┌п╡п╣я┌ п╠п╬п╩я▄я┬п╬пЁп╬ я│я┌п╟я┌п╦я┤п╣я│п╨п╬пЁп╬ я└п╟п╧п╩п╟ я│
+       п©п╬п╪п╬я┴я▄я▌ SSI п╬я┌п╡п╣я┌ п╪п╬пЁ п©п╣я─п╣п╢п╟п╡п╟я┌я▄я│я▐ п╫п╣ п©п╬п╩п╫п╬я│я┌я▄я▌.
 
-    *) Исправление: nginx не убирал "#fragment" в URI.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я┐п╠п╦я─п╟п╩ "#fragment" п╡ URI.
 
 
-Изменения в nginx 0.4.11                                          25.10.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.4.11                                          25.10.2006
 
-    *) Добавление: POP3 прокси поддерживает AUTH LOIGN PLAIN и CRAM-MD5.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: POP3 п©я─п╬п╨я│п╦ п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ AUTH LOIGN PLAIN п╦ CRAM-MD5.
 
-    *) Добавление: модуль ngx_http_perl_module поддерживает метод 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_perl_module п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╪п╣я┌п╬п╢
        $r->allow_ranges.
 
-    *) Исправление: при включённой поддержке команды APOP в POP3 прокси 
-       могли не работать команды USER/PASS; ошибка появилась в 0.4.10.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╡п╨п╩я▌я┤я▒п╫п╫п╬п╧ п©п╬п╢п╢п╣я─п╤п╨п╣ п╨п╬п╪п╟п╫п╢я▀ APOP п╡ POP3 п©я─п╬п╨я│п╦
+       п╪п╬пЁп╩п╦ п╫п╣ я─п╟п╠п╬я┌п╟я┌я▄ п╨п╬п╪п╟п╫п╢я▀ USER/PASS; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.4.10.
 
 
-Изменения в nginx 0.4.10                                          23.10.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.4.10                                          23.10.2006
 
-    *) Добавление: POP3 прокси поддерживает APOP.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: POP3 п©я─п╬п╨я│п╦ п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ APOP.
 
-    *) Исправление: при использовании методов select, poll и /dev/poll во 
-       время ожидания ответа от сервера аутентификации IMAP/POP3 прокси 
-       нагружал процессор.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╪п╣я┌п╬п╢п╬п╡ select, poll п╦ /dev/poll п╡п╬
+       п╡я─п╣п╪я▐ п╬п╤п╦п╢п╟п╫п╦я▐ п╬я┌п╡п╣я┌п╟ п╬я┌ я│п╣я─п╡п╣я─п╟ п╟я┐я┌п╣п╫я┌п╦я└п╦п╨п╟я├п╦п╦ IMAP/POP3 п©я─п╬п╨я│п╦
+       п╫п╟пЁя─я┐п╤п╟п╩ п©я─п╬я├п╣я│я│п╬я─.
 
-    *) Исправление: при использовании переменной $server_addr в директиве 
-       map мог произойти segmentation fault.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п©п╣я─п╣п╪п╣п╫п╫п╬п╧ $server_addr п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣
+       map п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault.
 
-    *) Исправление: модуль ngx_http_flv_module не поддерживал byte ranges 
-       для полных ответов; ошибка появилась в 0.4.7.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_flv_module п╫п╣ п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╩ byte ranges
+       п╢п╩я▐ п©п╬п╩п╫я▀я┘ п╬я┌п╡п╣я┌п╬п╡; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.4.7.
 
-    *) Исправление: nginx не собирался на Debian amd64; ошибка появилась в 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ Debian amd64; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
        0.4.9.
 
 
-Изменения в nginx 0.4.9                                           13.10.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.4.9                                           13.10.2006
 
-    *) Добавление: параметр set в команде SSI include.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ set п╡ п╨п╬п╪п╟п╫п╢п╣ SSI include.
 
-    *) Добавление: модуль ngx_http_perl_module теперь проверяет версию 
-       модуля nginx.pm.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_perl_module я┌п╣п©п╣я─я▄ п©я─п╬п╡п╣я─я▐п╣я┌ п╡п╣я─я│п╦я▌
+       п╪п╬п╢я┐п╩я▐ nginx.pm.
 
 
-Изменения в nginx 0.4.8                                           11.10.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.4.8                                           11.10.2006
 
-    *) Исправление: если до команды SSI include с параметром wait 
-       выполнялась ещё одна команда SSI include, то параметр wait мог не 
-       работать.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╢п╬ п╨п╬п╪п╟п╫п╢я▀ SSI include я│ п©п╟я─п╟п╪п╣я┌я─п╬п╪ wait
+       п╡я▀п©п╬п╩п╫я▐п╩п╟я│я▄ п╣я┴я▒ п╬п╢п╫п╟ п╨п╬п╪п╟п╫п╢п╟ SSI include, я┌п╬ п©п╟я─п╟п╪п╣я┌я─ wait п╪п╬пЁ п╫п╣
+       я─п╟п╠п╬я┌п╟я┌я▄.
 
-    *) Исправление: модуль ngx_http_flv_module добавлял FLV-заголовок для 
-       полных ответов.
-       Спасибо Алексею Ковырину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_flv_module п╢п╬п╠п╟п╡п╩я▐п╩ FLV-п╥п╟пЁп╬п╩п╬п╡п╬п╨ п╢п╩я▐
+       п©п╬п╩п╫я▀я┘ п╬я┌п╡п╣я┌п╬п╡.
+       п║п©п╟я│п╦п╠п╬ п░п╩п╣п╨я│п╣я▌ п п╬п╡я▀я─п╦п╫я┐.
 
 
-Изменения в nginx 0.4.7                                           10.10.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.4.7                                           10.10.2006
 
-    *) Добавление: модуль ngx_http_flv_module.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_flv_module.
 
-    *) Добавление: переменная $request_body_file.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $request_body_file.
 
-    *) Добавление: директивы charset и source_charset поддерживают 
-       переменные.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ charset п╦ source_charset п©п╬п╢п╢п╣я─п╤п╦п╡п╟я▌я┌
+       п©п╣я─п╣п╪п╣п╫п╫я▀п╣.
 
-    *) Исправление: если до команды SSI include с параметром wait 
-       выполнялась ещё одна команда SSI include, то параметр wait мог не 
-       работать.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╢п╬ п╨п╬п╪п╟п╫п╢я▀ SSI include я│ п©п╟я─п╟п╪п╣я┌я─п╬п╪ wait
+       п╡я▀п©п╬п╩п╫я▐п╩п╟я│я▄ п╣я┴я▒ п╬п╢п╫п╟ п╨п╬п╪п╟п╫п╢п╟ SSI include, я┌п╬ п©п╟я─п╟п╪п╣я┌я─ wait п╪п╬пЁ п╫п╣
+       я─п╟п╠п╬я┌п╟я┌я▄.
 
-    *) Исправление: при использовании директивы "proxy_buffering off" или 
-       при работе с memcached соединения могли не закрываться по таймауту.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀ "proxy_buffering off" п╦п╩п╦
+       п©я─п╦ я─п╟п╠п╬я┌п╣ я│ memcached я│п╬п╣п╢п╦п╫п╣п╫п╦я▐ п╪п╬пЁп╩п╦ п╫п╣ п╥п╟п╨я─я▀п╡п╟я┌я▄я│я▐ п©п╬ я┌п╟п╧п╪п╟я┐я┌я┐.
 
-    *) Исправление: nginx не запускался на 64-битных платформах, отличных 
-       от amd64, sparc64 и ppc64.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ п╥п╟п©я┐я│п╨п╟п╩я│я▐ п╫п╟ 64-п╠п╦я┌п╫я▀я┘ п©п╩п╟я┌я└п╬я─п╪п╟я┘, п╬я┌п╩п╦я┤п╫я▀я┘ п╬я┌
+       amd64, sparc64 п╦ ppc64.
 
 
-Изменения в nginx 0.4.6                                           06.10.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.4.6                                           06.10.2006
 
-    *) Исправление: nginx не запускался на 64-битных платформах, отличных 
-       от amd64, sparc64 и ppc64.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ п╥п╟п©я┐я│п╨п╟п╩я│я▐ п╫п╟ 64-п╠п╦я┌п╫я▀я┘ п©п╩п╟я┌я└п╬я─п╪п╟я┘, п╬я┌п╩п╦я┤п╫я▀я┘ п╬я┌
+       amd64, sparc64 п╦ ppc64.
 
-    *) Исправление: при запросе версии HTTP/1.1 nginx передавал ответ 
-       chunk'ами, если длина ответа в методе 
-       $r->headers_out("Content-Length", ...) была задана текстовой строкой.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╥п╟п©я─п╬я│п╣ п╡п╣я─я│п╦п╦ HTTP/1.1 nginx п©п╣я─п╣п╢п╟п╡п╟п╩ п╬я┌п╡п╣я┌
+       chunk'п╟п╪п╦, п╣я│п╩п╦ п╢п╩п╦п╫п╟ п╬я┌п╡п╣я┌п╟ п╡ п╪п╣я┌п╬п╢п╣
+       $r->headers_out("Content-Length", ...) п╠я▀п╩п╟ п╥п╟п╢п╟п╫п╟ я┌п╣п╨я│я┌п╬п╡п╬п╧ я│я┌я─п╬п╨п╬п╧.
 
-    *) Исправление: после перенаправления ошибки с помощью директивы 
-       error_page любая директива модуля ngx_http_rewrite_module возвращала 
-       эту ошибку; ошибка появилась в 0.4.4.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╬я│п╩п╣ п©п╣я─п╣п╫п╟п©я─п╟п╡п╩п╣п╫п╦я▐ п╬я┬п╦п╠п╨п╦ я│ п©п╬п╪п╬я┴я▄я▌ п╢п╦я─п╣п╨я┌п╦п╡я▀
+       error_page п╩я▌п╠п╟я▐ п╢п╦я─п╣п╨я┌п╦п╡п╟ п╪п╬п╢я┐п╩я▐ ngx_http_rewrite_module п╡п╬п╥п╡я─п╟я┴п╟п╩п╟
+       я█я┌я┐ п╬я┬п╦п╠п╨я┐; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.4.4.
 
 
-Изменения в nginx 0.4.5                                           02.10.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.4.5                                           02.10.2006
 
-    *) Исправление: nginx не собирался на Linux и Solaris; ошибка появилась 
-       в 0.4.4.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ Linux п╦ Solaris; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄
+       п╡ 0.4.4.
 
 
-Изменения в nginx 0.4.4                                           02.10.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.4.4                                           02.10.2006
 
-    *) Добавление: переменная $scheme.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $scheme.
 
-    *) Добавление: директива expires поддерживает параметр max.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ expires п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п©п╟я─п╟п╪п╣я┌я─ max.
 
-    *) Добавление: директива include поддерживает маску "*".
-       Спасибо Jonathan Dance.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ include п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╪п╟я│п╨я┐ "*".
+       п║п©п╟я│п╦п╠п╬ Jonathan Dance.
 
-    *) Исправление: директива return всегда изменяла код ответа, 
-       перенаправленного директивой error_page.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ return п╡я│п╣пЁп╢п╟ п╦п╥п╪п╣п╫я▐п╩п╟ п╨п╬п╢ п╬я┌п╡п╣я┌п╟,
+       п©п╣я─п╣п╫п╟п©я─п╟п╡п╩п╣п╫п╫п╬пЁп╬ п╢п╦я─п╣п╨я┌п╦п╡п╬п╧ error_page.
 
-    *) Исправление: происходил segmentation fault, если в методе PUT 
-       передавалось тело нулевой длины.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault, п╣я│п╩п╦ п╡ п╪п╣я┌п╬п╢п╣ PUT
+       п©п╣я─п╣п╢п╟п╡п╟п╩п╬я│я▄ я┌п╣п╩п╬ п╫я┐п╩п╣п╡п╬п╧ п╢п╩п╦п╫я▀.
 
-    *) Исправление: при использовании переменных в директиве proxy_redirect 
-       редирект изменялся неверно.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п©п╣я─п╣п╪п╣п╫п╫я▀я┘ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ proxy_redirect
+       я─п╣п╢п╦я─п╣п╨я┌ п╦п╥п╪п╣п╫я▐п╩я│я▐ п╫п╣п╡п╣я─п╫п╬.
 
 
-Изменения в nginx 0.4.3                                           26.09.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.4.3                                           26.09.2006
 
-    *) Изменение: ошибку 499 теперь нельзя перенаправить с помощью 
-       директивы error_page.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╬я┬п╦п╠п╨я┐ 499 я┌п╣п©п╣я─я▄ п╫п╣п╩я▄п╥я▐ п©п╣я─п╣п╫п╟п©я─п╟п╡п╦я┌я▄ я│ п©п╬п╪п╬я┴я▄я▌ п╢п╦я─п╣п╨я┌п╦п╡я▀
+       error_page.
 
-    *) Добавление: поддержка Solaris 10 event ports.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╬п╢п╢п╣я─п╤п╨п╟ Solaris 10 event ports.
 
-    *) Добавление: модуль ngx_http_browser_module.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_browser_module.
 
-    *) Исправление: при перенаправлении ошибки 400 проксированному серверу 
-       помощью директивы error_page мог произойти segmentation fault.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п©п╣я─п╣п╫п╟п©я─п╟п╡п╩п╣п╫п╦п╦ п╬я┬п╦п╠п╨п╦ 400 п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╫п╬п╪я┐ я│п╣я─п╡п╣я─я┐
+       п©п╬п╪п╬я┴я▄я▌ п╢п╦я─п╣п╨я┌п╦п╡я▀ error_page п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault.
 
-    *) Исправление: происходил segmentation fault, если в директиве 
-       proxy_pass использовался unix domain сокет; ошибка появилась в 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault, п╣я│п╩п╦ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣
+       proxy_pass п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩я│я▐ unix domain я│п╬п╨п╣я┌; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
        0.3.47.
 
-    *) Исправление: SSI не работал с ответами memcached и 
-       небуферизированными проксированными ответами.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: SSI п╫п╣ я─п╟п╠п╬я┌п╟п╩ я│ п╬я┌п╡п╣я┌п╟п╪п╦ memcached п╦
+       п╫п╣п╠я┐я└п╣я─п╦п╥п╦я─п╬п╡п╟п╫п╫я▀п╪п╦ п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╫я▀п╪п╦ п╬я┌п╡п╣я┌п╟п╪п╦.
 
-    *) Изменение: обход ошибки PAUSE hardware capability в Sun Studio.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╬п╠я┘п╬п╢ п╬я┬п╦п╠п╨п╦ PAUSE hardware capability п╡ Sun Studio.
 
 
-Изменения в nginx 0.4.2                                           14.09.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.4.2                                           14.09.2006
 
-    *) Исправление: убрана поддержка флага O_NOATIME на Linux; ошибка 
-       появилась в 0.4.1.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┐п╠я─п╟п╫п╟ п©п╬п╢п╢п╣я─п╤п╨п╟ я└п╩п╟пЁп╟ O_NOATIME п╫п╟ Linux; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.4.1.
 
 
-Изменения в nginx 0.4.1                                           14.09.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.4.1                                           14.09.2006
 
-    *) Исправление: совместимость с DragonFlyBSD.
-       Спасибо Павлу Назарову.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я│п╬п╡п╪п╣я│я┌п╦п╪п╬я│я┌я▄ я│ DragonFlyBSD.
+       п║п©п╟я│п╦п╠п╬ п÷п╟п╡п╩я┐ п²п╟п╥п╟я─п╬п╡я┐.
 
-    *) Изменение: обход ошибки в sendfile() в 64-битном Linux при передаче 
-       файлов больше 2G.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╬п╠я┘п╬п╢ п╬я┬п╦п╠п╨п╦ п╡ sendfile() п╡ 64-п╠п╦я┌п╫п╬п╪ Linux п©я─п╦ п©п╣я─п╣п╢п╟я┤п╣
+       я└п╟п╧п╩п╬п╡ п╠п╬п╩я▄я┬п╣ 2G.
 
-    *) Добавление: теперь на Linux nginx для статических запросов 
-       использует флаг O_NOATIME.
-       Спасибо Yusuf Goolamabbas.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╫п╟ Linux nginx п╢п╩я▐ я│я┌п╟я┌п╦я┤п╣я│п╨п╦я┘ п╥п╟п©я─п╬я│п╬п╡ п╦я│п©п╬п╩я▄п╥я┐п╣я┌
+       я└п╩п╟пЁ O_NOATIME.
+       п║п©п╟я│п╦п╠п╬ Yusuf Goolamabbas.
 
 
-Изменения в nginx 0.4.0                                           30.08.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.4.0                                           30.08.2006
 
-    *) Изменение во внутреннем API: инициализация модулей HTTP перенесена 
-       из фазы init module в фазу HTTP postconfiguration.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣ п╡п╬ п╡п╫я┐я┌я─п╣п╫п╫п╣п╪ API: п╦п╫п╦я├п╦п╟п╩п╦п╥п╟я├п╦я▐ п╪п╬п╢я┐п╩п╣п╧ HTTP п©п╣я─п╣п╫п╣я│п╣п╫п╟ п╦п╥
+       я└п╟п╥я▀ init module п╡ я└п╟п╥я┐ HTTP postconfiguration.
 
-    *) Изменение: теперь тело запроса в модуле ngx_http_perl_module не 
-       считывается заранее: нужно явно инициировать чтение с помощью метода 
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ я┌п╣п╩п╬ п╥п╟п©я─п╬я│п╟ п╡ п╪п╬п╢я┐п╩п╣ ngx_http_perl_module п╫п╣
+       я│я┤п╦я┌я▀п╡п╟п╣я┌я│я▐ п╥п╟я─п╟п╫п╣п╣: п╫я┐п╤п╫п╬ я▐п╡п╫п╬ п╦п╫п╦я├п╦п╦я─п╬п╡п╟я┌я▄ я┤я┌п╣п╫п╦п╣ я│ п©п╬п╪п╬я┴я▄я▌ п╪п╣я┌п╬п╢п╟
        $r->has_request_body.
 
-    *) Добавление: модуль ngx_http_perl_module поддерживает код возврата 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_perl_module п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╨п╬п╢ п╡п╬п╥п╡я─п╟я┌п╟
        DECLINED.
 
-    *) Добавление: модуль ngx_http_dav_module поддерживает входящую строку 
-       заголовка "Date" для метода PUT.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_dav_module п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╡я┘п╬п╢я▐я┴я┐я▌ я│я┌я─п╬п╨я┐
+       п╥п╟пЁп╬п╩п╬п╡п╨п╟ "Date" п╢п╩я▐ п╪п╣я┌п╬п╢п╟ PUT.
 
-    *) Добавление: директива ssi работает внутри блока if.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ ssi я─п╟п╠п╬я┌п╟п╣я┌ п╡п╫я┐я┌я─п╦ п╠п╩п╬п╨п╟ if.
 
-    *) Исправление: происходил segmentation fault, если в директиве index 
-       использовалась переменные и при этом первое имя индексного файла 
-       было без переменных; ошибка появилась в 0.1.29.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault, п╣я│п╩п╦ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ index
+       п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╟я│я▄ п©п╣я─п╣п╪п╣п╫п╫я▀п╣ п╦ п©я─п╦ я█я┌п╬п╪ п©п╣я─п╡п╬п╣ п╦п╪я▐ п╦п╫п╢п╣п╨я│п╫п╬пЁп╬ я└п╟п╧п╩п╟ п╠я▀п╩п╬
+       п╠п╣п╥ п©п╣я─п╣п╪п╣п╫п╫я▀я┘; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.1.29.
 
 
-Изменения в nginx 0.3.61                                          28.08.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.61                                          28.08.2006
 
-    *) Изменение: директива tcp_nodelay теперь по умолчанию включена.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ tcp_nodelay я┌п╣п©п╣я─я▄ п©п╬ я┐п╪п╬п╩я┤п╟п╫п╦я▌ п╡п╨п╩я▌я┤п╣п╫п╟.
 
-    *) Добавление: директива msie_refresh.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ msie_refresh.
 
-    *) Добавление: директива recursive_error_pages.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ recursive_error_pages.
 
-    *) Исправление: директива rewrite возвращала неправильный редирект, 
-       если редирект включал в себя выделенные закодированные символы из 
-       оригинального URI.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ rewrite п╡п╬п╥п╡я─п╟я┴п╟п╩п╟ п╫п╣п©я─п╟п╡п╦п╩я▄п╫я▀п╧ я─п╣п╢п╦я─п╣п╨я┌, п╣я│п╩п╦
+       я─п╣п╢п╦я─п╣п╨я┌ п╡п╨п╩я▌я┤п╟п╩ п╡ я│п╣п╠я▐ п╡я▀п╢п╣п╩п╣п╫п╫я▀п╣ п╥п╟п╨п╬п╢п╦я─п╬п╡п╟п╫п╫я▀п╣ я│п╦п╪п╡п╬п╩я▀ п╦п╥
+       п╬я─п╦пЁп╦п╫п╟п╩я▄п╫п╬пЁп╬ URI.
 
 
-Изменения в nginx 0.3.60                                          18.08.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.60                                          18.08.2006
 
-    *) Исправление: во время перенаправления ошибки рабочий процесс мог 
-       зациклиться; ошибка появилась в 0.3.59.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡п╬ п╡я─п╣п╪я▐ п©п╣я─п╣п╫п╟п©я─п╟п╡п╩п╣п╫п╦я▐ п╬я┬п╦п╠п╨п╦ я─п╟п╠п╬я┤п╦п╧ п©я─п╬я├п╣я│я│ п╪п╬пЁ
+       п╥п╟я├п╦п╨п╩п╦я┌я▄я│я▐; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.3.59.
 
 
-Изменения в nginx 0.3.59                                          16.08.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.59                                          16.08.2006
 
-    *) Добавление: теперь можно делать несколько перенаправлений через 
-       директиву error_page.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╪п╬п╤п╫п╬ п╢п╣п╩п╟я┌я▄ п╫п╣я│п╨п╬п╩я▄п╨п╬ п©п╣я─п╣п╫п╟п©я─п╟п╡п╩п╣п╫п╦п╧ я┤п╣я─п╣п╥
+       п╢п╦я─п╣п╨я┌п╦п╡я┐ error_page.
 
-    *) Исправление: директива dav_access не поддерживала три параметра.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ dav_access п╫п╣ п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╩п╟ я┌я─п╦ п©п╟я─п╟п╪п╣я┌я─п╟.
 
-    *) Исправление: директива error_page не изменяла строку "Content-Type" 
-       после перенаправления с помощью "X-Accel-Redirect"; ошибка появилась 
-       в 0.3.58.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ error_page п╫п╣ п╦п╥п╪п╣п╫я▐п╩п╟ я│я┌я─п╬п╨я┐ "Content-Type"
+       п©п╬я│п╩п╣ п©п╣я─п╣п╫п╟п©я─п╟п╡п╩п╣п╫п╦я▐ я│ п©п╬п╪п╬я┴я▄я▌ "X-Accel-Redirect"; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄
+       п╡ 0.3.58.
 
 
-Изменения в nginx 0.3.58                                          14.08.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.58                                          14.08.2006
 
-    *) Добавление: директива error_page поддерживает переменные.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ error_page п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п©п╣я─п╣п╪п╣п╫п╫я▀п╣.
 
-    *) Изменение: теперь на Linux используется интерфейс procfs вместо 
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╫п╟ Linux п╦я│п©п╬п╩я▄п╥я┐п╣я┌я│я▐ п╦п╫я┌п╣я─я└п╣п╧я│ procfs п╡п╪п╣я│я┌п╬
        sysctl.
 
-    *) Изменение: теперь при использовании "X-Accel-Redirect" строка 
-       "Content-Type" наследуется из первоначального ответа.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ "X-Accel-Redirect" я│я┌я─п╬п╨п╟
+       "Content-Type" п╫п╟я│п╩п╣п╢я┐п╣я┌я│я▐ п╦п╥ п©п╣я─п╡п╬п╫п╟я┤п╟п╩я▄п╫п╬пЁп╬ п╬я┌п╡п╣я┌п╟.
 
-    *) Исправление: директива error_page не перенаправляла ошибку 413.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ error_page п╫п╣ п©п╣я─п╣п╫п╟п©я─п╟п╡п╩я▐п╩п╟ п╬я┬п╦п╠п╨я┐ 413.
 
-    *) Исправление: завершающий "?" не удалял старые аргументы, если в 
-       переписанном URI не было новых аргументов.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╥п╟п╡п╣я─я┬п╟я▌я┴п╦п╧ "?" п╫п╣ я┐п╢п╟п╩я▐п╩ я│я┌п╟я─я▀п╣ п╟я─пЁя┐п╪п╣п╫я┌я▀, п╣я│п╩п╦ п╡
+       п©п╣я─п╣п©п╦я│п╟п╫п╫п╬п╪ URI п╫п╣ п╠я▀п╩п╬ п╫п╬п╡я▀я┘ п╟я─пЁя┐п╪п╣п╫я┌п╬п╡.
 
-    *) Исправление: nginx не запускался на 64-битной FreeBSD 7.0-CURRENT.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ п╥п╟п©я┐я│п╨п╟п╩я│я▐ п╫п╟ 64-п╠п╦я┌п╫п╬п╧ FreeBSD 7.0-CURRENT.
 
 
-Изменения в nginx 0.3.57                                          09.08.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.57                                          09.08.2006
 
-    *) Добавление: переменная $ssl_client_serial.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $ssl_client_serial.
 
-    *) Исправление: в операторе "!-e" в директиве if.
-       Спасибо Андриану Буданцову.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╬п©п╣я─п╟я┌п╬я─п╣ "!-e" п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ if.
+       п║п©п╟я│п╦п╠п╬ п░п╫п╢я─п╦п╟п╫я┐ п▒я┐п╢п╟п╫я├п╬п╡я┐.
 
-    *) Исправление: при проверке клиентского сертификата nginx не передавал 
-       клиенту информацию о требуемых сертификатах.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п©я─п╬п╡п╣я─п╨п╣ п╨п╩п╦п╣п╫я┌я│п╨п╬пЁп╬ я│п╣я─я┌п╦я└п╦п╨п╟я┌п╟ nginx п╫п╣ п©п╣я─п╣п╢п╟п╡п╟п╩
+       п╨п╩п╦п╣п╫я┌я┐ п╦п╫я└п╬я─п╪п╟я├п╦я▌ п╬ я┌я─п╣п╠я┐п╣п╪я▀я┘ я│п╣я─я┌п╦я└п╦п╨п╟я┌п╟я┘.
 
-    *) Исправление: переменная $document_root не поддерживала переменные в 
-       директиве root.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $document_root п╫п╣ п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╩п╟ п©п╣я─п╣п╪п╣п╫п╫я▀п╣ п╡
+       п╢п╦я─п╣п╨я┌п╦п╡п╣ root.
 
 
-Изменения в nginx 0.3.56                                          04.08.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.56                                          04.08.2006
 
-    *) Добавление: директива dav_access.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ dav_access.
 
-    *) Добавление: директива if поддерживает операторы "-d", "!-d", "-e", 
-       "!-e", "-x" и "!-x".
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ if п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╬п©п╣я─п╟я┌п╬я─я▀ "-d", "!-d", "-e",
+       "!-e", "-x" п╦ "!-x".
 
-    *) Исправление: при записи в access_log некоторых передаваемых клиенту 
-       строк заголовков происходил segmentation fault, если запрос 
-       возвращал редирект.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╥п╟п©п╦я│п╦ п╡ access_log п╫п╣п╨п╬я┌п╬я─я▀я┘ п©п╣я─п╣п╢п╟п╡п╟п╣п╪я▀я┘ п╨п╩п╦п╣п╫я┌я┐
+       я│я┌я─п╬п╨ п╥п╟пЁп╬п╩п╬п╡п╨п╬п╡ п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault, п╣я│п╩п╦ п╥п╟п©я─п╬я│ п╡п╬п╥п╡я─п╟я┴п╟п╩
+       я─п╣п╢п╦я─п╣п╨я┌.
 
 
-Изменения в nginx 0.3.55                                          28.07.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.55                                          28.07.2006
 
-    *) Добавление: параметр stub в команде SSI include.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ stub п╡ п╨п╬п╪п╟п╫п╢п╣ SSI include.
 
-    *) Добавление: команда SSI block.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╨п╬п╪п╟п╫п╢п╟ SSI block.
 
-    *) Добавление: скрипт unicode2nginx добавлен в contrib.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я│п╨я─п╦п©я┌ unicode2nginx п╢п╬п╠п╟п╡п╩п╣п╫ п╡ contrib.
 
-    *) Исправление: если root был задан только переменной, то корень 
-       задавался относительно префикса сервера.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ root п╠я▀п╩ п╥п╟п╢п╟п╫ я┌п╬п╩я▄п╨п╬ п©п╣я─п╣п╪п╣п╫п╫п╬п╧, я┌п╬ п╨п╬я─п╣п╫я▄
+       п╥п╟п╢п╟п╡п╟п╩я│я▐ п╬я┌п╫п╬я│п╦я┌п╣п╩я▄п╫п╬ п©я─п╣я└п╦п╨я│п╟ я│п╣я─п╡п╣я─п╟.
 
-    *) Исправление: если в запросе был "//" или "/.", и после этого 
-       закодированные символы в виде "%XX", то проксируемый запрос 
-       передавался незакодированным.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡ п╥п╟п©я─п╬я│п╣ п╠я▀п╩ "//" п╦п╩п╦ "/.", п╦ п©п╬я│п╩п╣ я█я┌п╬пЁп╬
+       п╥п╟п╨п╬п╢п╦я─п╬п╡п╟п╫п╫я▀п╣ я│п╦п╪п╡п╬п╩я▀ п╡ п╡п╦п╢п╣ "%XX", я┌п╬ п©я─п╬п╨я│п╦я─я┐п╣п╪я▀п╧ п╥п╟п©я─п╬я│
+       п©п╣я─п╣п╢п╟п╡п╟п╩я│я▐ п╫п╣п╥п╟п╨п╬п╢п╦я─п╬п╡п╟п╫п╫я▀п╪.
 
-    *) Исправление: метод $r->header_in("Cookie") модуля 
-       ngx_http_perl_module теперь возвращает все строки "Cookie" в 
-       заголовке запроса.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╣я┌п╬п╢ $r->header_in("Cookie") п╪п╬п╢я┐п╩я▐
+       ngx_http_perl_module я┌п╣п©п╣я─я▄ п╡п╬п╥п╡я─п╟я┴п╟п╣я┌ п╡я│п╣ я│я┌я─п╬п╨п╦ "Cookie" п╡
+       п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╥п╟п©я─п╬я│п╟.
 
-    *) Исправление: происходил segmentation fault, если использовался 
-       "client_body_in_file_only on" и делался переход к следующему бэкенду.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault, п╣я│п╩п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩я│я▐
+       "client_body_in_file_only on" п╦ п╢п╣п╩п╟п╩я│я▐ п©п╣я─п╣я┘п╬п╢ п╨ я│п╩п╣п╢я┐я▌я┴п╣п╪я┐ п╠я█п╨п╣п╫п╢я┐.
 
-    *) Исправление: при некоторых условиях во время переконфигурации коды 
-       символов внутри директивы charset_map могли считаться неверными; 
-       ошибка появилась в 0.3.50.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╫п╣п╨п╬я┌п╬я─я▀я┘ я┐я│п╩п╬п╡п╦я▐я┘ п╡п╬ п╡я─п╣п╪я▐ п©п╣я─п╣п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦ п╨п╬п╢я▀
+       я│п╦п╪п╡п╬п╩п╬п╡ п╡п╫я┐я┌я─п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀ charset_map п╪п╬пЁп╩п╦ я│я┤п╦я┌п╟я┌я▄я│я▐ п╫п╣п╡п╣я─п╫я▀п╪п╦;
+       п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.3.50.
 
 
-Изменения в nginx 0.3.54                                          11.07.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.54                                          11.07.2006
 
-    *) Добавление: nginx теперь записывает в лог информацию о подзапросах.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: nginx я┌п╣п©п╣я─я▄ п╥п╟п©п╦я│я▀п╡п╟п╣я┌ п╡ п╩п╬пЁ п╦п╫я└п╬я─п╪п╟я├п╦я▌ п╬ п©п╬п╢п╥п╟п©я─п╬я│п╟я┘.
 
-    *) Добавление: директивы proxy_next_upstream, fastcgi_next_upstream и 
-       memcached_next_upstream поддерживают параметр off.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_next_upstream, fastcgi_next_upstream п╦
+       memcached_next_upstream п©п╬п╢п╢п╣я─п╤п╦п╡п╟я▌я┌ п©п╟я─п╟п╪п╣я┌я─ off.
 
-    *) Добавление: директива debug_connection поддерживает запись адресов в 
-       формате CIDR.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ debug_connection п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╥п╟п©п╦я│я▄ п╟п╢я─п╣я│п╬п╡ п╡
+       я└п╬я─п╪п╟я┌п╣ CIDR.
 
-    *) Исправление: при перекодировании ответа проксированного сервера или 
-       сервера FastCGI в UTF-8 или наоборот ответ мог передаваться не 
-       полностью.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п©п╣я─п╣п╨п╬п╢п╦я─п╬п╡п╟п╫п╦п╦ п╬я┌п╡п╣я┌п╟ п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╫п╬пЁп╬ я│п╣я─п╡п╣я─п╟ п╦п╩п╦
+       я│п╣я─п╡п╣я─п╟ FastCGI п╡ UTF-8 п╦п╩п╦ п╫п╟п╬п╠п╬я─п╬я┌ п╬я┌п╡п╣я┌ п╪п╬пЁ п©п╣я─п╣п╢п╟п╡п╟я┌я▄я│я▐ п╫п╣
+       п©п╬п╩п╫п╬я│я┌я▄я▌.
 
-    *) Исправление: переменная $upstream_response_time содержала время 
-       только первого обращения к бэкенду.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $upstream_response_time я│п╬п╢п╣я─п╤п╟п╩п╟ п╡я─п╣п╪я▐
+       я┌п╬п╩я▄п╨п╬ п©п╣я─п╡п╬пЁп╬ п╬п╠я─п╟я┴п╣п╫п╦я▐ п╨ п╠я█п╨п╣п╫п╢я┐.
 
-    *) Исправление: nginx не собирался на платформе amd64; ошибка появилась 
-       в 0.3.53.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ п©п╩п╟я┌я└п╬я─п╪п╣ amd64; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄
+       п╡ 0.3.53.
 
 
-Изменения в nginx 0.3.53                                          07.07.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.53                                          07.07.2006
 
-    *) Изменение: директива add_header добавляет строки в ответы с кодом 
-       204, 301 и 302.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ add_header п╢п╬п╠п╟п╡п╩я▐п╣я┌ я│я┌я─п╬п╨п╦ п╡ п╬я┌п╡п╣я┌я▀ я│ п╨п╬п╢п╬п╪
+       204, 301 п╦ 302.
 
-    *) Добавление: директива server в блоке upstream поддерживает параметр 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ server п╡ п╠п╩п╬п╨п╣ upstream п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п©п╟я─п╟п╪п╣я┌я─
        weight.
 
-    *) Добавление: директива server_name поддерживает маску "*".
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ server_name п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╪п╟я│п╨я┐ "*".
 
-    *) Добавление: nginx поддерживает тело запроса больше 2G.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: nginx п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ я┌п╣п╩п╬ п╥п╟п©я─п╬я│п╟ п╠п╬п╩я▄я┬п╣ 2G.
 
-    *) Исправление: если при использовании "satisfy_any on" клиент успешно 
-       проходил аутентификацию, в лог всё равно записалоcь сообщение 
-       "access forbidden by rule".
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ "satisfy_any on" п╨п╩п╦п╣п╫я┌ я┐я│п©п╣я┬п╫п╬
+       п©я─п╬я┘п╬п╢п╦п╩ п╟я┐я┌п╣п╫я┌п╦я└п╦п╨п╟я├п╦я▌, п╡ п╩п╬пЁ п╡я│я▒ я─п╟п╡п╫п╬ п╥п╟п©п╦я│п╟п╩п╬cя▄ я│п╬п╬п╠я┴п╣п╫п╦п╣ "access
+       forbidden by rule".
 
-    *) Исправление: метод PUT мог ошибочно не создать файл и вернуть код 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╣я┌п╬п╢ PUT п╪п╬пЁ п╬я┬п╦п╠п╬я┤п╫п╬ п╫п╣ я│п╬п╥п╢п╟я┌я▄ я└п╟п╧п╩ п╦ п╡п╣я─п╫я┐я┌я▄ п╨п╬п╢
        409.
 
-    *) Исправление: если во время аутентификации IMAP/POP3 бэкенд возвращал 
-       ошибку, nginx продолжал проксирование.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡п╬ п╡я─п╣п╪я▐ п╟я┐я┌п╣п╫я┌п╦я└п╦п╨п╟я├п╦п╦ IMAP/POP3 п╠я█п╨п╣п╫п╢ п╡п╬п╥п╡я─п╟я┴п╟п╩
+       п╬я┬п╦п╠п╨я┐, nginx п©я─п╬п╢п╬п╩п╤п╟п╩ п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╦п╣.
 
 
-Изменения в nginx 0.3.52                                          03.07.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.52                                          03.07.2006
 
-    *) Изменение: восстановлено поведение модуля ngx_http_index_module для 
-       запросов "POST /": как в версии до 0.3.40, модуль теперь не выдаёт 
-       ошибку 405.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╡п╬я│я│я┌п╟п╫п╬п╡п╩п╣п╫п╬ п©п╬п╡п╣п╢п╣п╫п╦п╣ п╪п╬п╢я┐п╩я▐ ngx_http_index_module п╢п╩я▐
+       п╥п╟п©я─п╬я│п╬п╡ "POST /": п╨п╟п╨ п╡ п╡п╣я─я│п╦п╦ п╢п╬ 0.3.40, п╪п╬п╢я┐п╩я▄ я┌п╣п©п╣я─я▄ п╫п╣ п╡я▀п╢п╟я▒я┌
+       п╬я┬п╦п╠п╨я┐ 405.
 
-    *) Исправление: при использовании ограничения скорости рабочий процесс 
-       мог зациклиться; ошибка появилась в 0.3.37.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╬пЁя─п╟п╫п╦я┤п╣п╫п╦я▐ я│п╨п╬я─п╬я│я┌п╦ я─п╟п╠п╬я┤п╦п╧ п©я─п╬я├п╣я│я│
+       п╪п╬пЁ п╥п╟я├п╦п╨п╩п╦я┌я▄я│я▐; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.3.37.
 
-    *) Исправление: модуль ngx_http_charset_module записывал в лог ошибку 
-       "unknown charset", даже если перекодировка не требовалась; ошибка 
-       появилась в 0.3.50.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_charset_module п╥п╟п©п╦я│я▀п╡п╟п╩ п╡ п╩п╬пЁ п╬я┬п╦п╠п╨я┐
+       "unknown charset", п╢п╟п╤п╣ п╣я│п╩п╦ п©п╣я─п╣п╨п╬п╢п╦я─п╬п╡п╨п╟ п╫п╣ я┌я─п╣п╠п╬п╡п╟п╩п╟я│я▄; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.3.50.
 
-    *) Исправление: если в результате запроса PUT возвращался код 409, то 
-       временный файл не удалялся.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡ я─п╣п╥я┐п╩я▄я┌п╟я┌п╣ п╥п╟п©я─п╬я│п╟ PUT п╡п╬п╥п╡я─п╟я┴п╟п╩я│я▐ п╨п╬п╢ 409, я┌п╬
+       п╡я─п╣п╪п╣п╫п╫я▀п╧ я└п╟п╧п╩ п╫п╣ я┐п╢п╟п╩я▐п╩я│я▐.
 
 
-Изменения в nginx 0.3.51                                          30.06.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.51                                          30.06.2006
 
-    *) Исправление: при некоторых условиях в SSI мог пропадать символы "<"; 
-       ошибка появилась в 0.3.50.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╫п╣п╨п╬я┌п╬я─я▀я┘ я┐я│п╩п╬п╡п╦я▐я┘ п╡ SSI п╪п╬пЁ п©я─п╬п©п╟п╢п╟я┌я▄ я│п╦п╪п╡п╬п╩я▀ "<";
+       п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.3.50.
 
 
-Изменения в nginx 0.3.50                                          28.06.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.50                                          28.06.2006
 
-    *) Изменение: директивы proxy_redirect_errors и fastcgi_redirect_errors 
-       переименованы соответственно в proxy_intercept_errors и 
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_redirect_errors п╦ fastcgi_redirect_errors
+       п©п╣я─п╣п╦п╪п╣п╫п╬п╡п╟п╫я▀ я│п╬п╬я┌п╡п╣я┌я│я┌п╡п╣п╫п╫п╬ п╡ proxy_intercept_errors п╦
        fastcgi_intercept_errors.
 
-    *) Добавление: модуль ngx_http_charset_module поддерживает 
-       перекодирование из однобайтных кодировок в UTF-8 и обратно.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_charset_module п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌
+       п©п╣я─п╣п╨п╬п╢п╦я─п╬п╡п╟п╫п╦п╣ п╦п╥ п╬п╢п╫п╬п╠п╟п╧я┌п╫я▀я┘ п╨п╬п╢п╦я─п╬п╡п╬п╨ п╡ UTF-8 п╦ п╬п╠я─п╟я┌п╫п╬.
 
-    *) Добавление: в режиме прокси и FastCGI поддерживается строка 
-       заголовка "X-Accel-Charset" в ответе бэкенда.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╡ я─п╣п╤п╦п╪п╣ п©я─п╬п╨я│п╦ п╦ FastCGI п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌я│я▐ я│я┌я─п╬п╨п╟ п╥п╟пЁп╬п╩п╬п╡п╨п╟
+       "X-Accel-Charset" п╡ п╬я┌п╡п╣я┌п╣ п╠я█п╨п╣п╫п╢п╟.
 
-    *) Исправление: символ "\" в парах "\"" и "\'" в SSI командах убирался, 
-       только если также использовался символ "$".
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я│п╦п╪п╡п╬п╩ "\" п╡ п©п╟я─п╟я┘ "\"" п╦ "\'" п╡ SSI п╨п╬п╪п╟п╫п╢п╟я┘ я┐п╠п╦я─п╟п╩я│я▐,
+       я┌п╬п╩я▄п╨п╬ п╣я│п╩п╦ я┌п╟п╨п╤п╣ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩я│я▐ я│п╦п╪п╡п╬п╩ "$".
 
-    *) Исправление: при некоторых условиях в SSI после вставки могла быть 
-       добавлена строка "<!--".
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╫п╣п╨п╬я┌п╬я─я▀я┘ я┐я│п╩п╬п╡п╦я▐я┘ п╡ SSI п©п╬я│п╩п╣ п╡я│я┌п╟п╡п╨п╦ п╪п╬пЁп╩п╟ п╠я▀я┌я▄
+       п╢п╬п╠п╟п╡п╩п╣п╫п╟ я│я┌я─п╬п╨п╟ "<!--".
 
-    *) Исправление: если в заголовке ответа была строка 
-       "Content-Length: 0", то при использовании небуферизированного 
-       проксировании не закрывалось соединение с клиентом.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╬я┌п╡п╣я┌п╟ п╠я▀п╩п╟ я│я┌я─п╬п╨п╟ "Content-Length: 0",
+       я┌п╬ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╫п╣п╠я┐я└п╣я─п╦п╥п╦я─п╬п╡п╟п╫п╫п╬пЁп╬ п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╦п╦ п╫п╣ п╥п╟п╨я─я▀п╡п╟п╩п╬я│я▄
+       я│п╬п╣п╢п╦п╫п╣п╫п╦п╣ я│ п╨п╩п╦п╣п╫я┌п╬п╪.
 
 
-Изменения в nginx 0.3.49                                          31.05.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.49                                          31.05.2006
 
-    *) Исправление: в директиве set.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ set.
 
-    *) Исправление: при включении в ssi двух и более подзапросов, 
-       обрабатываемых через FastCGI, вместо вывода второго и остальных 
-       подзапросов в ответ включался вывод первого подзапроса.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╡п╨п╩я▌я┤п╣п╫п╦п╦ п╡ ssi п╢п╡я┐я┘ п╦ п╠п╬п╩п╣п╣ п©п╬п╢п╥п╟п©я─п╬я│п╬п╡,
+       п╬п╠я─п╟п╠п╟я┌я▀п╡п╟п╣п╪я▀я┘ я┤п╣я─п╣п╥ FastCGI, п╡п╪п╣я│я┌п╬ п╡я▀п╡п╬п╢п╟ п╡я┌п╬я─п╬пЁп╬ п╦ п╬я│я┌п╟п╩я▄п╫я▀я┘
+       п©п╬п╢п╥п╟п©я─п╬я│п╬п╡ п╡ п╬я┌п╡п╣я┌ п╡п╨п╩я▌я┤п╟п╩я│я▐ п╡я▀п╡п╬п╢ п©п╣я─п╡п╬пЁп╬ п©п╬п╢п╥п╟п©я─п╬я│п╟.
 
 
-Изменения в nginx 0.3.48                                          29.05.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.48                                          29.05.2006
 
-    *) Изменение: теперь модуль ngx_http_charset_module работает для 
-       подзапросов, в ответах которых нет строки заголовка "Content-Type".
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╪п╬п╢я┐п╩я▄ ngx_http_charset_module я─п╟п╠п╬я┌п╟п╣я┌ п╢п╩я▐
+       п©п╬п╢п╥п╟п©я─п╬я│п╬п╡, п╡ п╬я┌п╡п╣я┌п╟я┘ п╨п╬я┌п╬я─я▀я┘ п╫п╣я┌ я│я┌я─п╬п╨п╦ п╥п╟пЁп╬п╩п╬п╡п╨п╟ "Content-Type".
 
-    *) Исправление: если в директиве proxy_pass не было URI, то директива 
-       "proxy_redirect default" добавляла в переписанный редирект в начало 
-       лишний слэш.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ proxy_pass п╫п╣ п╠я▀п╩п╬ URI, я┌п╬ п╢п╦я─п╣п╨я┌п╦п╡п╟
+       "proxy_redirect default" п╢п╬п╠п╟п╡п╩я▐п╩п╟ п╡ п©п╣я─п╣п©п╦я│п╟п╫п╫я▀п╧ я─п╣п╢п╦я─п╣п╨я┌ п╡ п╫п╟я┤п╟п╩п╬
+       п╩п╦я┬п╫п╦п╧ я│п╩я█я┬.
 
-    *) Исправление: внутренний редирект всегда превращал любой HTTP-метод в 
-       GET, теперь это делается только для редиректов, выполняемых с 
-       помощью X-Accel-Redirect, и у которых метод не равен HEAD; ошибка 
-       появилась в 0.3.42.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡п╫я┐я┌я─п╣п╫п╫п╦п╧ я─п╣п╢п╦я─п╣п╨я┌ п╡я│п╣пЁп╢п╟ п©я─п╣п╡я─п╟я┴п╟п╩ п╩я▌п╠п╬п╧ HTTP-п╪п╣я┌п╬п╢ п╡
+       GET, я┌п╣п©п╣я─я▄ я█я┌п╬ п╢п╣п╩п╟п╣я┌я│я▐ я┌п╬п╩я▄п╨п╬ п╢п╩я▐ я─п╣п╢п╦я─п╣п╨я┌п╬п╡, п╡я▀п©п╬п╩п╫я▐п╣п╪я▀я┘ я│ п©п╬п╪п╬я┴я▄я▌
+       X-Accel-Redirect, п╦ я┐ п╨п╬я┌п╬я─я▀я┘ п╪п╣я┌п╬п╢ п╫п╣ я─п╟п╡п╣п╫ HEAD; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
+       0.3.42.
 
-    *) Исправление: модуль ngx_http_perl_module не собирался, если перл был 
-       с поддержкой потоков; ошибка появилась в 0.3.46.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_perl_module п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐, п╣я│п╩п╦ п©п╣я─п╩ п╠я▀п╩
+       я│ п©п╬п╢п╢п╣я─п╤п╨п╬п╧ п©п╬я┌п╬п╨п╬п╡; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.3.46.
 
 
-Изменения в nginx 0.3.47                                          23.05.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.47                                          23.05.2006
 
-    *) Добавление: директива upstream.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ upstream.
 
-    *) Изменение: символ "\" в парах "\"" и "\'" в SSI командах теперь 
-       всегда убирается.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я│п╦п╪п╡п╬п╩ "\" п╡ п©п╟я─п╟я┘ "\"" п╦ "\'" п╡ SSI п╨п╬п╪п╟п╫п╢п╟я┘ я┌п╣п©п╣я─я▄
+       п╡я│п╣пЁп╢п╟ я┐п╠п╦я─п╟п╣я┌я│я▐.
 
 
-Изменения в nginx 0.3.46                                          11.05.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.46                                          11.05.2006
 
-    *) Добавление: директивы proxy_hide_header, proxy_pass_header, 
-       fastcgi_hide_header и fastcgi_pass_header.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_hide_header, proxy_pass_header,
+       fastcgi_hide_header п╦ fastcgi_pass_header.
 
-    *) Изменение: директивы proxy_pass_x_powered_by, fastcgi_x_powered_by и 
-       proxy_pass_server упразднены.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_pass_x_powered_by, fastcgi_x_powered_by п╦
+       proxy_pass_server я┐п©я─п╟п╥п╢п╫п╣п╫я▀.
 
-    *) Добавление: в режиме прокси поддерживается строка заголовка 
-       "X-Accel-Buffering" в ответе бэкенда.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╡ я─п╣п╤п╦п╪п╣ п©я─п╬п╨я│п╦ п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌я│я▐ я│я┌я─п╬п╨п╟ п╥п╟пЁп╬п╩п╬п╡п╨п╟
+       "X-Accel-Buffering" п╡ п╬я┌п╡п╣я┌п╣ п╠я█п╨п╣п╫п╢п╟.
 
-    *) Исправление: ошибок и утечек памяти при переконфигурации в модуле 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╬п╨ п╦ я┐я┌п╣я┤п╣п╨ п©п╟п╪я▐я┌п╦ п©я─п╦ п©п╣я─п╣п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦ п╡ п╪п╬п╢я┐п╩п╣
        ngx_http_perl_module.
 
 
-Изменения в nginx 0.3.45                                          06.05.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.45                                          06.05.2006
 
-    *) Добавление: директивы ssl_verify_client, ssl_verify_depth и 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ ssl_verify_client, ssl_verify_depth п╦
        ssl_client_certificate.
 
-    *) Изменение: теперь переменная $request_method возвращает метод только 
-       основного запроса.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $request_method п╡п╬п╥п╡я─п╟я┴п╟п╣я┌ п╪п╣я┌п╬п╢ я┌п╬п╩я▄п╨п╬
+       п╬я│п╫п╬п╡п╫п╬пЁп╬ п╥п╟п©я─п╬я│п╟.
 
-    *) Изменение: в таблице перекодировки koi-win изменены коды символа 
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╡ я┌п╟п╠п╩п╦я├п╣ п©п╣я─п╣п╨п╬п╢п╦я─п╬п╡п╨п╦ koi-win п╦п╥п╪п╣п╫п╣п╫я▀ п╨п╬п╢я▀ я│п╦п╪п╡п╬п╩п╟
        &deg;.
 
-    *) Добавление: в таблицу перекодировки koi-win добавлены символы евро и 
-       номера.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╡ я┌п╟п╠п╩п╦я├я┐ п©п╣я─п╣п╨п╬п╢п╦я─п╬п╡п╨п╦ koi-win п╢п╬п╠п╟п╡п╩п╣п╫я▀ я│п╦п╪п╡п╬п╩я▀ п╣п╡я─п╬ п╦
+       п╫п╬п╪п╣я─п╟.
 
-    *) Исправление: если nginx распределял запросы на несколько машин, то 
-       при падении одной из них запросы, предназначенные для этой машины, 
-       перенаправлялись только на одну машину вместо того, чтобы равномерно 
-       распределяться между остальными.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ nginx я─п╟я│п©я─п╣п╢п╣п╩я▐п╩ п╥п╟п©я─п╬я│я▀ п╫п╟ п╫п╣я│п╨п╬п╩я▄п╨п╬ п╪п╟я┬п╦п╫, я┌п╬
+       п©я─п╦ п©п╟п╢п╣п╫п╦п╦ п╬п╢п╫п╬п╧ п╦п╥ п╫п╦я┘ п╥п╟п©я─п╬я│я▀, п©я─п╣п╢п╫п╟п╥п╫п╟я┤п╣п╫п╫я▀п╣ п╢п╩я▐ я█я┌п╬п╧ п╪п╟я┬п╦п╫я▀,
+       п©п╣я─п╣п╫п╟п©я─п╟п╡п╩я▐п╩п╦я│я▄ я┌п╬п╩я▄п╨п╬ п╫п╟ п╬п╢п╫я┐ п╪п╟я┬п╦п╫я┐ п╡п╪п╣я│я┌п╬ я┌п╬пЁп╬, я┤я┌п╬п╠я▀ я─п╟п╡п╫п╬п╪п╣я─п╫п╬
+       я─п╟я│п©я─п╣п╢п╣п╩я▐я┌я▄я│я▐ п╪п╣п╤п╢я┐ п╬я│я┌п╟п╩я▄п╫я▀п╪п╦.
 
 
-Изменения в nginx 0.3.44                                          04.05.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.44                                          04.05.2006
 
-    *) Добавление: параметр wait в команде SSI include.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ wait п╡ п╨п╬п╪п╟п╫п╢п╣ SSI include.
 
-    *) Добавление: в таблицу перекодировки koi-win добавлены украинские и 
-       белорусские символы.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╡ я┌п╟п╠п╩п╦я├я┐ п©п╣я─п╣п╨п╬п╢п╦я─п╬п╡п╨п╦ koi-win п╢п╬п╠п╟п╡п╩п╣п╫я▀ я┐п╨я─п╟п╦п╫я│п╨п╦п╣ п╦
+       п╠п╣п╩п╬я─я┐я│я│п╨п╦п╣ я│п╦п╪п╡п╬п╩я▀.
 
-    *) Исправление: в SSI.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ SSI.
 
 
-Изменения в nginx 0.3.43                                          26.04.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.43                                          26.04.2006
 
-    *) Исправление: в SSI.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ SSI.
 
 
-Изменения в nginx 0.3.42                                          26.04.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.42                                          26.04.2006
 
-    *) Добавление: параметр bind в директиве listen в IMAP/POP3 прокси.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ bind п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ listen п╡ IMAP/POP3 п©я─п╬п╨я│п╦.
 
-    *) Исправление: ошибки при использовании в директиве rewrite одного и 
-       того же выделения более одного раза.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ rewrite п╬п╢п╫п╬пЁп╬ п╦
+       я┌п╬пЁп╬ п╤п╣ п╡я▀п╢п╣п╩п╣п╫п╦я▐ п╠п╬п╩п╣п╣ п╬п╢п╫п╬пЁп╬ я─п╟п╥п╟.
 
-    *) Исправление: в лог не записывались переменные 
-       $sent_http_content_type, $sent_http_content_length, 
-       $sent_http_last_modified, $sent_http_connection, 
-       $sent_http_keep_alive и $sent_http_transfer_encoding.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╩п╬пЁ п╫п╣ п╥п╟п©п╦я│я▀п╡п╟п╩п╦я│я▄ п©п╣я─п╣п╪п╣п╫п╫я▀п╣
+       $sent_http_content_type, $sent_http_content_length,
+       $sent_http_last_modified, $sent_http_connection,
+       $sent_http_keep_alive п╦ $sent_http_transfer_encoding.
 
-    *) Исправление: переменная $sent_http_cache_control возвращала 
-       содержимое только одной строки "Cache-Control" в заголовке ответа.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $sent_http_cache_control п╡п╬п╥п╡я─п╟я┴п╟п╩п╟
+       я│п╬п╢п╣я─п╤п╦п╪п╬п╣ я┌п╬п╩я▄п╨п╬ п╬п╢п╫п╬п╧ я│я┌я─п╬п╨п╦ "Cache-Control" п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╬я┌п╡п╣я┌п╟.
 
 
-Изменения в nginx 0.3.41                                          21.04.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.41                                          21.04.2006
 
-    *) Добавление: ключ -v.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╨п╩я▌я┤ -v.
 
-    *) Исправление: при включении в SSI удалённых подзапросов мог произойти 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╡п╨п╩я▌я┤п╣п╫п╦п╦ п╡ SSI я┐п╢п╟п╩я▒п╫п╫я▀я┘ п©п╬п╢п╥п╟п©я─п╬я│п╬п╡ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦
        segmentation fault.
 
-    *) Исправление: в обработке FastCGI.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╬п╠я─п╟п╠п╬я┌п╨п╣ FastCGI.
 
-    *) Исправление: если путь к перловым модулям не был указан с помощью 
-       --with-perl_modules_path=PATH или директивы perl_modules, то на 
-       старте происходил segmentation fault.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п©я┐я┌я▄ п╨ п©п╣я─п╩п╬п╡я▀п╪ п╪п╬п╢я┐п╩я▐п╪ п╫п╣ п╠я▀п╩ я┐п╨п╟п╥п╟п╫ я│ п©п╬п╪п╬я┴я▄я▌
+       --with-perl_modules_path=PATH п╦п╩п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀ perl_modules, я┌п╬ п╫п╟
+       я│я┌п╟я─я┌п╣ п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault.
 
 
-Изменения в nginx 0.3.40                                          19.04.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.40                                          19.04.2006
 
-    *) Добавление: модуль ngx_http_dav_module поддерживает метод MKCOL.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_dav_module п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╪п╣я┌п╬п╢ MKCOL.
 
-    *) Добавление: директива create_full_put_path.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ create_full_put_path.
 
-    *) Добавление: переменная $limit_rate.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $limit_rate.
 
 
-Изменения в nginx 0.3.39                                          17.04.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.39                                          17.04.2006
 
-    *) Добавление: директива uninitialized_variable_warn; уровень 
-       логгирования сообщения о неинициализированной переменной понижен с 
-       уровня alert на warn.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ uninitialized_variable_warn; я┐я─п╬п╡п╣п╫я▄
+       п╩п╬пЁпЁп╦я─п╬п╡п╟п╫п╦я▐ я│п╬п╬п╠я┴п╣п╫п╦я▐ п╬ п╫п╣п╦п╫п╦я├п╦п╟п╩п╦п╥п╦я─п╬п╡п╟п╫п╫п╬п╧ п©п╣я─п╣п╪п╣п╫п╫п╬п╧ п©п╬п╫п╦п╤п╣п╫ я│
+       я┐я─п╬п╡п╫я▐ alert п╫п╟ warn.
 
-    *) Добавление: директива override_charset.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ override_charset.
 
-    *) Изменение: при использовании неизвестной переменной в SSI-командах 
-       echo и if expr='$name' теперь не записывается в лог сообщение о 
-       неизвестной переменной.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╫п╣п╦п╥п╡п╣я│я┌п╫п╬п╧ п©п╣я─п╣п╪п╣п╫п╫п╬п╧ п╡ SSI-п╨п╬п╪п╟п╫п╢п╟я┘
+       echo п╦ if expr='$name' я┌п╣п©п╣я─я▄ п╫п╣ п╥п╟п©п╦я│я▀п╡п╟п╣я┌я│я▐ п╡ п╩п╬пЁ я│п╬п╬п╠я┴п╣п╫п╦п╣ п╬
+       п╫п╣п╦п╥п╡п╣я│я┌п╫п╬п╧ п©п╣я─п╣п╪п╣п╫п╫п╬п╧.
 
-    *) Исправление: счётчик активных соединений рос при превышении лимита 
-       соединений, заданного директивой worker_connections; ошибка 
-       появилась в 0.2.0.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я│я┤я▒я┌я┤п╦п╨ п╟п╨я┌п╦п╡п╫я▀я┘ я│п╬п╣п╢п╦п╫п╣п╫п╦п╧ я─п╬я│ п©я─п╦ п©я─п╣п╡я▀я┬п╣п╫п╦п╦ п╩п╦п╪п╦я┌п╟
+       я│п╬п╣п╢п╦п╫п╣п╫п╦п╧, п╥п╟п╢п╟п╫п╫п╬пЁп╬ п╢п╦я─п╣п╨я┌п╦п╡п╬п╧ worker_connections; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄
+       п╡ 0.2.0.
 
-    *) Исправление: при некоторых условия ограничение скорости соединения 
-       могло не работать; ошибка появилась в 0.3.38.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╫п╣п╨п╬я┌п╬я─я▀я┘ я┐я│п╩п╬п╡п╦я▐ п╬пЁя─п╟п╫п╦я┤п╣п╫п╦п╣ я│п╨п╬я─п╬я│я┌п╦ я│п╬п╣п╢п╦п╫п╣п╫п╦я▐
+       п╪п╬пЁп╩п╬ п╫п╣ я─п╟п╠п╬я┌п╟я┌я▄; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.3.38.
 
 
-Изменения в nginx 0.3.38                                          14.04.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.38                                          14.04.2006
 
-    *) Добавление: модуль ngx_http_dav_module.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_dav_module.
 
-    *) Изменение: оптимизация модуля ngx_http_perl_module.
-       Спасибо Сергею Скворцову.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╬п©я┌п╦п╪п╦п╥п╟я├п╦я▐ п╪п╬п╢я┐п╩я▐ ngx_http_perl_module.
+       п║п©п╟я│п╦п╠п╬ п║п╣я─пЁп╣я▌ п║п╨п╡п╬я─я├п╬п╡я┐.
 
-    *) Добавление: модуль ngx_http_perl_module поддерживает метод 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_perl_module п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╪п╣я┌п╬п╢
        $r->request_body_file.
 
-    *) Добавление: директива client_body_in_file_only.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ client_body_in_file_only.
 
-    *) Изменение: теперь при переполнении диска nginx пытается писать 
-       access_log'и только раз в секунду.
-       Спасибо Антону Южанинову и Максиму Дунину.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п©я─п╦ п©п╣я─п╣п©п╬п╩п╫п╣п╫п╦п╦ п╢п╦я│п╨п╟ nginx п©я▀я┌п╟п╣я┌я│я▐ п©п╦я│п╟я┌я▄
+       access_log'п╦ я┌п╬п╩я▄п╨п╬ я─п╟п╥ п╡ я│п╣п╨я┐п╫п╢я┐.
+       п║п©п╟я│п╦п╠п╬ п░п╫я┌п╬п╫я┐ п╝п╤п╟п╫п╦п╫п╬п╡я┐ п╦ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
-    *) Исправление: теперь директива limit_rate точнее ограничивает 
-       скорость при значениях больше 100 Kbyte/s.
-       Спасибо ForJest.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╢п╦я─п╣п╨я┌п╦п╡п╟ limit_rate я┌п╬я┤п╫п╣п╣ п╬пЁя─п╟п╫п╦я┤п╦п╡п╟п╣я┌ я│п╨п╬я─п╬я│я┌я▄
+       п©я─п╦ п╥п╫п╟я┤п╣п╫п╦я▐я┘ п╠п╬п╩я▄я┬п╣ 100 Kbyte/s.
+       п║п©п╟я│п╦п╠п╬ ForJest.
 
-    *) Исправление: IMAP/POP3 прокси теперь передаёт серверу авторизации 
-       символы "\r" и "\n" в логине и пароле в закодированном виде.
-       Спасибо Максиму Дунину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: IMAP/POP3 п©я─п╬п╨я│п╦ я┌п╣п©п╣я─я▄ п©п╣я─п╣п╢п╟я▒я┌ я│п╣я─п╡п╣я─я┐ п╟п╡я┌п╬я─п╦п╥п╟я├п╦п╦
+       я│п╦п╪п╡п╬п╩я▀ "\r" п╦ "\n" п╡ п╩п╬пЁп╦п╫п╣ п╦ п©п╟я─п╬п╩п╣ п╡ п╥п╟п╨п╬п╢п╦я─п╬п╡п╟п╫п╫п╬п╪ п╡п╦п╢п╣.
+       п║п©п╟я│п╦п╠п╬ п°п╟п╨я│п╦п╪я┐ п■я┐п╫п╦п╫я┐.
 
 
-Изменения в nginx 0.3.37                                          07.04.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.37                                          07.04.2006
 
-    *) Добавление: директива limit_except.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ limit_except.
 
-    *) Добавление: директива if поддерживает операторы "!~", "!~*", "-f" и 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ if п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╬п©п╣я─п╟я┌п╬я─я▀ "!~", "!~*", "-f" п╦
        "!-f".
 
-    *) Добавление: модуль ngx_http_perl_module поддерживает метод 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_perl_module п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╪п╣я┌п╬п╢
        $r->request_body.
 
-    *) Исправление: в модуле ngx_http_addition_filter_module.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╪п╬п╢я┐п╩п╣ ngx_http_addition_filter_module.
 
 
-Изменения в nginx 0.3.36                                          05.04.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.36                                          05.04.2006
 
-    *) Добавление: модуль ngx_http_addition_filter_module.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_addition_filter_module.
 
-    *) Добавление: директивы proxy_pass и fastcgi_pass можно использовать 
-       внутри блока if.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_pass п╦ fastcgi_pass п╪п╬п╤п╫п╬ п╦я│п©п╬п╩я▄п╥п╬п╡п╟я┌я▄
+       п╡п╫я┐я┌я─п╦ п╠п╩п╬п╨п╟ if.
 
-    *) Добавление: директивы proxy_ignore_client_abort и 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_ignore_client_abort п╦
        fastcgi_ignore_client_abort.
 
-    *) Добавление: переменная $request_completion.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $request_completion.
 
-    *) Добавление: модуль ngx_http_perl_module поддерживает методы 
-       $r->request_method и $r->remote_addr.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_perl_module п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╪п╣я┌п╬п╢я▀
+       $r->request_method п╦ $r->remote_addr.
 
-    *) Добавление: модуль ngx_http_ssi_module поддерживает команду elif.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_ssi_module п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╨п╬п╪п╟п╫п╢я┐ elif.
 
-    *) Исправление: строка "\/" в начале выражения команды if модуля 
-       ngx_http_ssi_module воспринималась неверно.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я│я┌я─п╬п╨п╟ "\/" п╡ п╫п╟я┤п╟п╩п╣ п╡я▀я─п╟п╤п╣п╫п╦я▐ п╨п╬п╪п╟п╫п╢я▀ if п╪п╬п╢я┐п╩я▐
+       ngx_http_ssi_module п╡п╬я│п©я─п╦п╫п╦п╪п╟п╩п╟я│я▄ п╫п╣п╡п╣я─п╫п╬.
 
-    *) Исправление: в использовании регулярных выражениях в команде if 
-       модуля ngx_http_ssi_module.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ я─п╣пЁя┐п╩я▐я─п╫я▀я┘ п╡я▀я─п╟п╤п╣п╫п╦я▐я┘ п╡ п╨п╬п╪п╟п╫п╢п╣ if
+       п╪п╬п╢я┐п╩я▐ ngx_http_ssi_module.
 
-    *) Исправление: при задании относительного пути в директивах 
-       client_body_temp_path, proxy_temp_path, fastcgi_temp_path и 
-       perl_modules использовался каталог относительно текущего каталога, а 
-       не относительно префикса сервера.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╥п╟п╢п╟п╫п╦п╦ п╬я┌п╫п╬я│п╦я┌п╣п╩я▄п╫п╬пЁп╬ п©я┐я┌п╦ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╟я┘
+       client_body_temp_path, proxy_temp_path, fastcgi_temp_path п╦
+       perl_modules п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩я│я▐ п╨п╟я┌п╟п╩п╬пЁ п╬я┌п╫п╬я│п╦я┌п╣п╩я▄п╫п╬ я┌п╣п╨я┐я┴п╣пЁп╬ п╨п╟я┌п╟п╩п╬пЁп╟, п╟
+       п╫п╣ п╬я┌п╫п╬я│п╦я┌п╣п╩я▄п╫п╬ п©я─п╣я└п╦п╨я│п╟ я│п╣я─п╡п╣я─п╟.
 
 
-Изменения в nginx 0.3.35                                          22.03.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.35                                          22.03.2006
 
-    *) Исправление: accept-фильтр и TCP_DEFER_ACCEPT устанавливались только 
-       для первой директивы listen; ошибка появилась в 0.3.31.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: accept-я└п╦п╩я▄я┌я─ п╦ TCP_DEFER_ACCEPT я┐я│я┌п╟п╫п╟п╡п╩п╦п╡п╟п╩п╦я│я▄ я┌п╬п╩я▄п╨п╬
+       п╢п╩я▐ п©п╣я─п╡п╬п╧ п╢п╦я─п╣п╨я┌п╦п╡я▀ listen; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.3.31.
 
-    *) Исправление: в директиве proxy_pass без URI при использовании в 
-       подзапросе.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ proxy_pass п╠п╣п╥ URI п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╡
+       п©п╬п╢п╥п╟п©я─п╬я│п╣.
 
 
-Изменения в nginx 0.3.34                                          21.03.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.34                                          21.03.2006
 
-    *) Добавление: директива add_header поддерживает переменные.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ add_header п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п©п╣я─п╣п╪п╣п╫п╫я▀п╣.
 
 
-Изменения в nginx 0.3.33                                          15.03.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.33                                          15.03.2006
 
-    *) Добавление: параметр http_503 в директивах proxy_next_upstream или 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ http_503 п╡ п╢п╦я─п╣п╨я┌п╦п╡п╟я┘ proxy_next_upstream п╦п╩п╦
        fastcgi_next_upstream.
 
-    *) Исправление: ngx_http_perl_module не работал со встроенным в 
-       конфигурационный файл кодом, если он не начинался сразу же с "sub".
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: ngx_http_perl_module п╫п╣ я─п╟п╠п╬я┌п╟п╩ я│п╬ п╡я│я┌я─п╬п╣п╫п╫я▀п╪ п╡
+       п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╬п╫п╫я▀п╧ я└п╟п╧п╩ п╨п╬п╢п╬п╪, п╣я│п╩п╦ п╬п╫ п╫п╣ п╫п╟я┤п╦п╫п╟п╩я│я▐ я│я─п╟п╥я┐ п╤п╣ я│ "sub".
 
-    *) Исправление: в директиве post_action.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ post_action.
 
 
-Изменения в nginx 0.3.32                                          11.03.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.32                                          11.03.2006
 
-    *) Исправление: удаление отладочного логгирования на старте и при 
-       переконфигурации; ошибка появилась в 0.3.31.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┐п╢п╟п╩п╣п╫п╦п╣ п╬я┌п╩п╟п╢п╬я┤п╫п╬пЁп╬ п╩п╬пЁпЁп╦я─п╬п╡п╟п╫п╦я▐ п╫п╟ я│я┌п╟я─я┌п╣ п╦ п©я─п╦
+       п©п╣я─п╣п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.3.31.
 
 
-Изменения в nginx 0.3.31                                          10.03.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.31                                          10.03.2006
 
-    *) Изменение: теперь nginx передаёт неверные ответы проксированного 
-       бэкенда.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ nginx п©п╣я─п╣п╢п╟я▒я┌ п╫п╣п╡п╣я─п╫я▀п╣ п╬я┌п╡п╣я┌я▀ п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╫п╬пЁп╬
+       п╠я█п╨п╣п╫п╢п╟.
 
-    *) Добавление: директивы listen поддерживают адрес в виде "*:порт".
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ listen п©п╬п╢п╢п╣я─п╤п╦п╡п╟я▌я┌ п╟п╢я─п╣я│ п╡ п╡п╦п╢п╣ "*:п©п╬я─я┌".
 
-    *) Добавление: поддержка EVFILER_TIMER в MacOSX 10.4.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╬п╢п╢п╣я─п╤п╨п╟ EVFILER_TIMER п╡ MacOSX 10.4.
 
-    *) Изменение: обход ошибки обработки миллисекундных таймаутов kqueue в 
-       64-битном ядре MacOSX.
-       Спасибо Андрею Нигматулину.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╬п╠я┘п╬п╢ п╬я┬п╦п╠п╨п╦ п╬п╠я─п╟п╠п╬я┌п╨п╦ п╪п╦п╩п╩п╦я│п╣п╨я┐п╫п╢п╫я▀я┘ я┌п╟п╧п╪п╟я┐я┌п╬п╡ kqueue п╡
+       64-п╠п╦я┌п╫п╬п╪ я▐п╢я─п╣ MacOSX.
+       п║п©п╟я│п╦п╠п╬ п░п╫п╢я─п╣я▌ п²п╦пЁп╪п╟я┌я┐п╩п╦п╫я┐.
 
-    *) Исправление: если внутри одного сервера описаны несколько директив 
-       listen, слушающих на разных адресах, то имена серверов вида 
-       "*.domain.tld" работали только для первого адреса; ошибка появилась 
-       в 0.3.18.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡п╫я┐я┌я─п╦ п╬п╢п╫п╬пЁп╬ я│п╣я─п╡п╣я─п╟ п╬п©п╦я│п╟п╫я▀ п╫п╣я│п╨п╬п╩я▄п╨п╬ п╢п╦я─п╣п╨я┌п╦п╡
+       listen, я│п╩я┐я┬п╟я▌я┴п╦я┘ п╫п╟ я─п╟п╥п╫я▀я┘ п╟п╢я─п╣я│п╟я┘, я┌п╬ п╦п╪п╣п╫п╟ я│п╣я─п╡п╣я─п╬п╡ п╡п╦п╢п╟
+       "*.domain.tld" я─п╟п╠п╬я┌п╟п╩п╦ я┌п╬п╩я▄п╨п╬ п╢п╩я▐ п©п╣я─п╡п╬пЁп╬ п╟п╢я─п╣я│п╟; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
+       0.3.18.
 
-    *) Исправление: при использовании протокола HTTPS в директиве 
-       proxy_pass не передавались запросы с телом, записанным во временный 
-       файл.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п©я─п╬я┌п╬п╨п╬п╩п╟ HTTPS п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ proxy_pass
+       п╫п╣ п©п╣я─п╣п╢п╟п╡п╟п╩п╦я│я▄ п╥п╟п©я─п╬я│я▀ я│ я┌п╣п╩п╬п╪, п╥п╟п©п╦я│п╟п╫п╫я▀п╪ п╡п╬ п╡я─п╣п╪п╣п╫п╫я▀п╧ я└п╟п╧п╩.
 
-    *) Исправление: совместимость с perl 5.8.8.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я│п╬п╡п╪п╣я│я┌п╦п╪п╬я│я┌я▄ я│ perl 5.8.8.
 
 
-Изменения в nginx 0.3.30                                          22.02.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.30                                          22.02.2006
 
-    *) Изменение: уровень записи в лог ошибки ECONNABORTED изменён на error 
-       с уровня crit.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┐я─п╬п╡п╣п╫я▄ п╥п╟п©п╦я│п╦ п╡ п╩п╬пЁ п╬я┬п╦п╠п╨п╦ ECONNABORTED п╦п╥п╪п╣п╫я▒п╫ п╫п╟ error
+       я│ я┐я─п╬п╡п╫я▐ crit.
 
-    *) Исправление: модуль ngx_http_perl_module не собирался без модуля 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_perl_module п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╠п╣п╥ п╪п╬п╢я┐п╩я▐
        ngx_http_ssi_filter_module.
 
-    *) Исправление: nginx не собирался на i386 платформе, если 
-       использовался PIC; ошибка появилась в 0.3.27.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ i386 п©п╩п╟я┌я└п╬я─п╪п╣, п╣я│п╩п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩я│я▐
+       PIC; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.3.27.
 
 
-Изменения в nginx 0.3.29                                          20.02.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.29                                          20.02.2006
 
-    *) Добавление: теперь nginx использует меньше памяти, если PHP в режиме 
-       FastCGI передаёт большое количество предупреждений перед ответом.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ nginx п╦я│п©п╬п╩я▄п╥я┐п╣я┌ п╪п╣п╫я▄я┬п╣ п©п╟п╪я▐я┌п╦, п╣я│п╩п╦ PHP п╡ я─п╣п╤п╦п╪п╣
+       FastCGI п©п╣я─п╣п╢п╟я▒я┌ п╠п╬п╩я▄я┬п╬п╣ п╨п╬п╩п╦я┤п╣я│я┌п╡п╬ п©я─п╣п╢я┐п©я─п╣п╤п╢п╣п╫п╦п╧ п©п╣я─п╣п╢ п╬я┌п╡п╣я┌п╬п╪.
 
-    *) Исправление: в ответах 204 для запросов версии HTTP/1.1 выдавалась 
-       строка заголовка "Transfer-Encoding: chunked".
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╬я┌п╡п╣я┌п╟я┘ 204 п╢п╩я▐ п╥п╟п©я─п╬я│п╬п╡ п╡п╣я─я│п╦п╦ HTTP/1.1 п╡я▀п╢п╟п╡п╟п╩п╟я│я▄
+       я│я┌я─п╬п╨п╟ п╥п╟пЁп╬п╩п╬п╡п╨п╟ "Transfer-Encoding: chunked".
 
-    *) Исправление: nginx возвращал 502 код ответа, если FastCGI сервер 
-       передавал полные строки заголовка ответа в отдельных FastCGI записях.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╡п╬п╥п╡я─п╟я┴п╟п╩ 502 п╨п╬п╢ п╬я┌п╡п╣я┌п╟, п╣я│п╩п╦ FastCGI я│п╣я─п╡п╣я─
+       п©п╣я─п╣п╢п╟п╡п╟п╩ п©п╬п╩п╫я▀п╣ я│я┌я─п╬п╨п╦ п╥п╟пЁп╬п╩п╬п╡п╨п╟ п╬я┌п╡п╣я┌п╟ п╡ п╬я┌п╢п╣п╩я▄п╫я▀я┘ FastCGI п╥п╟п©п╦я│я▐я┘.
 
-    *) Исправление: если в директиве post_action был указан проксируемый 
-       URI, то он выполнялся только после успешного завершения запроса.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ post_action п╠я▀п╩ я┐п╨п╟п╥п╟п╫ п©я─п╬п╨я│п╦я─я┐п╣п╪я▀п╧
+       URI, я┌п╬ п╬п╫ п╡я▀п©п╬п╩п╫я▐п╩я│я▐ я┌п╬п╩я▄п╨п╬ п©п╬я│п╩п╣ я┐я│п©п╣я┬п╫п╬пЁп╬ п╥п╟п╡п╣я─я┬п╣п╫п╦я▐ п╥п╟п©я─п╬я│п╟.
 
 
-Изменения в nginx 0.3.28                                          16.02.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.28                                          16.02.2006
 
-    *) Добавление: директива restrict_host_names упразднена.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ restrict_host_names я┐п©я─п╟п╥п╢п╫п╣п╫п╟.
 
-    *) Добавление: параметр конфигурации --with-cpu-opt=ppc64.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦ --with-cpu-opt=ppc64.
 
-    *) Исправление: при некоторых условиях проксированное соединение с 
-       клиентом завершалось преждевременно.
-       Спасибо Владимиру Шутову.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╫п╣п╨п╬я┌п╬я─я▀я┘ я┐я│п╩п╬п╡п╦я▐я┘ п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╫п╬п╣ я│п╬п╣п╢п╦п╫п╣п╫п╦п╣ я│
+       п╨п╩п╦п╣п╫я┌п╬п╪ п╥п╟п╡п╣я─я┬п╟п╩п╬я│я▄ п©я─п╣п╤п╢п╣п╡я─п╣п╪п╣п╫п╫п╬.
+       п║п©п╟я│п╦п╠п╬ п▓п╩п╟п╢п╦п╪п╦я─я┐ п╗я┐я┌п╬п╡я┐.
 
-    *) Исправление: строка заголовка "X-Accel-Limit-Rate" не учитывалась 
-       для запросов, перенаправленных с помощью строки "X-Accel-Redirect".
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я│я┌я─п╬п╨п╟ п╥п╟пЁп╬п╩п╬п╡п╨п╟ "X-Accel-Limit-Rate" п╫п╣ я┐я┤п╦я┌я▀п╡п╟п╩п╟я│я▄ п╢п╩я▐
+       п╥п╟п©я─п╬я│п╬п╡, п©п╣я─п╣п╫п╟п©я─п╟п╡п╩п╣п╫п╫я▀я┘ я│ п©п╬п╪п╬я┴я▄я▌ я│я┌я─п╬п╨п╦ "X-Accel-Redirect".
 
-    *) Исправление: директива post_action работала только после успешного 
-       завершения запроса.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ post_action я─п╟п╠п╬я┌п╟п╩п╟ я┌п╬п╩я▄п╨п╬ п©п╬я│п╩п╣ я┐я│п©п╣я┬п╫п╬пЁп╬
+       п╥п╟п╡п╣я─я┬п╣п╫п╦я▐ п╥п╟п©я─п╬я│п╟.
 
-    *) Исправление: тело проксированного ответа, создаваемого директивой 
-       post_action, передавалось клиенту.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┌п╣п╩п╬ п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╫п╬пЁп╬ п╬я┌п╡п╣я┌п╟, я│п╬п╥п╢п╟п╡п╟п╣п╪п╬пЁп╬ п╢п╦я─п╣п╨я┌п╦п╡п╬п╧
+       post_action, п©п╣я─п╣п╢п╟п╡п╟п╩п╬я│я▄ п╨п╩п╦п╣п╫я┌я┐.
 
 
-Изменения в nginx 0.3.27                                          08.02.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.27                                          08.02.2006
 
-    *) Изменение: директивы variables_hash_max_size и 
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ variables_hash_max_size п╦
        variables_hash_bucket_size.
 
-    *) Добавление: переменная $body_bytes_sent доступна не только в 
-       директиве log_format.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $body_bytes_sent п╢п╬я│я┌я┐п©п╫п╟ п╫п╣ я┌п╬п╩я▄п╨п╬ п╡
+       п╢п╦я─п╣п╨я┌п╦п╡п╣ log_format.
 
-    *) Добавление: переменные $ssl_protocol и $ssl_cipher.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫я▀п╣ $ssl_protocol п╦ $ssl_cipher.
 
-    *) Добавление: определение размера строки кэша распространённых 
-       процессоров при старте.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╬п©я─п╣п╢п╣п╩п╣п╫п╦п╣ я─п╟п╥п╪п╣я─п╟ я│я┌я─п╬п╨п╦ п╨я█я┬п╟ я─п╟я│п©я─п╬я│я┌я─п╟п╫я▒п╫п╫я▀я┘
+       п©я─п╬я├п╣я│я│п╬я─п╬п╡ п©я─п╦ я│я┌п╟я─я┌п╣.
 
-    *) Добавление: директива accept_mutex теперь поддерживается посредством 
-       fcntl(2) на платформах, отличных от i386, amd64, sparc64 и ppc.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ accept_mutex я┌п╣п©п╣я─я▄ п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌я│я▐ п©п╬я│я─п╣п╢я│я┌п╡п╬п╪
+       fcntl(2) п╫п╟ п©п╩п╟я┌я└п╬я─п╪п╟я┘, п╬я┌п╩п╦я┤п╫я▀я┘ п╬я┌ i386, amd64, sparc64 п╦ ppc.
 
-    *) Добавление: директива lock_file и параметр автоконфигурации 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ lock_file п╦ п©п╟я─п╟п╪п╣я┌я─ п╟п╡я┌п╬п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦
        --with-lock-path=PATH.
 
-    *) Исправление: при использовании протокола HTTPS в директиве 
-       proxy_pass не передавались запросы с телом.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п©я─п╬я┌п╬п╨п╬п╩п╟ HTTPS п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ proxy_pass
+       п╫п╣ п©п╣я─п╣п╢п╟п╡п╟п╩п╦я│я▄ п╥п╟п©я─п╬я│я▀ я│ я┌п╣п╩п╬п╪.
 
 
-Изменения в nginx 0.3.26                                          03.02.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.26                                          03.02.2006
 
-    *) Изменение: директива optimize_host_names переименована в 
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ optimize_host_names п©п╣я─п╣п╦п╪п╣п╫п╬п╡п╟п╫п╟ п╡
        optimize_server_names.
 
-    *) Исправление: при проксировании подзапроса в SSI бэкенду передавался 
-       URI основного запроса, если в директиве proxy_pass отсутствовал URI.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╦п╦ п©п╬п╢п╥п╟п©я─п╬я│п╟ п╡ SSI п╠я█п╨п╣п╫п╢я┐ п©п╣я─п╣п╢п╟п╡п╟п╩я│я▐
+       URI п╬я│п╫п╬п╡п╫п╬пЁп╬ п╥п╟п©я─п╬я│п╟, п╣я│п╩п╦ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ proxy_pass п╬я┌я│я┐я┌я│я┌п╡п╬п╡п╟п╩ URI.
 
 
-Изменения в nginx 0.3.25                                          01.02.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.25                                          01.02.2006
 
-    *) Исправление: при неверной конфигурации на старте или во время 
-       переконфигурации происходил segmentation fault; ошибка появилась в 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╫п╣п╡п╣я─п╫п╬п╧ п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦ п╫п╟ я│я┌п╟я─я┌п╣ п╦п╩п╦ п╡п╬ п╡я─п╣п╪я▐
+       п©п╣я─п╣п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦ п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
        0.3.24.
 
 
-Изменения в nginx 0.3.24                                          01.02.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.24                                          01.02.2006
 
-    *) Изменение: обход ошибки в kqueue во FreeBSD.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╬п╠я┘п╬п╢ п╬я┬п╦п╠п╨п╦ п╡ kqueue п╡п╬ FreeBSD.
 
-    *) Исправление: ответ, создаваемый директивой post_action, теперь не 
-       передаётся клиенту.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┌п╡п╣я┌, я│п╬п╥п╢п╟п╡п╟п╣п╪я▀п╧ п╢п╦я─п╣п╨я┌п╦п╡п╬п╧ post_action, я┌п╣п©п╣я─я▄ п╫п╣
+       п©п╣я─п╣п╢п╟я▒я┌я│я▐ п╨п╩п╦п╣п╫я┌я┐.
 
-    *) Исправление: при использовании большого количества лог-файлов 
-       происходила утечка памяти.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╠п╬п╩я▄я┬п╬пЁп╬ п╨п╬п╩п╦я┤п╣я│я┌п╡п╟ п╩п╬пЁ-я└п╟п╧п╩п╬п╡
+       п©я─п╬п╦я│я┘п╬п╢п╦п╩п╟ я┐я┌п╣я┤п╨п╟ п©п╟п╪я▐я┌п╦.
 
-    *) Исправление: внутри одного location работала только первая директива 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡п╫я┐я┌я─п╦ п╬п╢п╫п╬пЁп╬ location я─п╟п╠п╬я┌п╟п╩п╟ я┌п╬п╩я▄п╨п╬ п©п╣я─п╡п╟я▐ п╢п╦я─п╣п╨я┌п╦п╡п╟
        proxy_redirect.
 
-    *) Исправление: на 64-битных платформах при старте мог произойти 
-       segmentation fault, если использовалось большое количество имён в 
-       директивах server_name; ошибка появилась в 0.3.18.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╫п╟ 64-п╠п╦я┌п╫я▀я┘ п©п╩п╟я┌я└п╬я─п╪п╟я┘ п©я─п╦ я│я┌п╟я─я┌п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦
+       segmentation fault, п╣я│п╩п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╬я│я▄ п╠п╬п╩я▄я┬п╬п╣ п╨п╬п╩п╦я┤п╣я│я┌п╡п╬ п╦п╪я▒п╫ п╡
+       п╢п╦я─п╣п╨я┌п╦п╡п╟я┘ server_name; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.3.18.
 
 
-Изменения в nginx 0.3.23                                          24.01.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.23                                          24.01.2006
 
-    *) Добавление: директива optimize_host_names.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ optimize_host_names.
 
-    *) Исправление: ошибки при использовании переменных в директивах path и 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п©п╣я─п╣п╪п╣п╫п╫я▀я┘ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╟я┘ path п╦
        alias.
 
-    *) Исправление: модуль ngx_http_perl_module неправильно собирался на 
-       Linux и Solaris.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_perl_module п╫п╣п©я─п╟п╡п╦п╩я▄п╫п╬ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟
+       Linux п╦ Solaris.
 
 
-Изменения в nginx 0.3.22                                          17.01.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.22                                          17.01.2006
 
-    *) Добавление: модуль ngx_http_perl_module поддерживает методы $r->args 
-       и $r->unescape.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_perl_module п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╪п╣я┌п╬п╢я▀ $r->args
+       п╦ $r->unescape.
 
-    *) Добавление: метод $r->query_string в модуле ngx_http_perl_module 
-       упразднён.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╣я┌п╬п╢ $r->query_string п╡ п╪п╬п╢я┐п╩п╣ ngx_http_perl_module
+       я┐п©я─п╟п╥п╢п╫я▒п╫.
 
-    *) Исправление: если в директиве valid_referers указаны только none или 
-       blocked, то происходил segmentation fault; ошибка появилась в 0.3.18.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ valid_referers я┐п╨п╟п╥п╟п╫я▀ я┌п╬п╩я▄п╨п╬ none п╦п╩п╦
+       blocked, я┌п╬ п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.3.18.
 
 
-Изменения в nginx 0.3.21                                          16.01.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.21                                          16.01.2006
 
-    *) Добавление: модуль ngx_http_perl_module.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_perl_module.
 
-    *) Изменение: директива valid_referers разрешает использовать рефереры 
-       совсем без URI.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ valid_referers я─п╟п╥я─п╣я┬п╟п╣я┌ п╦я│п©п╬п╩я▄п╥п╬п╡п╟я┌я▄ я─п╣я└п╣я─п╣я─я▀
+       я│п╬п╡я│п╣п╪ п╠п╣п╥ URI.
 
 
-Изменения в nginx 0.3.20                                          11.01.2006
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.20                                          11.01.2006
 
-    *) Исправление: ошибки в обработке SSI.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ п╡ п╬п╠я─п╟п╠п╬я┌п╨п╣ SSI.
 
-    *) Исправление: модуль ngx_http_memcached_module не поддерживал ключи в 
-       виде /uri?args.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_memcached_module п╫п╣ п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╩ п╨п╩я▌я┤п╦ п╡
+       п╡п╦п╢п╣ /uri?args.
 
 
-Изменения в nginx 0.3.19                                          28.12.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.19                                          28.12.2005
 
-    *) Добавление: директивы path и alias поддерживают переменные.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ path п╦ alias п©п╬п╢п╢п╣я─п╤п╦п╡п╟я▌я┌ п©п╣я─п╣п╪п╣п╫п╫я▀п╣.
 
-    *) Изменение: теперь директива valid_referers опять учитывает URI.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╢п╦я─п╣п╨я┌п╦п╡п╟ valid_referers п╬п©я▐я┌я▄ я┐я┤п╦я┌я▀п╡п╟п╣я┌ URI.
 
-    *) Исправление: ошибки в обработке SSI.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ п╡ п╬п╠я─п╟п╠п╬я┌п╨п╣ SSI.
 
 
-Изменения в nginx 0.3.18                                          26.12.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.18                                          26.12.2005
 
-    *) Добавление: директива server_names поддерживает имена вида 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ server_names п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╦п╪п╣п╫п╟ п╡п╦п╢п╟
        ".domain.tld".
 
-    *) Добавление: директива server_names использует хэш для имён вида 
-       "*.domain.tld" и более эффективный хэш для обычных имён.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ server_names п╦я│п©п╬п╩я▄п╥я┐п╣я┌ я┘я█я┬ п╢п╩я▐ п╦п╪я▒п╫ п╡п╦п╢п╟
+       "*.domain.tld" п╦ п╠п╬п╩п╣п╣ я█я└я└п╣п╨я┌п╦п╡п╫я▀п╧ я┘я█я┬ п╢п╩я▐ п╬п╠я▀я┤п╫я▀я┘ п╦п╪я▒п╫.
 
-    *) Изменение: директивы server_names_hash_max_size и 
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ server_names_hash_max_size п╦
        server_names_hash_bucket_size.
 
-    *) Изменение: директивы server_names_hash и server_names_hash_threshold 
-       упразднены.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ server_names_hash п╦ server_names_hash_threshold
+       я┐п©я─п╟п╥п╢п╫п╣п╫я▀.
 
-    *) Добавление: директива valid_referers использует хэш для имён сайтов.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ valid_referers п╦я│п©п╬п╩я▄п╥я┐п╣я┌ я┘я█я┬ п╢п╩я▐ п╦п╪я▒п╫ я│п╟п╧я┌п╬п╡.
 
-    *) Изменение: теперь директива valid_referers проверяет только имена 
-       сайтов без учёта URI.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╣п©п╣я─я▄ п╢п╦я─п╣п╨я┌п╦п╡п╟ valid_referers п©я─п╬п╡п╣я─я▐п╣я┌ я┌п╬п╩я▄п╨п╬ п╦п╪п╣п╫п╟
+       я│п╟п╧я┌п╬п╡ п╠п╣п╥ я┐я┤я▒я┌п╟ URI.
 
-    *) Исправление: некоторые имена вида ".domain.tld" неверно 
-       обрабатывались модулем ngx_http_map_module.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╫п╣п╨п╬я┌п╬я─я▀п╣ п╦п╪п╣п╫п╟ п╡п╦п╢п╟ ".domain.tld" п╫п╣п╡п╣я─п╫п╬
+       п╬п╠я─п╟п╠п╟я┌я▀п╡п╟п╩п╦я│я▄ п╪п╬п╢я┐п╩п╣п╪ ngx_http_map_module.
 
-    *) Исправление: если конфигурационного файла не было, то происходил 
-       segmentation fault; ошибка появилась в 0.3.12.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╬п╫п╫п╬пЁп╬ я└п╟п╧п╩п╟ п╫п╣ п╠я▀п╩п╬, я┌п╬ п©я─п╬п╦я│я┘п╬п╢п╦п╩
+       segmentation fault; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.3.12.
 
-    *) Исправление: на 64-битных платформах при старте мог произойти 
-       segmentation fault; ошибка появилась в 0.3.16.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╫п╟ 64-п╠п╦я┌п╫я▀я┘ п©п╩п╟я┌я└п╬я─п╪п╟я┘ п©я─п╦ я│я┌п╟я─я┌п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦
+       segmentation fault; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.3.16.
 
 
-Изменения в nginx 0.3.17                                          18.12.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.17                                          18.12.2005
 
-    *) Изменение: на Linux configure теперь проверяет наличие epoll и 
-       sendfile64() в ядре.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╫п╟ Linux configure я┌п╣п©п╣я─я▄ п©я─п╬п╡п╣я─я▐п╣я┌ п╫п╟п╩п╦я┤п╦п╣ epoll п╦
+       sendfile64() п╡ я▐п╢я─п╣.
 
-    *) Добавление: директива map поддерживает доменные имена в формате 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ map п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╢п╬п╪п╣п╫п╫я▀п╣ п╦п╪п╣п╫п╟ п╡ я└п╬я─п╪п╟я┌п╣
        ".domain.tld".
 
-    *) Исправление: во время SSL handshake не иcпользовались таймауты; 
-       ошибка появилась в 0.2.4.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡п╬ п╡я─п╣п╪я▐ SSL handshake п╫п╣ п╦cп©п╬п╩я▄п╥п╬п╡п╟п╩п╦я│я▄ я┌п╟п╧п╪п╟я┐я┌я▀;
+       п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.2.4.
 
-    *) Исправление: в использовании протокола HTTPS в директиве proxy_pass.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п©я─п╬я┌п╬п╨п╬п╩п╟ HTTPS п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ proxy_pass.
 
-    *) Исправление: при использовании протокола HTTPS в директиве 
-       proxy_pass по умолчанию использовался порт 80.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п©я─п╬я┌п╬п╨п╬п╩п╟ HTTPS п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ proxy_pass
+       п©п╬ я┐п╪п╬п╩я┤п╟п╫п╦я▌ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩я│я▐ п©п╬я─я┌ 80.
 
 
-Изменения в nginx 0.3.16                                          16.12.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.16                                          16.12.2005
 
-    *) Добавление: модуль ngx_http_map_module.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_map_module.
 
-    *) Добавление: директивы types_hash_max_size и types_hash_bucket_size.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ types_hash_max_size п╦ types_hash_bucket_size.
 
-    *) Добавление: директива ssi_value_length.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ ssi_value_length.
 
-    *) Добавление: директива worker_rlimit_core.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ worker_rlimit_core.
 
-    *) Изменение: при сборке компиляторами icc 8.1 и 9.0 с оптимизацией для 
-       Pentium 4 номер соединения в логах всегда был равен 1.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п©я─п╦ я│п╠п╬я─п╨п╣ п╨п╬п╪п©п╦п╩я▐я┌п╬я─п╟п╪п╦ icc 8.1 п╦ 9.0 я│ п╬п©я┌п╦п╪п╦п╥п╟я├п╦п╣п╧ п╢п╩я▐
+       Pentium 4 п╫п╬п╪п╣я─ я│п╬п╣п╢п╦п╫п╣п╫п╦я▐ п╡ п╩п╬пЁп╟я┘ п╡я│п╣пЁп╢п╟ п╠я▀п╩ я─п╟п╡п╣п╫ 1.
 
-    *) Исправление: команда config timefmt в SSI задавала неверный формат 
-       времени.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╨п╬п╪п╟п╫п╢п╟ config timefmt п╡ SSI п╥п╟п╢п╟п╡п╟п╩п╟ п╫п╣п╡п╣я─п╫я▀п╧ я└п╬я─п╪п╟я┌
+       п╡я─п╣п╪п╣п╫п╦.
 
-    *) Исправление: nginx не закрывал соединения с IMAP/POP3 бэкендом при 
-       использовании SSL соединений; ошибка появилась в 0.3.13.
-       Спасибо Rob Mueller.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ п╥п╟п╨я─я▀п╡п╟п╩ я│п╬п╣п╢п╦п╫п╣п╫п╦я▐ я│ IMAP/POP3 п╠я█п╨п╣п╫п╢п╬п╪ п©я─п╦
+       п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ SSL я│п╬п╣п╢п╦п╫п╣п╫п╦п╧; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.3.13.
+       п║п©п╟я│п╦п╠п╬ Rob Mueller.
 
-    *) Исправление: segmentation fault мог произойти во время SSL shutdown; 
-       ошибка появилась в 0.3.13.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: segmentation fault п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ п╡п╬ п╡я─п╣п╪я▐ SSL shutdown;
+       п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.3.13.
 
 
-Изменения в nginx 0.3.15                                          07.12.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.15                                          07.12.2005
 
-    *) Добавление: новой код 444 в директиве return для закрытия соединения.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╫п╬п╡п╬п╧ п╨п╬п╢ 444 п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ return п╢п╩я▐ п╥п╟п╨я─я▀я┌п╦я▐ я│п╬п╣п╢п╦п╫п╣п╫п╦я▐.
 
-    *) Добавление: директива so_keepalive в IMAP/POP3 прокси.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ so_keepalive п╡ IMAP/POP3 п©я─п╬п╨я│п╦.
 
-    *) Исправление: nginx теперь вызывает abort() при обнаружении 
-       незакрытых соединений только при планом выходе и включённой 
-       директиве debug_points.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx я┌п╣п©п╣я─я▄ п╡я▀п╥я▀п╡п╟п╣я┌ abort() п©я─п╦ п╬п╠п╫п╟я─я┐п╤п╣п╫п╦п╦ п╫п╣п╥п╟п╨я─я▀я┌я▀я┘
+       я│п╬п╣п╢п╦п╫п╣п╫п╦п╧ я┌п╬п╩я▄п╨п╬ п©я─п╦ п©п╩п╟п╫п╬п╪ п╡я▀я┘п╬п╢п╣ п╦ п╡п╨п╩я▌я┤я▒п╫п╫п╬п╧ п╢п╦я─п╣п╨я┌п╦п╡п╣
+       debug_points.
 
 
-Изменения в nginx 0.3.14                                          05.12.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.14                                          05.12.2005
 
-    *) Исправление: в ответе 304 передавалось тело ответа; ошибка появилась 
-       в 0.3.13.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╬я┌п╡п╣я┌п╣ 304 п©п╣я─п╣п╢п╟п╡п╟п╩п╬я│я▄ я┌п╣п╩п╬ п╬я┌п╡п╣я┌п╟; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄
+       п╡ 0.3.13.
 
 
-Изменения в nginx 0.3.13                                          05.12.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.13                                          05.12.2005
 
-    *) Добавление: IMAP/POP3 прокси поддерживает STARTTLS и STLS.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: IMAP/POP3 п©я─п╬п╨я│п╦ п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ STARTTLS п╦ STLS.
 
-    *) Исправление: IMAP/POP3 прокси не работала с методами select, poll и 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: IMAP/POP3 п©я─п╬п╨я│п╦ п╫п╣ я─п╟п╠п╬я┌п╟п╩п╟ я│ п╪п╣я┌п╬п╢п╟п╪п╦ select, poll п╦
        /dev/poll.
 
-    *) Исправление: ошибки в обработке SSI.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ п╡ п╬п╠я─п╟п╠п╬я┌п╨п╣ SSI.
 
-    *) Исправление: sendfilev() в Solaris теперь не используется при 
-       передаче тела запроса FastCGI-серверу через unix domain сокет.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: sendfilev() п╡ Solaris я┌п╣п©п╣я─я▄ п╫п╣ п╦я│п©п╬п╩я▄п╥я┐п╣я┌я│я▐ п©я─п╦
+       п©п╣я─п╣п╢п╟я┤п╣ я┌п╣п╩п╟ п╥п╟п©я─п╬я│п╟ FastCGI-я│п╣я─п╡п╣я─я┐ я┤п╣я─п╣п╥ unix domain я│п╬п╨п╣я┌.
 
-    *) Исправление: директива auth_basic не запрещала аутентификацию; 
-       ошибка появилась в 0.3.11.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ auth_basic п╫п╣ п╥п╟п©я─п╣я┴п╟п╩п╟ п╟я┐я┌п╣п╫я┌п╦я└п╦п╨п╟я├п╦я▌; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.3.11.
 
 
-Изменения в nginx 0.3.12                                          26.11.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.12                                          26.11.2005
 
-    *) Безопасность: если nginx был собран с модулем 
-       ngx_http_realip_module, то при использовании директивы "satisfy_any 
-       on" директивы доступа и аутентификации не работали. Модуль 
-       ngx_http_realip_module не собирался и не собирается по умолчанию.
+    *) п▒п╣п╥п╬п©п╟я│п╫п╬я│я┌я▄: п╣я│п╩п╦ nginx п╠я▀п╩ я│п╬п╠я─п╟п╫ я│ п╪п╬п╢я┐п╩п╣п╪ ngx_http_realip_module,
+       я┌п╬ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀ "satisfy_any on" п╢п╦я─п╣п╨я┌п╦п╡я▀ п╢п╬я│я┌я┐п©п╟ п╦
+       п╟я┐я┌п╣п╫я┌п╦я└п╦п╨п╟я├п╦п╦ п╫п╣ я─п╟п╠п╬я┌п╟п╩п╦. п°п╬п╢я┐п╩я▄ ngx_http_realip_module п╫п╣
+       я│п╬п╠п╦я─п╟п╩я│я▐ п╦ п╫п╣ я│п╬п╠п╦я─п╟п╣я┌я│я▐ п©п╬ я┐п╪п╬п╩я┤п╟п╫п╦я▌.
 
-    *) Изменение: имя переменной "$time_gmt" изменено на "$time_local".
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╦п╪я▐ п©п╣я─п╣п╪п╣п╫п╫п╬п╧ "$time_gmt" п╦п╥п╪п╣п╫п╣п╫п╬ п╫п╟ "$time_local".
 
-    *) Изменение: директивы proxy_header_buffer_size и 
-       fastcgi_header_buffer_size переименованы соответственно в 
-       proxy_buffer_size и fastcgi_buffer_size.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_header_buffer_size п╦
+       fastcgi_header_buffer_size п©п╣я─п╣п╦п╪п╣п╫п╬п╡п╟п╫я▀ я│п╬п╬я┌п╡п╣я┌я│я┌п╡п╣п╫п╫п╬ п╡
+       proxy_buffer_size п╦ fastcgi_buffer_size.
 
-    *) Добавление: модуль ngx_http_memcached_module.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_memcached_module.
 
-    *) Добавление: директива proxy_buffering.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ proxy_buffering.
 
-    *) Исправление: изменение в работе с accept mutex при использовании 
-       метода rtsig; ошибка появилась в 0.3.0.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╦п╥п╪п╣п╫п╣п╫п╦п╣ п╡ я─п╟п╠п╬я┌п╣ я│ accept mutex п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦
+       п╪п╣я┌п╬п╢п╟ rtsig; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.3.0.
 
-    *) Исправление: если клиент передал строку "Transfer-Encoding: chunked" 
-       в заголовке запроса, то nginx теперь выдаёт ошибку 411.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╨п╩п╦п╣п╫я┌ п©п╣я─п╣п╢п╟п╩ я│я┌я─п╬п╨я┐ "Transfer-Encoding: chunked"
+       п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╥п╟п©я─п╬я│п╟, я┌п╬ nginx я┌п╣п©п╣я─я▄ п╡я▀п╢п╟я▒я┌ п╬я┬п╦п╠п╨я┐ 411.
 
-    *) Исправление: при наследовании директивы auth_basic с уровня http в 
-       строке "WWW-Authenticate" заголовка ответа выводился realm без 
-       текста "Basic realm".
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╫п╟я│п╩п╣п╢п╬п╡п╟п╫п╦п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀ auth_basic я│ я┐я─п╬п╡п╫я▐ http п╡
+       я│я┌я─п╬п╨п╣ "WWW-Authenticate" п╥п╟пЁп╬п╩п╬п╡п╨п╟ п╬я┌п╡п╣я┌п╟ п╡я▀п╡п╬п╢п╦п╩я│я▐ realm п╠п╣п╥ я┌п╣п╨я│я┌п╟
+       "Basic realm".
 
-    *) Исправление: если в директиве access_log был явно указан формат 
-       combined, то в лог записывались пустые строки; ошибка появилась в 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ access_log п╠я▀п╩ я▐п╡п╫п╬ я┐п╨п╟п╥п╟п╫ я└п╬я─п╪п╟я┌
+       combined, я┌п╬ п╡ п╩п╬пЁ п╥п╟п©п╦я│я▀п╡п╟п╩п╦я│я▄ п©я┐я│я┌я▀п╣ я│я┌я─п╬п╨п╦; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
        0.3.8.
 
-    *) Исправление: nginx не работал на платформе sparc под любыми OS, 
-       кроме Solaris.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я─п╟п╠п╬я┌п╟п╩ п╫п╟ п©п╩п╟я┌я└п╬я─п╪п╣ sparc п©п╬п╢ п╩я▌п╠я▀п╪п╦ OS, п╨я─п╬п╪п╣
+       Solaris.
 
-    *) Исправление: в директиве if теперь не нужно разделять пробелом 
-       строку в кавычках и закрывающую скобку.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ if я┌п╣п©п╣я─я▄ п╫п╣ п╫я┐п╤п╫п╬ я─п╟п╥п╢п╣п╩я▐я┌я▄ п©я─п╬п╠п╣п╩п╬п╪ я│я┌я─п╬п╨я┐
+       п╡ п╨п╟п╡я▀я┤п╨п╟я┘ п╦ п╥п╟п╨я─я▀п╡п╟я▌я┴я┐я▌ я│п╨п╬п╠п╨я┐.
 
 
-Изменения в nginx 0.3.11                                          15.11.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.11                                          15.11.2005
 
-    *) Исправление: nginx не передавал при проксировании тело запроса и 
-       строки заголовка клиента; ошибка появилась в 0.3.10.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ п©п╣я─п╣п╢п╟п╡п╟п╩ п©я─п╦ п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╦п╦ я┌п╣п╩п╬ п╥п╟п©я─п╬я│п╟ п╦
+       я│я┌я─п╬п╨п╦ п╥п╟пЁп╬п╩п╬п╡п╨п╟ п╨п╩п╦п╣п╫я┌п╟; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.3.10.
 
 
-Изменения в nginx 0.3.10                                          15.11.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.10                                          15.11.2005
 
-    *) Изменение: директива valid_referers и переменная $invalid_referer 
-       перенесены из модуля ngx_http_rewrite_module в новый модуль 
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ valid_referers п╦ п©п╣я─п╣п╪п╣п╫п╫п╟я▐ $invalid_referer
+       п©п╣я─п╣п╫п╣я│п╣п╫я▀ п╦п╥ п╪п╬п╢я┐п╩я▐ ngx_http_rewrite_module п╡ п╫п╬п╡я▀п╧ п╪п╬п╢я┐п╩я▄
        ngx_http_referer_module.
 
-    *) Изменение: имя переменной "$apache_bytes_sent" изменено на 
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╦п╪я▐ п©п╣я─п╣п╪п╣п╫п╫п╬п╧ "$apache_bytes_sent" п╦п╥п╪п╣п╫п╣п╫п╬ п╫п╟
        "$body_bytes_sent".
 
-    *) Добавление: переменные "$sent_http_...".
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫я▀п╣ "$sent_http_...".
 
-    *) Добавление: директива if поддерживает операции "=" и "!=".
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ if п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╬п©п╣я─п╟я├п╦п╦ "=" п╦ "!=".
 
-    *) Добавление: директива proxy_pass поддерживает протокол HTTPS.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ proxy_pass п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п©я─п╬я┌п╬п╨п╬п╩ HTTPS.
 
-    *) Добавление: директива proxy_set_body.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ proxy_set_body.
 
-    *) Добавление: директива post_action.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ post_action.
 
-    *) Добавление: модуль ngx_http_empty_gif_module.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_empty_gif_module.
 
-    *) Добавление: директива worker_cpu_affinity для Linux.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ worker_cpu_affinity п╢п╩я▐ Linux.
 
-    *) Исправление: директива rewrite не раскодировала символы в редиректах 
-       в URI, теперь символы раскодируются, кроме символов %00-%25 и 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ rewrite п╫п╣ я─п╟я│п╨п╬п╢п╦я─п╬п╡п╟п╩п╟ я│п╦п╪п╡п╬п╩я▀ п╡ я─п╣п╢п╦я─п╣п╨я┌п╟я┘
+       п╡ URI, я┌п╣п©п╣я─я▄ я│п╦п╪п╡п╬п╩я▀ я─п╟я│п╨п╬п╢п╦я─я┐я▌я┌я│я▐, п╨я─п╬п╪п╣ я│п╦п╪п╡п╬п╩п╬п╡ %00-%25 п╦
        %7F-%FF.
 
-    *) Исправление: nginx не собирался компилятором icc 9.0.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╨п╬п╪п©п╦п╩я▐я┌п╬я─п╬п╪ icc 9.0.
 
-    *) Исправление: если для статического файла нулевого размера был 
-       разрешён SSI, то ответ передавался неверно при кодировании chunk'ами.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╢п╩я▐ я│я┌п╟я┌п╦я┤п╣я│п╨п╬пЁп╬ я└п╟п╧п╩п╟ п╫я┐п╩п╣п╡п╬пЁп╬ я─п╟п╥п╪п╣я─п╟ п╠я▀п╩
+       я─п╟п╥я─п╣я┬я▒п╫ SSI, я┌п╬ п╬я┌п╡п╣я┌ п©п╣я─п╣п╢п╟п╡п╟п╩я│я▐ п╫п╣п╡п╣я─п╫п╬ п©я─п╦ п╨п╬п╢п╦я─п╬п╡п╟п╫п╦п╦ chunk'п╟п╪п╦.
 
 
-Изменения в nginx 0.3.9                                           10.11.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.9                                           10.11.2005
 
-    *) Исправление: nginx считал небезопасными URI, в которых между двумя 
-       слэшами находилось два любых символа; ошибка появилась в 0.3.8.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx я│я┤п╦я┌п╟п╩ п╫п╣п╠п╣п╥п╬п©п╟я│п╫я▀п╪п╦ URI, п╡ п╨п╬я┌п╬я─я▀я┘ п╪п╣п╤п╢я┐ п╢п╡я┐п╪я▐
+       я│п╩я█я┬п╟п╪п╦ п╫п╟я┘п╬п╢п╦п╩п╬я│я▄ п╢п╡п╟ п╩я▌п╠я▀я┘ я│п╦п╪п╡п╬п╩п╟; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.3.8.
 
 
-Изменения в nginx 0.3.8                                           09.11.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.8                                           09.11.2005
 
-    *) Безопасность: nginx теперь проверят URI, полученные от бэкенда в 
-       строке "X-Accel-Redirect" в заголовке ответа, или в SSI файле на 
-       наличие путей "/../" и нулей.
+    *) п▒п╣п╥п╬п©п╟я│п╫п╬я│я┌я▄: nginx я┌п╣п©п╣я─я▄ п©я─п╬п╡п╣я─я▐я┌ URI, п©п╬п╩я┐я┤п╣п╫п╫я▀п╣ п╬я┌ п╠я█п╨п╣п╫п╢п╟ п╡
+       я│я┌я─п╬п╨п╣ "X-Accel-Redirect" п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╬я┌п╡п╣я┌п╟, п╦п╩п╦ п╡ SSI я└п╟п╧п╩п╣ п╫п╟
+       п╫п╟п╩п╦я┤п╦п╣ п©я┐я┌п╣п╧ "/../" п╦ п╫я┐п╩п╣п╧.
 
-    *) Изменение: nginx теперь не воспринимает пустое имя как правильное в 
-       строке "Authorization" в заголовке запроса.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: nginx я┌п╣п©п╣я─я▄ п╫п╣ п╡п╬я│п©я─п╦п╫п╦п╪п╟п╣я┌ п©я┐я│я┌п╬п╣ п╦п╪я▐ п╨п╟п╨ п©я─п╟п╡п╦п╩я▄п╫п╬п╣ п╡
+       я│я┌я─п╬п╨п╣ "Authorization" п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╥п╟п©я─п╬я│п╟.
 
-    *) Добавление: директива ssl_session_timeout модулей 
-       ngx_http_ssl_module и ngx_imap_ssl_module.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ ssl_session_timeout п╪п╬п╢я┐п╩п╣п╧ ngx_http_ssl_module
+       п╦ ngx_imap_ssl_module.
 
-    *) Добавление: директива auth_http_header модуля 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ auth_http_header п╪п╬п╢я┐п╩я▐
        ngx_imap_auth_http_module.
 
-    *) Добавление: директива add_header.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ add_header.
 
-    *) Добавление: модуль ngx_http_realip_module.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_realip_module.
 
-    *) Добавление: новые переменные для использования в директиве 
-       log_format: $bytes_sent, $apache_bytes_sent, $status, $time_gmt, 
-       $uri, $request_time, $request_length, $upstream_status, 
-       $upstream_response_time, $gzip_ratio, $uid_got, $uid_set, 
-       $connection, $pipe и $msec. Параметры в виде "%name" скоро будут 
-       упразднены.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╫п╬п╡я▀п╣ п©п╣я─п╣п╪п╣п╫п╫я▀п╣ п╢п╩я▐ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦я▐ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣
+       log_format: $bytes_sent, $apache_bytes_sent, $status, $time_gmt,
+       $uri, $request_time, $request_length, $upstream_status,
+       $upstream_response_time, $gzip_ratio, $uid_got, $uid_set,
+       $connection, $pipe п╦ $msec. п÷п╟я─п╟п╪п╣я┌я─я▀ п╡ п╡п╦п╢п╣ "%name" я│п╨п╬я─п╬ п╠я┐п╢я┐я┌
+       я┐п©я─п╟п╥п╢п╫п╣п╫я▀.
 
-    *) Изменение: в директиве "if" ложными значениями переменных теперь 
-       являются пустая строка "" и строки, начинающиеся на "0".
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ "if" п╩п╬п╤п╫я▀п╪п╦ п╥п╫п╟я┤п╣п╫п╦я▐п╪п╦ п©п╣я─п╣п╪п╣п╫п╫я▀я┘ я┌п╣п©п╣я─я▄
+       я▐п╡п╩я▐я▌я┌я│я▐ п©я┐я│я┌п╟я▐ я│я┌я─п╬п╨п╟ "" п╦ я│я┌я─п╬п╨п╦, п╫п╟я┤п╦п╫п╟я▌я┴п╦п╣я│я▐ п╫п╟ "0".
 
-    *) Исправление: при работает с проксированными или FastCGI-серверами 
-       nginx мог оставлять открытыми соединения и временные файлы с 
-       запросами клиентов.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ я─п╟п╠п╬я┌п╟п╣я┌ я│ п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╫я▀п╪п╦ п╦п╩п╦ FastCGI-я│п╣я─п╡п╣я─п╟п╪п╦
+       nginx п╪п╬пЁ п╬я│я┌п╟п╡п╩я▐я┌я▄ п╬я┌п╨я─я▀я┌я▀п╪п╦ я│п╬п╣п╢п╦п╫п╣п╫п╦я▐ п╦ п╡я─п╣п╪п╣п╫п╫я▀п╣ я└п╟п╧п╩я▀ я│
+       п╥п╟п©я─п╬я│п╟п╪п╦ п╨п╩п╦п╣п╫я┌п╬п╡.
 
-    *) Исправление: рабочие процессы не сбрасывали буферизированные логи 
-       при плавном выходе.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я─п╟п╠п╬я┤п╦п╣ п©я─п╬я├п╣я│я│я▀ п╫п╣ я│п╠я─п╟я│я▀п╡п╟п╩п╦ п╠я┐я└п╣я─п╦п╥п╦я─п╬п╡п╟п╫п╫я▀п╣ п╩п╬пЁп╦ п©я─п╦
+       п©п╩п╟п╡п╫п╬п╪ п╡я▀я┘п╬п╢п╣.
 
-    *) Исправление: если URI запроса изменялось с помощью rewrite, а затем 
-       запрос проксировался в location, заданном регулярным выражением, то 
-       бэкенду передавался неверный запрос; ошибка появилась в 0.2.6.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ URI п╥п╟п©я─п╬я│п╟ п╦п╥п╪п╣п╫я▐п╩п╬я│я▄ я│ п©п╬п╪п╬я┴я▄я▌ rewrite, п╟ п╥п╟я┌п╣п╪
+       п╥п╟п©я─п╬я│ п©я─п╬п╨я│п╦я─п╬п╡п╟п╩я│я▐ п╡ location, п╥п╟п╢п╟п╫п╫п╬п╪ я─п╣пЁя┐п╩я▐я─п╫я▀п╪ п╡я▀я─п╟п╤п╣п╫п╦п╣п╪, я┌п╬
+       п╠я█п╨п╣п╫п╢я┐ п©п╣я─п╣п╢п╟п╡п╟п╩я│я▐ п╫п╣п╡п╣я─п╫я▀п╧ п╥п╟п©я─п╬я│; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.2.6.
 
-    *) Исправление: директива expires не удаляла уже установленную строку 
-       заголовка "Expires".
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ expires п╫п╣ я┐п╢п╟п╩я▐п╩п╟ я┐п╤п╣ я┐я│я┌п╟п╫п╬п╡п╩п╣п╫п╫я┐я▌ я│я┌я─п╬п╨я┐
+       п╥п╟пЁп╬п╩п╬п╡п╨п╟ "Expires".
 
-    *) Исправление: при использовании метода rtsig и нескольких рабочих 
-       процессах nginx мог перестать принимать запросы.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╪п╣я┌п╬п╢п╟ rtsig п╦ п╫п╣я│п╨п╬п╩я▄п╨п╦я┘ я─п╟п╠п╬я┤п╦я┘
+       п©я─п╬я├п╣я│я│п╟я┘ nginx п╪п╬пЁ п©п╣я─п╣я│я┌п╟я┌я▄ п©я─п╦п╫п╦п╪п╟я┌я▄ п╥п╟п©я─п╬я│я▀.
 
-    *) Исправление: в SSI командах неверно обрабатывались строки "\"" и 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ SSI п╨п╬п╪п╟п╫п╢п╟я┘ п╫п╣п╡п╣я─п╫п╬ п╬п╠я─п╟п╠п╟я┌я▀п╡п╟п╩п╦я│я▄ я│я┌я─п╬п╨п╦ "\"" п╦
        "\'".
 
-    *) Исправление: если ответ заканчивался сразу же после SSI команды, то 
-       при использовании сжатия ответ передавался не до конца или не 
-       передавался вообще.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╬я┌п╡п╣я┌ п╥п╟п╨п╟п╫я┤п╦п╡п╟п╩я│я▐ я│я─п╟п╥я┐ п╤п╣ п©п╬я│п╩п╣ SSI п╨п╬п╪п╟п╫п╢я▀, я┌п╬
+       п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ я│п╤п╟я┌п╦я▐ п╬я┌п╡п╣я┌ п©п╣я─п╣п╢п╟п╡п╟п╩я│я▐ п╫п╣ п╢п╬ п╨п╬п╫я├п╟ п╦п╩п╦ п╫п╣
+       п©п╣я─п╣п╢п╟п╡п╟п╩я│я▐ п╡п╬п╬п╠я┴п╣.
 
 
-Изменения в nginx 0.3.7                                           27.10.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.7                                           27.10.2005
 
-    *) Добавление: директива access_log поддерживает параметр buffer=.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ access_log п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п©п╟я─п╟п╪п╣я┌я─ buffer=.
 
-    *) Исправление: nginx не собирался на платформах, отличных от i386, 
-       amd64, sparc и ppc; ошибка появилась в 0.3.2.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ п©п╩п╟я┌я└п╬я─п╪п╟я┘, п╬я┌п╩п╦я┤п╫я▀я┘ п╬я┌ i386,
+       amd64, sparc п╦ ppc; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.3.2.
 
 
-Изменения в nginx 0.3.6                                           24.10.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.6                                           24.10.2005
 
-    *) Изменение: IMAP/POP3 прокси теперь не передаёт серверу авторизации 
-       пустой логин.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: IMAP/POP3 п©я─п╬п╨я│п╦ я┌п╣п©п╣я─я▄ п╫п╣ п©п╣я─п╣п╢п╟я▒я┌ я│п╣я─п╡п╣я─я┐ п╟п╡я┌п╬я─п╦п╥п╟я├п╦п╦
+       п©я┐я│я┌п╬п╧ п╩п╬пЁп╦п╫.
 
-    *) Добавление: директива log_format поддерживает переменные в виде 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ log_format п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п©п╣я─п╣п╪п╣п╫п╫я▀п╣ п╡ п╡п╦п╢п╣
        $name.
 
-    *) Исправление: если хотя бы в одном сервере не было описано ни одной 
-       директивы listen, то nginx не слушал на 80 порту; ошибка появилась в 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ я┘п╬я┌я▐ п╠я▀ п╡ п╬п╢п╫п╬п╪ я│п╣я─п╡п╣я─п╣ п╫п╣ п╠я▀п╩п╬ п╬п©п╦я│п╟п╫п╬ п╫п╦ п╬п╢п╫п╬п╧
+       п╢п╦я─п╣п╨я┌п╦п╡я▀ listen, я┌п╬ nginx п╫п╣ я│п╩я┐я┬п╟п╩ п╫п╟ 80 п©п╬я─я┌я┐; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
        0.3.3.
 
-    *) Исправление: если в директиве proxy_pass отсутствовал URI, то всегда 
-       использовался порт 80.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ proxy_pass п╬я┌я│я┐я┌я│я┌п╡п╬п╡п╟п╩ URI, я┌п╬ п╡я│п╣пЁп╢п╟
+       п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩я│я▐ п©п╬я─я┌ 80.
 
 
-Изменения в nginx 0.3.5                                           21.10.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.5                                           21.10.2005
 
-    *) Исправление: если логин IMAP/POP3 менялся сервером авторизации, то 
-       мог произойти segmentation fault; ошибка появилась в 0.2.2.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╩п╬пЁп╦п╫ IMAP/POP3 п╪п╣п╫я▐п╩я│я▐ я│п╣я─п╡п╣я─п╬п╪ п╟п╡я┌п╬я─п╦п╥п╟я├п╦п╦, я┌п╬
+       п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.2.2.
 
-    *) Исправление: accept mutex не работал, все соединения обрабатывались 
-       одним рабочим процессом; ошибка появилась в 0.3.3.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: accept mutex п╫п╣ я─п╟п╠п╬я┌п╟п╩, п╡я│п╣ я│п╬п╣п╢п╦п╫п╣п╫п╦я▐ п╬п╠я─п╟п╠п╟я┌я▀п╡п╟п╩п╦я│я▄
+       п╬п╢п╫п╦п╪ я─п╟п╠п╬я┤п╦п╪ п©я─п╬я├п╣я│я│п╬п╪; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.3.3.
 
-    *) Исправление: при использовании метода rtsig и директивы 
-       timer_resolution не работали таймауты.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╪п╣я┌п╬п╢п╟ rtsig п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀
+       timer_resolution п╫п╣ я─п╟п╠п╬я┌п╟п╩п╦ я┌п╟п╧п╪п╟я┐я┌я▀.
 
 
-Изменения в nginx 0.3.4                                           19.10.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.4                                           19.10.2005
 
-    *) Исправление: nginx не собирался на Linux 2.4+ и MacOS X; ошибка 
-       появилась в 0.3.3.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ Linux 2.4+ п╦ MacOS X; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.3.3.
 
 
-Изменения в nginx 0.3.3                                           19.10.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.3                                           19.10.2005
 
-    *) Изменение: параметры "bl" и "af" директивы listen переименованы в 
-       "backlog" и "accept_filter".
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─я▀ "bl" п╦ "af" п╢п╦я─п╣п╨я┌п╦п╡я▀ listen п©п╣я─п╣п╦п╪п╣п╫п╬п╡п╟п╫я▀ п╡
+       "backlog" п╦ "accept_filter".
 
-    *) Добавление: параметры "rcvbuf" и "sndbuf" в директиве listen.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─я▀ "rcvbuf" п╦ "sndbuf" п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ listen.
 
-    *) Изменение: параметр лога $msec теперь не требует дополнительного 
-       системного вызова gettimeofday().
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ п╩п╬пЁп╟ $msec я┌п╣п©п╣я─я▄ п╫п╣ я┌я─п╣п╠я┐п╣я┌ п╢п╬п©п╬п╩п╫п╦я┌п╣п╩я▄п╫п╬пЁп╬
+       я│п╦я│я┌п╣п╪п╫п╬пЁп╬ п╡я▀п╥п╬п╡п╟ gettimeofday().
 
-    *) Добавление: ключ -t теперь проверяет директивы listen.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╨п╩я▌я┤ -t я┌п╣п©п╣я─я▄ п©я─п╬п╡п╣я─я▐п╣я┌ п╢п╦я─п╣п╨я┌п╦п╡я▀ listen.
 
-    *) Исправление: если в директиве listen был указан неверный адрес, то 
-       nginx после сигнала -HUP оставлял открытый сокет в состоянии CLOSED.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ listen п╠я▀п╩ я┐п╨п╟п╥п╟п╫ п╫п╣п╡п╣я─п╫я▀п╧ п╟п╢я─п╣я│, я┌п╬
+       nginx п©п╬я│п╩п╣ я│п╦пЁп╫п╟п╩п╟ -HUP п╬я│я┌п╟п╡п╩я▐п╩ п╬я┌п╨я─я▀я┌я▀п╧ я│п╬п╨п╣я┌ п╡ я│п╬я│я┌п╬я▐п╫п╦п╦ CLOSED.
 
-    *) Исправление: для индексных файлов, содержащих в имени переменную, 
-       мог неверно выставляться тип mime по умолчанию; ошибка появилась в 
-       0.3.0.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╩я▐ п╦п╫п╢п╣п╨я│п╫я▀я┘ я└п╟п╧п╩п╬п╡, я│п╬п╢п╣я─п╤п╟я┴п╦я┘ п╡ п╦п╪п╣п╫п╦ п©п╣я─п╣п╪п╣п╫п╫я┐я▌, п╪п╬пЁ
+       п╫п╣п╡п╣я─п╫п╬ п╡я▀я│я┌п╟п╡п╩я▐я┌я▄я│я▐ я┌п╦п© mime п©п╬ я┐п╪п╬п╩я┤п╟п╫п╦я▌; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.3.0.
 
-    *) Добавление: директива timer_resolution.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ timer_resolution.
 
-    *) Добавление: параметр лога $upstream_response_time в миллисекундах.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ п╩п╬пЁп╟ $upstream_response_time п╡ п╪п╦п╩п╩п╦я│п╣п╨я┐п╫п╢п╟я┘.
 
-    *) Исправление: временный файл с телом запроса клиента теперь удаляется 
-       сразу после того, как клиенту передан заголовок ответа.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡я─п╣п╪п╣п╫п╫я▀п╧ я└п╟п╧п╩ я│ я┌п╣п╩п╬п╪ п╥п╟п©я─п╬я│п╟ п╨п╩п╦п╣п╫я┌п╟ я┌п╣п©п╣я─я▄ я┐п╢п╟п╩я▐п╣я┌я│я▐
+       я│я─п╟п╥я┐ п©п╬я│п╩п╣ я┌п╬пЁп╬, п╨п╟п╨ п╨п╩п╦п╣п╫я┌я┐ п©п╣я─п╣п╢п╟п╫ п╥п╟пЁп╬п╩п╬п╡п╬п╨ п╬я┌п╡п╣я┌п╟.
 
-    *) Исправление: совместимость с OpenSSL 0.9.6.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я│п╬п╡п╪п╣я│я┌п╦п╪п╬я│я┌я▄ я│ OpenSSL 0.9.6.
 
-    *) Исправление: пути к файлам с SSL сертификатом и ключом не могли быть 
-       относительными.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я┐я┌п╦ п╨ я└п╟п╧п╩п╟п╪ я│ SSL я│п╣я─я┌п╦я└п╦п╨п╟я┌п╬п╪ п╦ п╨п╩я▌я┤п╬п╪ п╫п╣ п╪п╬пЁп╩п╦ п╠я▀я┌я▄
+       п╬я┌п╫п╬я│п╦я┌п╣п╩я▄п╫я▀п╪п╦.
 
-    *) Исправление: директива ssl_prefer_server_ciphers не работала для 
-       модуля ngx_imap_ssl_module.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ ssl_prefer_server_ciphers п╫п╣ я─п╟п╠п╬я┌п╟п╩п╟ п╢п╩я▐
+       п╪п╬п╢я┐п╩я▐ ngx_imap_ssl_module.
 
-    *) Исправление: директива ssl_protocols позволяла задать только один 
-       протокол.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ ssl_protocols п©п╬п╥п╡п╬п╩я▐п╩п╟ п╥п╟п╢п╟я┌я▄ я┌п╬п╩я▄п╨п╬ п╬п╢п╦п╫
+       п©я─п╬я┌п╬п╨п╬п╩.
 
 
-Изменения в nginx 0.3.2                                           12.10.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.2                                           12.10.2005
 
-    *) Добавление: поддержка Sun Studio 10 C compiler.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╬п╢п╢п╣я─п╤п╨п╟ Sun Studio 10 C compiler.
 
-    *) Добавление: директивы proxy_upstream_max_fails, 
-       proxy_upstream_fail_timeout, fastcgi_upstream_max_fails и 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_upstream_max_fails,
+       proxy_upstream_fail_timeout, fastcgi_upstream_max_fails п╦
        fastcgi_upstream_fail_timeout.
 
 
-Изменения в nginx 0.3.1                                           10.10.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.1                                           10.10.2005
 
-    *) Исправление: во время переполнения очереди сигналов при 
-       использовании метода rtsig происходил segmentation fault; ошибка 
-       появилась в 0.2.0.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡п╬ п╡я─п╣п╪я▐ п©п╣я─п╣п©п╬п╩п╫п╣п╫п╦я▐ п╬я┤п╣я─п╣п╢п╦ я│п╦пЁп╫п╟п╩п╬п╡ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦
+       п╪п╣я┌п╬п╢п╟ rtsig п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.2.0.
 
-    *) Изменение: корректная обработка пар "\\", "\"", "\'" и "\$" в SSI.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╨п╬я─я─п╣п╨я┌п╫п╟я▐ п╬п╠я─п╟п╠п╬я┌п╨п╟ п©п╟я─ "\\", "\"", "\'" п╦ "\$" п╡ SSI.
 
 
-Изменения в nginx 0.3.0                                           07.10.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.3.0                                           07.10.2005
 
-    *) Изменение: убрано десятидневное ограничение времени работы рабочего 
-       процесса. Ограничение было введено из-за переполнения миллисекундных 
-       таймеров.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┐п╠я─п╟п╫п╬ п╢п╣я│я▐я┌п╦п╢п╫п╣п╡п╫п╬п╣ п╬пЁя─п╟п╫п╦я┤п╣п╫п╦п╣ п╡я─п╣п╪п╣п╫п╦ я─п╟п╠п╬я┌я▀ я─п╟п╠п╬я┤п╣пЁп╬
+       п©я─п╬я├п╣я│я│п╟. п·пЁя─п╟п╫п╦я┤п╣п╫п╦п╣ п╠я▀п╩п╬ п╡п╡п╣п╢п╣п╫п╬ п╦п╥-п╥п╟ п©п╣я─п╣п©п╬п╩п╫п╣п╫п╦я▐ п╪п╦п╩п╩п╦я│п╣п╨я┐п╫п╢п╫я▀я┘
+       я┌п╟п╧п╪п╣я─п╬п╡.
 
 
-Изменения в nginx 0.2.6                                           05.10.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.2.6                                           05.10.2005
 
-    *) Изменение: с 60 до 10 секунд уменьшено время повторного обращения к 
-       бэкенду при использовании распределения нагрузки.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я│ 60 п╢п╬ 10 я│п╣п╨я┐п╫п╢ я┐п╪п╣п╫я▄я┬п╣п╫п╬ п╡я─п╣п╪я▐ п©п╬п╡я┌п╬я─п╫п╬пЁп╬ п╬п╠я─п╟я┴п╣п╫п╦я▐ п╨
+       п╠я█п╨п╣п╫п╢я┐ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ я─п╟я│п©я─п╣п╢п╣п╩п╣п╫п╦я▐ п╫п╟пЁя─я┐п╥п╨п╦.
 
-    *) Изменение: директива proxy_pass_unparsed_uri упразднена, 
-       оригинальный запрос теперь передаётся, если в директиве proxy_pass 
-       отсутствует URI.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ proxy_pass_unparsed_uri я┐п©я─п╟п╥п╢п╫п╣п╫п╟, п╬я─п╦пЁп╦п╫п╟п╩я▄п╫я▀п╧
+       п╥п╟п©я─п╬я│ я┌п╣п©п╣я─я▄ п©п╣я─п╣п╢п╟я▒я┌я│я▐, п╣я│п╩п╦ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ proxy_pass п╬я┌я│я┐я┌я│я┌п╡я┐п╣я┌
+       URI.
 
-    *) Добавление: директива error_page поддерживает редиректы и позволяет 
-       более гибко менять код ошибки.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ error_page п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ я─п╣п╢п╦я─п╣п╨я┌я▀ п╦ п©п╬п╥п╡п╬п╩я▐п╣я┌
+       п╠п╬п╩п╣п╣ пЁп╦п╠п╨п╬ п╪п╣п╫я▐я┌я▄ п╨п╬п╢ п╬я┬п╦п╠п╨п╦.
 
-    *) Изменение: в проксированных подзапросах теперь игнорируется 
-       переданный charset.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╡ п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╫я▀я┘ п©п╬п╢п╥п╟п©я─п╬я│п╟я┘ я┌п╣п©п╣я─я▄ п╦пЁп╫п╬я─п╦я─я┐п╣я┌я│я▐
+       п©п╣я─п╣п╢п╟п╫п╫я▀п╧ charset.
 
-    *) Исправление: если после изменения URI в блоке if для запроса не 
-       находилась новая конфигурация, то правила модуля 
-       ngx_http_rewrite_module выполнялись снова.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п©п╬я│п╩п╣ п╦п╥п╪п╣п╫п╣п╫п╦я▐ URI п╡ п╠п╩п╬п╨п╣ if п╢п╩я▐ п╥п╟п©я─п╬я│п╟ п╫п╣
+       п╫п╟я┘п╬п╢п╦п╩п╟я│я▄ п╫п╬п╡п╟я▐ п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦я▐, я┌п╬ п©я─п╟п╡п╦п╩п╟ п╪п╬п╢я┐п╩я▐
+       ngx_http_rewrite_module п╡я▀п©п╬п╩п╫я▐п╩п╦я│я▄ я│п╫п╬п╡п╟.
 
-    *) Исправление: если директива set устанавливала переменную модуля 
-       ngx_http_geo_module в какой-либо части конфигурации, то эта 
-       переменная не была доступна в других частях конфигурации и 
-       выдавалась ошибка "using uninitialized variable"; ошибка появилась в 
-       0.2.2.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╢п╦я─п╣п╨я┌п╦п╡п╟ set я┐я│я┌п╟п╫п╟п╡п╩п╦п╡п╟п╩п╟ п©п╣я─п╣п╪п╣п╫п╫я┐я▌ п╪п╬п╢я┐п╩я▐
+       ngx_http_geo_module п╡ п╨п╟п╨п╬п╧-п╩п╦п╠п╬ я┤п╟я│я┌п╦ п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦, я┌п╬ я█я┌п╟
+       п©п╣я─п╣п╪п╣п╫п╫п╟я▐ п╫п╣ п╠я▀п╩п╟ п╢п╬я│я┌я┐п©п╫п╟ п╡ п╢я─я┐пЁп╦я┘ я┤п╟я│я┌я▐я┘ п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦ п╦ п╡я▀п╢п╟п╡п╟п╩п╟я│я▄
+       п╬я┬п╦п╠п╨п╟ "using uninitialized variable"; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.2.2.
 
 
-Изменения в nginx 0.2.5                                           04.10.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.2.5                                           04.10.2005
 
-    *) Изменение: дублирующее значение переменной модуля 
-       ngx_http_geo_module теперь выдаёт предупреждение и изменяет старое 
-       значение.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╢я┐п╠п╩п╦я─я┐я▌я┴п╣п╣ п╥п╫п╟я┤п╣п╫п╦п╣ п©п╣я─п╣п╪п╣п╫п╫п╬п╧ п╪п╬п╢я┐п╩я▐ ngx_http_geo_module
+       я┌п╣п©п╣я─я▄ п╡я▀п╢п╟я▒я┌ п©я─п╣п╢я┐п©я─п╣п╤п╢п╣п╫п╦п╣ п╦ п╦п╥п╪п╣п╫я▐п╣я┌ я│я┌п╟я─п╬п╣ п╥п╫п╟я┤п╣п╫п╦п╣.
 
-    *) Добавление: модуль ngx_http_ssi_module поддерживает команду set.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_ssi_module п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╨п╬п╪п╟п╫п╢я┐ set.
 
-    *) Добавление: модуль ngx_http_ssi_module поддерживает параметр file в 
-       команде include.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_ssi_module п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п©п╟я─п╟п╪п╣я┌я─ file п╡
+       п╨п╬п╪п╟п╫п╢п╣ include.
 
-    *) Добавление: модуль ngx_http_ssi_module поддерживает подстановку 
-       значений переменных в выражениях команды if.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_ssi_module п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п©п╬п╢я│я┌п╟п╫п╬п╡п╨я┐
+       п╥п╫п╟я┤п╣п╫п╦п╧ п©п╣я─п╣п╪п╣п╫п╫я▀я┘ п╡ п╡я▀я─п╟п╤п╣п╫п╦я▐я┘ п╨п╬п╪п╟п╫п╢я▀ if.
 
 
-Изменения в nginx 0.2.4                                           03.10.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.2.4                                           03.10.2005
 
-    *) Добавление: модуль ngx_http_ssi_module поддерживает выражения 
-       "$var=text", "$var!=text", "$var=/text/" и "$var!=/text/" в команде 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_ssi_module п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╡я▀я─п╟п╤п╣п╫п╦я▐
+       "$var=text", "$var!=text", "$var=/text/" п╦ "$var!=/text/" п╡ п╨п╬п╪п╟п╫п╢п╣
        if.
 
-    *) Исправление: ошибки при проксировании location без слэша в конце; 
-       ошибка появилась в 0.1.44.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ п©я─п╦ п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╦п╦ location п╠п╣п╥ я│п╩я█я┬п╟ п╡ п╨п╬п╫я├п╣;
+       п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.1.44.
 
-    *) Исправление: при использовании метода rtsig мог произойти 
-       segmentation fault; ошибка появилась в 0.2.0.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╪п╣я┌п╬п╢п╟ rtsig п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦
+       segmentation fault; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.2.0.
 
 
-Изменения в nginx 0.2.3                                           30.09.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.2.3                                           30.09.2005
 
-    *) Исправление: nginx не собирался без параметра --with-debug; ошибка 
-       появилась в 0.2.2.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╠п╣п╥ п©п╟я─п╟п╪п╣я┌я─п╟ --with-debug; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.2.2.
 
 
-Изменения в nginx 0.2.2                                           30.09.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.2.2                                           30.09.2005
 
-    *) Добавление: команда config errmsg в модуле ngx_http_ssi_module.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╨п╬п╪п╟п╫п╢п╟ config errmsg п╡ п╪п╬п╢я┐п╩п╣ ngx_http_ssi_module.
 
-    *) Изменение: переменные модуля ngx_http_geo_module можно 
-       переопределять директивой set.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫я▀п╣ п╪п╬п╢я┐п╩я▐ ngx_http_geo_module п╪п╬п╤п╫п╬ п©п╣я─п╣п╬п©я─п╣п╢п╣п╩я▐я┌я▄
+       п╢п╦я─п╣п╨я┌п╦п╡п╬п╧ set.
 
-    *) Добавление: директивы ssl_protocols и ssl_prefer_server_ciphers 
-       модулей ngx_http_ssl_module и ngx_imap_ssl_module.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ ssl_protocols п╦ ssl_prefer_server_ciphers
+       п╪п╬п╢я┐п╩п╣п╧ ngx_http_ssl_module п╦ ngx_imap_ssl_module.
 
-    *) Исправление: ошибка в модуле ngx_http_autoindex_module при показе 
-       длинных имён файлов;
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╟ п╡ п╪п╬п╢я┐п╩п╣ ngx_http_autoindex_module п©я─п╦ п©п╬п╨п╟п╥п╣
+       п╢п╩п╦п╫п╫я▀я┘ п╦п╪я▒п╫ я└п╟п╧п╩п╬п╡;
 
-    *) Исправление: модуль ngx_http_autoindex_module теперь не показывает 
-       файлы, начинающиеся на точку.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_autoindex_module я┌п╣п©п╣я─я▄ п╫п╣ п©п╬п╨п╟п╥я▀п╡п╟п╣я┌
+       я└п╟п╧п╩я▀, п╫п╟я┤п╦п╫п╟я▌я┴п╦п╣я│я▐ п╫п╟ я┌п╬я┤п╨я┐.
 
-    *) Исправление: если SSL handshake завершался с ошибкой, то это могло 
-       привести также к закрытию другого соединения.
-       Спасибо Rob Mueller.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ SSL handshake п╥п╟п╡п╣я─я┬п╟п╩я│я▐ я│ п╬я┬п╦п╠п╨п╬п╧, я┌п╬ я█я┌п╬ п╪п╬пЁп╩п╬
+       п©я─п╦п╡п╣я│я┌п╦ я┌п╟п╨п╤п╣ п╨ п╥п╟п╨я─я▀я┌п╦я▌ п╢я─я┐пЁп╬пЁп╬ я│п╬п╣п╢п╦п╫п╣п╫п╦я▐.
+       п║п©п╟я│п╦п╠п╬ Rob Mueller.
 
-    *) Исправление: экспортные версии MSIE 5.x не могли соединиться по 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я█п╨я│п©п╬я─я┌п╫я▀п╣ п╡п╣я─я│п╦п╦ MSIE 5.x п╫п╣ п╪п╬пЁп╩п╦ я│п╬п╣п╢п╦п╫п╦я┌я▄я│я▐ п©п╬
        HTTPS.
 
 
-Изменения в nginx 0.2.1                                           23.09.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.2.1                                           23.09.2005
 
-    *) Исправление: если все бэкенды, используемые для балансировки 
-       нагрузки, оказывались в нерабочем состоянии после одной ошибки, то 
-       nginx мог зациклится; ошибка появилась в 0.2.0.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡я│п╣ п╠я█п╨п╣п╫п╢я▀, п╦я│п©п╬п╩я▄п╥я┐п╣п╪я▀п╣ п╢п╩я▐ п╠п╟п╩п╟п╫я│п╦я─п╬п╡п╨п╦
+       п╫п╟пЁя─я┐п╥п╨п╦, п╬п╨п╟п╥я▀п╡п╟п╩п╦я│я▄ п╡ п╫п╣я─п╟п╠п╬я┤п╣п╪ я│п╬я│я┌п╬я▐п╫п╦п╦ п©п╬я│п╩п╣ п╬п╢п╫п╬п╧ п╬я┬п╦п╠п╨п╦, я┌п╬
+       nginx п╪п╬пЁ п╥п╟я├п╦п╨п╩п╦я┌я│я▐; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.2.0.
 
 
-Изменения в nginx 0.2.0                                           23.09.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.2.0                                           23.09.2005
 
-    *) Изменились имена pid-файлов, используемые во время обновления 
-       исполняемого файла. Ручное переименование теперь не нужно. Старый 
-       основной процесс добавляет к своему pid-файл суффикс ".oldbin" и 
-       запускает новый исполняемый файл. Новый основной процесс создаёт 
-       обычный pid-файл без суффикса ".newbin". Если новый основной процесс 
-       выходит, то старый процесс переименовывает свой pid-файл c суффиксом 
-       ".oldbin" в pid-файл без суффикса. При обновлении с версии 0.1.х до 
-       0.2.0 нужно учитывать, что оба процесса - старый 0.1.x и новый 
-       0.2.0 - используют pid-файл без суффиксов.
+    *) п≤п╥п╪п╣п╫п╦п╩п╦я│я▄ п╦п╪п╣п╫п╟ pid-я└п╟п╧п╩п╬п╡, п╦я│п©п╬п╩я▄п╥я┐п╣п╪я▀п╣ п╡п╬ п╡я─п╣п╪я▐ п╬п╠п╫п╬п╡п╩п╣п╫п╦я▐
+       п╦я│п©п╬п╩п╫я▐п╣п╪п╬пЁп╬ я└п╟п╧п╩п╟. п═я┐я┤п╫п╬п╣ п©п╣я─п╣п╦п╪п╣п╫п╬п╡п╟п╫п╦п╣ я┌п╣п©п╣я─я▄ п╫п╣ п╫я┐п╤п╫п╬. п║я┌п╟я─я▀п╧
+       п╬я│п╫п╬п╡п╫п╬п╧ п©я─п╬я├п╣я│я│ п╢п╬п╠п╟п╡п╩я▐п╣я┌ п╨ я│п╡п╬п╣п╪я┐ pid-я└п╟п╧п╩ я│я┐я└я└п╦п╨я│ ".oldbin" п╦
+       п╥п╟п©я┐я│п╨п╟п╣я┌ п╫п╬п╡я▀п╧ п╦я│п©п╬п╩п╫я▐п╣п╪я▀п╧ я└п╟п╧п╩. п²п╬п╡я▀п╧ п╬я│п╫п╬п╡п╫п╬п╧ п©я─п╬я├п╣я│я│ я│п╬п╥п╢п╟я▒я┌
+       п╬п╠я▀я┤п╫я▀п╧ pid-я└п╟п╧п╩ п╠п╣п╥ я│я┐я└я└п╦п╨я│п╟ ".newbin". п∙я│п╩п╦ п╫п╬п╡я▀п╧ п╬я│п╫п╬п╡п╫п╬п╧ п©я─п╬я├п╣я│я│
+       п╡я▀я┘п╬п╢п╦я┌, я┌п╬ я│я┌п╟я─я▀п╧ п©я─п╬я├п╣я│я│ п©п╣я─п╣п╦п╪п╣п╫п╬п╡я▀п╡п╟п╣я┌ я│п╡п╬п╧ pid-я└п╟п╧п╩ c я│я┐я└я└п╦п╨я│п╬п╪
+       ".oldbin" п╡ pid-я└п╟п╧п╩ п╠п╣п╥ я│я┐я└я└п╦п╨я│п╟. п÷я─п╦ п╬п╠п╫п╬п╡п╩п╣п╫п╦п╦ я│ п╡п╣я─я│п╦п╦ 0.1.я┘ п╢п╬
+       0.2.0 п╫я┐п╤п╫п╬ я┐я┤п╦я┌я▀п╡п╟я┌я▄, я┤я┌п╬ п╬п╠п╟ п©я─п╬я├п╣я│я│п╟ - я│я┌п╟я─я▀п╧ 0.1.x п╦ п╫п╬п╡я▀п╧
+       0.2.0 - п╦я│п©п╬п╩я▄п╥я┐я▌я┌ pid-я└п╟п╧п╩ п╠п╣п╥ я│я┐я└я└п╦п╨я│п╬п╡.
 
-    *) Изменение: директива worker_connections, новое название директивы 
-       connections; директива теперь задаёт максимальное число соединений, 
-       а не максимально возможный номер дескриптора для сокета.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ worker_connections, п╫п╬п╡п╬п╣ п╫п╟п╥п╡п╟п╫п╦п╣ п╢п╦я─п╣п╨я┌п╦п╡я▀
+       connections; п╢п╦я─п╣п╨я┌п╦п╡п╟ я┌п╣п©п╣я─я▄ п╥п╟п╢п╟я▒я┌ п╪п╟п╨я│п╦п╪п╟п╩я▄п╫п╬п╣ я┤п╦я│п╩п╬ я│п╬п╣п╢п╦п╫п╣п╫п╦п╧, п╟
+       п╫п╣ п╪п╟п╨я│п╦п╪п╟п╩я▄п╫п╬ п╡п╬п╥п╪п╬п╤п╫я▀п╧ п╫п╬п╪п╣я─ п╢п╣я│п╨я─п╦п©я┌п╬я─п╟ п╢п╩я▐ я│п╬п╨п╣я┌п╟.
 
-    *) Добавление: SSL поддерживает кэширование сессий в пределах одного 
-       рабочего процесса.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: SSL п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╨я█я┬п╦я─п╬п╡п╟п╫п╦п╣ я│п╣я│я│п╦п╧ п╡ п©я─п╣п╢п╣п╩п╟я┘ п╬п╢п╫п╬пЁп╬
+       я─п╟п╠п╬я┤п╣пЁп╬ п©я─п╬я├п╣я│я│п╟.
 
-    *) Добавление: директива satisfy_any.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ satisfy_any.
 
-    *) Изменение: модули ngx_http_access_module и 
-       ngx_http_auth_basic_module не работают для подзапросов.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╪п╬п╢я┐п╩п╦ ngx_http_access_module п╦ ngx_http_auth_basic_module
+       п╫п╣ я─п╟п╠п╬я┌п╟я▌я┌ п╢п╩я▐ п©п╬п╢п╥п╟п©я─п╬я│п╬п╡.
 
-    *) Добавление: директивы worker_rlimit_nofile и 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ worker_rlimit_nofile п╦
        worker_rlimit_sigpending.
 
-    *) Исправление: если все бэкенды, используемые для балансировки 
-       нагрузки, оказывались в нерабочем состоянии после одной ошибки, то 
-       nginx не обращался к ним в течение 60 секунд.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡я│п╣ п╠я█п╨п╣п╫п╢я▀, п╦я│п©п╬п╩я▄п╥я┐п╣п╪я▀п╣ п╢п╩я▐ п╠п╟п╩п╟п╫я│п╦я─п╬п╡п╨п╦
+       п╫п╟пЁя─я┐п╥п╨п╦, п╬п╨п╟п╥я▀п╡п╟п╩п╦я│я▄ п╡ п╫п╣я─п╟п╠п╬я┤п╣п╪ я│п╬я│я┌п╬я▐п╫п╦п╦ п©п╬я│п╩п╣ п╬п╢п╫п╬п╧ п╬я┬п╦п╠п╨п╦, я┌п╬
+       nginx п╫п╣ п╬п╠я─п╟я┴п╟п╩я│я▐ п╨ п╫п╦п╪ п╡ я┌п╣я┤п╣п╫п╦п╣ 60 я│п╣п╨я┐п╫п╢.
 
-    *) Исправление: в парсинге аргументов IMAP/POP3 команд.
-       Спасибо Rob Mueller.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п©п╟я─я│п╦п╫пЁп╣ п╟я─пЁя┐п╪п╣п╫я┌п╬п╡ IMAP/POP3 п╨п╬п╪п╟п╫п╢.
+       п║п©п╟я│п╦п╠п╬ Rob Mueller.
 
-    *) Исправление: ошибки при использовании SSL в IMAP/POP3 прокси.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ SSL п╡ IMAP/POP3 п©я─п╬п╨я│п╦.
 
-    *) Исправление: ошибки при использовании SSI и сжатия.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ SSI п╦ я│п╤п╟я┌п╦я▐.
 
-    *) Исправление: в ответах 304 не добавлялись строки заголовка ответа 
-       "Expires" и "Cache-Control".
-       Спасибо Александру Кукушкину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╬я┌п╡п╣я┌п╟я┘ 304 п╫п╣ п╢п╬п╠п╟п╡п╩я▐п╩п╦я│я▄ я│я┌я─п╬п╨п╦ п╥п╟пЁп╬п╩п╬п╡п╨п╟ п╬я┌п╡п╣я┌п╟
+       "Expires" п╦ "Cache-Control".
+       п║п©п╟я│п╦п╠п╬ п░п╩п╣п╨я│п╟п╫п╢я─я┐ п я┐п╨я┐я┬п╨п╦п╫я┐.
 
 
-Изменения в nginx 0.1.45                                          08.09.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.45                                          08.09.2005
 
-    *) Изменение: директива ssl_engine упразднена в модуле 
-       ngx_http_ssl_module и перенесена на глобальный уровень.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ ssl_engine я┐п©я─п╟п╥п╢п╫п╣п╫п╟ п╡ п╪п╬п╢я┐п╩п╣
+       ngx_http_ssl_module п╦ п©п╣я─п╣п╫п╣я│п╣п╫п╟ п╫п╟ пЁп╩п╬п╠п╟п╩я▄п╫я▀п╧ я┐я─п╬п╡п╣п╫я▄.
 
-    *) Исправление: ответы с подзапросами, включённые с помощью SSI, не 
-       передавались через SSL соединение.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┌п╡п╣я┌я▀ я│ п©п╬п╢п╥п╟п©я─п╬я│п╟п╪п╦, п╡п╨п╩я▌я┤я▒п╫п╫я▀п╣ я│ п©п╬п╪п╬я┴я▄я▌ SSI, п╫п╣
+       п©п╣я─п╣п╢п╟п╡п╟п╩п╦я│я▄ я┤п╣я─п╣п╥ SSL я│п╬п╣п╢п╦п╫п╣п╫п╦п╣.
 
-    *) Разные исправления в IMAP/POP3 прокси.
+    *) п═п╟п╥п╫я▀п╣ п╦я│п©я─п╟п╡п╩п╣п╫п╦я▐ п╡ IMAP/POP3 п©я─п╬п╨я│п╦.
 
 
-Изменения в nginx 0.1.44                                          06.09.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.44                                          06.09.2005
 
-    *) Добавление: IMAP/POP3 прокси поддерживает SSL.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: IMAP/POP3 п©я─п╬п╨я│п╦ п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ SSL.
 
-    *) Добавление: директива proxy_timeout модуля ngx_imap_proxy_module.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ proxy_timeout п╪п╬п╢я┐п╩я▐ ngx_imap_proxy_module.
 
-    *) Добавление: директива userid_mark.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ userid_mark.
 
-    *) Добавление: значение переменной $remote_user определяется независимо 
-       от того, используется ли авторизация или нет.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╥п╫п╟я┤п╣п╫п╦п╣ п©п╣я─п╣п╪п╣п╫п╫п╬п╧ $remote_user п╬п©я─п╣п╢п╣п╩я▐п╣я┌я│я▐ п╫п╣п╥п╟п╡п╦я│п╦п╪п╬
+       п╬я┌ я┌п╬пЁп╬, п╦я│п©п╬п╩я▄п╥я┐п╣я┌я│я▐ п╩п╦ п╟п╡я┌п╬я─п╦п╥п╟я├п╦я▐ п╦п╩п╦ п╫п╣я┌.
 
 
-Изменения в nginx 0.1.43                                          30.08.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.43                                          30.08.2005
 
-    *) Добавление: listen(2) backlog в директиве listen можно менять по 
-       сигналу -HUP.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: listen(2) backlog п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ listen п╪п╬п╤п╫п╬ п╪п╣п╫я▐я┌я▄ п©п╬
+       я│п╦пЁп╫п╟п╩я┐ -HUP.
 
-    *) Добавление: скрипт geo2nginx.pl добавлен в contrib.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я│п╨я─п╦п©я┌ geo2nginx.pl п╢п╬п╠п╟п╡п╩п╣п╫ п╡ contrib.
 
-    *) Изменение: параметры FastCGI с пустым значениями теперь передаются 
-       серверу.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─я▀ FastCGI я│ п©я┐я│я┌я▀п╪ п╥п╫п╟я┤п╣п╫п╦я▐п╪п╦ я┌п╣п©п╣я─я▄ п©п╣я─п╣п╢п╟я▌я┌я│я▐
+       я│п╣я─п╡п╣я─я┐.
 
-    *) Исправление: если в ответе проксированного сервера или FastCGI 
-       сервера была строка "Cache-Control", то при использовании директивы 
-       expires происходил segmentation fault или рабочий процесс мог 
-       зациклится; в режиме прокси ошибка появилась в 0.1.29.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡ п╬я┌п╡п╣я┌п╣ п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╫п╬пЁп╬ я│п╣я─п╡п╣я─п╟ п╦п╩п╦ FastCGI
+       я│п╣я─п╡п╣я─п╟ п╠я▀п╩п╟ я│я┌я─п╬п╨п╟ "Cache-Control", я┌п╬ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀
+       expires п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault п╦п╩п╦ я─п╟п╠п╬я┤п╦п╧ п©я─п╬я├п╣я│я│ п╪п╬пЁ
+       п╥п╟я├п╦п╨п╩п╦я┌я│я▐; п╡ я─п╣п╤п╦п╪п╣ п©я─п╬п╨я│п╦ п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.1.29.
 
 
-Изменения в nginx 0.1.42                                          23.08.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.42                                          23.08.2005
 
-    *) Исправление: если URI запроса получался нулевой длины после 
-       обработки модулем ngx_http_rewrite_module, то в модуле 
-       ngx_http_proxy_module происходил segmentation fault или bus error.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ URI п╥п╟п©я─п╬я│п╟ п©п╬п╩я┐я┤п╟п╩я│я▐ п╫я┐п╩п╣п╡п╬п╧ п╢п╩п╦п╫я▀ п©п╬я│п╩п╣ п╬п╠я─п╟п╠п╬я┌п╨п╦
+       п╪п╬п╢я┐п╩п╣п╪ ngx_http_rewrite_module, я┌п╬ п╡ п╪п╬п╢я┐п╩п╣ ngx_http_proxy_module
+       п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault п╦п╩п╦ bus error.
 
-    *) Исправление: директива limit_rate не работала внутри блока if; 
-       ошибка появилась в 0.1.38.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ limit_rate п╫п╣ я─п╟п╠п╬я┌п╟п╩п╟ п╡п╫я┐я┌я─п╦ п╠п╩п╬п╨п╟ if; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.1.38.
 
 
-Изменения в nginx 0.1.41                                          25.07.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.41                                          25.07.2005
 
-    *) Исправление: если переменная использовалась в файле конфигурации, то 
-       она не могла использоваться в SSI.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п©п╣я─п╣п╪п╣п╫п╫п╟я▐ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╟я│я▄ п╡ я└п╟п╧п╩п╣ п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦, я┌п╬
+       п╬п╫п╟ п╫п╣ п╪п╬пЁп╩п╟ п╦я│п©п╬п╩я▄п╥п╬п╡п╟я┌я▄я│я▐ п╡ SSI.
 
 
-Изменения в nginx 0.1.40                                          22.07.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.40                                          22.07.2005
 
-    *) Исправление: если клиент слал очень длинную строку заголовка, то в 
-       логе не помещалась информация, связанная с этим запросом.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╨п╩п╦п╣п╫я┌ я│п╩п╟п╩ п╬я┤п╣п╫я▄ п╢п╩п╦п╫п╫я┐я▌ я│я┌я─п╬п╨я┐ п╥п╟пЁп╬п╩п╬п╡п╨п╟, я┌п╬ п╡
+       п╩п╬пЁп╣ п╫п╣ п©п╬п╪п╣я┴п╟п╩п╟я│я▄ п╦п╫я└п╬я─п╪п╟я├п╦я▐, я│п╡я▐п╥п╟п╫п╫п╟я▐ я│ я█я┌п╦п╪ п╥п╟п©я─п╬я│п╬п╪.
 
-    *) Исправление: при использовании "X-Accel-Redirect" не передавалась 
-       строка "Set-Cookie"; ошибка появилась в 0.1.39.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ "X-Accel-Redirect" п╫п╣ п©п╣я─п╣п╢п╟п╡п╟п╩п╟я│я▄
+       я│я┌я─п╬п╨п╟ "Set-Cookie"; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.1.39.
 
-    *) Исправление: при использовании "X-Accel-Redirect" не передавалась 
-       строка "Content-Disposition".
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ "X-Accel-Redirect" п╫п╣ п©п╣я─п╣п╢п╟п╡п╟п╩п╟я│я▄
+       я│я┌я─п╬п╨п╟ "Content-Disposition".
 
-    *) Исправление: по сигналу SIGQUIT основной процесс не закрывал сокеты, 
-       на которых он слушал.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╬ я│п╦пЁп╫п╟п╩я┐ SIGQUIT п╬я│п╫п╬п╡п╫п╬п╧ п©я─п╬я├п╣я│я│ п╫п╣ п╥п╟п╨я─я▀п╡п╟п╩ я│п╬п╨п╣я┌я▀,
+       п╫п╟ п╨п╬я┌п╬я─я▀я┘ п╬п╫ я│п╩я┐я┬п╟п╩.
 
-    *) Исправление: после обновления исполняемого файла на лету на Linux и 
-       Solaris название процесса в команде ps становилось короче.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╬я│п╩п╣ п╬п╠п╫п╬п╡п╩п╣п╫п╦я▐ п╦я│п©п╬п╩п╫я▐п╣п╪п╬пЁп╬ я└п╟п╧п╩п╟ п╫п╟ п╩п╣я┌я┐ п╫п╟ Linux п╦
+       Solaris п╫п╟п╥п╡п╟п╫п╦п╣ п©я─п╬я├п╣я│я│п╟ п╡ п╨п╬п╪п╟п╫п╢п╣ ps я│я┌п╟п╫п╬п╡п╦п╩п╬я│я▄ п╨п╬я─п╬я┤п╣.
 
 
-Изменения в nginx 0.1.39                                          14.07.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.39                                          14.07.2005
 
-    *) Изменения в модуле ngx_http_charset_module: директива 
-       default_charset упразднена; директива charset задаёт кодировку 
-       ответа; директива source_charset задаёт только исходную кодировку.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ п╪п╬п╢я┐п╩п╣ ngx_http_charset_module: п╢п╦я─п╣п╨я┌п╦п╡п╟ default_charset
+       я┐п©я─п╟п╥п╢п╫п╣п╫п╟; п╢п╦я─п╣п╨я┌п╦п╡п╟ charset п╥п╟п╢п╟я▒я┌ п╨п╬п╢п╦я─п╬п╡п╨я┐ п╬я┌п╡п╣я┌п╟; п╢п╦я─п╣п╨я┌п╦п╡п╟
+       source_charset п╥п╟п╢п╟я▒я┌ я┌п╬п╩я▄п╨п╬ п╦я│я┘п╬п╢п╫я┐я▌ п╨п╬п╢п╦я─п╬п╡п╨я┐.
 
-    *) Исправление: при перенаправлении ошибки 401, полученной от бэкенда, 
-       не передавалась строка заголовка "WWW-Authenticate".
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п©п╣я─п╣п╫п╟п©я─п╟п╡п╩п╣п╫п╦п╦ п╬я┬п╦п╠п╨п╦ 401, п©п╬п╩я┐я┤п╣п╫п╫п╬п╧ п╬я┌ п╠я█п╨п╣п╫п╢п╟,
+       п╫п╣ п©п╣я─п╣п╢п╟п╡п╟п╩п╟я│я▄ я│я┌я─п╬п╨п╟ п╥п╟пЁп╬п╩п╬п╡п╨п╟ "WWW-Authenticate".
 
-    *) Исправление: модули ngx_http_proxy_module и ngx_http_fastcgi_module 
-       могли закрыть соединение до того, как что-нибудь было передано 
-       клиенту; ошибка появилась в 0.1.38.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩п╦ ngx_http_proxy_module п╦ ngx_http_fastcgi_module
+       п╪п╬пЁп╩п╦ п╥п╟п╨я─я▀я┌я▄ я│п╬п╣п╢п╦п╫п╣п╫п╦п╣ п╢п╬ я┌п╬пЁп╬, п╨п╟п╨ я┤я┌п╬-п╫п╦п╠я┐п╢я▄ п╠я▀п╩п╬ п©п╣я─п╣п╢п╟п╫п╬
+       п╨п╩п╦п╣п╫я┌я┐; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.1.38.
 
-    *) Изменение: обработка ошибки инициализации в crypt_r() в Linux glibc.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╬п╠я─п╟п╠п╬я┌п╨п╟ п╬я┬п╦п╠п╨п╦ п╦п╫п╦я├п╦п╟п╩п╦п╥п╟я├п╦п╦ п╡ crypt_r() п╡ Linux glibc.
 
-    *) Исправление: модуль ngx_http_ssi_module не поддерживал относительные 
-       URI в команде include virtual.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_ssi_module п╫п╣ п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╩ п╬я┌п╫п╬я│п╦я┌п╣п╩я▄п╫я▀п╣
+       URI п╡ п╨п╬п╪п╟п╫п╢п╣ include virtual.
 
-    *) Исправление: если в строке заголовка ответа бэкенда была строка 
-       "Location", которую nginx не должен был изменять, то в ответе 
-       передавалось тело 500 ошибки; ошибка появилась в 0.1.29.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡ я│я┌я─п╬п╨п╣ п╥п╟пЁп╬п╩п╬п╡п╨п╟ п╬я┌п╡п╣я┌п╟ п╠я█п╨п╣п╫п╢п╟ п╠я▀п╩п╟ я│я┌я─п╬п╨п╟
+       "Location", п╨п╬я┌п╬я─я┐я▌ nginx п╫п╣ п╢п╬п╩п╤п╣п╫ п╠я▀п╩ п╦п╥п╪п╣п╫я▐я┌я▄, я┌п╬ п╡ п╬я┌п╡п╣я┌п╣
+       п©п╣я─п╣п╢п╟п╡п╟п╩п╬я│я▄ я┌п╣п╩п╬ 500 п╬я┬п╦п╠п╨п╦; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.1.29.
 
-    *) Исправление: некоторые директивы модулей ngx_http_proxy_module и 
-       ngx_http_fastcgi_module не наследовались с уровня server на уровень 
-       location; ошибка появилась в 0.1.29.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╫п╣п╨п╬я┌п╬я─я▀п╣ п╢п╦я─п╣п╨я┌п╦п╡я▀ п╪п╬п╢я┐п╩п╣п╧ ngx_http_proxy_module п╦
+       ngx_http_fastcgi_module п╫п╣ п╫п╟я│п╩п╣п╢п╬п╡п╟п╩п╦я│я▄ я│ я┐я─п╬п╡п╫я▐ server п╫п╟ я┐я─п╬п╡п╣п╫я▄
+       location; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.1.29.
 
-    *) Исправление: модуль ngx_http_ssl_module не поддерживал цепочки 
-       сертификатов.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_ssl_module п╫п╣ п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╩ я├п╣п©п╬я┤п╨п╦
+       я│п╣я─я┌п╦я└п╦п╨п╟я┌п╬п╡.
 
-    *) Исправление: ошибка в модуле ngx_http_autoindex_module при показе 
-       длинных имён файлов; ошибка появилась в 0.1.38.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╟ п╡ п╪п╬п╢я┐п╩п╣ ngx_http_autoindex_module п©я─п╦ п©п╬п╨п╟п╥п╣
+       п╢п╩п╦п╫п╫я▀я┘ п╦п╪я▒п╫ я└п╟п╧п╩п╬п╡; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.1.38.
 
-    *) Исправления в IMAP/POP3 прокси при взаимодействии с бэкендом на 
-       стадии login.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦я▐ п╡ IMAP/POP3 п©я─п╬п╨я│п╦ п©я─п╦ п╡п╥п╟п╦п╪п╬п╢п╣п╧я│я┌п╡п╦п╦ я│ п╠я█п╨п╣п╫п╢п╬п╪ п╫п╟
+       я│я┌п╟п╢п╦п╦ login.
 
 
-Изменения в nginx 0.1.38                                          08.07.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.38                                          08.07.2005
 
-    *) Добавление: директива limit_rate поддерживается в режиме прокси и 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ limit_rate п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌я│я▐ п╡ я─п╣п╤п╦п╪п╣ п©я─п╬п╨я│п╦ п╦
        FastCGI.
 
-    *) Добавление: в режиме прокси и FastCGI поддерживается строка 
-       заголовка "X-Accel-Limit-Rate" в ответе бэкенда.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╡ я─п╣п╤п╦п╪п╣ п©я─п╬п╨я│п╦ п╦ FastCGI п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌я│я▐ я│я┌я─п╬п╨п╟ п╥п╟пЁп╬п╩п╬п╡п╨п╟
+       "X-Accel-Limit-Rate" п╡ п╬я┌п╡п╣я┌п╣ п╠я█п╨п╣п╫п╢п╟.
 
-    *) Добавление: директива break.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ break.
 
-    *) Добавление: директива log_not_found.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ log_not_found.
 
-    *) Исправление: при перенаправлении запроса с помощью строки заголовка 
-       "X-Accel-Redirect" не изменялся код ответа.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п©п╣я─п╣п╫п╟п©я─п╟п╡п╩п╣п╫п╦п╦ п╥п╟п©я─п╬я│п╟ я│ п©п╬п╪п╬я┴я▄я▌ я│я┌я─п╬п╨п╦ п╥п╟пЁп╬п╩п╬п╡п╨п╟
+       "X-Accel-Redirect" п╫п╣ п╦п╥п╪п╣п╫я▐п╩я│я▐ п╨п╬п╢ п╬я┌п╡п╣я┌п╟.
 
-    *) Исправление: переменные, установленные директивой set не могли 
-       использоваться в SSI.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫я▀п╣, я┐я│я┌п╟п╫п╬п╡п╩п╣п╫п╫я▀п╣ п╢п╦я─п╣п╨я┌п╦п╡п╬п╧ set п╫п╣ п╪п╬пЁп╩п╦
+       п╦я│п©п╬п╩я▄п╥п╬п╡п╟я┌я▄я│я▐ п╡ SSI.
 
-    *) Исправление: при включении в SSI более одного удалённого подзапроса 
-       мог произойти segmentation fault.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╡п╨п╩я▌я┤п╣п╫п╦п╦ п╡ SSI п╠п╬п╩п╣п╣ п╬п╢п╫п╬пЁп╬ я┐п╢п╟п╩я▒п╫п╫п╬пЁп╬ п©п╬п╢п╥п╟п©я─п╬я│п╟
+       п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault.
 
-    *) Исправление: если статусная строка в ответе бэкенда передавалась в 
-       двух пакетах, то nginx считал ответ неверным; ошибка появилась в 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ я│я┌п╟я┌я┐я│п╫п╟я▐ я│я┌я─п╬п╨п╟ п╡ п╬я┌п╡п╣я┌п╣ п╠я█п╨п╣п╫п╢п╟ п©п╣я─п╣п╢п╟п╡п╟п╩п╟я│я▄ п╡
+       п╢п╡я┐я┘ п©п╟п╨п╣я┌п╟я┘, я┌п╬ nginx я│я┤п╦я┌п╟п╩ п╬я┌п╡п╣я┌ п╫п╣п╡п╣я─п╫я▀п╪; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
        0.1.29.
 
-    *) Добавление: директива ssi_types.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ ssi_types.
 
-    *) Добавление: директива autoindex_exact_size.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ autoindex_exact_size.
 
-    *) Исправление: модуль ngx_http_autoindex_module не поддерживал длинные 
-       имена файлов в UTF-8.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_autoindex_module п╫п╣ п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╩ п╢п╩п╦п╫п╫я▀п╣
+       п╦п╪п╣п╫п╟ я└п╟п╧п╩п╬п╡ п╡ UTF-8.
 
-    *) Добавление: IMAP/POP3 прокси.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: IMAP/POP3 п©я─п╬п╨я│п╦.
 
 
-Изменения в nginx 0.1.37                                          23.06.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.37                                          23.06.2005
 
-    *) Изменение: в конце файла nginx.pid теперь добавляется "\n".
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╡ п╨п╬п╫я├п╣ я└п╟п╧п╩п╟ nginx.pid я┌п╣п©п╣я─я▄ п╢п╬п╠п╟п╡п╩я▐п╣я┌я│я▐ "\n".
 
-    *) Исправление: при включении большого количества вставок или 
-       нескольких больших вставок с помощью SSI ответ мог передаваться не 
-       полностью.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╡п╨п╩я▌я┤п╣п╫п╦п╦ п╠п╬п╩я▄я┬п╬пЁп╬ п╨п╬п╩п╦я┤п╣я│я┌п╡п╟ п╡я│я┌п╟п╡п╬п╨ п╦п╩п╦ п╫п╣я│п╨п╬п╩я▄п╨п╦я┘
+       п╠п╬п╩я▄я┬п╦я┘ п╡я│я┌п╟п╡п╬п╨ я│ п©п╬п╪п╬я┴я▄я▌ SSI п╬я┌п╡п╣я┌ п╪п╬пЁ п©п╣я─п╣п╢п╟п╡п╟я┌я▄я│я▐ п╫п╣ п©п╬п╩п╫п╬я│я┌я▄я▌.
 
-    *) Исправление: если все бэкенды возвращали ответ 404, то при 
-       использовании параметра http_404 в директивах proxy_next_upstream 
-       или fastcgi_next_upstream, nginx начинал запрашивать все бэкенды 
-       снова.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡я│п╣ п╠я█п╨п╣п╫п╢я▀ п╡п╬п╥п╡я─п╟я┴п╟п╩п╦ п╬я┌п╡п╣я┌ 404, я┌п╬ п©я─п╦
+       п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п©п╟я─п╟п╪п╣я┌я─п╟ http_404 п╡ п╢п╦я─п╣п╨я┌п╦п╡п╟я┘ proxy_next_upstream п╦п╩п╦
+       fastcgi_next_upstream, nginx п╫п╟я┤п╦п╫п╟п╩ п╥п╟п©я─п╟я┬п╦п╡п╟я┌я▄ п╡я│п╣ п╠я█п╨п╣п╫п╢я▀ я│п╫п╬п╡п╟.
 
 
-Изменения в nginx 0.1.36                                          15.06.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.36                                          15.06.2005
 
-    *) Изменение: если в заголовке запросе есть дублирующиеся строки 
-       "Host", "Connection", "Content-Length" и "Authorization", то nginx 
-       теперь выдаёт ошибку 400.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╣я│п╩п╦ п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣ п╥п╟п©я─п╬я│п╣ п╣я│я┌я▄ п╢я┐п╠п╩п╦я─я┐я▌я┴п╦п╣я│я▐ я│я┌я─п╬п╨п╦ "Host",
+       "Connection", "Content-Length" п╦ "Authorization", я┌п╬ nginx я┌п╣п©п╣я─я▄
+       п╡я▀п╢п╟я▒я┌ п╬я┬п╦п╠п╨я┐ 400.
 
-    *) Изменение: директива post_accept_timeout упразднена.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ post_accept_timeout я┐п©я─п╟п╥п╢п╫п╣п╫п╟.
 
-    *) Добавление: параметры default, af=, bl=, deferred и bind в директиве 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─я▀ default, af=, bl=, deferred п╦ bind п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣
        listen.
 
-    *) Добавление: поддержка accept фильтров во FreeBSD.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╬п╢п╢п╣я─п╤п╨п╟ accept я└п╦п╩я▄я┌я─п╬п╡ п╡п╬ FreeBSD.
 
-    *) Добавление: поддержка TCP_DEFER_ACCEPT в Linux.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╬п╢п╢п╣я─п╤п╨п╟ TCP_DEFER_ACCEPT п╡ Linux.
 
-    *) Исправление: модуль ngx_http_autoindex_module не поддерживал имена 
-       файлов в UTF-8.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_autoindex_module п╫п╣ п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╩ п╦п╪п╣п╫п╟
+       я└п╟п╧п╩п╬п╡ п╡ UTF-8.
 
-    *) Исправление: после добавления новый лог-файл ротация этого лога по 
-       сигналу -USR1 выполнялась, только если переконфигурировать nginx два 
-       раза по сигналу -HUP.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╬я│п╩п╣ п╢п╬п╠п╟п╡п╩п╣п╫п╦я▐ п╫п╬п╡я▀п╧ п╩п╬пЁ-я└п╟п╧п╩ я─п╬я┌п╟я├п╦я▐ я█я┌п╬пЁп╬ п╩п╬пЁп╟ п©п╬
+       я│п╦пЁп╫п╟п╩я┐ -USR1 п╡я▀п©п╬п╩п╫я▐п╩п╟я│я▄, я┌п╬п╩я▄п╨п╬ п╣я│п╩п╦ п©п╣я─п╣п╨п╬п╫я└п╦пЁя┐я─п╦я─п╬п╡п╟я┌я▄ nginx п╢п╡п╟
+       я─п╟п╥п╟ п©п╬ я│п╦пЁп╫п╟п╩я┐ -HUP.
 
 
-Изменения в nginx 0.1.35                                          07.06.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.35                                          07.06.2005
 
-    *) Добавление: директива working_directory.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ working_directory.
 
-    *) Добавление: директива port_in_redirect.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ port_in_redirect.
 
-    *) Исправление: если заголовок ответа бэкенда не помещался в один 
-       пакет, то происходил segmentation fault; ошибка появилась в 0.1.29.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╥п╟пЁп╬п╩п╬п╡п╬п╨ п╬я┌п╡п╣я┌п╟ п╠я█п╨п╣п╫п╢п╟ п╫п╣ п©п╬п╪п╣я┴п╟п╩я│я▐ п╡ п╬п╢п╦п╫ п©п╟п╨п╣я┌,
+       я┌п╬ п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.1.29.
 
-    *) Исправление: если было сконфигурировано более 10 серверов или в 
-       сервере не описана директива "listen", то при запуске мог произойти 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╠я▀п╩п╬ я│п╨п╬п╫я└п╦пЁя┐я─п╦я─п╬п╡п╟п╫п╬ п╠п╬п╩п╣п╣ 10 я│п╣я─п╡п╣я─п╬п╡ п╦п╩п╦ п╡
+       я│п╣я─п╡п╣я─п╣ п╫п╣ п╬п©п╦я│п╟п╫п╟ п╢п╦я─п╣п╨я┌п╦п╡п╟ "listen", я┌п╬ п©я─п╦ п╥п╟п©я┐я│п╨п╣ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦
        segmentation fault.
 
-    *) Исправление: если ответ не помещался во временный файл, то мог 
-       произойти segmentation fault.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╬я┌п╡п╣я┌ п╫п╣ п©п╬п╪п╣я┴п╟п╩я│я▐ п╡п╬ п╡я─п╣п╪п╣п╫п╫я▀п╧ я└п╟п╧п╩, я┌п╬ п╪п╬пЁ
+       п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault.
 
-    *) Исправление: nginx возвращал ошибку 400 на запросы вида 
-       "GET http://www.domain.com/uri HTTP/1.0"; ошибка появилась в 0.1.28.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╡п╬п╥п╡я─п╟я┴п╟п╩ п╬я┬п╦п╠п╨я┐ 400 п╫п╟ п╥п╟п©я─п╬я│я▀ п╡п╦п╢п╟
+       "GET http://www.domain.com/uri HTTP/1.0"; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.1.28.
 
 
-Изменения в nginx 0.1.34                                          26.05.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.34                                          26.05.2005
 
-    *) Исправление: при включении больших ответов с помощью SSI рабочий 
-       процесс мог зациклиться.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╡п╨п╩я▌я┤п╣п╫п╦п╦ п╠п╬п╩я▄я┬п╦я┘ п╬я┌п╡п╣я┌п╬п╡ я│ п©п╬п╪п╬я┴я▄я▌ SSI я─п╟п╠п╬я┤п╦п╧
+       п©я─п╬я├п╣я│я│ п╪п╬пЁ п╥п╟я├п╦п╨п╩п╦я┌я▄я│я▐.
 
-    *) Исправление: переменные, устанавливаемые директивой "set", не были 
-       доступны в SSI.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫я▀п╣, я┐я│я┌п╟п╫п╟п╡п╩п╦п╡п╟п╣п╪я▀п╣ п╢п╦я─п╣п╨я┌п╦п╡п╬п╧ "set", п╫п╣ п╠я▀п╩п╦
+       п╢п╬я│я┌я┐п©п╫я▀ п╡ SSI.
 
-    *) Добавление: директива autoindex_localtime.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ autoindex_localtime.
 
-    *) Исправление: пустое значение в директиве proxy_set_header запрещает 
-       передачу заголовка.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я┐я│я┌п╬п╣ п╥п╫п╟я┤п╣п╫п╦п╣ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ proxy_set_header п╥п╟п©я─п╣я┴п╟п╣я┌
+       п©п╣я─п╣п╢п╟я┤я┐ п╥п╟пЁп╬п╩п╬п╡п╨п╟.
 
 
-Изменения в nginx 0.1.33                                          23.05.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.33                                          23.05.2005
 
-    *) Исправление: nginx не собирался с параметром --without-pcre; ошибка 
-       появилась в 0.1.29.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ я│ п©п╟я─п╟п╪п╣я┌я─п╬п╪ --without-pcre; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.1.29.
 
-    *) Исправление: 3, 5, 7 и 8 директив proxy_set_header на одном уровне 
-       вызывали bus fault при запуске.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: 3, 5, 7 п╦ 8 п╢п╦я─п╣п╨я┌п╦п╡ proxy_set_header п╫п╟ п╬п╢п╫п╬п╪ я┐я─п╬п╡п╫п╣
+       п╡я▀п╥я▀п╡п╟п╩п╦ bus fault п©я─п╦ п╥п╟п©я┐я│п╨п╣.
 
-    *) Исправление: в редиректах внутри HTTPS сервера был указан протокол 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ я─п╣п╢п╦я─п╣п╨я┌п╟я┘ п╡п╫я┐я┌я─п╦ HTTPS я│п╣я─п╡п╣я─п╟ п╠я▀п╩ я┐п╨п╟п╥п╟п╫ п©я─п╬я┌п╬п╨п╬п╩
        HTTP.
 
-    *) Исправление: если директива rewrite использовала выделения внутри 
-       директивы if, то возвращалась ошибка 500.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╢п╦я─п╣п╨я┌п╦п╡п╟ rewrite п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╟ п╡я▀п╢п╣п╩п╣п╫п╦я▐ п╡п╫я┐я┌я─п╦
+       п╢п╦я─п╣п╨я┌п╦п╡я▀ if, я┌п╬ п╡п╬п╥п╡я─п╟я┴п╟п╩п╟я│я▄ п╬я┬п╦п╠п╨п╟ 500.
 
 
-Изменения в nginx 0.1.32                                          19.05.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.32                                          19.05.2005
 
-    *) Исправление: в редиректах, выдаваемых с помощью директивы rewrite, 
-       не передавались аргументы; ошибка появилась в 0.1.29.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ я─п╣п╢п╦я─п╣п╨я┌п╟я┘, п╡я▀п╢п╟п╡п╟п╣п╪я▀я┘ я│ п©п╬п╪п╬я┴я▄я▌ п╢п╦я─п╣п╨я┌п╦п╡я▀ rewrite, п╫п╣
+       п©п╣я─п╣п╢п╟п╡п╟п╩п╦я│я▄ п╟я─пЁя┐п╪п╣п╫я┌я▀; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.1.29.
 
-    *) Добавление: директива if поддерживает выделения в регулярных 
-       выражениях.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ if п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╡я▀п╢п╣п╩п╣п╫п╦я▐ п╡ я─п╣пЁя┐п╩я▐я─п╫я▀я┘
+       п╡я▀я─п╟п╤п╣п╫п╦я▐я┘.
 
-    *) Добавление: директива set поддерживает переменные и выделения из 
-       регулярных выражений.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ set п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п©п╣я─п╣п╪п╣п╫п╫я▀п╣ п╦ п╡я▀п╢п╣п╩п╣п╫п╦я▐ п╦п╥
+       я─п╣пЁя┐п╩я▐я─п╫я▀я┘ п╡я▀я─п╟п╤п╣п╫п╦п╧.
 
-    *) Добавление: в режиме прокси и FastCGI поддерживается строка 
-       заголовка "X-Accel-Redirect" в ответе бэкенда.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╡ я─п╣п╤п╦п╪п╣ п©я─п╬п╨я│п╦ п╦ FastCGI п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌я│я▐ я│я┌я─п╬п╨п╟ п╥п╟пЁп╬п╩п╬п╡п╨п╟
+       "X-Accel-Redirect" п╡ п╬я┌п╡п╣я┌п╣ п╠я█п╨п╣п╫п╢п╟.
 
 
-Изменения в nginx 0.1.31                                          16.05.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.31                                          16.05.2005
 
-    *) Исправление: при использовании SSL ответ мог передаваться не до 
-       конца.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ SSL п╬я┌п╡п╣я┌ п╪п╬пЁ п©п╣я─п╣п╢п╟п╡п╟я┌я▄я│я▐ п╫п╣ п╢п╬
+       п╨п╬п╫я├п╟.
 
-    *) Исправление: ошибки при обработке SSI в ответе, полученного от 
-       FastCGI-сервера.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ п©я─п╦ п╬п╠я─п╟п╠п╬я┌п╨п╣ SSI п╡ п╬я┌п╡п╣я┌п╣, п©п╬п╩я┐я┤п╣п╫п╫п╬пЁп╬ п╬я┌
+       FastCGI-я│п╣я─п╡п╣я─п╟.
 
-    *) Исправление: ошибки при использовании SSI и сжатия.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ SSI п╦ я│п╤п╟я┌п╦я▐.
 
-    *) Исправление: редирект с кодом 301 передавался без тела ответа; 
-       ошибка появилась в 0.1.30.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я─п╣п╢п╦я─п╣п╨я┌ я│ п╨п╬п╢п╬п╪ 301 п©п╣я─п╣п╢п╟п╡п╟п╩я│я▐ п╠п╣п╥ я┌п╣п╩п╟ п╬я┌п╡п╣я┌п╟; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.1.30.
 
 
-Изменения в nginx 0.1.30                                          14.05.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.30                                          14.05.2005
 
-    *) Исправление: при использовании SSI рабочий процесс мог зациклиться.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ SSI я─п╟п╠п╬я┤п╦п╧ п©я─п╬я├п╣я│я│ п╪п╬пЁ п╥п╟я├п╦п╨п╩п╦я┌я▄я│я▐.
 
-    *) Исправление: при использовании SSL ответ мог передаваться не до 
-       конца.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ SSL п╬я┌п╡п╣я┌ п╪п╬пЁ п©п╣я─п╣п╢п╟п╡п╟я┌я▄я│я▐ п╫п╣ п╢п╬
+       п╨п╬п╫я├п╟.
 
-    *) Исправление: если длина части ответа, полученного за один раз от 
-       проксируемого или FastCGI сервера была равна 500 байт, то nginx 
-       возвращал код ответа 500; в режиме прокси ошибка появилась только в 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╢п╩п╦п╫п╟ я┤п╟я│я┌п╦ п╬я┌п╡п╣я┌п╟, п©п╬п╩я┐я┤п╣п╫п╫п╬пЁп╬ п╥п╟ п╬п╢п╦п╫ я─п╟п╥ п╬я┌
+       п©я─п╬п╨я│п╦я─я┐п╣п╪п╬пЁп╬ п╦п╩п╦ FastCGI я│п╣я─п╡п╣я─п╟ п╠я▀п╩п╟ я─п╟п╡п╫п╟ 500 п╠п╟п╧я┌, я┌п╬ nginx
+       п╡п╬п╥п╡я─п╟я┴п╟п╩ п╨п╬п╢ п╬я┌п╡п╣я┌п╟ 500; п╡ я─п╣п╤п╦п╪п╣ п©я─п╬п╨я│п╦ п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ я┌п╬п╩я▄п╨п╬ п╡
        0.1.29.
 
-    *) Исправление: nginx не считал неверными директивы с 8-ю или 9-ю 
-       параметрами.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│я┤п╦я┌п╟п╩ п╫п╣п╡п╣я─п╫я▀п╪п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀ я│ 8-я▌ п╦п╩п╦ 9-я▌
+       п©п╟я─п╟п╪п╣я┌я─п╟п╪п╦.
 
-    *) Добавление: директива return может возвращать код ответа 204.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ return п╪п╬п╤п╣я┌ п╡п╬п╥п╡я─п╟я┴п╟я┌я▄ п╨п╬п╢ п╬я┌п╡п╣я┌п╟ 204.
 
-    *) Добавление: директива ignore_invalid_headers.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ ignore_invalid_headers.
 
 
-Изменения в nginx 0.1.29                                          12.05.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.29                                          12.05.2005
 
-    *) Добавление: модуль ngx_http_ssi_module поддерживает команду include 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_ssi_module п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╨п╬п╪п╟п╫п╢я┐ include
        virtual.
 
-    *) Добавление: модуль ngx_http_ssi_module поддерживает условную команду 
-       вида 'if expr="$NAME"' и команды else и endif. Допускается только 
-       один уровень вложенности.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_ssi_module п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ я┐я│п╩п╬п╡п╫я┐я▌ п╨п╬п╪п╟п╫п╢я┐
+       п╡п╦п╢п╟ 'if expr="$NAME"' п╦ п╨п╬п╪п╟п╫п╢я▀ else п╦ endif. п■п╬п©я┐я│п╨п╟п╣я┌я│я▐ я┌п╬п╩я▄п╨п╬
+       п╬п╢п╦п╫ я┐я─п╬п╡п╣п╫я▄ п╡п╩п╬п╤п╣п╫п╫п╬я│я┌п╦.
 
-    *) Добавление: модуль ngx_http_ssi_module поддерживает две переменные 
-       DATE_LOCAL и DATE_GMT и команду config timefmt.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_ssi_module п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╢п╡п╣ п©п╣я─п╣п╪п╣п╫п╫я▀п╣
+       DATE_LOCAL п╦ DATE_GMT п╦ п╨п╬п╪п╟п╫п╢я┐ config timefmt.
 
-    *) Добавление: директива ssi_ignore_recycled_buffers.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ ssi_ignore_recycled_buffers.
 
-    *) Исправление: если переменная QUERY_STRING не была определена, то в 
-       команде echo не ставилось значение по умолчанию.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п©п╣я─п╣п╪п╣п╫п╫п╟я▐ QUERY_STRING п╫п╣ п╠я▀п╩п╟ п╬п©я─п╣п╢п╣п╩п╣п╫п╟, я┌п╬ п╡
+       п╨п╬п╪п╟п╫п╢п╣ echo п╫п╣ я│я┌п╟п╡п╦п╩п╬я│я▄ п╥п╫п╟я┤п╣п╫п╦п╣ п©п╬ я┐п╪п╬п╩я┤п╟п╫п╦я▌.
 
-    *) Изменение: модуль ngx_http_proxy_module полностью переписан.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_proxy_module п©п╬п╩п╫п╬я│я┌я▄я▌ п©п╣я─п╣п©п╦я│п╟п╫.
 
-    *) Добавление: директивы proxy_redirect, proxy_pass_request_headers, 
-       proxy_pass_request_body и proxy_method.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_redirect, proxy_pass_request_headers,
+       proxy_pass_request_body п╦ proxy_method.
 
-    *) Добавление: директива proxy_set_header. Директива proxy_x_var 
-       упразднена и должна быть заменена директивой proxy_set_header.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ proxy_set_header. п■п╦я─п╣п╨я┌п╦п╡п╟ proxy_x_var
+       я┐п©я─п╟п╥п╢п╫п╣п╫п╟ п╦ п╢п╬п╩п╤п╫п╟ п╠я▀я┌я▄ п╥п╟п╪п╣п╫п╣п╫п╟ п╢п╦я─п╣п╨я┌п╦п╡п╬п╧ proxy_set_header.
 
-    *) Изменение: директива proxy_preserve_host упразднена и должна быть 
-       заменена директивами "proxy_set_header Host $host" и "proxy_redirect 
-       off" или директивой "proxy_set_header Host $host:$proxy_port" и 
-       соответствующими ей директивами proxy_redirect.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ proxy_preserve_host я┐п©я─п╟п╥п╢п╫п╣п╫п╟ п╦ п╢п╬п╩п╤п╫п╟ п╠я▀я┌я▄
+       п╥п╟п╪п╣п╫п╣п╫п╟ п╢п╦я─п╣п╨я┌п╦п╡п╟п╪п╦ "proxy_set_header Host $host" п╦ "proxy_redirect
+       off" п╦п╩п╦ п╢п╦я─п╣п╨я┌п╦п╡п╬п╧ "proxy_set_header Host $host:$proxy_port" п╦
+       я│п╬п╬я┌п╡п╣я┌я│я┌п╡я┐я▌я┴п╦п╪п╦ п╣п╧ п╢п╦я─п╣п╨я┌п╦п╡п╟п╪п╦ proxy_redirect.
 
-    *) Изменение: директива proxy_set_x_real_ip упразднена и должна быть 
-       заменена директивой "proxy_set_header X-Real-IP $remote_addr".
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ proxy_set_x_real_ip я┐п©я─п╟п╥п╢п╫п╣п╫п╟ п╦ п╢п╬п╩п╤п╫п╟ п╠я▀я┌я▄
+       п╥п╟п╪п╣п╫п╣п╫п╟ п╢п╦я─п╣п╨я┌п╦п╡п╬п╧ "proxy_set_header X-Real-IP $remote_addr".
 
-    *) Изменение: директива proxy_add_x_forwarded_for упразднена и должна 
-       быть заменена директивой 
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ proxy_add_x_forwarded_for я┐п©я─п╟п╥п╢п╫п╣п╫п╟ п╦ п╢п╬п╩п╤п╫п╟
+       п╠я▀я┌я▄ п╥п╟п╪п╣п╫п╣п╫п╟ п╢п╦я─п╣п╨я┌п╦п╡п╬п╧
        "proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for".
 
-    *) Изменение: директива proxy_set_x_url упразднена и должна быть 
-       заменена директивой 
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ proxy_set_x_url я┐п©я─п╟п╥п╢п╫п╣п╫п╟ п╦ п╢п╬п╩п╤п╫п╟ п╠я▀я┌я▄
+       п╥п╟п╪п╣п╫п╣п╫п╟ п╢п╦я─п╣п╨я┌п╦п╡п╬п╧
        "proxy_set_header X-URL http://$host:$server_port$request_uri".
 
-    *) Добавление: директива fastcgi_param.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ fastcgi_param.
 
-    *) Изменение: директивы fastcgi_root, fastcgi_set_var и fastcgi_params 
-       упразднены и должны быть замены директивами fastcgi_param.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ fastcgi_root, fastcgi_set_var п╦ fastcgi_params
+       я┐п©я─п╟п╥п╢п╫п╣п╫я▀ п╦ п╢п╬п╩п╤п╫я▀ п╠я▀я┌я▄ п╥п╟п╪п╣п╫я▀ п╢п╦я─п╣п╨я┌п╦п╡п╟п╪п╦ fastcgi_param.
 
-    *) Добавление: директива index может использовать переменные.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ index п╪п╬п╤п╣я┌ п╦я│п©п╬п╩я▄п╥п╬п╡п╟я┌я▄ п©п╣я─п╣п╪п╣п╫п╫я▀п╣.
 
-    *) Добавление: директива index может быть указана на уровне http и 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ index п╪п╬п╤п╣я┌ п╠я▀я┌я▄ я┐п╨п╟п╥п╟п╫п╟ п╫п╟ я┐я─п╬п╡п╫п╣ http п╦
        server.
 
-    *) Изменение: только последний параметр в директиве index может быть 
-       абсолютным.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┌п╬п╩я▄п╨п╬ п©п╬я│п╩п╣п╢п╫п╦п╧ п©п╟я─п╟п╪п╣я┌я─ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ index п╪п╬п╤п╣я┌ п╠я▀я┌я▄
+       п╟п╠я│п╬п╩я▌я┌п╫я▀п╪.
 
-    *) Добавление: в директиве rewrite могут использоваться переменные.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ rewrite п╪п╬пЁя┐я┌ п╦я│п©п╬п╩я▄п╥п╬п╡п╟я┌я▄я│я▐ п©п╣я─п╣п╪п╣п╫п╫я▀п╣.
 
-    *) Добавление: директива internal.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ internal.
 
-    *) Добавление: переменные CONTENT_LENGTH, CONTENT_TYPE, REMOTE_PORT, 
-       SERVER_ADDR, SERVER_PORT, SERVER_PROTOCOL, DOCUMENT_ROOT, 
-       SERVER_NAME, REQUEST_METHOD, REQUEST_URI и REMOTE_USER.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╣я─п╣п╪п╣п╫п╫я▀п╣ CONTENT_LENGTH, CONTENT_TYPE, REMOTE_PORT,
+       SERVER_ADDR, SERVER_PORT, SERVER_PROTOCOL, DOCUMENT_ROOT,
+       SERVER_NAME, REQUEST_METHOD, REQUEST_URI п╦ REMOTE_USER.
 
-    *) Изменение: nginx теперь передаёт неверные строки в заголовках 
-       запроса клиента и ответа бэкенда.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: nginx я┌п╣п©п╣я─я▄ п©п╣я─п╣п╢п╟я▒я┌ п╫п╣п╡п╣я─п╫я▀п╣ я│я┌я─п╬п╨п╦ п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╟я┘ п╥п╟п©я─п╬я│п╟
+       п╨п╩п╦п╣п╫я┌п╟ п╦ п╬я┌п╡п╣я┌п╟ п╠я█п╨п╣п╫п╢п╟.
 
-    *) Исправление: если бэкенд долго не передавал ответ и send_timeout был 
-       меньше, чем proxy_read_timeout, то клиенту возвращался ответ 408.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╠я█п╨п╣п╫п╢ п╢п╬п╩пЁп╬ п╫п╣ п©п╣я─п╣п╢п╟п╡п╟п╩ п╬я┌п╡п╣я┌ п╦ send_timeout п╠я▀п╩
+       п╪п╣п╫я▄я┬п╣, я┤п╣п╪ proxy_read_timeout, я┌п╬ п╨п╩п╦п╣п╫я┌я┐ п╡п╬п╥п╡я─п╟я┴п╟п╩я│я▐ п╬я┌п╡п╣я┌ 408.
 
-    *) Исправление: если бэкенд передавал неверную строку в заголовке 
-       ответа, то происходил segmentation fault; ошибка появилась в 0.1.26.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╠я█п╨п╣п╫п╢ п©п╣я─п╣п╢п╟п╡п╟п╩ п╫п╣п╡п╣я─п╫я┐я▌ я│я┌я─п╬п╨я┐ п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣
+       п╬я┌п╡п╣я┌п╟, я┌п╬ п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.1.26.
 
-    *) Исправление: при использовании отказоустойчивой конфигурации в 
-       FastCGI мог происходить segmentation fault.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╬я┌п╨п╟п╥п╬я┐я│я┌п╬п╧я┤п╦п╡п╬п╧ п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦ п╡
+       FastCGI п╪п╬пЁ п©я─п╬п╦я│я┘п╬п╢п╦я┌я▄ segmentation fault.
 
-    *) Исправление: директива expires не удаляла уже установленные строки 
-       заголовка "Expires" и "Cache-Control".
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ expires п╫п╣ я┐п╢п╟п╩я▐п╩п╟ я┐п╤п╣ я┐я│я┌п╟п╫п╬п╡п╩п╣п╫п╫я▀п╣ я│я┌я─п╬п╨п╦
+       п╥п╟пЁп╬п╩п╬п╡п╨п╟ "Expires" п╦ "Cache-Control".
 
-    *) Исправление: nginx не учитывал завершающую точку в строке заголовка 
-       запроса "Host".
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я┐я┤п╦я┌я▀п╡п╟п╩ п╥п╟п╡п╣я─я┬п╟я▌я┴я┐я▌ я┌п╬я┤п╨я┐ п╡ я│я┌я─п╬п╨п╣ п╥п╟пЁп╬п╩п╬п╡п╨п╟
+       п╥п╟п©я─п╬я│п╟ "Host".
 
-    *) Исправление: модуль ngx_http_auth_module не работал на Linux.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_auth_module п╫п╣ я─п╟п╠п╬я┌п╟п╩ п╫п╟ Linux.
 
-    *) Исправление: директива rewrite неверно работала, если в запросе 
-       присутствовали аргументы.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ rewrite п╫п╣п╡п╣я─п╫п╬ я─п╟п╠п╬я┌п╟п╩п╟, п╣я│п╩п╦ п╡ п╥п╟п©я─п╬я│п╣
+       п©я─п╦я│я┐я┌я│я┌п╡п╬п╡п╟п╩п╦ п╟я─пЁя┐п╪п╣п╫я┌я▀.
 
-    *) Исправление: nginx не собирался на MacOS X.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ MacOS X.
 
 
-Изменения в nginx 0.1.28                                          08.04.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.28                                          08.04.2005
 
-    *) Исправление: при проксировании больших файлов nginx сильно нагружал 
-       процессор.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╦п╦ п╠п╬п╩я▄я┬п╦я┘ я└п╟п╧п╩п╬п╡ nginx я│п╦п╩я▄п╫п╬ п╫п╟пЁя─я┐п╤п╟п╩
+       п©я─п╬я├п╣я│я│п╬я─.
 
-    *) Исправление: nginx не собирался gcc 4.0 на Linux.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ gcc 4.0 п╫п╟ Linux.
 
 
-Изменения в nginx 0.1.27                                          28.03.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.27                                          28.03.2005
 
-    *) Добавление: параметр blocked в директиве valid_referers.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ blocked п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ valid_referers.
 
-    *) Изменение: ошибки обработки заголовка запроса теперь записываются на 
-       уровне info, в лог также записывается имя сервера и строки заголовка 
-       запроса "Host" и "Referer".
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ п╬п╠я─п╟п╠п╬я┌п╨п╦ п╥п╟пЁп╬п╩п╬п╡п╨п╟ п╥п╟п©я─п╬я│п╟ я┌п╣п©п╣я─я▄ п╥п╟п©п╦я│я▀п╡п╟я▌я┌я│я▐ п╫п╟
+       я┐я─п╬п╡п╫п╣ info, п╡ п╩п╬пЁ я┌п╟п╨п╤п╣ п╥п╟п©п╦я│я▀п╡п╟п╣я┌я│я▐ п╦п╪я▐ я│п╣я─п╡п╣я─п╟ п╦ я│я┌я─п╬п╨п╦ п╥п╟пЁп╬п╩п╬п╡п╨п╟
+       п╥п╟п©я─п╬я│п╟ "Host" п╦ "Referer".
 
-    *) Изменение: при записи ошибок в лог записывается также строка 
-       заголовка запроса "Host".
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п©я─п╦ п╥п╟п©п╦я│п╦ п╬я┬п╦п╠п╬п╨ п╡ п╩п╬пЁ п╥п╟п©п╦я│я▀п╡п╟п╣я┌я│я▐ я┌п╟п╨п╤п╣ я│я┌я─п╬п╨п╟
+       п╥п╟пЁп╬п╩п╬п╡п╨п╟ п╥п╟п©я─п╬я│п╟ "Host".
 
-    *) Добавление: директива proxy_pass_unparsed_uri. Специальная обработка 
-       символов "://" в URI, введённая в версии 0.1.11, теперь упразднена.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ proxy_pass_unparsed_uri. п║п©п╣я├п╦п╟п╩я▄п╫п╟я▐ п╬п╠я─п╟п╠п╬я┌п╨п╟
+       я│п╦п╪п╡п╬п╩п╬п╡ "://" п╡ URI, п╡п╡п╣п╢я▒п╫п╫п╟я▐ п╡ п╡п╣я─я│п╦п╦ 0.1.11, я┌п╣п©п╣я─я▄ я┐п©я─п╟п╥п╢п╫п╣п╫п╟.
 
-    *) Исправление: nginx не собирался на FreeBSD и Linux, если был указан 
-       параметр конфигурации --without-ngx_http_auth_basic_module.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ FreeBSD п╦ Linux, п╣я│п╩п╦ п╠я▀п╩ я┐п╨п╟п╥п╟п╫
+       п©п╟я─п╟п╪п╣я┌я─ п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦ --without-ngx_http_auth_basic_module.
 
 
-Изменения в nginx 0.1.26                                          22.03.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.26                                          22.03.2005
 
-    *) Изменение: неверные строки заголовка, переданные клиентом, теперь 
-       игнорируется и записываются в error_log на уровне info.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╫п╣п╡п╣я─п╫я▀п╣ я│я┌я─п╬п╨п╦ п╥п╟пЁп╬п╩п╬п╡п╨п╟, п©п╣я─п╣п╢п╟п╫п╫я▀п╣ п╨п╩п╦п╣п╫я┌п╬п╪, я┌п╣п©п╣я─я▄
+       п╦пЁп╫п╬я─п╦я─я┐п╣я┌я│я▐ п╦ п╥п╟п©п╦я│я▀п╡п╟я▌я┌я│я▐ п╡ error_log п╫п╟ я┐я─п╬п╡п╫п╣ info.
 
-    *) Изменение: при записи ошибок в лог записывается также имя сервера, 
-       при обращении к которому произошла ошибка.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п©я─п╦ п╥п╟п©п╦я│п╦ п╬я┬п╦п╠п╬п╨ п╡ п╩п╬пЁ п╥п╟п©п╦я│я▀п╡п╟п╣я┌я│я▐ я┌п╟п╨п╤п╣ п╦п╪я▐ я│п╣я─п╡п╣я─п╟,
+       п©я─п╦ п╬п╠я─п╟я┴п╣п╫п╦п╦ п╨ п╨п╬я┌п╬я─п╬п╪я┐ п©я─п╬п╦п╥п╬я┬п╩п╟ п╬я┬п╦п╠п╨п╟.
 
-    *) Добавление: модуль ngx_http_auth_basic_module и директивы auth_basic 
-       и auth_basic_user_file.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_auth_basic_module п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀ auth_basic
+       п╦ auth_basic_user_file.
 
 
-Изменения в nginx 0.1.25                                          19.03.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.25                                          19.03.2005
 
-    *) Исправление: nginx не работал на Linux parisc.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я─п╟п╠п╬я┌п╟п╩ п╫п╟ Linux parisc.
 
-    *) Добавление: nginx теперь не запускается под FreeBSD, если значение 
-       sysctl kern.ipc.somaxconn слишком большое.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: nginx я┌п╣п©п╣я─я▄ п╫п╣ п╥п╟п©я┐я│п╨п╟п╣я┌я│я▐ п©п╬п╢ FreeBSD, п╣я│п╩п╦ п╥п╫п╟я┤п╣п╫п╦п╣
+       sysctl kern.ipc.somaxconn я│п╩п╦я┬п╨п╬п╪ п╠п╬п╩я▄я┬п╬п╣.
 
-    *) Исправление: если модуль ngx_http_index_module делал внутреннее 
-       перенаправление запроса в модули ngx_http_proxy_module или 
-       ngx_http_fastcgi_module, то файл индекса не закрывался после 
-       обслуживания запроса.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╪п╬п╢я┐п╩я▄ ngx_http_index_module п╢п╣п╩п╟п╩ п╡п╫я┐я┌я─п╣п╫п╫п╣п╣
+       п©п╣я─п╣п╫п╟п©я─п╟п╡п╩п╣п╫п╦п╣ п╥п╟п©я─п╬я│п╟ п╡ п╪п╬п╢я┐п╩п╦ ngx_http_proxy_module п╦п╩п╦
+       ngx_http_fastcgi_module, я┌п╬ я└п╟п╧п╩ п╦п╫п╢п╣п╨я│п╟ п╫п╣ п╥п╟п╨я─я▀п╡п╟п╩я│я▐ п©п╬я│п╩п╣
+       п╬п╠я│п╩я┐п╤п╦п╡п╟п╫п╦я▐ п╥п╟п©я─п╬я│п╟.
 
-    *) Добавление: директива proxy_pass может использоваться в location, 
-       заданных регулярным выражением.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ proxy_pass п╪п╬п╤п╣я┌ п╦я│п©п╬п╩я▄п╥п╬п╡п╟я┌я▄я│я▐ п╡ location,
+       п╥п╟п╢п╟п╫п╫я▀я┘ я─п╣пЁя┐п╩я▐я─п╫я▀п╪ п╡я▀я─п╟п╤п╣п╫п╦п╣п╪.
 
-    *) Добавление: модуль ngx_http_rewrite_filter_module поддерживает 
-       условия вида "if ($HTTP_USER_AGENT ~ MSIE)".
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_rewrite_filter_module п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌
+       я┐я│п╩п╬п╡п╦я▐ п╡п╦п╢п╟ "if ($HTTP_USER_AGENT ~ MSIE)".
 
-    *) Исправление: nginx очень медленно запускался при большом количестве 
-       адресов и использовании текстовых значений в директиве geo.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╬я┤п╣п╫я▄ п╪п╣п╢п╩п╣п╫п╫п╬ п╥п╟п©я┐я│п╨п╟п╩я│я▐ п©я─п╦ п╠п╬п╩я▄я┬п╬п╪ п╨п╬п╩п╦я┤п╣я│я┌п╡п╣
+       п╟п╢я─п╣я│п╬п╡ п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ я┌п╣п╨я│я┌п╬п╡я▀я┘ п╥п╫п╟я┤п╣п╫п╦п╧ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ geo.
 
-    *) Изменение: имя переменной в директиве geo нужно указывать, как 
-       $name. Прежний вариант без "$" пока работает, но вскоре будет убран.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╦п╪я▐ п©п╣я─п╣п╪п╣п╫п╫п╬п╧ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ geo п╫я┐п╤п╫п╬ я┐п╨п╟п╥я▀п╡п╟я┌я▄, п╨п╟п╨ $name.
+       п÷я─п╣п╤п╫п╦п╧ п╡п╟я─п╦п╟п╫я┌ п╠п╣п╥ "$" п©п╬п╨п╟ я─п╟п╠п╬я┌п╟п╣я┌, п╫п╬ п╡я│п╨п╬я─п╣ п╠я┐п╢п╣я┌ я┐п╠я─п╟п╫.
 
-    *) Добавление: параметр лога "%{VARIABLE}v".
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ п╩п╬пЁп╟ "%{VARIABLE}v".
 
-    *) Добавление: директива "set $name value".
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ "set $name value".
 
-    *) Исправление: совместимость с gcc 4.0.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я│п╬п╡п╪п╣я│я┌п╦п╪п╬я│я┌я▄ я│ gcc 4.0.
 
-    *) Добавление: параметр автоконфигурации --with-openssl-opt=OPTIONS.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ п╟п╡я┌п╬п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦ --with-openssl-opt=OPTIONS.
 
 
-Изменения в nginx 0.1.24                                          04.03.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.24                                          04.03.2005
 
-    *) Добавление: модуль ngx_http_ssi_filter_module поддерживает 
-       переменные QUERY_STRING и DOCUMENT_URI.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_ssi_filter_module п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п©п╣я─п╣п╪п╣п╫п╫я▀п╣
+       QUERY_STRING п╦ DOCUMENT_URI.
 
-    *) Исправление: модуль ngx_http_autoindex_module мог выдавать ответ 404 
-       на существующий каталог, если этот каталог был указан как alias.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_autoindex_module п╪п╬пЁ п╡я▀п╢п╟п╡п╟я┌я▄ п╬я┌п╡п╣я┌ 404
+       п╫п╟ я│я┐я┴п╣я│я┌п╡я┐я▌я┴п╦п╧ п╨п╟я┌п╟п╩п╬пЁ, п╣я│п╩п╦ я█я┌п╬я┌ п╨п╟я┌п╟п╩п╬пЁ п╠я▀п╩ я┐п╨п╟п╥п╟п╫ п╨п╟п╨ alias.
 
-    *) Исправление: модуль ngx_http_ssi_filter_module неправильно работал 
-       при больших ответах.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_ssi_filter_module п╫п╣п©я─п╟п╡п╦п╩я▄п╫п╬ я─п╟п╠п╬я┌п╟п╩
+       п©я─п╦ п╠п╬п╩я▄я┬п╦я┘ п╬я┌п╡п╣я┌п╟я┘.
 
-    *) Исправление: отсутствие строки заголовка "Referer" всегда считалось 
-       правильным referrer'ом.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┌я│я┐я┌я│я┌п╡п╦п╣ я│я┌я─п╬п╨п╦ п╥п╟пЁп╬п╩п╬п╡п╨п╟ "Referer" п╡я│п╣пЁп╢п╟ я│я┤п╦я┌п╟п╩п╬я│я▄
+       п©я─п╟п╡п╦п╩я▄п╫я▀п╪ referrer'п╬п╪.
 
 
-Изменения в nginx 0.1.23                                          01.03.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.23                                          01.03.2005
 
-    *) Добавление: модуль ngx_http_ssi_filter_module и директивы ssi, 
-       ssi_silent_errors и ssi_min_file_chunk. Поддерживаются команды 'echo 
-       var="HTTP_..." default=""' и 'echo var="REMOTE_ADDR"'.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_ssi_filter_module п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀ ssi,
+       ssi_silent_errors п╦ ssi_min_file_chunk. п÷п╬п╢п╢п╣я─п╤п╦п╡п╟я▌я┌я│я▐ п╨п╬п╪п╟п╫п╢я▀ 'echo
+       var="HTTP_..." default=""' п╦ 'echo var="REMOTE_ADDR"'.
 
-    *) Добавление: параметр лога %request_time.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ п╩п╬пЁп╟ %request_time.
 
-    *) Добавление: если запрос пришёл без строки заголовка "Host", то 
-       директива proxy_preserve_host устанавливает в качестве этого 
-       заголовка первое имя сервера из директивы server_name.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╥п╟п©я─п╬я│ п©я─п╦я┬я▒п╩ п╠п╣п╥ я│я┌я─п╬п╨п╦ п╥п╟пЁп╬п╩п╬п╡п╨п╟ "Host", я┌п╬
+       п╢п╦я─п╣п╨я┌п╦п╡п╟ proxy_preserve_host я┐я│я┌п╟п╫п╟п╡п╩п╦п╡п╟п╣я┌ п╡ п╨п╟я┤п╣я│я┌п╡п╣ я█я┌п╬пЁп╬
+       п╥п╟пЁп╬п╩п╬п╡п╨п╟ п©п╣я─п╡п╬п╣ п╦п╪я▐ я│п╣я─п╡п╣я─п╟ п╦п╥ п╢п╦я─п╣п╨я┌п╦п╡я▀ server_name.
 
-    *) Исправление: nginx не собирался на платформах, отличных от i386, 
-       amd64, sparc и ppc; ошибка появилась в 0.1.22.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╫п╟ п©п╩п╟я┌я└п╬я─п╪п╟я┘, п╬я┌п╩п╦я┤п╫я▀я┘ п╬я┌ i386,
+       amd64, sparc п╦ ppc; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.1.22.
 
-    *) Исправление: модуль ngx_http_autoindex_module теперь показывает 
-       информацию не о символическом линке, а о файле или каталоге, на 
-       который он указывает.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_autoindex_module я┌п╣п©п╣я─я▄ п©п╬п╨п╟п╥я▀п╡п╟п╣я┌
+       п╦п╫я└п╬я─п╪п╟я├п╦я▌ п╫п╣ п╬ я│п╦п╪п╡п╬п╩п╦я┤п╣я│п╨п╬п╪ п╩п╦п╫п╨п╣, п╟ п╬ я└п╟п╧п╩п╣ п╦п╩п╦ п╨п╟я┌п╟п╩п╬пЁп╣, п╫п╟
+       п╨п╬я┌п╬я─я▀п╧ п╬п╫ я┐п╨п╟п╥я▀п╡п╟п╣я┌.
 
-    *) Исправление: если клиенту ничего не передавалось, то параметр 
-       %apache_length записывал в лог отрицательную длину заголовка ответа.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╨п╩п╦п╣п╫я┌я┐ п╫п╦я┤п╣пЁп╬ п╫п╣ п©п╣я─п╣п╢п╟п╡п╟п╩п╬я│я▄, я┌п╬ п©п╟я─п╟п╪п╣я┌я─
+       %apache_length п╥п╟п©п╦я│я▀п╡п╟п╩ п╡ п╩п╬пЁ п╬я┌я─п╦я├п╟я┌п╣п╩я▄п╫я┐я▌ п╢п╩п╦п╫я┐ п╥п╟пЁп╬п╩п╬п╡п╨п╟ п╬я┌п╡п╣я┌п╟.
 
 
-Изменения в nginx 0.1.22                                          22.02.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.22                                          22.02.2005
 
-    *) Исправление: модуль ngx_http_stub_status_module показывал неверную 
-       статистику для обработанных соединений, если использовалось 
-       проксирование или FastCGI-сервер.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_stub_status_module п©п╬п╨п╟п╥я▀п╡п╟п╩ п╫п╣п╡п╣я─п╫я┐я▌
+       я│я┌п╟я┌п╦я│я┌п╦п╨я┐ п╢п╩я▐ п╬п╠я─п╟п╠п╬я┌п╟п╫п╫я▀я┘ я│п╬п╣п╢п╦п╫п╣п╫п╦п╧, п╣я│п╩п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╬я│я▄
+       п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╦п╣ п╦п╩п╦ FastCGI-я│п╣я─п╡п╣я─.
 
-    *) Исправление: на Linux и Solaris установочные пути были неверно 
-       заключены в кавычки; ошибка появилась в 0.1.21.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╫п╟ Linux п╦ Solaris я┐я│я┌п╟п╫п╬п╡п╬я┤п╫я▀п╣ п©я┐я┌п╦ п╠я▀п╩п╦ п╫п╣п╡п╣я─п╫п╬
+       п╥п╟п╨п╩я▌я┤п╣п╫я▀ п╡ п╨п╟п╡я▀я┤п╨п╦; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.1.21.
 
 
-Изменения в nginx 0.1.21                                          22.02.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.21                                          22.02.2005
 
-    *) Исправление: модуль ngx_http_stub_status_module показывал неверную 
-       статистику при использовании метода rtsig или при использовании 
-       нескольких рабочих процессов на SMP машине.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_stub_status_module п©п╬п╨п╟п╥я▀п╡п╟п╩ п╫п╣п╡п╣я─п╫я┐я▌
+       я│я┌п╟я┌п╦я│я┌п╦п╨я┐ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╪п╣я┌п╬п╢п╟ rtsig п╦п╩п╦ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦
+       п╫п╣я│п╨п╬п╩я▄п╨п╦я┘ я─п╟п╠п╬я┤п╦я┘ п©я─п╬я├п╣я│я│п╬п╡ п╫п╟ SMP п╪п╟я┬п╦п╫п╣.
 
-    *) Исправление: nginx не собирался компилятором icc под Линуксом или 
-       если библиотека zlib-1.2.x собиралась из исходных текстов.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п╨п╬п╪п©п╦п╩я▐я┌п╬я─п╬п╪ icc п©п╬п╢ п⌡п╦п╫я┐п╨я│п╬п╪ п╦п╩п╦
+       п╣я│п╩п╦ п╠п╦п╠п╩п╦п╬я┌п╣п╨п╟ zlib-1.2.x я│п╬п╠п╦я─п╟п╩п╟я│я▄ п╦п╥ п╦я│я┘п╬п╢п╫я▀я┘ я┌п╣п╨я│я┌п╬п╡.
 
-    *) Исправление: nginx не собирался под NetBSD 2.0.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п©п╬п╢ NetBSD 2.0.
 
 
-Изменения в nginx 0.1.20                                          17.02.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.20                                          17.02.2005
 
-    *) Добавление: новые параметры script_filename и remote_port в 
-       директиве fastcgi_params.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╫п╬п╡я▀п╣ п©п╟я─п╟п╪п╣я┌я─я▀ script_filename п╦ remote_port п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣
+       fastcgi_params.
 
-    *) Исправление: неправильно обрабатывался поток stderr от 
-       FastCGI-сервера.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╫п╣п©я─п╟п╡п╦п╩я▄п╫п╬ п╬п╠я─п╟п╠п╟я┌я▀п╡п╟п╩я│я▐ п©п╬я┌п╬п╨ stderr п╬я┌
+       FastCGI-я│п╣я─п╡п╣я─п╟.
 
 
-Изменения в nginx 0.1.19                                          16.02.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.19                                          16.02.2005
 
-    *) Исправление: если в запросе есть нуль, то для локальных запросов 
-       теперь возвращается ошибка 404.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡ п╥п╟п©я─п╬я│п╣ п╣я│я┌я▄ п╫я┐п╩я▄, я┌п╬ п╢п╩я▐ п╩п╬п╨п╟п╩я▄п╫я▀я┘ п╥п╟п©я─п╬я│п╬п╡
+       я┌п╣п©п╣я─я▄ п╡п╬п╥п╡я─п╟я┴п╟п╣я┌я│я▐ п╬я┬п╦п╠п╨п╟ 404.
 
-    *) Исправление: nginx не собирался под NetBSD 2.0.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п©п╬п╢ NetBSD 2.0.
 
-    *) Исправление: во время чтения тела запроса клиента в SSL соединении 
-       мог произойти таймаут.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡п╬ п╡я─п╣п╪я▐ я┤я┌п╣п╫п╦я▐ я┌п╣п╩п╟ п╥п╟п©я─п╬я│п╟ п╨п╩п╦п╣п╫я┌п╟ п╡ SSL я│п╬п╣п╢п╦п╫п╣п╫п╦п╦
+       п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ я┌п╟п╧п╪п╟я┐я┌.
 
 
-Изменения в nginx 0.1.18                                          09.02.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.18                                          09.02.2005
 
-    *) Изменение: для совместимости с Solaris 10 в директивах 
-       devpoll_events и devpoll_changes значения по умолчанию уменьшены с 
-       512 до 32.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╢п╩я▐ я│п╬п╡п╪п╣я│я┌п╦п╪п╬я│я┌п╦ я│ Solaris 10 п╡ п╢п╦я─п╣п╨я┌п╦п╡п╟я┘ devpoll_events
+       п╦ devpoll_changes п╥п╫п╟я┤п╣п╫п╦я▐ п©п╬ я┐п╪п╬п╩я┤п╟п╫п╦я▌ я┐п╪п╣п╫я▄я┬п╣п╫я▀ я│ 512 п╢п╬ 32.
 
-    *) Исправление: директивы proxy_set_x_var и fastcgi_set_var не 
-       наследовались.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_set_x_var п╦ fastcgi_set_var п╫п╣
+       п╫п╟я│п╩п╣п╢п╬п╡п╟п╩п╦я│я▄.
 
-    *) Исправление: в директиве rewrite, возвращающей редирект, аргументы 
-       присоединялись к URI через символ "&" вместо "?".
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ rewrite, п╡п╬п╥п╡я─п╟я┴п╟я▌я┴п╣п╧ я─п╣п╢п╦я─п╣п╨я┌, п╟я─пЁя┐п╪п╣п╫я┌я▀
+       п©я─п╦я│п╬п╣п╢п╦п╫я▐п╩п╦я│я▄ п╨ URI я┤п╣я─п╣п╥ я│п╦п╪п╡п╬п╩ "&" п╡п╪п╣я│я┌п╬ "?".
 
-    *) Исправление: строки для модуля ngx_http_geo_module без символа ";" 
-       во включённом файле игнорировались.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я│я┌я─п╬п╨п╦ п╢п╩я▐ п╪п╬п╢я┐п╩я▐ ngx_http_geo_module п╠п╣п╥ я│п╦п╪п╡п╬п╩п╟ ";" п╡п╬
+       п╡п╨п╩я▌я┤я▒п╫п╫п╬п╪ я└п╟п╧п╩п╣ п╦пЁп╫п╬я─п╦я─п╬п╡п╟п╩п╦я│я▄.
 
-    *) Добавление: модуль ngx_http_stub_status_module.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_stub_status_module.
 
-    *) Исправление: неизвестный формат лог-файла в директиве access_log 
-       вызывал segmentation fault.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╫п╣п╦п╥п╡п╣я│я┌п╫я▀п╧ я└п╬я─п╪п╟я┌ п╩п╬пЁ-я└п╟п╧п╩п╟ п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ access_log
+       п╡я▀п╥я▀п╡п╟п╩ segmentation fault.
 
-    *) Добавление: новый параметр document_root в директиве fastcgi_params.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╫п╬п╡я▀п╧ п©п╟я─п╟п╪п╣я┌я─ document_root п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ fastcgi_params.
 
-    *) Добавление: директива fastcgi_redirect_errors.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ fastcgi_redirect_errors.
 
-    *) Добавление: новый модификатор break в директиве rewrite позволяет 
-       прекратить цикл rewrite/location и устанавливает текущую 
-       конфигурацию для запроса.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╫п╬п╡я▀п╧ п╪п╬п╢п╦я└п╦п╨п╟я┌п╬я─ break п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ rewrite п©п╬п╥п╡п╬п╩я▐п╣я┌
+       п©я─п╣п╨я─п╟я┌п╦я┌я▄ я├п╦п╨п╩ rewrite/location п╦ я┐я│я┌п╟п╫п╟п╡п╩п╦п╡п╟п╣я┌ я┌п╣п╨я┐я┴я┐я▌ п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦я▌
+       п╢п╩я▐ п╥п╟п©я─п╬я│п╟.
 
 
-Изменения в nginx 0.1.17                                          03.02.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.17                                          03.02.2005
 
-    *) Изменение: модуль ngx_http_rewrite_module полностью переписан. 
-       Теперь можно делать редиректы, возвращать коды ошибок и проверять 
-       переменные и рефереры. Эти директивы можно использовать внутри 
-       location. Директива redirect упразднена.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_rewrite_module п©п╬п╩п╫п╬я│я┌я▄я▌ п©п╣я─п╣п©п╦я│п╟п╫. п╒п╣п©п╣я─я▄
+       п╪п╬п╤п╫п╬ п╢п╣п╩п╟я┌я▄ я─п╣п╢п╦я─п╣п╨я┌я▀, п╡п╬п╥п╡я─п╟я┴п╟я┌я▄ п╨п╬п╢я▀ п╬я┬п╦п╠п╬п╨ п╦ п©я─п╬п╡п╣я─я▐я┌я▄ п©п╣я─п╣п╪п╣п╫п╫я▀п╣
+       п╦ я─п╣я└п╣я─п╣я─я▀. п╜я┌п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀ п╪п╬п╤п╫п╬ п╦я│п©п╬п╩я▄п╥п╬п╡п╟я┌я▄ п╡п╫я┐я┌я─п╦ location.
+       п■п╦я─п╣п╨я┌п╦п╡п╟ redirect я┐п©я─п╟п╥п╢п╫п╣п╫п╟.
 
-    *) Добавление: модуль ngx_http_geo_module.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_geo_module.
 
-    *) Добавление: директивы proxy_set_x_var и fastcgi_set_var.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ proxy_set_x_var п╦ fastcgi_set_var.
 
-    *) Исправление: конфигурация location с модификатором "=" могла 
-       использоваться в другом location.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦я▐ location я│ п╪п╬п╢п╦я└п╦п╨п╟я┌п╬я─п╬п╪ "=" п╪п╬пЁп╩п╟
+       п╦я│п©п╬п╩я▄п╥п╬п╡п╟я┌я▄я│я▐ п╡ п╢я─я┐пЁп╬п╪ location.
 
-    *) Исправление: правильный тип ответа выставлялся только для запросов, 
-       у которых в расширении были только маленькие буквы.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╟п╡п╦п╩я▄п╫я▀п╧ я┌п╦п© п╬я┌п╡п╣я┌п╟ п╡я▀я│я┌п╟п╡п╩я▐п╩я│я▐ я┌п╬п╩я▄п╨п╬ п╢п╩я▐ п╥п╟п©я─п╬я│п╬п╡, я┐
+       п╨п╬я┌п╬я─я▀я┘ п╡ я─п╟я│я┬п╦я─п╣п╫п╦п╦ п╠я▀п╩п╦ я┌п╬п╩я▄п╨п╬ п╪п╟п╩п╣п╫я▄п╨п╦п╣ п╠я┐п╨п╡я▀.
 
-    *) Исправление: если для location установлен proxy_pass или 
-       fastcgi_pass, и доступ к нему запрещался, а ошибка перенаправлялась 
-       на статическую страницу, то происходил segmentation fault.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╢п╩я▐ location я┐я│я┌п╟п╫п╬п╡п╩п╣п╫ proxy_pass п╦п╩п╦
+       fastcgi_pass, п╦ п╢п╬я│я┌я┐п© п╨ п╫п╣п╪я┐ п╥п╟п©я─п╣я┴п╟п╩я│я▐, п╟ п╬я┬п╦п╠п╨п╟ п©п╣я─п╣п╫п╟п©я─п╟п╡п╩я▐п╩п╟я│я▄
+       п╫п╟ я│я┌п╟я┌п╦я┤п╣я│п╨я┐я▌ я│я┌я─п╟п╫п╦я├я┐, я┌п╬ п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault.
 
-    *) Исправление: если в проксированном ответе в заголовке "Location" 
-       передавался относительный URL, то к нему добавлялось имя хоста и 
-       слэш; ошибка появилась в 0.1.14.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡ п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╫п╬п╪ п╬я┌п╡п╣я┌п╣ п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣ "Location"
+       п©п╣я─п╣п╢п╟п╡п╟п╩я│я▐ п╬я┌п╫п╬я│п╦я┌п╣п╩я▄п╫я▀п╧ URL, я┌п╬ п╨ п╫п╣п╪я┐ п╢п╬п╠п╟п╡п╩я▐п╩п╬я│я▄ п╦п╪я▐ я┘п╬я│я┌п╟ п╦
+       я│п╩я█я┬; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.1.14.
 
-    *) Исправление: на Linux в лог не записывался текст системной ошибки.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╫п╟ Linux п╡ п╩п╬пЁ п╫п╣ п╥п╟п©п╦я│я▀п╡п╟п╩я│я▐ я┌п╣п╨я│я┌ я│п╦я│я┌п╣п╪п╫п╬п╧ п╬я┬п╦п╠п╨п╦.
 
 
-Изменения в nginx 0.1.16                                          25.01.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.16                                          25.01.2005
 
-    *) Исправление: если ответ передавался chunk'ами, то при запросе HEAD 
-       выдавался завершающий chunk.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╬я┌п╡п╣я┌ п©п╣я─п╣п╢п╟п╡п╟п╩я│я▐ chunk'п╟п╪п╦, я┌п╬ п©я─п╦ п╥п╟п©я─п╬я│п╣ HEAD
+       п╡я▀п╢п╟п╡п╟п╩я│я▐ п╥п╟п╡п╣я─я┬п╟я▌я┴п╦п╧ chunk.
 
-    *) Исправление: заголовок "Connection: keep-alive" выдавался, даже если 
-       директива keepalive_timeout запрещала использование keep-alive.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╥п╟пЁп╬п╩п╬п╡п╬п╨ "Connection: keep-alive" п╡я▀п╢п╟п╡п╟п╩я│я▐, п╢п╟п╤п╣ п╣я│п╩п╦
+       п╢п╦я─п╣п╨я┌п╦п╡п╟ keepalive_timeout п╥п╟п©я─п╣я┴п╟п╩п╟ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╣ keep-alive.
 
-    *) Исправление: ошибки в модуле ngx_http_fastcgi_module вызывали 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ п╡ п╪п╬п╢я┐п╩п╣ ngx_http_fastcgi_module п╡я▀п╥я▀п╡п╟п╩п╦
        segmentation fault.
 
-    *) Исправление: при использовании SSL сжатый ответ мог передаваться не 
-       до конца.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ SSL я│п╤п╟я┌я▀п╧ п╬я┌п╡п╣я┌ п╪п╬пЁ п©п╣я─п╣п╢п╟п╡п╟я┌я▄я│я▐ п╫п╣
+       п╢п╬ п╨п╬п╫я├п╟.
 
-    *) Исправление: опции TCP_NODELAY, TCP_NOPSUH и TCP_CORK, специфичные 
-       для TCP сокетов, не используются для unix domain сокетов.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬п©я├п╦п╦ TCP_NODELAY, TCP_NOPSUH п╦ TCP_CORK, я│п©п╣я├п╦я└п╦я┤п╫я▀п╣
+       п╢п╩я▐ TCP я│п╬п╨п╣я┌п╬п╡, п╫п╣ п╦я│п©п╬п╩я▄п╥я┐я▌я┌я│я▐ п╢п╩я▐ unix domain я│п╬п╨п╣я┌п╬п╡.
 
-    *) Добавление: директива rewrite поддерживает перезаписывание 
-       аргументов.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ rewrite п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п©п╣я─п╣п╥п╟п©п╦я│я▀п╡п╟п╫п╦п╣
+       п╟я─пЁя┐п╪п╣п╫я┌п╬п╡.
 
-    *) Исправление: на запрос POST с заголовком "Content-Length: 0" 
-       возвращался ответ 400; ошибка появилась в 0.1.14.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╫п╟ п╥п╟п©я─п╬я│ POST я│ п╥п╟пЁп╬п╩п╬п╡п╨п╬п╪ "Content-Length: 0"
+       п╡п╬п╥п╡я─п╟я┴п╟п╩я│я▐ п╬я┌п╡п╣я┌ 400; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.1.14.
 
 
-Изменения в nginx 0.1.15                                          19.01.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.15                                          19.01.2005
 
-    *) Исправление: ошибка соединения с FastCGI-сервером вызывала 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╟ я│п╬п╣п╢п╦п╫п╣п╫п╦я▐ я│ FastCGI-я│п╣я─п╡п╣я─п╬п╪ п╡я▀п╥я▀п╡п╟п╩п╟
        segmentation fault.
 
-    *) Исправление: корректная обработка регулярного выражения, в котором 
-       число выделенных частей не совпадает с числом подстановок.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╨п╬я─я─п╣п╨я┌п╫п╟я▐ п╬п╠я─п╟п╠п╬я┌п╨п╟ я─п╣пЁя┐п╩я▐я─п╫п╬пЁп╬ п╡я▀я─п╟п╤п╣п╫п╦я▐, п╡ п╨п╬я┌п╬я─п╬п╪
+       я┤п╦я│п╩п╬ п╡я▀п╢п╣п╩п╣п╫п╫я▀я┘ я┤п╟я│я┌п╣п╧ п╫п╣ я│п╬п╡п©п╟п╢п╟п╣я┌ я│ я┤п╦я│п╩п╬п╪ п©п╬п╢я│я┌п╟п╫п╬п╡п╬п╨.
 
-    *) Добавление: location, который передаётся FastCGI-серверу, может быть 
-       задан с помощью регулярного выражения.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: location, п╨п╬я┌п╬я─я▀п╧ п©п╣я─п╣п╢п╟я▒я┌я│я▐ FastCGI-я│п╣я─п╡п╣я─я┐, п╪п╬п╤п╣я┌ п╠я▀я┌я▄
+       п╥п╟п╢п╟п╫ я│ п©п╬п╪п╬я┴я▄я▌ я─п╣пЁя┐п╩я▐я─п╫п╬пЁп╬ п╡я▀я─п╟п╤п╣п╫п╦я▐.
 
-    *) Исправление: параметр FastCGI REQUEST_URI теперь передаётся вместе с 
-       аргументами и в том виде, в котором был получен от клиента.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ FastCGI REQUEST_URI я┌п╣п©п╣я─я▄ п©п╣я─п╣п╢п╟я▒я┌я│я▐ п╡п╪п╣я│я┌п╣ я│
+       п╟я─пЁя┐п╪п╣п╫я┌п╟п╪п╦ п╦ п╡ я┌п╬п╪ п╡п╦п╢п╣, п╡ п╨п╬я┌п╬я─п╬п╪ п╠я▀п╩ п©п╬п╩я┐я┤п╣п╫ п╬я┌ п╨п╩п╦п╣п╫я┌п╟.
 
-    *) Исправление: для использования регулярных выражений в location нужно 
-       было собирать nginx вместе с ngx_http_rewrite_module.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╩я▐ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦я▐ я─п╣пЁя┐п╩я▐я─п╫я▀я┘ п╡я▀я─п╟п╤п╣п╫п╦п╧ п╡ location п╫я┐п╤п╫п╬
+       п╠я▀п╩п╬ я│п╬п╠п╦я─п╟я┌я▄ nginx п╡п╪п╣я│я┌п╣ я│ ngx_http_rewrite_module.
 
-    *) Исправление: если бэкенд слушал на 80-ом порту, то при использовании 
-       директивы "proxy_preserve_host  on" в заголовке "Host" указывался 
-       также порт 80; ошибка появилась в 0.1.14.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╠я█п╨п╣п╫п╢ я│п╩я┐я┬п╟п╩ п╫п╟ 80-п╬п╪ п©п╬я─я┌я┐, я┌п╬ п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦
+       п╢п╦я─п╣п╨я┌п╦п╡я▀ "proxy_preserve_host on" п╡ п╥п╟пЁп╬п╩п╬п╡п╨п╣ "Host" я┐п╨п╟п╥я▀п╡п╟п╩я│я▐
+       я┌п╟п╨п╤п╣ п©п╬я─я┌ 80; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.1.14.
 
-    *) Исправление: если задать одинаковые пути в параметрах 
-       автоконфигурации --http-client-body-temp-path=PATH и 
-       --http-proxy-temp-path=PATH или --http-client-body-temp-path=PATH и 
-       --http-fastcgi-temp-path=PATH, то происходил segmentation fault.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╥п╟п╢п╟я┌я▄ п╬п╢п╦п╫п╟п╨п╬п╡я▀п╣ п©я┐я┌п╦ п╡ п©п╟я─п╟п╪п╣я┌я─п╟я┘
+       п╟п╡я┌п╬п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦ --http-client-body-temp-path=PATH п╦
+       --http-proxy-temp-path=PATH п╦п╩п╦ --http-client-body-temp-path=PATH п╦
+       --http-fastcgi-temp-path=PATH, я┌п╬ п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault.
 
 
-Изменения в nginx 0.1.14                                          18.01.2005
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.14                                          18.01.2005
 
-    *) Добавление: параметры автоконфигурации 
-       --http-client-body-temp-path=PATH, --http-proxy-temp-path=PATH и 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─я▀ п╟п╡я┌п╬п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦
+       --http-client-body-temp-path=PATH, --http-proxy-temp-path=PATH п╦
        --http-fastcgi-temp-path=PATH
 
-    *) Изменение: имя каталога с временными файлами, содержащие тело 
-       запроса клиента, задаётся директивой client_body_temp_path, по 
-       умолчанию <prefix>/client_body_temp.
-
-    *) Добавление: модуль ngx_http_fastcgi_module и директивы fastcgi_pass, 
-       fastcgi_root, fastcgi_index, fastcgi_params, 
-       fastcgi_connect_timeout, fastcgi_send_timeout, fastcgi_read_timeout, 
-       fastcgi_send_lowat, fastcgi_header_buffer_size, fastcgi_buffers, 
-       fastcgi_busy_buffers_size, fastcgi_temp_path, 
-       fastcgi_max_temp_file_size, fastcgi_temp_file_write_size, 
-       fastcgi_next_upstream и fastcgi_x_powered_by.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╦п╪я▐ п╨п╟я┌п╟п╩п╬пЁп╟ я│ п╡я─п╣п╪п╣п╫п╫я▀п╪п╦ я└п╟п╧п╩п╟п╪п╦, я│п╬п╢п╣я─п╤п╟я┴п╦п╣ я┌п╣п╩п╬ п╥п╟п©я─п╬я│п╟
+       п╨п╩п╦п╣п╫я┌п╟, п╥п╟п╢п╟я▒я┌я│я▐ п╢п╦я─п╣п╨я┌п╦п╡п╬п╧ client_body_temp_path, п©п╬ я┐п╪п╬п╩я┤п╟п╫п╦я▌
+       <prefix>/client_body_temp.
+
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_fastcgi_module п╦ п╢п╦я─п╣п╨я┌п╦п╡я▀ fastcgi_pass,
+       fastcgi_root, fastcgi_index, fastcgi_params, fastcgi_connect_timeout,
+       fastcgi_send_timeout, fastcgi_read_timeout, fastcgi_send_lowat,
+       fastcgi_header_buffer_size, fastcgi_buffers,
+       fastcgi_busy_buffers_size, fastcgi_temp_path,
+       fastcgi_max_temp_file_size, fastcgi_temp_file_write_size,
+       fastcgi_next_upstream п╦ fastcgi_x_powered_by.
 
-    *) Исправление: ошибка "[alert] zero size buf"; ошибка появилась в 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╟ "[alert] zero size buf"; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡
        0.1.3.
 
-    *) Изменение: в директиве proxy_pass нужно обязательно указывать URI 
-       после имени хоста.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ proxy_pass п╫я┐п╤п╫п╬ п╬п╠я▐п╥п╟я┌п╣п╩я▄п╫п╬ я┐п╨п╟п╥я▀п╡п╟я┌я▄ URI
+       п©п╬я│п╩п╣ п╦п╪п╣п╫п╦ я┘п╬я│я┌п╟.
 
-    *) Изменение: если в URI встречался символ %3F, то он считался началом 
-       строки аргументов.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п╣я│п╩п╦ п╡ URI п╡я│я┌я─п╣я┤п╟п╩я│я▐ я│п╦п╪п╡п╬п╩ %3F, я┌п╬ п╬п╫ я│я┤п╦я┌п╟п╩я│я▐ п╫п╟я┤п╟п╩п╬п╪
+       я│я┌я─п╬п╨п╦ п╟я─пЁя┐п╪п╣п╫я┌п╬п╡.
 
-    *) Добавление: поддержка unix domain сoкетов в модуле 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╬п╢п╢п╣я─п╤п╨п╟ unix domain я│oп╨п╣я┌п╬п╡ п╡ п╪п╬п╢я┐п╩п╣
        ngx_http_proxy_module.
 
-    *) Добавление: директивы ssl_engine и ssl_ciphers.
-       Спасибо Сергею Скворцову за SSL-акселератор.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ ssl_engine п╦ ssl_ciphers.
+       п║п©п╟я│п╦п╠п╬ п║п╣я─пЁп╣я▌ п║п╨п╡п╬я─я├п╬п╡я┐ п╥п╟ SSL-п╟п╨я│п╣п╩п╣я─п╟я┌п╬я─.
 
 
-Изменения в nginx 0.1.13                                          21.12.2004
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.13                                          21.12.2004
 
-    *) Добавление: директивы server_names_hash и 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡я▀ server_names_hash п╦
        server_names_hash_threshold.
 
-    *) Исправление: имена *.domain.tld в директиве server_name не работали.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╦п╪п╣п╫п╟ *.domain.tld п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ server_name п╫п╣ я─п╟п╠п╬я┌п╟п╩п╦.
 
-    *) Исправление: параметр лога %request_length записывал неверную длину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ п╩п╬пЁп╟ %request_length п╥п╟п©п╦я│я▀п╡п╟п╩ п╫п╣п╡п╣я─п╫я┐я▌ п╢п╩п╦п╫я┐.
 
 
-Изменения в nginx 0.1.12                                          06.12.2004
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.12                                          06.12.2004
 
-    *) Добавление: параметр лога %request_length.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─ п╩п╬пЁп╟ %request_length.
 
-    *) Исправление: при использовании /dev/poll, select и poll на 
-       платформах, где возможны ложные срабатывания указанных методов, 
-       могли быть длительные задержки при обработке запроса по keep-alive 
-       соединению. Наблюдалось по крайней мере на Solaris с использованием 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ /dev/poll, select п╦ poll п╫п╟
+       п©п╩п╟я┌я└п╬я─п╪п╟я┘, пЁп╢п╣ п╡п╬п╥п╪п╬п╤п╫я▀ п╩п╬п╤п╫я▀п╣ я│я─п╟п╠п╟я┌я▀п╡п╟п╫п╦я▐ я┐п╨п╟п╥п╟п╫п╫я▀я┘ п╪п╣я┌п╬п╢п╬п╡, п╪п╬пЁп╩п╦
+       п╠я▀я┌я▄ п╢п╩п╦я┌п╣п╩я▄п╫я▀п╣ п╥п╟п╢п╣я─п╤п╨п╦ п©я─п╦ п╬п╠я─п╟п╠п╬я┌п╨п╣ п╥п╟п©я─п╬я│п╟ п©п╬ keep-alive
+       я│п╬п╣п╢п╦п╫п╣п╫п╦я▌. п²п╟п╠п╩я▌п╢п╟п╩п╬я│я▄ п©п╬ п╨я─п╟п╧п╫п╣п╧ п╪п╣я─п╣ п╫п╟ Solaris я│ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╣п╪
        /dev/poll.
 
-    *) Исправление: директива send_lowat игнорируется на Linux, так как 
-       Linux не поддерживает опцию SO_SNDLOWAT.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ send_lowat п╦пЁп╫п╬я─п╦я─я┐п╣я┌я│я▐ п╫п╟ Linux, я┌п╟п╨ п╨п╟п╨
+       Linux п╫п╣ п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ п╬п©я├п╦я▌ SO_SNDLOWAT.
 
 
-Изменения в nginx 0.1.11                                          02.12.2004
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.11                                          02.12.2004
 
-    *) Добавление: директива worker_priority.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ worker_priority.
 
-    *) Изменение: под FreeBSD директивы tcp_nopush и tcp_nodelay вместе 
-       влияют на передачу ответа.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: п©п╬п╢ FreeBSD п╢п╦я─п╣п╨я┌п╦п╡я▀ tcp_nopush п╦ tcp_nodelay п╡п╪п╣я│я┌п╣
+       п╡п╩п╦я▐я▌я┌ п╫п╟ п©п╣я─п╣п╢п╟я┤я┐ п╬я┌п╡п╣я┌п╟.
 
-    *) Исправление: nginx не вызывал initgroups().
-       Спасибо Андрею Ситникову и Андрею Нигматулину.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ п╡я▀п╥я▀п╡п╟п╩ initgroups().
+       п║п©п╟я│п╦п╠п╬ п░п╫п╢я─п╣я▌ п║п╦я┌п╫п╦п╨п╬п╡я┐ п╦ п░п╫п╢я─п╣я▌ п²п╦пЁп╪п╟я┌я┐п╩п╦п╫я┐.
 
-    *) Изменение: ngx_http_auto_index_module теперь выдаёт размер файлов в 
-       байтах.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: ngx_http_auto_index_module я┌п╣п©п╣я─я▄ п╡я▀п╢п╟я▒я┌ я─п╟п╥п╪п╣я─ я└п╟п╧п╩п╬п╡ п╡
+       п╠п╟п╧я┌п╟я┘.
 
-    *) Исправление: ngx_http_auto_index_module возвращал ошибку 500, если в 
-       каталоге есть битый symlink.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: ngx_http_auto_index_module п╡п╬п╥п╡я─п╟я┴п╟п╩ п╬я┬п╦п╠п╨я┐ 500, п╣я│п╩п╦ п╡
+       п╨п╟я┌п╟п╩п╬пЁп╣ п╣я│я┌я▄ п╠п╦я┌я▀п╧ symlink.
 
-    *) Исправление: файлы больше 4G не передавались с использованием 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я└п╟п╧п╩я▀ п╠п╬п╩я▄я┬п╣ 4G п╫п╣ п©п╣я─п╣п╢п╟п╡п╟п╩п╦я│я▄ я│ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╣п╪
        sendfile.
 
-    *) Исправление: если бэкенд резолвился в несколько адресов и при 
-       ожидании от него ответа происходила ошибка, то процесс зацикливался.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╠я█п╨п╣п╫п╢ я─п╣п╥п╬п╩п╡п╦п╩я│я▐ п╡ п╫п╣я│п╨п╬п╩я▄п╨п╬ п╟п╢я─п╣я│п╬п╡ п╦ п©я─п╦
+       п╬п╤п╦п╢п╟п╫п╦п╦ п╬я┌ п╫п╣пЁп╬ п╬я┌п╡п╣я┌п╟ п©я─п╬п╦я│я┘п╬п╢п╦п╩п╟ п╬я┬п╦п╠п╨п╟, я┌п╬ п©я─п╬я├п╣я│я│ п╥п╟я├п╦п╨п╩п╦п╡п╟п╩я│я▐.
 
-    *) Исправление: при использовании метода /dev/poll рабочий процесс мог 
-       завершиться с сообщением "unknown cycle".
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╪п╣я┌п╬п╢п╟ /dev/poll я─п╟п╠п╬я┤п╦п╧ п©я─п╬я├п╣я│я│ п╪п╬пЁ
+       п╥п╟п╡п╣я─я┬п╦я┌я▄я│я▐ я│ я│п╬п╬п╠я┴п╣п╫п╦п╣п╪ "unknown cycle".
 
-    *) Исправление: ошибки "close() channel failed".
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ "close() channel failed".
 
-    *) Исправление: автоматическое определение групп nobody и nogroup.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╟п╡я┌п╬п╪п╟я┌п╦я┤п╣я│п╨п╬п╣ п╬п©я─п╣п╢п╣п╩п╣п╫п╦п╣ пЁя─я┐п©п© nobody п╦ nogroup.
 
-    *) Исправление: директива send_lowat не работала на Linux.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ send_lowat п╫п╣ я─п╟п╠п╬я┌п╟п╩п╟ п╫п╟ Linux.
 
-    *) Исправление: если в конфигурации не было раздела events, то 
-       происходил segmentation fault.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡ п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦ п╫п╣ п╠я▀п╩п╬ я─п╟п╥п╢п╣п╩п╟ events, я┌п╬
+       п©я─п╬п╦я│я┘п╬п╢п╦п╩ segmentation fault.
 
-    *) Исправление: nginx не собирался под OpenBSD.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: nginx п╫п╣ я│п╬п╠п╦я─п╟п╩я│я▐ п©п╬п╢ OpenBSD.
 
-    *) Исправление: двойные слэшы в "://" в URI превращались в ":/".
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╢п╡п╬п╧п╫я▀п╣ я│п╩я█я┬я▀ п╡ "://" п╡ URI п©я─п╣п╡я─п╟я┴п╟п╩п╦я│я▄ п╡ ":/".
 
 
-Изменения в nginx 0.1.10                                          26.11.2004
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.10                                          26.11.2004
 
-    *) Исправление: если в запросе без аргументов есть "//", "/./", "/../" 
-       или "%XX", то терялся последний символ в строке запроса; ошибка 
-       появилась в 0.1.9.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡ п╥п╟п©я─п╬я│п╣ п╠п╣п╥ п╟я─пЁя┐п╪п╣п╫я┌п╬п╡ п╣я│я┌я▄ "//", "/./", "/../"
+       п╦п╩п╦ "%XX", я┌п╬ я┌п╣я─я▐п╩я│я▐ п©п╬я│п╩п╣п╢п╫п╦п╧ я│п╦п╪п╡п╬п╩ п╡ я│я┌я─п╬п╨п╣ п╥п╟п©я─п╬я│п╟; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.1.9.
 
-    *) Исправление: исправление в версии 0.1.9 для файлов больше 2G на 
-       Linux не работало.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╦я│п©я─п╟п╡п╩п╣п╫п╦п╣ п╡ п╡п╣я─я│п╦п╦ 0.1.9 п╢п╩я▐ я└п╟п╧п╩п╬п╡ п╠п╬п╩я▄я┬п╣ 2G п╫п╟ Linux
+       п╫п╣ я─п╟п╠п╬я┌п╟п╩п╬.
 
 
-Изменения в nginx 0.1.9                                           25.11.2004
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.9                                           25.11.2004
 
-    *) Исправление: если в запросе есть "//", "/./", "/../" или "%XX", то 
-       проксируемый запрос передавался без аргументов.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╣я│п╩п╦ п╡ п╥п╟п©я─п╬я│п╣ п╣я│я┌я▄ "//", "/./", "/../" п╦п╩п╦ "%XX", я┌п╬
+       п©я─п╬п╨я│п╦я─я┐п╣п╪я▀п╧ п╥п╟п©я─п╬я│ п©п╣я─п╣п╢п╟п╡п╟п╩я│я▐ п╠п╣п╥ п╟я─пЁя┐п╪п╣п╫я┌п╬п╡.
 
-    *) Исправление: при сжатии больших ответов иногда они передавались не 
-       полностью.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ я│п╤п╟я┌п╦п╦ п╠п╬п╩я▄я┬п╦я┘ п╬я┌п╡п╣я┌п╬п╡ п╦п╫п╬пЁп╢п╟ п╬п╫п╦ п©п╣я─п╣п╢п╟п╡п╟п╩п╦я│я▄ п╫п╣
+       п©п╬п╩п╫п╬я│я┌я▄я▌.
 
-    *) Исправление: не передавались файлы больше 2G на Linux, 
-       неподдерживающем sendfile64().
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╫п╣ п©п╣я─п╣п╢п╟п╡п╟п╩п╦я│я▄ я└п╟п╧п╩я▀ п╠п╬п╩я▄я┬п╣ 2G п╫п╟ Linux,
+       п╫п╣п©п╬п╢п╢п╣я─п╤п╦п╡п╟я▌я┴п╣п╪ sendfile64().
 
-    *) Исправление: на Linux при конфигурации сборки нужно было обязательно 
-       использовать параметр --with-poll_module; ошибка появилась в 0.1.8.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╫п╟ Linux п©я─п╦ п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦ я│п╠п╬я─п╨п╦ п╫я┐п╤п╫п╬ п╠я▀п╩п╬ п╬п╠я▐п╥п╟я┌п╣п╩я▄п╫п╬
+       п╦я│п©п╬п╩я▄п╥п╬п╡п╟я┌я▄ п©п╟я─п╟п╪п╣я┌я─ --with-poll_module; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.1.8.
 
 
-Изменения в nginx 0.1.8                                           20.11.2004
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.8                                           20.11.2004
 
-    *) Исправление: ошибка в модуле ngx_http_autoindex_module при показе 
-       длинных имён файлов.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╟ п╡ п╪п╬п╢я┐п╩п╣ ngx_http_autoindex_module п©я─п╦ п©п╬п╨п╟п╥п╣
+       п╢п╩п╦п╫п╫я▀я┘ п╦п╪я▒п╫ я└п╟п╧п╩п╬п╡.
 
-    *) Добавление: модификатор "^~" в директиве location.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢п╦я└п╦п╨п╟я┌п╬я─ "^~" п╡ п╢п╦я─п╣п╨я┌п╦п╡п╣ location.
 
-    *) Добавление: директива proxy_max_temp_file_size.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ proxy_max_temp_file_size.
 
 
-Изменения в nginx 0.1.7                                           12.11.2004
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.7                                           12.11.2004
 
-    *) Исправление: при использовании sendfile, если передаваемый файл 
-       менялся, то мог произойти segmentation fault на FreeBSD; ошибка 
-       появилась в 0.1.5.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ sendfile, п╣я│п╩п╦ п©п╣я─п╣п╢п╟п╡п╟п╣п╪я▀п╧ я└п╟п╧п╩
+       п╪п╣п╫я▐п╩я│я▐, я┌п╬ п╪п╬пЁ п©я─п╬п╦п╥п╬п╧я┌п╦ segmentation fault п╫п╟ FreeBSD; п╬я┬п╦п╠п╨п╟
+       п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.1.5.
 
 
-Изменения в nginx 0.1.6                                           11.11.2004
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.6                                           11.11.2004
 
-    *) Исправление: при некоторых комбинациях директив location c 
-       регулярными выражениями использовалась конфигурация не из того 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╫п╣п╨п╬я┌п╬я─я▀я┘ п╨п╬п╪п╠п╦п╫п╟я├п╦я▐я┘ п╢п╦я─п╣п╨я┌п╦п╡ location c
+       я─п╣пЁя┐п╩я▐я─п╫я▀п╪п╦ п╡я▀я─п╟п╤п╣п╫п╦я▐п╪п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩п╟я│я▄ п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦я▐ п╫п╣ п╦п╥ я┌п╬пЁп╬
        location.
 
 
-Изменения в nginx 0.1.5                                           11.11.2004
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.5                                           11.11.2004
 
-    *) Исправление: на Solaris и Linux могло быть очень много сообщений 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╫п╟ Solaris п╦ Linux п╪п╬пЁп╩п╬ п╠я▀я┌я▄ п╬я┤п╣п╫я▄ п╪п╫п╬пЁп╬ я│п╬п╬п╠я┴п╣п╫п╦п╧
        "recvmsg() returned not enough data".
 
-    *) Исправление: в режиме прокси без использования sendfile на Solaris 
-       возникала ошибка "writev() failed (22: Invalid argument)". На других 
-       платформах, не поддерживающих sendfile, процесс зацикливался.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ я─п╣п╤п╦п╪п╣ п©я─п╬п╨я│п╦ п╠п╣п╥ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦я▐ sendfile п╫п╟ Solaris
+       п╡п╬п╥п╫п╦п╨п╟п╩п╟ п╬я┬п╦п╠п╨п╟ "writev() failed (22: Invalid argument)". п²п╟ п╢я─я┐пЁп╦я┘
+       п©п╩п╟я┌я└п╬я─п╪п╟я┘, п╫п╣ п©п╬п╢п╢п╣я─п╤п╦п╡п╟я▌я┴п╦я┘ sendfile, п©я─п╬я├п╣я│я│ п╥п╟я├п╦п╨п╩п╦п╡п╟п╩я│я▐.
 
-    *) Исправление: при использовании sendfile в режиме прокси на Solaris 
-       возникал segmentation fault.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ sendfile п╡ я─п╣п╤п╦п╪п╣ п©я─п╬п╨я│п╦ п╫п╟ Solaris
+       п╡п╬п╥п╫п╦п╨п╟п╩ segmentation fault.
 
-    *) Исправление: segmentation fault на Solaris.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: segmentation fault п╫п╟ Solaris.
 
-    *) Исправление: обновление исполняемого файла на лету не работало на 
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬п╠п╫п╬п╡п╩п╣п╫п╦п╣ п╦я│п©п╬п╩п╫я▐п╣п╪п╬пЁп╬ я└п╟п╧п╩п╟ п╫п╟ п╩п╣я┌я┐ п╫п╣ я─п╟п╠п╬я┌п╟п╩п╬ п╫п╟
        Linux.
 
-    *) Исправление: в списке файлов, выдаваемом модулем 
-       ngx_http_autoindex_module, не перекодировались пробелы, кавычки и 
-       знаки процента.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╡ я│п©п╦я│п╨п╣ я└п╟п╧п╩п╬п╡, п╡я▀п╢п╟п╡п╟п╣п╪п╬п╪ п╪п╬п╢я┐п╩п╣п╪
+       ngx_http_autoindex_module, п╫п╣ п©п╣я─п╣п╨п╬п╢п╦я─п╬п╡п╟п╩п╦я│я▄ п©я─п╬п╠п╣п╩я▀, п╨п╟п╡я▀я┤п╨п╦ п╦
+       п╥п╫п╟п╨п╦ п©я─п╬я├п╣п╫я┌п╟.
 
-    *) Изменение: уменьшение операций копирования.
+    *) п≤п╥п╪п╣п╫п╣п╫п╦п╣: я┐п╪п╣п╫я▄я┬п╣п╫п╦п╣ п╬п©п╣я─п╟я├п╦п╧ п╨п╬п©п╦я─п╬п╡п╟п╫п╦я▐.
 
-    *) Добавление: директива userid_p3p.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ userid_p3p.
 
 
-Изменения в nginx 0.1.4                                           26.10.2004
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.4                                           26.10.2004
 
-    *) Исправление: ошибка в модуле ngx_http_autoindex_module.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╟ п╡ п╪п╬п╢я┐п╩п╣ ngx_http_autoindex_module.
 
 
-Изменения в nginx 0.1.3                                           25.10.2004
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.3                                           25.10.2004
 
-    *) Добавление: модуль ngx_http_autoindex_module и директива autoindex.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ ngx_http_autoindex_module п╦ п╢п╦я─п╣п╨я┌п╦п╡п╟ autoindex.
 
-    *) Добавление: директива proxy_set_x_url.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ proxy_set_x_url.
 
-    *) Исправление: модуль проксировании мог привести к зацикливанию, если 
-       не использовался sendfile.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╦п╦ п╪п╬пЁ п©я─п╦п╡п╣я│я┌п╦ п╨ п╥п╟я├п╦п╨п╩п╦п╡п╟п╫п╦я▌, п╣я│п╩п╦
+       п╫п╣ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩я│я▐ sendfile.
 
 
-Изменения в nginx 0.1.2                                           21.10.2004
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.2                                           21.10.2004
 
-    *) Добавление: параметры --user=USER, --group=GROUP и 
-       --with-ld-opt=OPTIONS в configure.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п©п╟я─п╟п╪п╣я┌я─я▀ --user=USER, --group=GROUP п╦
+       --with-ld-opt=OPTIONS п╡ configure.
 
-    *) Добавление: директива server_name поддерживает *.domain.tld.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ server_name п©п╬п╢п╢п╣я─п╤п╦п╡п╟п╣я┌ *.domain.tld.
 
-    *) Исправление: улучшена переносимость на неизвестные платформы.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: я┐п╩я┐я┤я┬п╣п╫п╟ п©п╣я─п╣п╫п╬я│п╦п╪п╬я│я┌я▄ п╫п╟ п╫п╣п╦п╥п╡п╣я│я┌п╫я▀п╣ п©п╩п╟я┌я└п╬я─п╪я▀.
 
-    *) Исправление: нельзя переконфигурировать nginx, если конфигурационный 
-       файл указан в командной строке; ошибка появилась в 0.1.1.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╫п╣п╩я▄п╥я▐ п©п╣я─п╣п╨п╬п╫я└п╦пЁя┐я─п╦я─п╬п╡п╟я┌я▄ nginx, п╣я│п╩п╦ п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╬п╫п╫я▀п╧
+       я└п╟п╧п╩ я┐п╨п╟п╥п╟п╫ п╡ п╨п╬п╪п╟п╫п╢п╫п╬п╧ я│я┌я─п╬п╨п╣; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄ п╡ 0.1.1.
 
-    *) Исправление: модуль проксировании мог привести к зацикливанию, если 
-       не использовался sendfile.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╦п╦ п╪п╬пЁ п©я─п╦п╡п╣я│я┌п╦ п╨ п╥п╟я├п╦п╨п╩п╦п╡п╟п╫п╦я▌, п╣я│п╩п╦
+       п╫п╣ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╩я│я▐ sendfile.
 
-    *) Исправление: при использовании sendfile текст ответа не 
-       перекодировался согласно директивам модуля charset; ошибка появилась 
-       в 0.1.1.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ sendfile я┌п╣п╨я│я┌ п╬я┌п╡п╣я┌п╟ п╫п╣
+       п©п╣я─п╣п╨п╬п╢п╦я─п╬п╡п╟п╩я│я▐ я│п╬пЁп╩п╟я│п╫п╬ п╢п╦я─п╣п╨я┌п╦п╡п╟п╪ п╪п╬п╢я┐п╩я▐ charset; п╬я┬п╦п╠п╨п╟ п©п╬я▐п╡п╦п╩п╟я│я▄
+       п╡ 0.1.1.
 
-    *) Исправление: очень редкая ошибка при обработке kqueue.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┤п╣п╫я▄ я─п╣п╢п╨п╟я▐ п╬я┬п╦п╠п╨п╟ п©я─п╦ п╬п╠я─п╟п╠п╬я┌п╨п╣ kqueue.
 
-    *) Исправление: модуль сжатия сжимал уже сжатые ответы, полученные при 
-       проксировании.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╪п╬п╢я┐п╩я▄ я│п╤п╟я┌п╦я▐ я│п╤п╦п╪п╟п╩ я┐п╤п╣ я│п╤п╟я┌я▀п╣ п╬я┌п╡п╣я┌я▀, п©п╬п╩я┐я┤п╣п╫п╫я▀п╣ п©я─п╦
+       п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╦п╦.
 
 
-Изменения в nginx 0.1.1                                           11.10.2004
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.1                                           11.10.2004
 
-    *) Добавление: директива gzip_types.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ gzip_types.
 
-    *) Добавление: директива tcp_nodelay.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ tcp_nodelay.
 
-    *) Добавление: директива send_lowat работает не только на платформах, 
-       поддерживающих kqueue NOTE_LOWAT, но и на всех, поддерживающих 
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: п╢п╦я─п╣п╨я┌п╦п╡п╟ send_lowat я─п╟п╠п╬я┌п╟п╣я┌ п╫п╣ я┌п╬п╩я▄п╨п╬ п╫п╟ п©п╩п╟я┌я└п╬я─п╪п╟я┘,
+       п©п╬п╢п╢п╣я─п╤п╦п╡п╟я▌я┴п╦я┘ kqueue NOTE_LOWAT, п╫п╬ п╦ п╫п╟ п╡я│п╣я┘, п©п╬п╢п╢п╣я─п╤п╦п╡п╟я▌я┴п╦я┘
        SO_SNDLOWAT.
 
-    *) Добавление: эмуляция setproctitle() для Linux и Solaris.
+    *) п■п╬п╠п╟п╡п╩п╣п╫п╦п╣: я█п╪я┐п╩я▐я├п╦я▐ setproctitle() п╢п╩я▐ Linux п╦ Solaris.
 
-    *) Исправление: ошибка при переписывании заголовка "Location" при 
-       проксировании.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╟ п©я─п╦ п©п╣я─п╣п©п╦я│я▀п╡п╟п╫п╦п╦ п╥п╟пЁп╬п╩п╬п╡п╨п╟ "Location" п©я─п╦
+       п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╦п╦.
 
-    *) Исправление: ошибка в модуле ngx_http_chunked_module, приводившая к 
-       зацикливанию.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╟ п╡ п╪п╬п╢я┐п╩п╣ ngx_http_chunked_module, п©я─п╦п╡п╬п╢п╦п╡я┬п╟я▐ п╨
+       п╥п╟я├п╦п╨п╩п╦п╡п╟п╫п╦я▌.
 
-    *) Исправление: ошибки в модуле /dev/poll.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╬я┬п╦п╠п╨п╦ п╡ п╪п╬п╢я┐п╩п╣ /dev/poll.
 
-    *) Исправление: при проксировании и использовании временных файлов 
-       ответы портились.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п©я─п╦ п©я─п╬п╨я│п╦я─п╬п╡п╟п╫п╦п╦ п╦ п╦я│п©п╬п╩я▄п╥п╬п╡п╟п╫п╦п╦ п╡я─п╣п╪п╣п╫п╫я▀я┘ я└п╟п╧п╩п╬п╡
+       п╬я┌п╡п╣я┌я▀ п©п╬я─я┌п╦п╩п╦я│я▄.
 
-    *) Исправление: бэкенду передавались запросы с неперекодированными 
-       символами.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╠я█п╨п╣п╫п╢я┐ п©п╣я─п╣п╢п╟п╡п╟п╩п╦я│я▄ п╥п╟п©я─п╬я│я▀ я│ п╫п╣п©п╣я─п╣п╨п╬п╢п╦я─п╬п╡п╟п╫п╫я▀п╪п╦
+       я│п╦п╪п╡п╬п╩п╟п╪п╦.
 
-    *) Исправление: на Linux 2.4 при конфигурации сборки нужно было 
-       обязательно использовать параметр --with-poll_module.
+    *) п≤я│п©я─п╟п╡п╩п╣п╫п╦п╣: п╫п╟ Linux 2.4 п©я─п╦ п╨п╬п╫я└п╦пЁя┐я─п╟я├п╦п╦ я│п╠п╬я─п╨п╦ п╫я┐п╤п╫п╬ п╠я▀п╩п╬
+       п╬п╠я▐п╥п╟я┌п╣п╩я▄п╫п╬ п╦я│п©п╬п╩я▄п╥п╬п╡п╟я┌я▄ п©п╟я─п╟п╪п╣я┌я─ --with-poll_module.
 
 
-Изменения в nginx 0.1.0                                           04.10.2004
+п≤п╥п╪п╣п╫п╣п╫п╦я▐ п╡ nginx 0.1.0                                           04.10.2004
 
-    *) Первая публично доступная версия.
+    *) п÷п╣я─п╡п╟я▐ п©я┐п╠п╩п╦я┤п╫п╬ п╢п╬я│я┌я┐п©п╫п╟я▐ п╡п╣я─я│п╦я▐.
 
--- nginx-1.0.0.orig/CHANGES
+++ nginx-1.0.0/CHANGES
@@ -1,10 +1,416 @@
 
+Changes with nginx 1.0.14                                        15 Mar 2012
+
+    *) Security: content of previously freed memory might be sent to a
+       client if backend returned specially crafted response.
+       Thanks to Matthew Daley.
+
+
+Changes with nginx 1.0.13                                        05 Mar 2012
+
+    *) Feature: the "return" and "error_page" directives can now be used to
+       return 307 redirections.
+
+    *) Bugfix: a segmentation fault might occur in a worker process if the
+       "resolver" directive was used and there was no "error_log" directive
+       specified at global level.
+       Thanks to Roman Arutyunyan.
+
+    *) Bugfix: memory leaks.
+       Thanks to Lanshun Zhou.
+
+    *) Bugfix: nginx might log incorrect error "upstream prematurely closed
+       connection" instead of correct "upstream sent too big header" one.
+       Thanks to Feibo Li.
+
+    *) Bugfix: on ZFS filesystem disk cache size might be calculated
+       incorrectly; the bug had appeared in 1.0.1.
+
+    *) Bugfix: the number of internal redirects to named locations was not
+       limited.
+
+    *) Bugfix: temporary files might be not removed if the "proxy_store"
+       directive was used with SSI includes.
+
+    *) Bugfix: in some cases non-cacheable variables (such as the $args
+       variable) returned old empty cached value.
+
+    *) Bugfix: the "proxy_redirect" directives might be inherited
+       incorrectly.
+
+    *) Bugfix: nginx could not be built with the ngx_http_perl_module if the
+       --with-openssl option was used.
+
+    *) Bugfix: nginx could not be built by the icc 12.1 compiler.
+
+
+Changes with nginx 1.0.12                                        06 Feb 2012
+
+    *) Feature: the "TLSv1.1" and "TLSv1.2" parameters of the
+       "ssl_protocols" directive.
+
+    *) Feature: the "if" SSI command supports captures in regular
+       expressions.
+
+    *) Bugfix: the "if" SSI command did not work inside the "block" command.
+
+    *) Bugfix: in AIO error handling on FreeBSD.
+
+    *) Bugfix: in the OpenSSL library initialization.
+
+    *) Bugfix: the "worker_cpu_affinity" directive might not work.
+
+    *) Bugfix: the "limit_conn_log_level" and "limit_req_log_level"
+       directives might not work.
+
+    *) Bugfix: the "read_ahead" directive might not work combined with
+       "try_files" and "open_file_cache".
+
+    *) Bugfix: the "proxy_cache_use_stale" directive with "error" parameter
+       did not return answer from cache if there were no live upstreams.
+
+    *) Bugfix: a segmentation fault might occur in a worker process if small
+       time was used in the "inactive" parameter of the "proxy_cache_path"
+       directive.
+
+    *) Bugfix: responses from cache might hang.
+
+    *) Bugfix: in error handling while connecting to a backend.
+       Thanks to Piotr Sikora.
+
+    *) Bugfix: in the "epoll" event method.
+       Thanks to Yichun Zhang.
+
+    *) Bugfix: the $sent_http_cache_control variable might contain a wrong
+       value if the "expires" directive was used.
+       Thanks to Yichun Zhang.
+
+    *) Bugfix: the "limit_rate" directive did not allow to use full
+       throughput, even if limit value was very high.
+
+    *) Bugfix: the "sendfile_max_chunk" directive did not work, if the
+       "limit_rate" directive was used.
+
+    *) Bugfix: nginx could not be built on Solaris; the bug had appeared in
+       1.0.11.
+
+    *) Bugfix: in the ngx_http_scgi_module.
+
+    *) Bugfix: in the ngx_http_mp4_module.
+
+
+Changes with nginx 1.0.11                                        15 Dec 2011
+
+    *) Change: now double quotes are encoded in an "echo" SSI-command
+       output.
+       Thanks to Zaur Abasmirzoev.
+
+    *) Feature: the "image_filter_sharpen" directive.
+
+    *) Bugfix: a segmentation fault might occur in a worker process if SNI
+       was used; the bug had appeared in 1.0.9.
+
+    *) Bugfix: SIGWINCH signal did not work after first binary upgrade; the
+       bug had appeared in 1.0.9.
+
+    *) Bugfix: the "If-Modified-Since", "If-Range", etc. client request
+       header lines might be passed to backend while caching; or not passed
+       without caching if caching was enabled in another part of the
+       configuration.
+
+    *) Bugfix: in the "scgi_param" directive, if complex parameters were
+       used.
+
+    *) Bugfix: "add_header" and "expires" directives did not work if a
+       request was proxied and response status code was 206.
+
+    *) Bugfix: in the "expires @time" directive.
+
+    *) Bugfix: in the ngx_http_flv_module.
+       Thanks to Piotr Sikora.
+
+    *) Bugfix: in the ngx_http_mp4_module.
+
+    *) Bugfix: nginx could not be built on FreeBSD 10.
+
+    *) Bugfix: nginx could not be built on AIX.
+
+
+Changes with nginx 1.0.10                                        15 Nov 2011
+
+    *) Bugfix: a segmentation fault might occur in a worker process if
+       resolver got a big DNS response.
+       Thanks to Ben Hawkes.
+
+    *) Bugfix: in cache key calculation if internal MD5 implementation was
+       used; the bug had appeared in 1.0.4.
+
+    *) Bugfix: the module ngx_http_mp4_module sent incorrect
+       "Content-Length" response header line if the "start" argument was
+       used.
+       Thanks to Piotr Sikora.
+
+
+Changes with nginx 1.0.9                                         01 Nov 2011
+
+    *) Change: now the 0x7F-0x1F characters are escaped as \xXX in an
+       access_log.
+
+    *) Change: now SIGWINCH signal works only in daemon mode.
+
+    *) Feature: "proxy/fastcgi/scgi/uwsgi_ignore_headers" directives support
+       the following additional values: X-Accel-Limit-Rate,
+       X-Accel-Buffering, X-Accel-Charset.
+
+    *) Feature: decrease of memory consumption if SSL is used.
+
+    *) Feature: accept filters are now supported on NetBSD.
+
+    *) Feature: the "uwsgi_buffering" and "scgi_buffering" directives.
+       Thanks to Peter Smit.
+
+    *) Bugfix: a segmentation fault occurred on start or while
+       reconfiguration if the "ssl" directive was used at http level and
+       there was no "ssl_certificate" defined.
+
+    *) Bugfix: some UTF-8 characters were processed incorrectly.
+       Thanks to Alexey Kuts.
+
+    *) Bugfix: the ngx_http_rewrite_module directives specified at "server"
+       level were executed twice if no matching locations were defined.
+
+    *) Bugfix: a socket leak might occurred if "aio sendfile" was used.
+
+    *) Bugfix: connections with fast clients might be closed after
+       send_timeout if file AIO was used.
+
+    *) Bugfix: in the ngx_http_autoindex_module.
+
+    *) Bugfix: the module ngx_http_mp4_module did not support seeking on
+       32-bit platforms.
+
+    *) Bugfix: non-cacheable responses might be cached if
+       "proxy_cache_bypass" directive was used.
+       Thanks to John Ferlito.
+
+    *) Bugfix: cached responses with an empty body were returned
+       incorrectly; the bug had appeared in 0.8.31.
+
+    *) Bugfix: 201 responses of the ngx_http_dav_module were incorrect; the
+       bug had appeared in 0.8.32.
+
+    *) Bugfix: in the "return" directive.
+
+    *) Bugfix: the "ssl_verify_client", "ssl_verify_depth", and
+       "ssl_prefer_server_ciphers" directives might work incorrectly if SNI
+       was used.
+
+
+Changes with nginx 1.0.8                                         01 Oct 2011
+
+    *) Bugfix: nginx could not be built --with-http_mp4_module and without
+       --with-debug option.
+
+
+Changes with nginx 1.0.7                                         30 Sep 2011
+
+    *) Change: now if total size of all ranges is greater than source
+       response size, then nginx disables ranges and returns just the source
+       response.
+
+    *) Feature: the "max_ranges" directive.
+
+    *) Feature: the module ngx_http_mp4_module.
+
+    *) Feature: the "worker_aio_requests" directive.
+
+    *) Bugfix: if nginx was built --with-file-aio it could not be run on
+       Linux kernel which did not support AIO.
+
+    *) Bugfix: in Linux AIO error processing.
+       Thanks to Hagai Avrahami.
+
+    *) Bugfix: in Linux AIO combined with open_file_cache.
+
+    *) Bugfix: open_file_cache did not update file info on retest if file
+       was not atomically changed.
+
+    *) Bugfix: reduced memory consumption for long-lived requests.
+
+    *) Bugfix: in the "proxy/fastcgi/scgi/uwsgi_ignore_client_abort"
+       directives.
+
+    *) Bugfix: nginx could not be built on MacOSX 10.7.
+
+    *) Bugfix: request body might be processed incorrectly if client used
+       pipelining.
+
+    *) Bugfix: in the "request_body_in_single_buf" directive.
+
+    *) Bugfix: in "proxy_set_body" and "proxy_pass_request_body" directives
+       if SSL connection to backend was used.
+
+    *) Bugfix: nginx hogged CPU if all servers in an upstream were marked as
+       "down".
+
+    *) Bugfix: a segmentation fault might occur during reconfiguration if
+       ssl_session_cache was defined but not used in previous configuration.
+
+    *) Bugfix: a segmentation fault might occur in a worker process if many
+       backup servers were used in an upstream.
+
+
+Changes with nginx 1.0.6                                         29 Aug 2011
+
+    *) Feature: cache loader run time decrease.
+
+    *) Feature: loading time decrease of configuration with large number of
+       HTTPS sites.
+
+    *) Feature: now nginx supports ECDHE key exchange ciphers.
+       Thanks to Adrian Kotelba.
+
+    *) Feature: the "lingering_close" directive.
+
+    *) Feature: now shared zones and caches use POSIX semaphores on Solaris.
+       Thanks to Den Ivanov.
+
+    *) Bugfix: nginx could not be built on Linux 3.0.
+
+    *) Bugfix: a segmentation fault might occur in a worker process if
+       "fastcgi/scgi/uwsgi_param" directives were used with values starting
+       with "HTTP_"; the bug had appeared in 0.8.40.
+
+    *) Bugfix: in closing connection for pipelined requests.
+
+    *) Bugfix: nginx did not disable gzipping if client sent "gzip;q=0" in
+       "Accept-Encoding" request header line.
+
+    *) Bugfix: in timeout in unbuffered proxied mode.
+
+    *) Bugfix: memory leaks when a "proxy_pass" directive contains variables
+       and proxies to an HTTPS backend.
+
+    *) Bugfix: in parameter validaiton of a "proxy_pass" directive with
+       variables.
+       Thanks to Lanshun Zhou.
+
+    *) Bugfix: SSL did not work on QNX.
+
+    *) Bugfix: SSL modules could not be built by gcc 4.6 without
+       --with-debug option.
+
+
+Changes with nginx 1.0.5                                         19 Jul 2011
+
+    *) Change: now default SSL ciphers are "HIGH:!aNULL:!MD5".
+       Thanks to Rob Stradling.
+
+    *) Feature: the "referer_hash_max_size" and "referer_hash_bucket_size"
+       directives.
+       Thanks to Witold Filipczyk.
+
+    *) Feature: $uid_reset variable.
+
+    *) Bugfix: a segmentation fault might occur in a worker process, if a
+       caching was used.
+       Thanks to Lanshun Zhou.
+
+    *) Bugfix: worker processes may got caught in an endless loop during
+       reconfiguration, if a caching was used; the bug had appeared in
+       0.8.48.
+       Thanks to Maxim Dounin.
+
+    *) Bugfix: "stalled cache updating" alert.
+       Thanks to Maxim Dounin.
+
+
+Changes with nginx 1.0.4                                         01 Jun 2011
+
+    *) Change: now regular expressions case sensitivity in the "map"
+       directive is given by prefixes "~" or "~*".
+
+    *) Feature: now shared zones and caches use POSIX semaphores on Linux.
+       Thanks to Denis F. Latypoff.
+
+    *) Bugfix: "stalled cache updating" alert.
+
+    *) Bugfix: nginx could not be built --without-http_auth_basic_module;
+       the bug had appeared in 1.0.3.
+
+
+Changes with nginx 1.0.3                                         25 May 2011
+
+    *) Feature: the "auth_basic_user_file" directive supports "$apr1",
+       "{PLAIN}", and "{SSHA}" password encryption methods.
+       Thanks to Maxim Dounin.
+
+    *) Feature: the "geoip_org" directive and $geoip_org variable.
+       Thanks to Alexander Uskov, Arnaud Granal, and Denis F. Latypoff.
+
+    *) Feature: ngx_http_geo_module and ngx_http_geoip_module support IPv4
+       addresses mapped to IPv6 addresses.
+
+    *) Bugfix: a segmentation fault occurred in a worker process during
+       testing IPv4 address mapped to IPv6 address, if access or deny rules
+       were defined only for IPv6; the bug had appeared in 0.8.22.
+
+    *) Bugfix: a cached response may be broken if proxy/fastcgi/scgi/
+       uwsgi_cache_bypass and proxy/fastcgi/scgi/uwsgi_no_cache directive
+       values were different; the bug had appeared in 0.8.46.
+
+
+Changes with nginx 1.0.2                                         10 May 2011
+
+    *) Feature: now shared zones and caches use POSIX semaphores.
+
+    *) Bugfix: in the "rotate" parameter of the "image_filter" directive.
+       Thanks to Adam Bocim.
+
+    *) Bugfix: nginx could not be built on Solaris; the bug had appeared in
+       1.0.1.
+
+
+Changes with nginx 1.0.1                                         03 May 2011
+
+    *) Change: now the "split_clients" directive uses MurmurHash2 algorithm
+       because of better distribution.
+       Thanks to Oleg Mamontov.
+
+    *) Change: now long strings starting with zero are not considered as
+       false values.
+       Thanks to Maxim Dounin.
+
+    *) Change: now nginx uses a default listen backlog value 511 on Linux.
+
+    *) Feature: the $upstream_... variables may be used in the SSI and perl
+       modules.
+
+    *) Bugfix: now nginx limits better disk cache size.
+       Thanks to Oleg Mamontov.
+
+    *) Bugfix: a segmentation fault might occur while parsing incorrect IPv4
+       address; the bug had appeared in 0.9.3.
+       Thanks to Maxim Dounin.
+
+    *) Bugfix: nginx could not be built by gcc 4.6 without --with-debug
+       option.
+
+    *) Bugfix: nginx could not be built on Solaris 9 and earlier; the bug
+       had appeared in 0.9.3.
+       Thanks to Dagobert Michelsen.
+
+    *) Bugfix: $request_time variable had invalid values if subrequests were
+       used; the bug had appeared in 0.8.47.
+       Thanks to Igor A. Valcov.
+
+
 Changes with nginx 1.0.0                                         12 Apr 2011
 
     *) Bugfix: a cache manager might hog CPU after reload.
        Thanks to Maxim Dounin.
 
-    *) Bugfix: an "image_filter crop" directive worked incorrectly coupled 
+    *) Bugfix: an "image_filter crop" directive worked incorrectly coupled
        with an "image_filter rotate 180" directive.
 
     *) Bugfix: a "satisfy any" directive disabled custom 401 error page.
@@ -12,22 +418,22 @@ Changes with nginx 1.0.0                
 
 Changes with nginx 0.9.7                                         04 Apr 2011
 
-    *) Feature: now keepalive connections may be closed premature, if there 
+    *) Feature: now keepalive connections may be closed premature, if there
        are no free worker connections.
        Thanks to Maxim Dounin.
 
     *) Feature: the "rotate" parameter of the "image_filter" directive.
        Thanks to Adam Bocim.
 
-    *) Bugfix: a case when a backend in "fastcgi_pass", "scgi_pass", or 
-       "uwsgi_pass" directives is given by expression and refers to a 
+    *) Bugfix: a case when a backend in "fastcgi_pass", "scgi_pass", or
+       "uwsgi_pass" directives is given by expression and refers to a
        defined upstream.
 
 
 Changes with nginx 0.9.6                                         21 Mar 2011
 
-    *) Feature: the "map" directive supports regular expressions as value 
-       of the first parameter.
+    *) Feature: the "map" directive supports regular expressions as value of
+       the first parameter.
 
     *) Feature: $time_iso8601 access_log variable.
        Thanks to Michael Lustfield.
@@ -35,20 +441,19 @@ Changes with nginx 0.9.6                
 
 Changes with nginx 0.9.5                                         21 Feb 2011
 
-    *) Change: now nginx uses a default listen backlog value -1 on 
-       Linux.
+    *) Change: now nginx uses a default listen backlog value -1 on Linux.
        Thanks to Andrei Nigmatulin.
 
-    *) Feature: the "utf8" parameter of "geoip_country" and "geoip_city" 
+    *) Feature: the "utf8" parameter of "geoip_country" and "geoip_city"
        directives.
        Thanks to Denis F. Latypoff.
 
-    *) Bugfix: in a default "proxy_redirect" directive if "proxy_pass" 
+    *) Bugfix: in a default "proxy_redirect" directive if "proxy_pass"
        directive has no URI part.
        Thanks to Maxim Dounin.
 
-    *) Bugfix: an "error_page" directive did not work with nonstandard 
-       error codes; the bug had appeared in 0.8.53.
+    *) Bugfix: an "error_page" directive did not work with nonstandard error
+       codes; the bug had appeared in 0.8.53.
        Thanks to Maxim Dounin.
 
 
@@ -61,23 +466,23 @@ Changes with nginx 0.9.4                
 
 Changes with nginx 0.9.3                                         13 Dec 2010
 
-    *) Bugfix: if there was a single server for given IPv6 address:port 
-       pair, then captures in regular expressions in a "server_name" 
+    *) Bugfix: if there was a single server for given IPv6 address:port
+       pair, then captures in regular expressions in a "server_name"
        directive did not work.
 
-    *) Bugfix: nginx could not be built on Solaris; the bug had appeared in 
+    *) Bugfix: nginx could not be built on Solaris; the bug had appeared in
        0.9.0.
 
 
 Changes with nginx 0.9.2                                         06 Dec 2010
 
-    *) Feature: the "If-Unmodified-Since" client request header line 
+    *) Feature: the "If-Unmodified-Since" client request header line
        support.
 
-    *) Workaround: fallback to accept() syscall if accept4() was not 
+    *) Workaround: fallback to accept() syscall if accept4() was not
        implemented; the issue had appeared in 0.9.0.
 
-    *) Bugfix: nginx could not be built on Cygwin; the bug had appeared in 
+    *) Bugfix: nginx could not be built on Cygwin; the bug had appeared in
        0.9.0.
 
     *) Bugfix: for OpenSSL vulnerability CVE-2010-4180.
@@ -86,7 +491,7 @@ Changes with nginx 0.9.2                
 
 Changes with nginx 0.9.1                                         30 Nov 2010
 
-    *) Bugfix: "return CODE message" directives did not work; the bug had 
+    *) Bugfix: "return CODE message" directives did not work; the bug had
        appeared in 0.9.0.
 
 
@@ -94,13 +499,13 @@ Changes with nginx 0.9.0                
 
     *) Feature: the "keepalive_disable" directive.
 
-    *) Feature: the "map" directive supports variables as value of a 
-       defined variable.
+    *) Feature: the "map" directive supports variables as value of a defined
+       variable.
 
-    *) Feature: the "map" directive supports empty strings as value of the 
+    *) Feature: the "map" directive supports empty strings as value of the
        first parameter.
 
-    *) Feature: the "map" directive supports expressions as the first 
+    *) Feature: the "map" directive supports expressions as the first
        parameter.
 
     *) Feature: nginx(8) manual page.
@@ -109,36 +514,36 @@ Changes with nginx 0.9.0                
     *) Feature: Linux accept4() support.
        Thanks to Simon Liu.
 
-    *) Workaround: elimination of Linux linker warning about "sys_errlist" 
+    *) Workaround: elimination of Linux linker warning about "sys_errlist"
        and "sys_nerr"; the warning had appeared in 0.8.35.
 
-    *) Bugfix: a segmentation fault might occur in a worker process, if the 
+    *) Bugfix: a segmentation fault might occur in a worker process, if the
        "auth_basic" directive was used.
        Thanks to Michail Laletin.
 
-    *) Bugfix: compatibility with ngx_http_eval_module; the bug had 
-       appeared in 0.8.42.
+    *) Bugfix: compatibility with ngx_http_eval_module; the bug had appeared
+       in 0.8.42.
 
 
 Changes with nginx 0.8.53                                        18 Oct 2010
 
-    *) Feature: now the "error_page" directive allows to change a status 
+    *) Feature: now the "error_page" directive allows to change a status
        code in a redirect.
 
-    *) Feature: the "gzip_disable" directive supports special "degradation" 
+    *) Feature: the "gzip_disable" directive supports special "degradation"
        mask.
 
     *) Bugfix: a socket leak might occurred if file AIO was used.
        Thanks to Maxim Dounin.
 
-    *) Bugfix: if the first server had no "listen" directive and there was 
-       no explicit default server, then a next server with a "listen" 
+    *) Bugfix: if the first server had no "listen" directive and there was
+       no explicit default server, then a next server with a "listen"
        directive became the default server; the bug had appeared in 0.8.21.
 
 
 Changes with nginx 0.8.52                                        28 Sep 2010
 
-    *) Bugfix: nginx used SSL mode for a listen socket if any listen option 
+    *) Bugfix: nginx used SSL mode for a listen socket if any listen option
        was set; the bug had appeared in 0.8.51.
 
 
@@ -146,75 +551,75 @@ Changes with nginx 0.8.51               
 
     *) Change: the "secure_link_expires" directive has been canceled.
 
-    *) Change: a logging level of resolver errors has been lowered from 
+    *) Change: a logging level of resolver errors has been lowered from
        "alert" to "error".
 
-    *) Feature: now a listen socket "ssl" parameter may be set several 
+    *) Feature: now a listen socket "ssl" parameter may be set several
        times.
 
 
 Changes with nginx 0.8.50                                        02 Sep 2010
 
-    *) Feature: the "secure_link", "secure_link_md5", and 
+    *) Feature: the "secure_link", "secure_link_md5", and
        "secure_link_expires" directives of the ngx_http_secure_link_module.
 
     *) Feature: the -q switch.
        Thanks to Gena Makhomed.
 
-    *) Bugfix: worker processes may got caught in an endless loop during 
-       reconfiguration, if a caching was used; the bug had appeared in 
+    *) Bugfix: worker processes may got caught in an endless loop during
+       reconfiguration, if a caching was used; the bug had appeared in
        0.8.48.
 
     *) Bugfix: in the "gzip_disable" directive.
        Thanks to Derrick Petzold.
 
-    *) Bugfix: nginx/Windows could not send stop, quit, reopen, and reload 
+    *) Bugfix: nginx/Windows could not send stop, quit, reopen, and reload
        signals to a process run in other session.
 
 
 Changes with nginx 0.8.49                                        09 Aug 2010
 
-    *) Feature: the "image_filter_jpeg_quality" directive supports 
+    *) Feature: the "image_filter_jpeg_quality" directive supports
        variables.
 
-    *) Bugfix: a segmentation fault might occur in a worker process, if the 
-       $geoip_region_name variables was used; the bug had appeared in 
+    *) Bugfix: a segmentation fault might occur in a worker process, if the
+       $geoip_region_name variables was used; the bug had appeared in
        0.8.48.
 
-    *) Bugfix: errors intercepted by error_page were cached only for next 
+    *) Bugfix: errors intercepted by error_page were cached only for next
        request; the bug had appeared in 0.8.48.
 
 
 Changes with nginx 0.8.48                                        03 Aug 2010
 
-    *) Change: now the "server_name" directive default value is an empty 
+    *) Change: now the "server_name" directive default value is an empty
        name "".
        Thanks to Gena Makhomed.
 
-    *) Change: now the "server_name_in_redirect" directive default value is 
+    *) Change: now the "server_name_in_redirect" directive default value is
        "off".
 
-    *) Feature: the $geoip_dma_code, $geoip_area_code, and 
+    *) Feature: the $geoip_dma_code, $geoip_area_code, and
        $geoip_region_name variables.
        Thanks to Christine McGonagle.
 
-    *) Bugfix: the "proxy_pass", "fastcgi_pass", "uwsgi_pass", and 
-       "scgi_pass" directives were not inherited inside "limit_except" 
+    *) Bugfix: the "proxy_pass", "fastcgi_pass", "uwsgi_pass", and
+       "scgi_pass" directives were not inherited inside "limit_except"
        blocks.
 
-    *) Bugfix: the "proxy_cache_min_uses", "fastcgi_cache_min_uses" 
-       "uwsgi_cache_min_uses", and "scgi_cache_min_uses" directives did not 
+    *) Bugfix: the "proxy_cache_min_uses", "fastcgi_cache_min_uses"
+       "uwsgi_cache_min_uses", and "scgi_cache_min_uses" directives did not
        work; the bug had appeared in 0.8.46.
 
-    *) Bugfix: the "fastcgi_split_path_info" directive used incorrectly 
+    *) Bugfix: the "fastcgi_split_path_info" directive used incorrectly
        captures, if only parts of an URI were captured.
        Thanks to Yuriy Taraday and Frank Enderle.
 
-    *) Bugfix: the "rewrite" directive did not escape a ";" character 
-       during copying from URI to query string.
+    *) Bugfix: the "rewrite" directive did not escape a ";" character during
+       copying from URI to query string.
        Thanks to Daisuke Murase.
 
-    *) Bugfix: the ngx_http_image_filter_module closed a connection, if an 
+    *) Bugfix: the ngx_http_image_filter_module closed a connection, if an
        image was larger than "image_filter_buffer" size.
 
 
@@ -224,22 +629,22 @@ Changes with nginx 0.8.47               
 
     *) Bugfix: errors intercepted by error_page could not be cached.
 
-    *) Bugfix: a cache manager process may got caught in an endless loop, 
-       if max_size parameter was used; the bug had appeared in 0.8.46.
+    *) Bugfix: a cache manager process may got caught in an endless loop, if
+       max_size parameter was used; the bug had appeared in 0.8.46.
 
 
 Changes with nginx 0.8.46                                        19 Jul 2010
 
-    *) Change: now the "proxy_no_cache", "fastcgi_no_cache", 
-       "uwsgi_no_cache", and "scgi_no_cache" directives affect on a cached 
+    *) Change: now the "proxy_no_cache", "fastcgi_no_cache",
+       "uwsgi_no_cache", and "scgi_no_cache" directives affect on a cached
        response saving only.
 
-    *) Feature: the "proxy_cache_bypass", "fastcgi_cache_bypass", 
+    *) Feature: the "proxy_cache_bypass", "fastcgi_cache_bypass",
        "uwsgi_cache_bypass", and "scgi_cache_bypass" directives.
 
-    *) Bugfix: nginx did not free memory in cache keys zones if there was 
-       an error during working with backend: the memory was freed only 
-       after inactivity time or on memory low condition.
+    *) Bugfix: nginx did not free memory in cache keys zones if there was an
+       error during working with backend: the memory was freed only after
+       inactivity time or on memory low condition.
 
 
 Changes with nginx 0.8.45                                        13 Jul 2010
@@ -247,23 +652,23 @@ Changes with nginx 0.8.45               
     *) Feature: ngx_http_xslt_filter improvements.
        Thanks to Laurence Rowe.
 
-    *) Bugfix: SSI response might be truncated after include with 
+    *) Bugfix: SSI response might be truncated after include with
        wait="yes"; the bug had appeared in 0.7.25.
        Thanks to Maxim Dounin.
 
-    *) Bugfix: the "listen" directive did not support the "setfib=0" 
+    *) Bugfix: the "listen" directive did not support the "setfib=0"
        parameter.
 
 
 Changes with nginx 0.8.44                                        05 Jul 2010
 
-    *) Change: now nginx does not cache by default backend responses, if 
+    *) Change: now nginx does not cache by default backend responses, if
        they have a "Set-Cookie" header line.
 
     *) Feature: the "listen" directive supports the "setfib" parameter.
        Thanks to Andrew Filonov.
 
-    *) Bugfix: the "sub_filter" directive might change character case on 
+    *) Bugfix: the "sub_filter" directive might change character case on
        partial match.
 
     *) Bugfix: compatibility with HP/UX.
@@ -278,22 +683,21 @@ Changes with nginx 0.8.43               
 
     *) Feature: large geo ranges base loading speed-up.
 
-    *) Bugfix: an error_page redirection to "location /zero {return 204;}" 
-       without changing status code kept the error body; the bug had 
+    *) Bugfix: an error_page redirection to "location /zero {return 204;}"
+       without changing status code kept the error body; the bug had
        appeared in 0.8.42.
 
-    *) Bugfix: nginx might close IPv6 listen socket during 
-       reconfiguration.
+    *) Bugfix: nginx might close IPv6 listen socket during reconfiguration.
        Thanks to Maxim Dounin.
 
-    *) Bugfix: the $uid_set variable may be used at any request processing 
+    *) Bugfix: the $uid_set variable may be used at any request processing
        stage.
 
 
 Changes with nginx 0.8.42                                        21 Jun 2010
 
-    *) Change: now nginx tests locations given by regular expressions, if 
-       request was matched exactly by a location given by a prefix string. 
+    *) Change: now nginx tests locations given by regular expressions, if
+       request was matched exactly by a location given by a prefix string.
        The previous behavior has been introduced in 0.7.1.
 
     *) Feature: the ngx_http_scgi_module.
@@ -304,17 +708,17 @@ Changes with nginx 0.8.42               
 
 Changes with nginx 0.8.41                                        15 Jun 2010
 
-    *) Security: nginx/Windows worker might be terminated abnormally if a 
+    *) Security: nginx/Windows worker might be terminated abnormally if a
        requested file name has invalid UTF-8 encoding.
 
     *) Change: now nginx allows to use spaces in a request line.
 
-    *) Bugfix: the "proxy_redirect" directive changed incorrectly a backend 
+    *) Bugfix: the "proxy_redirect" directive changed incorrectly a backend
        "Refresh" response header line.
        Thanks to Andrey Andreew and Max Sogin.
 
-    *) Bugfix: nginx did not support path without host name in 
-       "Destination" request header line.
+    *) Bugfix: nginx did not support path without host name in "Destination"
+       request header line.
 
 
 Changes with nginx 0.8.40                                        07 Jun 2010
@@ -325,26 +729,26 @@ Changes with nginx 0.8.40               
     *) Feature: the ngx_http_uwsgi_module.
        Thanks to Roberto De Ioris.
 
-    *) Feature: a "fastcgi_param" directive with value starting with 
-       "HTTP_" overrides a client request header line.
+    *) Feature: a "fastcgi_param" directive with value starting with "HTTP_"
+       overrides a client request header line.
 
-    *) Bugfix: the "If-Modified-Since", "If-Range", etc. client request 
+    *) Bugfix: the "If-Modified-Since", "If-Range", etc. client request
        header lines were passed to FastCGI-server while caching.
 
-    *) Bugfix: listen unix domain socket could not be changed during 
+    *) Bugfix: listen unix domain socket could not be changed during
        reconfiguration.
        Thanks to Maxim Dounin.
 
 
 Changes with nginx 0.8.39                                        31 May 2010
 
-    *) Bugfix: an inherited "alias" directive worked incorrectly in 
+    *) Bugfix: an inherited "alias" directive worked incorrectly in
        inclusive location.
 
-    *) Bugfix: in "alias" with variables and "try_files" directives 
+    *) Bugfix: in "alias" with variables and "try_files" directives
        combination.
 
-    *) Bugfix: listen unix domain and IPv6 sockets did not inherit while 
+    *) Bugfix: listen unix domain and IPv6 sockets did not inherit while
        online upgrade.
        Thanks to Maxim Dounin.
 
@@ -353,15 +757,15 @@ Changes with nginx 0.8.38               
 
     *) Feature: the "proxy_no_cache" and "fastcgi_no_cache" directives.
 
-    *) Feature: now the "rewrite" directive does a redirect automatically 
-       if the $scheme variable is used.
+    *) Feature: now the "rewrite" directive does a redirect automatically if
+       the $scheme variable is used.
        Thanks to Piotr Sikora.
 
-    *) Bugfix: now "limit_req" delay directive conforms to the described 
+    *) Bugfix: now "limit_req" delay directive conforms to the described
        algorithm.
        Thanks to Maxim Dounin.
 
-    *) Bugfix: the $uid_got variable might not be used in the SSI and perl 
+    *) Bugfix: the $uid_got variable might not be used in the SSI and perl
        modules.
 
 
@@ -371,31 +775,31 @@ Changes with nginx 0.8.37               
 
     *) Feature: the "map" directive supports keys more than 255 characters.
 
-    *) Bugfix: nginx ignored the "private" and "no-store" values in the 
+    *) Bugfix: nginx ignored the "private" and "no-store" values in the
        "Cache-Control" backend response header line.
 
-    *) Bugfix: a "stub" parameter of an "include" SSI directive was not 
+    *) Bugfix: a "stub" parameter of an "include" SSI directive was not
        used, if empty response has 200 status code.
 
-    *) Bugfix: if a proxied or FastCGI request was internally redirected to 
-       another proxied or FastCGI location, then a segmentation fault might 
+    *) Bugfix: if a proxied or FastCGI request was internally redirected to
+       another proxied or FastCGI location, then a segmentation fault might
        occur in a worker process; the bug had appeared in 0.8.33.
        Thanks to Yichun Zhang.
 
-    *) Bugfix: IMAP connections may hang until they timed out while talking 
+    *) Bugfix: IMAP connections may hang until they timed out while talking
        to Zimbra server.
        Thanks to Alan Batie.
 
 
 Changes with nginx 0.8.36                                        22 Apr 2010
 
-    *) Bugfix: the ngx_http_dav_module handled incorrectly the DELETE, 
-       COPY, and MOVE methods for symlinks.
+    *) Bugfix: the ngx_http_dav_module handled incorrectly the DELETE, COPY,
+       and MOVE methods for symlinks.
 
-    *) Bugfix: values of the $query_string, $arg_..., etc. variables cached 
+    *) Bugfix: values of the $query_string, $arg_..., etc. variables cached
        in main request were used by the SSI module in subrequests.
 
-    *) Bugfix: a variable value was repeatedly encoded after each an "echo" 
+    *) Bugfix: a variable value was repeatedly encoded after each an "echo"
        SSI-command output; the bug had appeared in 0.6.14.
 
     *) Bugfix: a worker process hung if a FIFO file was requested.
@@ -404,7 +808,7 @@ Changes with nginx 0.8.36               
     *) Bugfix: OpenSSL-1.0.0 compatibility on 64-bit Linux.
        Thanks to Maxim Dounin.
 
-    *) Bugfix: nginx could not be built --without-http-cache; the bug had 
+    *) Bugfix: nginx could not be built --without-http-cache; the bug had
        appeared in 0.8.35.
 
 
@@ -414,60 +818,60 @@ Changes with nginx 0.8.35               
 
     *) Feature: the "chunked_transfer_encoding" directive.
 
-    *) Bugfix: an "&" character was not escaped when it was copied in 
+    *) Bugfix: an "&" character was not escaped when it was copied in
        arguments part in a rewrite rule.
 
-    *) Bugfix: nginx might be terminated abnormally while a signal 
-       processing or if the directive "timer_resolution" was used on 
-       platforms which do not support kqueue or eventport notification 
+    *) Bugfix: nginx might be terminated abnormally while a signal
+       processing or if the directive "timer_resolution" was used on
+       platforms which do not support kqueue or eventport notification
        methods.
        Thanks to George Xie and Maxim Dounin.
 
-    *) Bugfix: if temporary files and permanent storage area resided at 
-       different file systems, then permanent file modification times were 
+    *) Bugfix: if temporary files and permanent storage area resided at
+       different file systems, then permanent file modification times were
        incorrect.
        Thanks to Maxim Dounin.
 
-    *) Bugfix: ngx_http_memcached_module might issue the error message 
+    *) Bugfix: ngx_http_memcached_module might issue the error message
        "memcached sent invalid trailer".
        Thanks to Maxim Dounin.
 
-    *) Bugfix: nginx could not built zlib-1.2.4 library using the library 
+    *) Bugfix: nginx could not built zlib-1.2.4 library using the library
        sources.
        Thanks to Maxim Dounin.
 
-    *) Bugfix: a segmentation fault occurred in a worker process, if there 
-       was large stderr output before FastCGI response; the bug had 
-       appeared in 0.8.34.
+    *) Bugfix: a segmentation fault occurred in a worker process, if there
+       was large stderr output before FastCGI response; the bug had appeared
+       in 0.8.34.
        Thanks to Maxim Dounin.
 
 
 Changes with nginx 0.8.34                                        03 Mar 2010
 
-    *) Bugfix: nginx did not support all ciphers and digests used in client 
+    *) Bugfix: nginx did not support all ciphers and digests used in client
        certificates.
        Thanks to Innocenty Enikeew.
 
-    *) Bugfix: nginx cached incorrectly FastCGI responses if there was 
-       large stderr output before response.
+    *) Bugfix: nginx cached incorrectly FastCGI responses if there was large
+       stderr output before response.
 
     *) Bugfix: nginx did not support HTTPS referrers.
 
-    *) Bugfix: nginx/Windows might not find file if path in configuration 
+    *) Bugfix: nginx/Windows might not find file if path in configuration
        was given in other character case; the bug had appeared in 0.8.33.
 
-    *) Bugfix: the $date_local variable has an incorrect value, if the "%s" 
+    *) Bugfix: the $date_local variable has an incorrect value, if the "%s"
        format was used.
        Thanks to Maxim Dounin.
 
-    *) Bugfix: if ssl_session_cache was not set or was set to "none", then 
-       during client certificate verify the error "session id context 
+    *) Bugfix: if ssl_session_cache was not set or was set to "none", then
+       during client certificate verify the error "session id context
        uninitialized" might occur; the bug had appeared in 0.7.1.
 
-    *) Bugfix: a geo range returned default value if the range included two 
+    *) Bugfix: a geo range returned default value if the range included two
        or more /16 networks and did not begin at /16 network boundary.
 
-    *) Bugfix: a block used in a "stub" parameter of an "include" SSI 
+    *) Bugfix: a block used in a "stub" parameter of an "include" SSI
        directive was output with "text/plain" MIME type.
 
     *) Bugfix: $r->sleep() did not work; the bug had appeared in 0.8.11.
@@ -481,19 +885,19 @@ Changes with nginx 0.8.33               
     *) Security: now nginx/Windows ignores short files names.
        Thanks to Dan Crowley, Core Security Technologies.
 
-    *) Change: now keepalive connections after POST requests are not 
+    *) Change: now keepalive connections after POST requests are not
        disabled for MSIE 7.0+.
        Thanks to Adam Lounds.
 
     *) Workaround: now keepalive connections are disabled for Safari.
        Thanks to Joshua Sierles.
 
-    *) Bugfix: if a proxied or FastCGI request was internally redirected to 
-       another proxied or FastCGI location, then $upstream_response_time 
-       variable may have abnormally large value; the bug had appeared in 
+    *) Bugfix: if a proxied or FastCGI request was internally redirected to
+       another proxied or FastCGI location, then $upstream_response_time
+       variable may have abnormally large value; the bug had appeared in
        0.8.7.
 
-    *) Bugfix: a segmentation fault might occur in a worker process, while 
+    *) Bugfix: a segmentation fault might occur in a worker process, while
        discarding a request body; the bug had appeared in 0.8.11.
 
 
@@ -502,68 +906,68 @@ Changes with nginx 0.8.32               
     *) Bugfix: UTF-8 encoding usage in the ngx_http_autoindex_module.
        Thanks to Maxim Dounin.
 
-    *) Bugfix: regular expression named captures worked for two names only. 
+    *) Bugfix: regular expression named captures worked for two names only.
        Thanks to Maxim Dounin.
 
-    *) Bugfix: now the "localhost" name is used in the "Host" request 
-       header line, if an unix domain socket is defined in the "auth_http" 
+    *) Bugfix: now the "localhost" name is used in the "Host" request header
+       line, if an unix domain socket is defined in the "auth_http"
        directive.
        Thanks to Maxim Dounin.
 
-    *) Bugfix: nginx did not support chunked transfer encoding for 201 
+    *) Bugfix: nginx did not support chunked transfer encoding for 201
        responses.
        Thanks to Julian Reich.
 
-    *) Bugfix: if the "expires modified" set date in the past, then a 
-       negative number was set in the "Cache-Control" response header line. 
+    *) Bugfix: if the "expires modified" set date in the past, then a
+       negative number was set in the "Cache-Control" response header line.
        Thanks to Alex Kapranoff.
 
 
 Changes with nginx 0.8.31                                        23 Dec 2009
 
-    *) Feature: now the "error_page" directive may redirect the 301 and 302 
+    *) Feature: now the "error_page" directive may redirect the 301 and 302
        responses.
 
-    *) Feature: the $geoip_city_continent_code, $geoip_latitude, and 
+    *) Feature: the $geoip_city_continent_code, $geoip_latitude, and
        $geoip_longitude variables.
        Thanks to Arvind Sundararajan.
 
-    *) Feature: now the ngx_http_image_filter_module deletes always EXIF 
-       and other application specific data if the data consume more than 5% 
-       of a JPEG file.
+    *) Feature: now the ngx_http_image_filter_module deletes always EXIF and
+       other application specific data if the data consume more than 5% of a
+       JPEG file.
 
-    *) Bugfix: nginx closed a connection if a cached response had an empty 
+    *) Bugfix: nginx closed a connection if a cached response had an empty
        body.
        Thanks to Piotr Sikora.
 
-    *) Bugfix: nginx might not be built by gcc 4.x if the -O2 or higher 
+    *) Bugfix: nginx might not be built by gcc 4.x if the -O2 or higher
        optimization option was used.
        Thanks to Maxim Dounin and Denis F. Latypoff.
 
-    *) Bugfix: regular expressions in location were always tested in 
+    *) Bugfix: regular expressions in location were always tested in
        case-sensitive mode; the bug had appeared in 0.8.25.
 
-    *) Bugfix: nginx cached a 304 response if there was the "If-None-Match" 
+    *) Bugfix: nginx cached a 304 response if there was the "If-None-Match"
        header line in a proxied request.
        Thanks to Tim Dettrick and David Kostal.
 
-    *) Bugfix: nginx/Windows tried to delete a temporary file twice if the 
+    *) Bugfix: nginx/Windows tried to delete a temporary file twice if the
        file should replace an already existent file.
 
 
 Changes with nginx 0.8.30                                        15 Dec 2009
 
-    *) Change: now the default buffer size of the 
+    *) Change: now the default buffer size of the
        "large_client_header_buffers" directive is 8K.
        Thanks to Andrew Cholakian.
 
     *) Feature: the conf/fastcgi.conf for simple FastCGI configurations.
 
-    *) Bugfix: nginx/Windows tried to rename a temporary file twice if the 
+    *) Bugfix: nginx/Windows tried to rename a temporary file twice if the
        file should replace an already existent file.
 
-    *) Bugfix: of "double free or corruption" error issued if host could 
-       not be resolved; the bug had appeared in 0.8.22.
+    *) Bugfix: of "double free or corruption" error issued if host could not
+       be resolved; the bug had appeared in 0.8.22.
        Thanks to Konstantin Svist.
 
     *) Bugfix: in libatomic usage on some platforms.
@@ -572,11 +976,11 @@ Changes with nginx 0.8.30               
 
 Changes with nginx 0.8.29                                        30 Nov 2009
 
-    *) Change: now the "009" status code is written to an access log for 
+    *) Change: now the "009" status code is written to an access log for
        proxied HTTP/0.9 responses.
 
-    *) Feature: the "addition_types", "charset_types", "gzip_types", 
-       "ssi_types", "sub_filter_types", and "xslt_types" directives support 
+    *) Feature: the "addition_types", "charset_types", "gzip_types",
+       "ssi_types", "sub_filter_types", and "xslt_types" directives support
        an "*" parameter.
 
     *) Feature: GCC 4.1+ built-in atomic operations usage.
@@ -589,63 +993,63 @@ Changes with nginx 0.8.29               
 
     *) Bugfix: cached HTTP/0.9 responses were handled incorrectly.
 
-    *) Bugfix: regular expression named captures given by "?P<...>" did not 
+    *) Bugfix: regular expression named captures given by "?P<...>" did not
        work in a "server_name" directive.
        Thanks to Maxim Dounin.
 
 
 Changes with nginx 0.8.28                                        23 Nov 2009
 
-    *) Bugfix: nginx could not be built with the --without-pcre parameter; 
+    *) Bugfix: nginx could not be built with the --without-pcre parameter;
        the bug had appeared in 0.8.25.
 
 
 Changes with nginx 0.8.27                                        17 Nov 2009
 
-    *) Bugfix: regular expressions did not work in nginx/Windows; the bug 
+    *) Bugfix: regular expressions did not work in nginx/Windows; the bug
        had appeared in 0.8.25.
 
 
 Changes with nginx 0.8.26                                        16 Nov 2009
 
-    *) Bugfix: in captures usage in "rewrite" directive; the bug had 
+    *) Bugfix: in captures usage in "rewrite" directive; the bug had
        appeared in 0.8.25.
 
-    *) Bugfix: nginx could not be built without the --with-debug option; 
-       the bug had appeared in 0.8.25.
+    *) Bugfix: nginx could not be built without the --with-debug option; the
+       bug had appeared in 0.8.25.
 
 
 Changes with nginx 0.8.25                                        16 Nov 2009
 
-    *) Change: now no message is written in an error log if a variable is 
+    *) Change: now no message is written in an error log if a variable is
        not found by $r->variable() method.
 
     *) Feature: the ngx_http_degradation_module.
 
     *) Feature: regular expression named captures.
 
-    *) Feature: now URI part is not required a "proxy_pass" directive if 
+    *) Feature: now URI part is not required a "proxy_pass" directive if
        variables are used.
 
     *) Feature: now the "msie_padding" directive works for Chrome too.
 
-    *) Bugfix: a segmentation fault occurred in a worker process on low 
+    *) Bugfix: a segmentation fault occurred in a worker process on low
        memory condition; the bug had appeared in 0.8.18.
 
-    *) Bugfix: nginx sent gzipped responses to clients those do not support 
-       gzip, if "gzip_static on" and "gzip_vary off"; the bug had appeared 
+    *) Bugfix: nginx sent gzipped responses to clients those do not support
+       gzip, if "gzip_static on" and "gzip_vary off"; the bug had appeared
        in 0.8.16.
 
 
 Changes with nginx 0.8.24                                        11 Nov 2009
 
-    *) Bugfix: nginx always added "Content-Encoding: gzip" response header 
+    *) Bugfix: nginx always added "Content-Encoding: gzip" response header
        line in 304 responses sent by ngx_http_gzip_static_module.
 
-    *) Bugfix: nginx could not be built without the --with-debug option; 
-       the bug had appeared in 0.8.23.
+    *) Bugfix: nginx could not be built without the --with-debug option; the
+       bug had appeared in 0.8.23.
 
-    *) Bugfix: the "unix:" parameter of the "set_real_ip_from" directive 
+    *) Bugfix: the "unix:" parameter of the "set_real_ip_from" directive
        inherited incorrectly from previous level.
 
     *) Bugfix: in resolving empty name.
@@ -656,11 +1060,11 @@ Changes with nginx 0.8.23               
     *) Security: now SSL/TLS renegotiation is disabled.
        Thanks to Maxim Dounin.
 
-    *) Bugfix: listen unix domain socket did not inherit while online 
+    *) Bugfix: listen unix domain socket did not inherit while online
        upgrade.
 
-    *) Bugfix: the "unix:" parameter of the "set_real_ip_from" directive 
-       did not without yet another directive with any IP address.
+    *) Bugfix: the "unix:" parameter of the "set_real_ip_from" directive did
+       not without yet another directive with any IP address.
 
     *) Bugfix: segmentation fault and infinite looping in resolver.
 
@@ -670,17 +1074,17 @@ Changes with nginx 0.8.23               
 
 Changes with nginx 0.8.22                                        03 Nov 2009
 
-    *) Feature: the "proxy_bind", "fastcgi_bind", and "memcached_bind" 
+    *) Feature: the "proxy_bind", "fastcgi_bind", and "memcached_bind"
        directives.
 
     *) Feature: the "access" and the "deny" directives support IPv6.
 
-    *) Feature: the "set_real_ip_from" directive supports IPv6 addresses in 
+    *) Feature: the "set_real_ip_from" directive supports IPv6 addresses in
        request headers.
 
     *) Feature: the "unix:" parameter of the "set_real_ip_from" directive.
 
-    *) Bugfix: nginx did not delete unix domain socket after configuration 
+    *) Bugfix: nginx did not delete unix domain socket after configuration
        testing.
 
     *) Bugfix: nginx deleted unix domain socket while online upgrade.
@@ -688,16 +1092,16 @@ Changes with nginx 0.8.22               
     *) Bugfix: the "!-x" operator did not work.
        Thanks to Maxim Dounin.
 
-    *) Bugfix: a segmentation fault might occur in a worker process, if 
+    *) Bugfix: a segmentation fault might occur in a worker process, if
        limit_rate was used in HTTPS server.
        Thanks to Maxim Dounin.
 
-    *) Bugfix: a segmentation fault might occur in a worker process while 
+    *) Bugfix: a segmentation fault might occur in a worker process while
        $limit_rate logging.
        Thanks to Maxim Dounin.
 
-    *) Bugfix: a segmentation fault might occur in a worker process, if 
-       there was no "listen" directive in "server" block; the bug had 
+    *) Bugfix: a segmentation fault might occur in a worker process, if
+       there was no "listen" directive in "server" block; the bug had
        appeared in 0.8.21.
 
 
@@ -705,13 +1109,13 @@ Changes with nginx 0.8.21               
 
     *) Feature: now the "-V" switch shows TLS SNI support.
 
-    *) Feature: the "listen" directive of the HTTP module supports unix 
+    *) Feature: the "listen" directive of the HTTP module supports unix
        domain sockets.
        Thanks to Hongli Lai.
 
     *) Feature: the "default_server" parameter of the "listen" directive.
 
-    *) Feature: now a "default" parameter is not required to set listen 
+    *) Feature: now a "default" parameter is not required to set listen
        socket options.
 
     *) Bugfix: nginx did not support dates in 2038 year on 32-bit platforms;
@@ -723,22 +1127,22 @@ Changes with nginx 0.8.20               
 
     *) Change: now default SSL ciphers are "HIGH:!ADH:!MD5".
 
-    *) Bugfix: the ngx_http_autoindex_module did not show the trailing 
-       slash in links to a directory; the bug had appeared in 0.7.15.
+    *) Bugfix: the ngx_http_autoindex_module did not show the trailing slash
+       in links to a directory; the bug had appeared in 0.7.15.
 
-    *) Bugfix: nginx did not close a log file set by the --error-log-path 
+    *) Bugfix: nginx did not close a log file set by the --error-log-path
        configuration option; the bug had appeared in 0.7.53.
 
-    *) Bugfix: nginx did not treat a comma as separator in the 
+    *) Bugfix: nginx did not treat a comma as separator in the
        "Cache-Control" backend response header line.
 
-    *) Bugfix: nginx/Windows might not create temporary file, a cache file, 
-       or "proxy/fastcgi_store"d file if a worker had no enough access 
+    *) Bugfix: nginx/Windows might not create temporary file, a cache file,
+       or "proxy/fastcgi_store"d file if a worker had no enough access
        rights for top level directories.
 
-    *) Bugfix: the "Set-Cookie" and "P3P" FastCGI response header lines 
-       were not hidden while caching if no "fastcgi_hide_header" directives 
-       were used with any parameters.
+    *) Bugfix: the "Set-Cookie" and "P3P" FastCGI response header lines were
+       not hidden while caching if no "fastcgi_hide_header" directives were
+       used with any parameters.
 
     *) Bugfix: nginx counted incorrectly disk cache size.
 
@@ -749,8 +1153,8 @@ Changes with nginx 0.8.19               
 
     *) Change: now default SSL ciphers are "ALL:!ADH:RC4+RSA:+HIGH:+MEDIUM".
 
-    *) Bugfix: a "limit_req" directive did not work; the bug had appeared 
-       in 0.8.18.
+    *) Bugfix: a "limit_req" directive did not work; the bug had appeared in
+       0.8.18.
 
 
 Changes with nginx 0.8.18                                        06 Oct 2009
@@ -759,21 +1163,21 @@ Changes with nginx 0.8.18               
 
     *) Feature: now several "perl_modules" directives may be used.
 
-    *) Feature: the "limit_req_log_level" and "limit_conn_log_level" 
+    *) Feature: the "limit_req_log_level" and "limit_conn_log_level"
        directives.
 
-    *) Bugfix: now "limit_req" directive conforms to the leaky bucket 
+    *) Bugfix: now "limit_req" directive conforms to the leaky bucket
        algorithm.
        Thanks to Maxim Dounin.
 
     *) Bugfix: nginx did not work on Linux/sparc.
        Thanks to Marcus Ramberg.
 
-    *) Bugfix: nginx sent '\0' in a "Location" response header line on 
-       MKCOL request.
+    *) Bugfix: nginx sent '\0' in a "Location" response header line on MKCOL
+       request.
        Thanks to Xie Zhenye.
 
-    *) Bugfix: zero status code was logged instead of 499 status code; the 
+    *) Bugfix: zero status code was logged instead of 499 status code; the
        bug had appeared in 0.8.11.
 
     *) Bugfix: socket leak; the bug had appeared in 0.8.11.
@@ -781,7 +1185,7 @@ Changes with nginx 0.8.18               
 
 Changes with nginx 0.8.17                                        28 Sep 2009
 
-    *) Security: now "/../" are disabled in "Destination" request header 
+    *) Security: now "/../" are disabled in "Destination" request header
        line.
 
     *) Change: now $host variable value is always low case.
@@ -795,7 +1199,7 @@ Changes with nginx 0.8.16               
 
     *) Feature: the "image_filter_transparency" directive.
 
-    *) Bugfix: "addition_types" directive was incorrectly named 
+    *) Bugfix: "addition_types" directive was incorrectly named
        "addtion_types".
 
     *) Bugfix: resolver cache poisoning.
@@ -804,31 +1208,31 @@ Changes with nginx 0.8.16               
     *) Bugfix: memory leak in resolver.
        Thanks to Matthew Dempsky.
 
-    *) Bugfix: invalid request line in $request variable was written in 
+    *) Bugfix: invalid request line in $request variable was written in
        access_log only if error_log was set to "info" or "debug" level.
 
-    *) Bugfix: in PNG alpha-channel support in the 
+    *) Bugfix: in PNG alpha-channel support in the
        ngx_http_image_filter_module.
 
-    *) Bugfix: nginx always added "Vary: Accept-Encoding" response header 
+    *) Bugfix: nginx always added "Vary: Accept-Encoding" response header
        line, if both "gzip_static" and "gzip_vary" were on.
 
-    *) Bugfix: in UTF-8 encoding support by "try_files" directive in 
+    *) Bugfix: in UTF-8 encoding support by "try_files" directive in
        nginx/Windows.
 
-    *) Bugfix: in "post_action" directive usage; the bug had appeared in 
+    *) Bugfix: in "post_action" directive usage; the bug had appeared in
        0.8.11.
        Thanks to Igor Artemiev.
 
 
 Changes with nginx 0.8.15                                        14 Sep 2009
 
-    *) Security: a segmentation fault might occur in worker process while 
+    *) Security: a segmentation fault might occur in worker process while
        specially crafted request handling.
        Thanks to Chris Ries.
 
-    *) Bugfix: if names .domain.tld, .sub.domain.tld, and .domain-some.tld 
-       were defined, then the name .sub.domain.tld was matched by 
+    *) Bugfix: if names .domain.tld, .sub.domain.tld, and .domain-some.tld
+       were defined, then the name .sub.domain.tld was matched by
        .domain.tld.
 
     *) Bugfix: in transparency support in the ngx_http_image_filter_module.
@@ -842,25 +1246,25 @@ Changes with nginx 0.8.15               
 
 Changes with nginx 0.8.14                                        07 Sep 2009
 
-    *) Bugfix: an expired cached response might stick in the "UPDATING" 
+    *) Bugfix: an expired cached response might stick in the "UPDATING"
        state.
 
-    *) Bugfix: a segmentation fault might occur in worker process, if 
+    *) Bugfix: a segmentation fault might occur in worker process, if
        error_log was set to info or debug level.
        Thanks to Sergey Bochenkov.
 
     *) Bugfix: in embedded perl module; the bug had appeared in 0.8.11.
 
-    *) Bugfix: an "error_page" directive did not redirect a 413 error; the 
+    *) Bugfix: an "error_page" directive did not redirect a 413 error; the
        bug had appeared in 0.6.10.
 
 
 Changes with nginx 0.8.13                                        31 Aug 2009
 
-    *) Bugfix: in the "aio sendfile" directive; the bug had appeared in 
+    *) Bugfix: in the "aio sendfile" directive; the bug had appeared in
        0.8.12.
 
-    *) Bugfix: nginx could not be built without the --with-file-aio option 
+    *) Bugfix: nginx could not be built without the --with-file-aio option
        on FreeBSD; the bug had appeared in 0.8.12.
 
 
@@ -875,7 +1279,7 @@ Changes with nginx 0.8.12               
 
 Changes with nginx 0.8.11                                        28 Aug 2009
 
-    *) Change: now directive "gzip_disable msie6" does not disable gzipping 
+    *) Change: now directive "gzip_disable msie6" does not disable gzipping
        for MSIE 6.0 SV1.
 
     *) Feature: file AIO support on FreeBSD and Linux.
@@ -887,35 +1291,34 @@ Changes with nginx 0.8.10               
 
     *) Bugfix: memory leaks if GeoIP City database was used.
 
-    *) Bugfix: in copying temporary files to permanent storage area; the 
-       bug had appeared in 0.8.9.
+    *) Bugfix: in copying temporary files to permanent storage area; the bug
+       had appeared in 0.8.9.
 
 
 Changes with nginx 0.8.9                                         17 Aug 2009
 
-    *) Feature: now the start cache loader runs in a separate process; this 
+    *) Feature: now the start cache loader runs in a separate process; this
        should improve large caches handling.
 
-    *) Feature: now temporary files and permanent storage area may reside 
-       at different file systems.
+    *) Feature: now temporary files and permanent storage area may reside at
+       different file systems.
 
 
 Changes with nginx 0.8.8                                         10 Aug 2009
 
     *) Bugfix: in handling FastCGI headers split in records.
 
-    *) Bugfix: a segmentation fault occurred in worker process, if a 
-       request was handled in two proxied or FastCGIed locations and a 
-       caching was enabled in the first location; the bug had appeared in 
-       0.8.7.
+    *) Bugfix: a segmentation fault occurred in worker process, if a request
+       was handled in two proxied or FastCGIed locations and a caching was
+       enabled in the first location; the bug had appeared in 0.8.7.
 
 
 Changes with nginx 0.8.7                                         27 Jul 2009
 
     *) Change: minimum supported OpenSSL version is 0.9.7.
 
-    *) Change: the "ask" parameter of the "ssl_verify_client" directive was 
-       changed to the "optional" parameter and now it checks a client 
+    *) Change: the "ask" parameter of the "ssl_verify_client" directive was
+       changed to the "optional" parameter and now it checks a client
        certificate if it was offered.
        Thanks to Brice Figureau.
 
@@ -927,24 +1330,24 @@ Changes with nginx 0.8.7                
 
     *) Feature: the "proxy" parameter of the "geo" directive.
 
-    *) Feature: the "image_filter" directive supports variables for setting 
+    *) Feature: the "image_filter" directive supports variables for setting
        size.
 
-    *) Bugfix: the $ssl_client_cert variable usage corrupted memory; the 
-       bug had appeared in 0.7.7.
+    *) Bugfix: the $ssl_client_cert variable usage corrupted memory; the bug
+       had appeared in 0.7.7.
        Thanks to Sergey Zhuravlev.
 
-    *) Bugfix: "proxy_pass_header" and "fastcgi_pass_header" directives did 
-       not pass to a client the "X-Accel-Redirect", "X-Accel-Limit-Rate", 
-       "X-Accel-Buffering", and "X-Accel-Charset" lines from backend 
+    *) Bugfix: "proxy_pass_header" and "fastcgi_pass_header" directives did
+       not pass to a client the "X-Accel-Redirect", "X-Accel-Limit-Rate",
+       "X-Accel-Buffering", and "X-Accel-Charset" lines from backend
        response header.
        Thanks to Maxim Dounin.
 
-    *) Bugfix: in handling "Last-Modified" and "Accept-Ranges" backend 
+    *) Bugfix: in handling "Last-Modified" and "Accept-Ranges" backend
        response header lines; the bug had appeared in 0.7.44.
        Thanks to Maxim Dounin.
 
-    *) Bugfix: the "[alert] zero size buf" error if subrequest returns an 
+    *) Bugfix: the "[alert] zero size buf" error if subrequest returns an
        empty response; the bug had appeared in 0.8.5.
 
 
@@ -952,17 +1355,17 @@ Changes with nginx 0.8.6                
 
     *) Feature: the ngx_http_geoip_module.
 
-    *) Bugfix: XSLT filter may fail with message "not well formed XML 
+    *) Bugfix: XSLT filter may fail with message "not well formed XML
        document" for valid XML document.
        Thanks to Kuramoto Eiji.
 
-    *) Bugfix: now in MacOSX, Cygwin, and nginx/Windows locations given by 
-       a regular expression are always tested in case insensitive mode.
+    *) Bugfix: now in MacOSX, Cygwin, and nginx/Windows locations given by a
+       regular expression are always tested in case insensitive mode.
 
     *) Bugfix: now nginx/Windows ignores trailing dots in URI.
        Thanks to Hugo Leisink.
 
-    *) Bugfix: name of file specified in --conf-path was not honored during 
+    *) Bugfix: name of file specified in --conf-path was not honored during
        installation; the bug had appeared in 0.6.6.
        Thanks to Maxim Dounin.
 
@@ -971,7 +1374,7 @@ Changes with nginx 0.8.5                
 
     *) Bugfix: now nginx allows underscores in a request method.
 
-    *) Bugfix: a 500 error code was returned for invalid login/password 
+    *) Bugfix: a 500 error code was returned for invalid login/password
        while HTTP Basic authentication on Windows.
 
     *) Bugfix: ngx_http_perl_module responses did not work in subrequests.
@@ -982,7 +1385,7 @@ Changes with nginx 0.8.5                
 
 Changes with nginx 0.8.4                                         22 Jun 2009
 
-    *) Bugfix: nginx could not be built --without-http-cache; the bug had 
+    *) Bugfix: nginx could not be built --without-http-cache; the bug had
        appeared in 0.8.3.
 
 
@@ -992,43 +1395,43 @@ Changes with nginx 0.8.3                
 
     *) Bugfix: nginx could not be built on MacOSX 10.6.
 
-    *) Bugfix: nginx could not be built --without-http-cache; the bug had 
+    *) Bugfix: nginx could not be built --without-http-cache; the bug had
        appeared in 0.8.2.
 
-    *) Bugfix: a segmentation fault occurred in worker process, if a 
-       backend 401 error was intercepted and the backend did not set the 
+    *) Bugfix: a segmentation fault occurred in worker process, if a backend
+       401 error was intercepted and the backend did not set the
        "WWW-Authenticate" response header line.
        Thanks to Eugene Mychlo.
 
 
 Changes with nginx 0.8.2                                         15 Jun 2009
 
-    *) Bugfix: in open_file_cache and proxy/fastcgi cache interaction on 
+    *) Bugfix: in open_file_cache and proxy/fastcgi cache interaction on
        start up.
 
-    *) Bugfix: open_file_cache might cache open file descriptors too long; 
+    *) Bugfix: open_file_cache might cache open file descriptors too long;
        the bug had appeared in 0.7.4.
 
 
 Changes with nginx 0.8.1                                         08 Jun 2009
 
-    *) Feature: the "updating" parameter in "proxy_cache_use_stale" and 
+    *) Feature: the "updating" parameter in "proxy_cache_use_stale" and
        "fastcgi_cache_use_stale" directives.
 
-    *) Bugfix: the "If-Modified-Since", "If-Range", etc. client request 
-       header lines were passed to backend while caching if no 
+    *) Bugfix: the "If-Modified-Since", "If-Range", etc. client request
+       header lines were passed to backend while caching if no
        "proxy_set_header" directive was used with any parameters.
 
-    *) Bugfix: the "Set-Cookie" and "P3P" response header lines were not 
-       hidden while caching if no "proxy_hide_header/fastcgi_hide_header" 
+    *) Bugfix: the "Set-Cookie" and "P3P" response header lines were not
+       hidden while caching if no "proxy_hide_header/fastcgi_hide_header"
        directives were used with any parameters.
 
-    *) Bugfix: the ngx_http_image_filter_module did not support GIF87a 
+    *) Bugfix: the ngx_http_image_filter_module did not support GIF87a
        format.
        Thanks to Denis Ilyinyh.
 
-    *) Bugfix: nginx could not be built modules on Solaris 10 and early; 
-       the bug had appeared in 0.7.56.
+    *) Bugfix: nginx could not be built modules on Solaris 10 and early; the
+       bug had appeared in 0.7.56.
 
 
 Changes with nginx 0.8.0                                         02 Jun 2009
@@ -1042,8 +1445,8 @@ Changes with nginx 0.8.0                
 
     *) Bugfix: in relative paths handling in nginx/Windows.
 
-    *) Bugfix: in proxy_store, fastcgi_store, proxy_cache, and 
-       fastcgi_cache in nginx/Windows.
+    *) Bugfix: in proxy_store, fastcgi_store, proxy_cache, and fastcgi_cache
+       in nginx/Windows.
 
     *) Bugfix: in memory allocation error handling.
        Thanks to Maxim Dounin and Kirill A. Korinskiy.
@@ -1051,23 +1454,23 @@ Changes with nginx 0.8.0                
 
 Changes with nginx 0.7.59                                        25 May 2009
 
-    *) Feature: the "proxy_cache_methods" and "fastcgi_cache_methods" 
+    *) Feature: the "proxy_cache_methods" and "fastcgi_cache_methods"
        directives.
 
     *) Bugfix: socket leak; the bug had appeared in 0.7.25.
        Thanks to Maxim Dounin.
 
-    *) Bugfix: a segmentation fault occurred in worker process, 
-       if a request had no body and the $request_body variable was used;
+    *) Bugfix: a segmentation fault occurred in worker process, if a request
+       had no body and the $request_body variable was used;
        the bug had appeared in 0.7.58.
 
     *) Bugfix: the SSL modules might not built on Solaris and Linux;
        the bug had appeared in 0.7.56.
 
-    *) Bugfix: ngx_http_xslt_filter_module responses were not handled by 
+    *) Bugfix: ngx_http_xslt_filter_module responses were not handled by
        SSI, charset, and gzip filters.
 
-    *) Bugfix: a "charset" directive did not set a charset to 
+    *) Bugfix: a "charset" directive did not set a charset to
        ngx_http_gzip_static_module responses.
 
 
@@ -1081,24 +1484,24 @@ Changes with nginx 0.7.58               
 
     *) Feature: the $request_body variable.
 
-    *) Bugfix: in ngx_http_autoindex_module in file name links having a ":" 
+    *) Bugfix: in ngx_http_autoindex_module in file name links having a ":"
        symbol in the name.
 
-    *) Bugfix: "make upgrade" procedure did not work; the bug had appeared 
+    *) Bugfix: "make upgrade" procedure did not work; the bug had appeared
        in 0.7.53.
        Thanks to Denis F. Latypoff.
 
 
 Changes with nginx 0.7.57                                        12 May 2009
 
-    *) Bugfix: a floating-point fault occurred in worker process, if the 
-       ngx_http_image_filter_module errors were redirected to named 
+    *) Bugfix: a floating-point fault occurred in worker process, if the
+       ngx_http_image_filter_module errors were redirected to named
        location; the bug had appeared in 0.7.56.
 
 
 Changes with nginx 0.7.56                                        11 May 2009
 
-    *) Feature: nginx/Windows supports IPv6 in a "listen" directive of the 
+    *) Feature: nginx/Windows supports IPv6 in a "listen" directive of the
        HTTP module.
 
     *) Bugfix: in ngx_http_image_filter_module.
@@ -1106,21 +1509,21 @@ Changes with nginx 0.7.56               
 
 Changes with nginx 0.7.55                                        06 May 2009
 
-    *) Bugfix: the http_XXX parameters in "proxy_cache_use_stale" and 
+    *) Bugfix: the http_XXX parameters in "proxy_cache_use_stale" and
        "fastcgi_cache_use_stale" directives did not work.
 
     *) Bugfix: fastcgi cache did not cache header only responses.
 
-    *) Bugfix: of "select() failed (9: Bad file descriptor)" error in 
+    *) Bugfix: of "select() failed (9: Bad file descriptor)" error in
        nginx/Unix and "select() failed (10038: ...)" error in nginx/Windows.
 
-    *) Bugfix: a segmentation fault might occur in worker process, if an 
-       "debug_connection" directive was used; the bug had appeared in 
+    *) Bugfix: a segmentation fault might occur in worker process, if an
+       "debug_connection" directive was used; the bug had appeared in
        0.7.54.
 
     *) Bugfix: fix ngx_http_image_filter_module building errors.
 
-    *) Bugfix: the files bigger than 2G could not be transferred using 
+    *) Bugfix: the files bigger than 2G could not be transferred using
        $r->sendfile.
        Thanks to Maxim Dounin.
 
@@ -1129,33 +1532,33 @@ Changes with nginx 0.7.54               
 
     *) Feature: the ngx_http_image_filter_module.
 
-    *) Feature: the "proxy_ignore_headers" and "fastcgi_ignore_headers" 
+    *) Feature: the "proxy_ignore_headers" and "fastcgi_ignore_headers"
        directives.
 
-    *) Bugfix: a segmentation fault might occur in worker process, if an 
-       "open_file_cache_errors off" directive was used; the bug had 
-       appeared in 0.7.53.
+    *) Bugfix: a segmentation fault might occur in worker process, if an
+       "open_file_cache_errors off" directive was used; the bug had appeared
+       in 0.7.53.
 
-    *) Bugfix: the "port_in_redirect off" directive did not work; the bug 
+    *) Bugfix: the "port_in_redirect off" directive did not work; the bug
        had appeared in 0.7.39.
 
     *) Bugfix: improve handling of "select" method errors.
 
     *) Bugfix: of "select() failed (10022: ...)" error in nginx/Windows.
 
-    *) Bugfix: in error text descriptions in nginx/Windows; the bug had 
+    *) Bugfix: in error text descriptions in nginx/Windows; the bug had
        appeared in 0.7.53.
 
 
 Changes with nginx 0.7.53                                        27 Apr 2009
 
-    *) Change: now a log set by --error-log-path is created from the very 
+    *) Change: now a log set by --error-log-path is created from the very
        start-up.
 
-    *) Feature: now the start up errors and warnings are outputted to an 
+    *) Feature: now the start up errors and warnings are outputted to an
        error_log and stderr.
 
-    *) Feature: the empty --prefix= configure parameter forces nginx to use 
+    *) Feature: the empty --prefix= configure parameter forces nginx to use
        a directory where it was run as prefix.
 
     *) Feature: the -p switch.
@@ -1167,14 +1570,14 @@ Changes with nginx 0.7.53               
 
     *) Feature: now switches may be set in condensed form.
 
-    *) Bugfix: nginx/Windows did not work if configuration file was given 
-       by the -c switch.
+    *) Bugfix: nginx/Windows did not work if configuration file was given by
+       the -c switch.
 
-    *) Bugfix: temporary files might be not removed if the "proxy_store", 
+    *) Bugfix: temporary files might be not removed if the "proxy_store",
        "fastcgi_store", "proxy_cache", or "fastcgi_cache" were used.
        Thanks to Maxim Dounin.
 
-    *) Bugfix: an incorrect value was passed to mail proxy authentication 
+    *) Bugfix: an incorrect value was passed to mail proxy authentication
        server in "Auth-Method" header line; the bug had appeared
        in 0.7.34.
        Thanks to Simon Lecaille.
@@ -1192,46 +1595,46 @@ Changes with nginx 0.7.52               
 
     *) Bugfix: in processing HEAD method while caching.
 
-    *) Bugfix: in processing the "If-Modified-Since", "If-Range", etc. 
+    *) Bugfix: in processing the "If-Modified-Since", "If-Range", etc.
        client request header lines while caching.
 
-    *) Bugfix: now the "Set-Cookie" and "P3P" header lines are hidden in 
+    *) Bugfix: now the "Set-Cookie" and "P3P" header lines are hidden in
        cacheable responses.
 
-    *) Bugfix: if nginx was built with the ngx_http_perl_module and with a 
-       perl which supports threads, then during a master process exit the 
+    *) Bugfix: if nginx was built with the ngx_http_perl_module and with a
+       perl which supports threads, then during a master process exit the
        message "panic: MUTEX_LOCK" might be issued.
 
-    *) Bugfix: nginx could not be built --without-http-cache; the bug had 
+    *) Bugfix: nginx could not be built --without-http-cache; the bug had
        appeared in 0.7.48.
 
-    *) Bugfix: nginx could not be built on platforms different from i386, 
+    *) Bugfix: nginx could not be built on platforms different from i386,
        amd64, sparc, and ppc; the bug had appeared in 0.7.42.
 
 
 Changes with nginx 0.7.51                                        12 Apr 2009
 
-    *) Feature: the "try_files" directive supports a response code in the 
+    *) Feature: the "try_files" directive supports a response code in the
        fallback parameter.
 
     *) Feature: now any response code can be used in the "return" directive.
 
-    *) Bugfix: the "error_page" directive made an external redirect without 
+    *) Bugfix: the "error_page" directive made an external redirect without
        query string; the bug had appeared in 0.7.44.
 
-    *) Bugfix: if servers listened on several defined explicitly addresses, 
+    *) Bugfix: if servers listened on several defined explicitly addresses,
        then virtual servers might not work; the bug had appeared in 0.7.39.
 
 
 Changes with nginx 0.7.50                                        06 Apr 2009
 
-    *) Bugfix: the $arg_... variables did not work; the bug had appeared in 
+    *) Bugfix: the $arg_... variables did not work; the bug had appeared in
        0.7.49.
 
 
 Changes with nginx 0.7.49                                        06 Apr 2009
 
-    *) Bugfix: a segmentation fault might occur in worker process, if the 
+    *) Bugfix: a segmentation fault might occur in worker process, if the
        $arg_... variables were used; the bug had appeared in 0.7.48.
 
 
@@ -1239,7 +1642,7 @@ Changes with nginx 0.7.48               
 
     *) Feature: the "proxy_cache_key" directive.
 
-    *) Bugfix: now nginx takes into account the "X-Accel-Expires", 
+    *) Bugfix: now nginx takes into account the "X-Accel-Expires",
        "Expires", and "Cache-Control" header lines in a backend response.
 
     *) Bugfix: now nginx caches responses for the GET requests only.
@@ -1252,28 +1655,28 @@ Changes with nginx 0.7.48               
     *) Bugfix: nginx could not be built with uclibc library.
        Thanks to Timothy Redaelli.
 
-    *) Bugfix: nginx could not be built on OpenBSD; the bug had 
+    *) Bugfix: nginx could not be built on OpenBSD; the bug had
        appeared in 0.7.46.
 
 
 Changes with nginx 0.7.47                                        01 Apr 2009
 
-    *) Bugfix: nginx could not be built on FreeBSD 6 and early versions; 
-       the bug had appeared in 0.7.46.
+    *) Bugfix: nginx could not be built on FreeBSD 6 and early versions; the
+       bug had appeared in 0.7.46.
 
-    *) Bugfix: nginx could not be built on MacOSX; the bug had 
+    *) Bugfix: nginx could not be built on MacOSX; the bug had
        appeared in 0.7.46.
 
-    *) Bugfix: if the "max_size" parameter was set, then the cache manager 
+    *) Bugfix: if the "max_size" parameter was set, then the cache manager
        might purge a whole cache; the bug had appeared in 0.7.46.
 
-    *) Change: a segmentation fault might occur in worker process, if the 
-       "proxy_cache"/"fastcgi_cache" and the "proxy_cache_valid"/ 
-       "fastcgi_cache_valid" were set on different levels; the bug had 
+    *) Change: a segmentation fault might occur in worker process, if the
+       "proxy_cache"/"fastcgi_cache" and the "proxy_cache_valid"/
+       "fastcgi_cache_valid" were set on different levels; the bug had
        appeared in 0.7.46.
 
-    *) Bugfix: a segmentation fault might occur in worker process, if a 
-       request was redirected to a proxied or FastCGI server via error_page 
+    *) Bugfix: a segmentation fault might occur in worker process, if a
+       request was redirected to a proxied or FastCGI server via error_page
        or try_files; the bug had appeared in 0.7.44.
 
 
@@ -1284,30 +1687,29 @@ Changes with nginx 0.7.46               
 
 Changes with nginx 0.7.45                                        30 Mar 2009
 
-    *) Change: now the "proxy_cache" and the "proxy_cache_valid" directives 
+    *) Change: now the "proxy_cache" and the "proxy_cache_valid" directives
        can be set on different levels.
 
-    *) Change: the "clean_time" parameter of the "proxy_cache_path" 
+    *) Change: the "clean_time" parameter of the "proxy_cache_path"
        directive is canceled.
 
-    *) Feature: the "max_size" parameter of the "proxy_cache_path" 
+    *) Feature: the "max_size" parameter of the "proxy_cache_path"
        directive.
 
     *) Feature: the ngx_http_fastcgi_module preliminary cache support.
 
-    *) Feature: now on shared memory allocation errors directive and zone 
+    *) Feature: now on shared memory allocation errors directive and zone
        names are logged.
 
-    *) Bugfix: the directive "add_header last-modified ''" did not delete a 
+    *) Bugfix: the directive "add_header last-modified ''" did not delete a
        "Last-Modified" response header line; the bug had appeared in 0.7.44.
 
-    *) Bugfix: a relative path in the "auth_basic_user_file" directive 
-       given without variables did not work; the bug had appeared in 
-       0.7.44.
+    *) Bugfix: a relative path in the "auth_basic_user_file" directive given
+       without variables did not work; the bug had appeared in 0.7.44.
        Thanks to Jerome Loyet.
 
-    *) Bugfix: in an "alias" directive given using variables without 
-       references to captures of regular expressions; the bug had appeared 
+    *) Bugfix: in an "alias" directive given using variables without
+       references to captures of regular expressions; the bug had appeared
        in 0.7.42.
 
 
@@ -1317,86 +1719,85 @@ Changes with nginx 0.7.44               
 
     *) Feature: the --with-pcre option in the configure.
 
-    *) Feature: the "try_files" directive is now allowed on the server 
-       block level.
+    *) Feature: the "try_files" directive is now allowed on the server block
+       level.
 
-    *) Bugfix: the "try_files" directive handled incorrectly a query string 
+    *) Bugfix: the "try_files" directive handled incorrectly a query string
        in a fallback parameter.
 
     *) Bugfix: the "try_files" directive might test incorrectly directories.
 
-    *) Bugfix: if there was a single server for given address:port pair, 
-       then captures in regular expressions in a "server_name" directive 
-       did not work.
+    *) Bugfix: if there was a single server for given address:port pair,
+       then captures in regular expressions in a "server_name" directive did
+       not work.
 
 
 Changes with nginx 0.7.43                                        18 Mar 2009
 
-    *) Bugfix: a request was handled incorrectly, if a "root" directive 
-       used variables; the bug had appeared in 0.7.42.
+    *) Bugfix: a request was handled incorrectly, if a "root" directive used
+       variables; the bug had appeared in 0.7.42.
 
-    *) Bugfix: if a server listened on wildcard address, then the 
-       $server_addr variable value was "0.0.0.0"; the bug had appeared in 
+    *) Bugfix: if a server listened on wildcard address, then the
+       $server_addr variable value was "0.0.0.0"; the bug had appeared in
        0.7.36.
 
 
 Changes with nginx 0.7.42                                        16 Mar 2009
 
-    *) Change: now the "Invalid argument" error returned by 
+    *) Change: now the "Invalid argument" error returned by
        setsockopt(TCP_NODELAY) on Solaris, is ignored.
 
-    *) Change: now if a file specified in a "auth_basic_user_file" 
-       directive is absent, then the 403 error is returned instead of the 
-       500 one.
+    *) Change: now if a file specified in a "auth_basic_user_file" directive
+       is absent, then the 403 error is returned instead of the 500 one.
 
     *) Feature: the "auth_basic_user_file" directive supports variables.
        Thanks to Kirill A. Korinskiy.
 
-    *) Feature: the "listen" directive supports the "ipv6only" parameter. 
+    *) Feature: the "listen" directive supports the "ipv6only" parameter.
        Thanks to Zhang Hua.
 
-    *) Bugfix: in an "alias" directive with references to captures of 
+    *) Bugfix: in an "alias" directive with references to captures of
        regular expressions; the bug had appeared in 0.7.40.
 
     *) Bugfix: compatibility with Tru64 UNIX.
        Thanks to Dustin Marquess.
 
-    *) Bugfix: nginx could not be built without PCRE library; the bug had 
+    *) Bugfix: nginx could not be built without PCRE library; the bug had
        appeared in 0.7.41.
 
 
 Changes with nginx 0.7.41                                        11 Mar 2009
 
-    *) Bugfix: a segmentation fault might occur in worker process, if a 
-       "server_name" or a "location" directives had captures in regular 
+    *) Bugfix: a segmentation fault might occur in worker process, if a
+       "server_name" or a "location" directives had captures in regular
        expressions; the issue had appeared in 0.7.40.
        Thanks to Vladimir Sopot.
 
 
 Changes with nginx 0.7.40                                        09 Mar 2009
 
-    *) Feature: the "location" directive supports captures in regular 
+    *) Feature: the "location" directive supports captures in regular
        expressions.
 
-    *) Feature: an "alias" directive with capture references may be used 
+    *) Feature: an "alias" directive with capture references may be used
        inside a location given by a regular expression with captures.
 
-    *) Feature: the "server_name" directive supports captures in regular 
+    *) Feature: the "server_name" directive supports captures in regular
        expressions.
 
-    *) Workaround: the ngx_http_autoindex_module did not show the trailing 
-       slash in directories on XFS filesystem; the issue had appeared in 
+    *) Workaround: the ngx_http_autoindex_module did not show the trailing
+       slash in directories on XFS filesystem; the issue had appeared in
        0.7.15.
        Thanks to Dmitry Kuzmenko.
 
 
 Changes with nginx 0.7.39                                        02 Mar 2009
 
-    *) Bugfix: large response with SSI might hang, if gzipping was enabled; 
+    *) Bugfix: large response with SSI might hang, if gzipping was enabled;
        the bug had appeared in 0.7.28.
        Thanks to Artem Bokhan.
 
-    *) Bugfix: a segmentation fault might occur in worker process, if short 
+    *) Bugfix: a segmentation fault might occur in worker process, if short
        static variants are used in a "try_files" directive.
 
 
@@ -1404,41 +1805,41 @@ Changes with nginx 0.7.38               
 
     *) Feature: authentication failures logging.
 
-    *) Bugfix: name/password in auth_basic_user_file were ignored after odd 
+    *) Bugfix: name/password in auth_basic_user_file were ignored after odd
        number of empty lines.
        Thanks to Alexander Zagrebin.
 
-    *) Bugfix: a segmentation fault occurred in a master process, if long 
+    *) Bugfix: a segmentation fault occurred in a master process, if long
        path was used in unix domain socket; the bug had appeared in 0.7.36.
 
 
 Changes with nginx 0.7.37                                        21 Feb 2009
 
-    *) Bugfix: directives using upstreams did not work; the bug had 
-       appeared in 0.7.36.
+    *) Bugfix: directives using upstreams did not work; the bug had appeared
+       in 0.7.36.
 
 
 Changes with nginx 0.7.36                                        21 Feb 2009
 
-    *) Feature: a preliminary IPv6 support; the "listen" directive of the 
+    *) Feature: a preliminary IPv6 support; the "listen" directive of the
        HTTP module supports IPv6.
 
-    *) Bugfix: the $ancient_browser variable did not work for browsers 
+    *) Bugfix: the $ancient_browser variable did not work for browsers
        preset by a "modern_browser" directives.
 
 
 Changes with nginx 0.7.35                                        16 Feb 2009
 
-    *) Bugfix: a "ssl_engine" directive did not use a SSL-accelerator for 
+    *) Bugfix: a "ssl_engine" directive did not use a SSL-accelerator for
        asymmetric ciphers.
        Thanks to Marcin Gozdalik.
 
-    *) Bugfix: a "try_files" directive set MIME type depending on an 
+    *) Bugfix: a "try_files" directive set MIME type depending on an
        original request extension.
 
-    *) Bugfix: "*domain.tld" names were handled incorrectly in 
-       "server_name", "valid_referers", and "map" directives, if 
-       ".domain.tld" and ".subdomain.domain.tld" wildcards were used; 
+    *) Bugfix: "*domain.tld" names were handled incorrectly in
+       "server_name", "valid_referers", and "map" directives, if
+       ".domain.tld" and ".subdomain.domain.tld" wildcards were used;
        the bug had appeared in 0.7.9.
 
 
@@ -1446,15 +1847,15 @@ Changes with nginx 0.7.34               
 
     *) Feature: the "off" parameter of the "if_modified_since" directive.
 
-    *) Feature: now nginx sends an HELO/EHLO command after a XCLIENT 
+    *) Feature: now nginx sends an HELO/EHLO command after a XCLIENT
        command.
        Thanks to Maxim Dounin.
 
-    *) Feature: Microsoft specific "AUTH LOGIN with User Name" mode support 
+    *) Feature: Microsoft specific "AUTH LOGIN with User Name" mode support
        in mail proxy server.
        Thanks to Maxim Dounin.
 
-    *) Bugfix: in a redirect rewrite directive original arguments were 
+    *) Bugfix: in a redirect rewrite directive original arguments were
        concatenated with new arguments by a "?" rather than an "&";
        the bug had appeared in 0.1.18.
        Thanks to Maxim Dounin.
@@ -1464,35 +1865,34 @@ Changes with nginx 0.7.34               
 
 Changes with nginx 0.7.33                                        02 Feb 2009
 
-    *) Bugfix: a double response might be returned if the epoll or rtsig 
-       methods are used and a redirect was returned to a request with 
-       body.
+    *) Bugfix: a double response might be returned if the epoll or rtsig
+       methods are used and a redirect was returned to a request with body.
        Thanks to Eden Li.
 
-    *) Bugfix: the $sent_http_location variable was empty for some 
-       redirects types.
+    *) Bugfix: the $sent_http_location variable was empty for some redirects
+       types.
 
-    *) Bugfix: a segmentation fault might occur in worker process if 
+    *) Bugfix: a segmentation fault might occur in worker process if
        "resolver" directive was used in SMTP proxy.
 
 
 Changes with nginx 0.7.32                                        26 Jan 2009
 
-    *) Feature: now a directory existence testing can be set explicitly in 
+    *) Feature: now a directory existence testing can be set explicitly in
        the "try_files" directive.
 
     *) Bugfix: fastcgi_store stored files not always.
 
     *) Bugfix: in geo ranges.
 
-    *) Bugfix: in shared memory allocations if nginx was built without 
+    *) Bugfix: in shared memory allocations if nginx was built without
        debugging.
        Thanks to Andrey Kvasov.
 
 
 Changes with nginx 0.7.31                                        19 Jan 2009
 
-    *) Change: now the "try_files" directive tests files only and ignores 
+    *) Change: now the "try_files" directive tests files only and ignores
        directories.
 
     *) Feature: the "fastcgi_split_path_info" directive.
@@ -1501,35 +1901,34 @@ Changes with nginx 0.7.31               
 
     *) Bugfixes in geo ranges.
 
-    *) Bugfix: in a miss case ngx_http_memcached_module returned the "END" 
-       line as response body instead of default 404 page body; the bug had 
+    *) Bugfix: in a miss case ngx_http_memcached_module returned the "END"
+       line as response body instead of default 404 page body; the bug had
        appeared in 0.7.18.
        Thanks to Maxim Dounin.
 
-    *) Bugfix: while SMTP proxying nginx issued message "250 2.0.0 OK" 
+    *) Bugfix: while SMTP proxying nginx issued message "250 2.0.0 OK"
        instead of "235 2.0.0 OK"; the bug had appeared in 0.7.22.
        Thanks to Maxim Dounin.
 
 
 Changes with nginx 0.7.30                                        24 Dec 2008
 
-    *) Bugfix: a segmentation fault occurred in worker process, if 
-       variables were used in the "fastcgi_pass" or "proxy_pass" directives 
-       and host name must be resolved; the bug had appeared in 0.7.29.
+    *) Bugfix: a segmentation fault occurred in worker process, if variables
+       were used in the "fastcgi_pass" or "proxy_pass" directives and host
+       name must be resolved; the bug had appeared in 0.7.29.
 
 
 Changes with nginx 0.7.29                                        24 Dec 2008
 
-    *) Bugfix: the "fastcgi_pass" and "proxy_pass" directives did not 
+    *) Bugfix: the "fastcgi_pass" and "proxy_pass" directives did not
        support variables if unix domain sockets were used.
 
     *) Bugfixes in subrequest processing; the bugs had appeared in 0.7.25.
 
-    *) Bugfix: a "100 Continue" response was issued for HTTP/1.0 
-       requests;
+    *) Bugfix: a "100 Continue" response was issued for HTTP/1.0 requests;
        Thanks to Maxim Dounin.
 
-    *) Bugfix: in memory allocation in the ngx_http_gzip_filter_module on 
+    *) Bugfix: in memory allocation in the ngx_http_gzip_filter_module on
        Cygwin.
 
 
@@ -1537,8 +1936,8 @@ Changes with nginx 0.7.28               
 
     *) Change: in memory allocation in the ngx_http_gzip_filter_module.
 
-    *) Change: the default "gzip_buffers" directive values have been 
-       changed to 32 4k or 16 8k from 4 4k/8k.
+    *) Change: the default "gzip_buffers" directive values have been changed
+       to 32 4k or 16 8k from 4 4k/8k.
 
 
 Changes with nginx 0.7.27                                        15 Dec 2008
@@ -1547,24 +1946,23 @@ Changes with nginx 0.7.27               
 
     *) Feature: variables support in the "fastcgi_pass" directive.
 
-    *) Feature: now the $geo variable may get an address from a 
-       variable.
+    *) Feature: now the $geo variable may get an address from a variable.
        Thanks to Andrei Nigmatulin.
 
-    *) Feature: now a location's modifier may be used without space before 
+    *) Feature: now a location's modifier may be used without space before
        name.
 
     *) Feature: the $upstream_response_length variable.
 
     *) Bugfix: now a "add_header" directive does not add an empty value.
 
-    *) Bugfix: if zero length static file was requested, then nginx just 
+    *) Bugfix: if zero length static file was requested, then nginx just
        closed connection; the bug had appeared in 0.7.25.
 
     *) Bugfix: a MOVE method could not move file in non-existent directory.
 
-    *) Bugfix: a segmentation fault occurred in worker process, if no one 
-       named location was defined in server, but some one was used in an 
+    *) Bugfix: a segmentation fault occurred in worker process, if no one
+       named location was defined in server, but some one was used in an
        error_page directive.
        Thanks to Sergey Bochenkov.
 
@@ -1580,7 +1978,7 @@ Changes with nginx 0.7.25               
 
     *) Change: now POSTs without "Content-Length" header line are allowed.
 
-    *) Bugfix: now the "limit_req" and "limit_conn" directives log a 
+    *) Bugfix: now the "limit_req" and "limit_conn" directives log a
        prohibition reason.
 
     *) Bugfix: in the "delete" parameter of the "geo" directive.
@@ -1590,10 +1988,10 @@ Changes with nginx 0.7.24               
 
     *) Feature: the "if_modified_since" directive.
 
-    *) Bugfix: nginx did not process a FastCGI server response, if the 
+    *) Bugfix: nginx did not process a FastCGI server response, if the
        server send too many messages to stderr before response.
 
-    *) Bugfix: the "$cookie_..." variables did not work in the SSI and the 
+    *) Bugfix: the "$cookie_..." variables did not work in the SSI and the
        perl module.
 
 
@@ -1629,7 +2027,7 @@ Changes with nginx 0.7.21               
     *) Workaround: compatibility with glibc 2.3.
        Thanks to Eric Benson and Maxim Dounin.
 
-    *) Bugfix: nginx could not run on MacOSX 10.4 and earlier; the bug had 
+    *) Bugfix: nginx could not run on MacOSX 10.4 and earlier; the bug had
        appeared in 0.7.6.
 
 
@@ -1639,17 +2037,17 @@ Changes with nginx 0.7.20               
 
     *) Feature: the ngx_http_limit_req_module.
 
-    *) Bugfix: worker processes might exit on a SIGBUS signal on sparc and 
+    *) Bugfix: worker processes might exit on a SIGBUS signal on sparc and
        ppc platforms; the bug had appeared in 0.7.3.
        Thanks to Maxim Dounin.
 
-    *) Bugfix: the "proxy_pass http://host/some:uri" directives did not 
+    *) Bugfix: the "proxy_pass http://host/some:uri" directives did not
        work; the bug had appeared in 0.7.12.
 
-    *) Bugfix: in HTTPS mode requests might fail with the "bad write retry" 
+    *) Bugfix: in HTTPS mode requests might fail with the "bad write retry"
        error.
 
-    *) Bugfix: the ngx_http_secure_link_module did not work inside 
+    *) Bugfix: the ngx_http_secure_link_module did not work inside
        locations, whose names are less than 3 characters.
 
     *) Bugfix: $server_addr variable might have no value.
@@ -1662,7 +2060,7 @@ Changes with nginx 0.7.19               
 
 Changes with nginx 0.7.18                                        13 Oct 2008
 
-    *) Change: the "underscores_in_headers" directive; now nginx does not 
+    *) Change: the "underscores_in_headers" directive; now nginx does not
        allows underscores in a client request header line names.
 
     *) Feature: the ngx_http_secure_link_module.
@@ -1673,13 +2071,13 @@ Changes with nginx 0.7.18               
 
     *) Feature: the $realpath_root variable.
 
-    *) Feature: the "http_502" and "http_504" parameters of the 
+    *) Feature: the "http_502" and "http_504" parameters of the
        "proxy_next_upstream" directive.
 
-    *) Bugfix: the "http_503" parameter of the "proxy_next_upstream" or 
+    *) Bugfix: the "http_503" parameter of the "proxy_next_upstream" or
        "fastcgi_next_upstream" directives did not work.
 
-    *) Bugfix: nginx might send a "Transfer-Encoding: chunked" header line 
+    *) Bugfix: nginx might send a "Transfer-Encoding: chunked" header line
        for HEAD requests.
 
     *) Bugfix: now accept threshold depends on worker_connections.
@@ -1691,19 +2089,19 @@ Changes with nginx 0.7.17               
 
     *) Feature: the $pid variable.
 
-    *) Bugfix: the "directio" optimization that had appeared in 0.7.15 did 
+    *) Bugfix: the "directio" optimization that had appeared in 0.7.15 did
        not work with open_file_cache.
 
-    *) Bugfix: the "access_log" with variables did not work on Linux; the 
+    *) Bugfix: the "access_log" with variables did not work on Linux; the
        bug had appeared in 0.7.7.
 
-    *) Bugfix: the ngx_http_charset_module did not understand quoted 
-       charset name received from backend.
+    *) Bugfix: the ngx_http_charset_module did not understand quoted charset
+       name received from backend.
 
 
 Changes with nginx 0.7.16                                        08 Sep 2008
 
-    *) Bugfix: nginx could not be built on 64-bit platforms; the bug had 
+    *) Bugfix: nginx could not be built on 64-bit platforms; the bug had
        appeared in 0.7.15.
 
 
@@ -1711,31 +2109,31 @@ Changes with nginx 0.7.15               
 
     *) Feature: the ngx_http_random_index_module.
 
-    *) Feature: the "directio" directive has been optimized for file 
+    *) Feature: the "directio" directive has been optimized for file
        requests starting from arbitrary position.
 
-    *) Feature: the "directio" directive turns off sendfile if it is 
+    *) Feature: the "directio" directive turns off sendfile if it is
        necessary.
 
-    *) Feature: now nginx allows underscores in a client request header 
-       line names.
+    *) Feature: now nginx allows underscores in a client request header line
+       names.
 
 
 Changes with nginx 0.7.14                                        01 Sep 2008
 
-    *) Change: now the ssl_certificate and ssl_certificate_key directives 
+    *) Change: now the ssl_certificate and ssl_certificate_key directives
        have not default values.
 
     *) Feature: the "listen" directive supports the "ssl" parameter.
 
-    *) Feature: now nginx takes into account a time zone change while 
+    *) Feature: now nginx takes into account a time zone change while
        reconfiguration on FreeBSD and Linux.
 
-    *) Bugfix: the "listen" directive parameters such as "backlog", 
-       "rcvbuf", etc. were not set, if a default server was not the first 
+    *) Bugfix: the "listen" directive parameters such as "backlog",
+       "rcvbuf", etc. were not set, if a default server was not the first
        one.
 
-    *) Bugfix: if URI part captured by a "rewrite" directive was used as a 
+    *) Bugfix: if URI part captured by a "rewrite" directive was used as a
        query string, then the query string was not escaped.
 
     *) Bugfix: configuration file validity test improvements.
@@ -1743,7 +2141,7 @@ Changes with nginx 0.7.14               
 
 Changes with nginx 0.7.13                                        26 Aug 2008
 
-    *) Bugfix: nginx could not be built on Linux and Solaris; the bug had 
+    *) Bugfix: nginx could not be built on Linux and Solaris; the bug had
        appeared in 0.7.12.
 
 
@@ -1753,35 +2151,35 @@ Changes with nginx 0.7.12               
 
     *) Feature: the "gzip_disable" directive supports special "msie6" mask.
 
-    *) Bugfix: if the "max_fails=0" parameter was used in upstream with 
+    *) Bugfix: if the "max_fails=0" parameter was used in upstream with
        several servers, then a worker process exited on a SIGFPE signal.
        Thanks to Maxim Dounin.
 
-    *) Bugfix: a request body was dropped while redirection via an 
+    *) Bugfix: a request body was dropped while redirection via an
        "error_page" directive.
 
-    *) Bugfix: a full response was returned for request method HEAD while 
+    *) Bugfix: a full response was returned for request method HEAD while
        redirection via an "error_page" directive.
 
-    *) Bugfix: the $r->header_in() method did not return value of the 
-       "Host", "User-Agent", and "Connection" request header lines; the bug 
+    *) Bugfix: the $r->header_in() method did not return value of the
+       "Host", "User-Agent", and "Connection" request header lines; the bug
        had appeared in 0.7.0.
 
 
 Changes with nginx 0.7.11                                        18 Aug 2008
 
-    *) Change: now ngx_http_charset_module does not work by default with 
+    *) Change: now ngx_http_charset_module does not work by default with
        text/css MIME type.
 
-    *) Feature: now nginx returns the 405 status code for POST method 
+    *) Feature: now nginx returns the 405 status code for POST method
        requesting a static file only if the file exists.
 
     *) Feature: the "proxy_ssl_session_reuse" directive.
 
-    *) Bugfix: a "proxy_pass" directive without URI part might use original 
+    *) Bugfix: a "proxy_pass" directive without URI part might use original
        request after the "X-Accel-Redirect" redirection was used;
 
-    *) Bugfix: if a directory has search only rights and the first index 
+    *) Bugfix: if a directory has search only rights and the first index
        file was absent, then nginx returned the 500 status code.
 
     *) Bugfix: in inclusive locations; the bugs had appeared in 0.7.1.
@@ -1789,25 +2187,25 @@ Changes with nginx 0.7.11               
 
 Changes with nginx 0.7.10                                        13 Aug 2008
 
-    *) Bugfix: in the "addition_types", "charset_types", "gzip_types", 
-       "ssi_types", "sub_filter_types", and "xslt_types" directives; the 
+    *) Bugfix: in the "addition_types", "charset_types", "gzip_types",
+       "ssi_types", "sub_filter_types", and "xslt_types" directives; the
        bugs had appeared in 0.7.9.
 
     *) Bugfix: of recursive error_page for 500 status code.
 
-    *) Bugfix: now the ngx_http_realip_module sets address not for whole 
+    *) Bugfix: now the ngx_http_realip_module sets address not for whole
        keepalive connection, but for each request passed via the connection.
 
 
 Changes with nginx 0.7.9                                         12 Aug 2008
 
-    *) Change: now ngx_http_charset_module works by default with following 
-       MIME types: text/html, text/css, text/xml, text/plain, 
+    *) Change: now ngx_http_charset_module works by default with following
+       MIME types: text/html, text/css, text/xml, text/plain,
        text/vnd.wap.wml, application/x-javascript, and application/rss+xml.
 
     *) Feature: the "charset_types" and "addition_types" directives.
 
-    *) Feature: now the "gzip_types", "ssi_types", and "sub_filter_types" 
+    *) Feature: now the "gzip_types", "ssi_types", and "sub_filter_types"
        directives use hash.
 
     *) Feature: the ngx_cpp_test_module.
@@ -1817,15 +2215,15 @@ Changes with nginx 0.7.9                
     *) Feature: the ngx_http_xslt_module improvements and bug fixing.
        Thanks to Denis F. Latypoff and Maxim Dounin.
 
-    *) Bugfix: the "log_not_found" directive did not work for index files 
+    *) Bugfix: the "log_not_found" directive did not work for index files
        tests.
 
-    *) Bugfix: HTTPS connections might hang, if kqueue, epoll, rtsig, or 
+    *) Bugfix: HTTPS connections might hang, if kqueue, epoll, rtsig, or
        eventport methods were used; the bug had appeared in 0.7.7.
 
-    *) Bugfix: if the "server_name", "valid_referers", and "map" directives 
-       used an "*.domain.tld" wildcard and exact name "domain.tld" was not 
-       set, then the exact name was matched by the wildcard; the bug had 
+    *) Bugfix: if the "server_name", "valid_referers", and "map" directives
+       used an "*.domain.tld" wildcard and exact name "domain.tld" was not
+       set, then the exact name was matched by the wildcard; the bug had
        appeared in 0.3.18.
 
 
@@ -1838,19 +2236,19 @@ Changes with nginx 0.7.8                
     *) Feature: Solaris directio support.
        Thanks to Ivan Debnar.
 
-    *) Bugfix: now if FastCGI server sends a "Location" header line without 
+    *) Bugfix: now if FastCGI server sends a "Location" header line without
        status line, then nginx uses 302 status code.
        Thanks to Maxim Dounin.
 
 
 Changes with nginx 0.7.7                                         30 Jul 2008
 
-    *) Change: now the EAGAIN error returned by connect() is not considered 
+    *) Change: now the EAGAIN error returned by connect() is not considered
        as temporary error.
 
-    *) Change: now the $ssl_client_cert variable value is a certificate 
-       with TAB character intended before each line except first one; an 
-       unchanged certificate is available in the $ssl_client_raw_cert 
+    *) Change: now the $ssl_client_cert variable value is a certificate with
+       TAB character intended before each line except first one; an
+       unchanged certificate is available in the $ssl_client_raw_cert
        variable.
 
     *) Feature: the "ask" parameter in the "ssl_verify_client" directive.
@@ -1863,11 +2261,11 @@ Changes with nginx 0.7.7                
 
     *) Feature: MacOSX 10.5 sendfile() support.
 
-    *) Bugfix: now in MacOSX and Cygwin locations are tested in case 
-       insensitive mode; however, the compare is provided by single-byte 
+    *) Bugfix: now in MacOSX and Cygwin locations are tested in case
+       insensitive mode; however, the compare is provided by single-byte
        locales only.
 
-    *) Bugfix: mail proxy SSL connections hanged, if select, poll, or 
+    *) Bugfix: mail proxy SSL connections hanged, if select, poll, or
        /dev/poll methods were used.
 
     *) Bugfix: UTF-8 encoding usage in the ngx_http_autoindex_module.
@@ -1875,23 +2273,23 @@ Changes with nginx 0.7.7                
 
 Changes with nginx 0.7.6                                         07 Jul 2008
 
-    *) Bugfix: now if variables are used in the "access_log" directive a 
+    *) Bugfix: now if variables are used in the "access_log" directive a
        request root existence is always tested.
 
-    *) Bugfix: the ngx_http_flv_module did not support several values in a 
+    *) Bugfix: the ngx_http_flv_module did not support several values in a
        query string.
 
 
 Changes with nginx 0.7.5                                         01 Jul 2008
 
-    *) Bugfixes in variables support in the "access_log" directive; the 
-       bugs had appeared in 0.7.4.
+    *) Bugfixes in variables support in the "access_log" directive; the bugs
+       had appeared in 0.7.4.
 
-    *) Bugfix: nginx could not be built --without-http_gzip_module; the bug 
+    *) Bugfix: nginx could not be built --without-http_gzip_module; the bug
        had appeared in 0.7.3.
        Thanks to Kirill A. Korinskiy.
 
-    *) Bugfix: if sub_filter and SSI were used together, then responses 
+    *) Bugfix: if sub_filter and SSI were used together, then responses
        might were transferred incorrectly.
 
 
@@ -1910,16 +2308,16 @@ Changes with nginx 0.7.4                
 
 Changes with nginx 0.7.3                                         23 Jun 2008
 
-    *) Change: the "rss" extension MIME type has been changed to 
+    *) Change: the "rss" extension MIME type has been changed to
        "application/rss+xml".
 
-    *) Change: now the "gzip_vary" directive turned on issues a 
+    *) Change: now the "gzip_vary" directive turned on issues a
        "Vary: Accept-Encoding" header line for uncompressed responses too.
 
-    *) Feature: now the "rewrite" directive does a redirect automatically 
-       if the "https://" protocol is used.
+    *) Feature: now the "rewrite" directive does a redirect automatically if
+       the "https://" protocol is used.
 
-    *) Bugfix: the "proxy_pass" directive did not work with the HTTPS 
+    *) Bugfix: the "proxy_pass" directive did not work with the HTTPS
        protocol; the bug had appeared in 0.6.9.
 
 
@@ -1932,14 +2330,14 @@ Changes with nginx 0.7.2                
     *) Feature: the $ssl_client_cert variable.
        Thanks to Manlio Perillo.
 
-    *) Bugfix: after changing URI via a "rewrite" directive nginx did not 
+    *) Bugfix: after changing URI via a "rewrite" directive nginx did not
        search a new location; the bug had appeared in 0.7.1.
        Thanks to Maxim Dounin.
 
-    *) Bugfix: nginx could not be built without PCRE library; the bug had 
+    *) Bugfix: nginx could not be built without PCRE library; the bug had
        appeared in 0.7.1.
 
-    *) Bugfix: when a request to a directory was redirected with the slash 
+    *) Bugfix: when a request to a directory was redirected with the slash
        added, nginx dropped a query string from the original request.
 
 
@@ -1947,16 +2345,16 @@ Changes with nginx 0.7.1                
 
     *) Change: now locations are searched in a tree.
 
-    *) Change: the "optimize_server_names" directive was canceled due to 
-       the "server_name_in_redirect" directive introduction.
+    *) Change: the "optimize_server_names" directive was canceled due to the
+       "server_name_in_redirect" directive introduction.
 
     *) Change: some long deprecated directives are not supported anymore.
 
-    *) Change: the "none" parameter in the "ssl_session_cache" directive; 
+    *) Change: the "none" parameter in the "ssl_session_cache" directive;
        now this is default parameter.
        Thanks to Rob Mueller.
 
-    *) Bugfix: worker processes might not catch reconfiguration and log 
+    *) Bugfix: worker processes might not catch reconfiguration and log
        rotation signals.
 
     *) Bugfix: nginx could not be built on latest Fedora 9 Linux.
@@ -1965,15 +2363,15 @@ Changes with nginx 0.7.1                
 
 Changes with nginx 0.7.0                                         19 May 2008
 
-    *) Change: now the 0x00-0x1F, '"' and '\' characters are escaped as 
-       \xXX in an access_log.
+    *) Change: now the 0x00-0x1F, '"' and '\' characters are escaped as \xXX
+       in an access_log.
        Thanks to Maxim Dounin.
 
     *) Change: now nginx allows several "Host" request header line.
 
     *) Feature: the "modified" flag in the "expires" directive.
 
-    *) Feature: the $uid_got and $uid_set variables may be used at any 
+    *) Feature: the $uid_got and $uid_set variables may be used at any
        request processing stage.
 
     *) Feature: the $hostname variable.
@@ -1982,40 +2380,40 @@ Changes with nginx 0.7.0                
     *) Feature: DESTDIR support.
        Thanks to Todd A. Fisher and Andras Voroskoi.
 
-    *) Bugfix: a segmentation fault might occur in worker process on Linux, 
+    *) Bugfix: a segmentation fault might occur in worker process on Linux,
        if keepalive was enabled.
 
 
 Changes with nginx 0.6.31                                        12 May 2008
 
-    *) Bugfix: nginx did not process FastCGI response if header was at the 
+    *) Bugfix: nginx did not process FastCGI response if header was at the
        end of FastCGI record; the bug had appeared in 0.6.2.
        Thanks to Sergey Serov.
 
-    *) Bugfix: a segmentation fault might occur in worker process if a file 
+    *) Bugfix: a segmentation fault might occur in worker process if a file
        was deleted and the "open_file_cache_errors" directive was off.
 
 
 Changes with nginx 0.6.30                                        29 Apr 2008
 
-    *) Change: now if an "include" directive pattern does not match any 
+    *) Change: now if an "include" directive pattern does not match any
        file, then nginx does not issue an error.
 
-    *) Feature: now the time in directives may be specified without spaces, 
+    *) Feature: now the time in directives may be specified without spaces,
        for example, "1h50m".
 
     *) Bugfix: memory leaks if the "ssl_verify_client" directive was on.
        Thanks to Chavelle Vincent.
 
-    *) Bugfix: the "sub_filter" directive might set text to change into 
+    *) Bugfix: the "sub_filter" directive might set text to change into
        output.
 
-    *) Bugfix: the "error_page" directive did not take into account 
+    *) Bugfix: the "error_page" directive did not take into account
        arguments in redirected URI.
 
     *) Bugfix: now nginx always opens files in binary mode under Cygwin.
 
-    *) Bugfix: nginx could not be built on OpenBSD; the bug had appeared in 
+    *) Bugfix: nginx could not be built on OpenBSD; the bug had appeared in
        0.6.15.
 
 
@@ -2023,61 +2421,61 @@ Changes with nginx 0.6.29               
 
     *) Feature: the ngx_google_perftools_module.
 
-    *) Bugfix: the ngx_http_perl_module could not be built on 64-bit 
+    *) Bugfix: the ngx_http_perl_module could not be built on 64-bit
        platforms; the bug had appeared in 0.6.27.
 
 
 Changes with nginx 0.6.28                                        13 Mar 2008
 
-    *) Bugfix: the rtsig method could not be built; the bug had appeared in 
+    *) Bugfix: the rtsig method could not be built; the bug had appeared in
        0.6.27.
 
 
 Changes with nginx 0.6.27                                        12 Mar 2008
 
-    *) Change: now by default the rtsig method is not built on 
+    *) Change: now by default the rtsig method is not built on
        Linux 2.6.18+.
 
-    *) Change: now a request method is not changed while redirection to a 
+    *) Change: now a request method is not changed while redirection to a
        named location via an "error_page" directive.
 
-    *) Feature: the "resolver" and "resolver_timeout" directives in SMTP 
+    *) Feature: the "resolver" and "resolver_timeout" directives in SMTP
        proxy.
 
     *) Feature: the "post_action" directive supports named locations.
 
-    *) Bugfix: a segmentation fault occurred in worker process, if a 
-       request was redirected from proxy, FastCGI, or memcached location to 
-       static named locations.
+    *) Bugfix: a segmentation fault occurred in worker process, if a request
+       was redirected from proxy, FastCGI, or memcached location to static
+       named locations.
 
-    *) Bugfix: browsers did not repeat SSL handshake if there is no valid 
-       client certificate in first handshake. 
+    *) Bugfix: browsers did not repeat SSL handshake if there is no valid
+       client certificate in first handshake.
        Thanks to Alexander V. Inyukhin.
 
-    *) Bugfix: if response code 495-497 was redirected via an "error_page" 
-       directive without code change, then nginx tried to allocate too many 
+    *) Bugfix: if response code 495-497 was redirected via an "error_page"
+       directive without code change, then nginx tried to allocate too many
        memory.
 
     *) Bugfix: memory leak in long-lived non buffered connections.
 
     *) Bugfix: memory leak in resolver.
 
-    *) Bugfix: a segmentation fault occurred in worker process, if a 
-       request was redirected from proxy, FastCGI, or memcached location to 
-       static named locations.
+    *) Bugfix: a segmentation fault occurred in worker process, if a request
+       was redirected from proxy, FastCGI, or memcached location to static
+       named locations.
 
     *) Bugfix: in the $proxy_host and $proxy_port variables caching.
        Thanks to Sergey Bochenkov.
 
-    *) Bugfix: a "proxy_pass" directive with variables used incorrectly the 
-       same port as in another "proxy_pass" directive with the same host 
+    *) Bugfix: a "proxy_pass" directive with variables used incorrectly the
+       same port as in another "proxy_pass" directive with the same host
        name and without variables.
        Thanks to Sergey Bochenkov.
 
-    *) Bugfix: an alert "sendmsg() failed (9: Bad file descriptor)" on some 
+    *) Bugfix: an alert "sendmsg() failed (9: Bad file descriptor)" on some
        64-bit platforms while reconfiguration.
 
-    *) Bugfix: a segmentation fault occurred in worker process, if empty 
+    *) Bugfix: a segmentation fault occurred in worker process, if empty
        stub block was used second time in SSI.
 
     *) Bugfix: in copying URI part contained escaped symbols into arguments.
@@ -2085,69 +2483,69 @@ Changes with nginx 0.6.27               
 
 Changes with nginx 0.6.26                                        11 Feb 2008
 
-    *) Bugfix: the "proxy_store" and "fastcgi_store" directives did not 
+    *) Bugfix: the "proxy_store" and "fastcgi_store" directives did not
        check a response length.
 
-    *) Bugfix: a segmentation fault occurred in worker process, if big 
-       value was used in a "expires" directive.
+    *) Bugfix: a segmentation fault occurred in worker process, if big value
+       was used in a "expires" directive.
        Thanks to Joaquin Cuenca Abela.
 
     *) Bugfix: nginx incorrectly detected cache line size on Pentium 4.
        Thanks to Gena Makhomed.
 
-    *) Bugfix: in proxied or FastCGI subrequests a client original method 
+    *) Bugfix: in proxied or FastCGI subrequests a client original method
        was used instead of the GET method.
 
     *) Bugfix: socket leak in HTTPS mode if deferred accept was used.
        Thanks to Ben Maurer.
 
-    *) Bugfix: nginx issued the bogus error message "SSL_shutdown() failed 
+    *) Bugfix: nginx issued the bogus error message "SSL_shutdown() failed
        (SSL: )"; the bug had appeared in 0.6.23.
 
-    *) Bugfix: in HTTPS mode requests might fail with the "bad write retry" 
+    *) Bugfix: in HTTPS mode requests might fail with the "bad write retry"
        error; the bug had appeared in 0.6.23.
 
 
 Changes with nginx 0.6.25                                        08 Jan 2008
 
-    *) Change: now the "server_name_in_redirect" directive is used instead 
+    *) Change: now the "server_name_in_redirect" directive is used instead
        of the "server_name" directive's special "*" parameter.
 
-    *) Change: now wildcard and regex names can be used as main name in a 
+    *) Change: now wildcard and regex names can be used as main name in a
        "server_name" directive.
 
-    *) Change: the "satisfy_any" directive was replaced by the "satisfy" 
+    *) Change: the "satisfy_any" directive was replaced by the "satisfy"
        directive.
 
-    *) Workaround: old worker processes might hog CPU after reconfiguration 
+    *) Workaround: old worker processes might hog CPU after reconfiguration
        if they was run under Linux OpenVZ.
 
     *) Feature: the "min_delete_depth" directive.
 
     *) Bugfix: the COPY and MOVE methods did not work with single files.
 
-    *) Bugfix: the ngx_http_gzip_static_module did not allow the 
+    *) Bugfix: the ngx_http_gzip_static_module did not allow the
        ngx_http_dav_module to work; the bug had appeared in 0.6.23.
 
     *) Bugfix: socket leak in HTTPS mode if deferred accept was used.
        Thanks to Ben Maurer.
 
-    *) Bugfix: nginx could not be built without PCRE library; the bug had 
+    *) Bugfix: nginx could not be built without PCRE library; the bug had
        appeared in 0.6.23.
 
 
 Changes with nginx 0.6.24                                        27 Dec 2007
 
-    *) Bugfix: a segmentation fault might occur in worker process if HTTPS 
+    *) Bugfix: a segmentation fault might occur in worker process if HTTPS
        was used; the bug had appeared in 0.6.23.
 
 
 Changes with nginx 0.6.23                                        27 Dec 2007
 
-    *) Change: the "off" parameter in the "ssl_session_cache" directive; 
-       now this is default parameter.
+    *) Change: the "off" parameter in the "ssl_session_cache" directive; now
+       this is default parameter.
 
-    *) Change: the "open_file_cache_retest" directive was renamed to the 
+    *) Change: the "open_file_cache_retest" directive was renamed to the
        "open_file_cache_valid".
 
     *) Feature: the "open_file_cache_min_uses" directive.
@@ -2156,20 +2554,20 @@ Changes with nginx 0.6.23               
 
     *) Feature: the "gzip_disable" directive.
 
-    *) Feature: the "memcached_pass" directive may be used inside the "if" 
+    *) Feature: the "memcached_pass" directive may be used inside the "if"
        block.
 
-    *) Bugfix: a segmentation fault occurred in worker process, if the 
+    *) Bugfix: a segmentation fault occurred in worker process, if the
        "memcached_pass" and "if" directives were used in the same location.
 
-    *) Bugfix: if a "satisfy_any on" directive was used and not all access 
-       and auth modules directives were set, then other given access and 
+    *) Bugfix: if a "satisfy_any on" directive was used and not all access
+       and auth modules directives were set, then other given access and
        auth directives were not tested;
 
-    *) Bugfix: regex parameters in a "valid_referers" directive were not 
+    *) Bugfix: regex parameters in a "valid_referers" directive were not
        inherited from previous level.
 
-    *) Bugfix: a "post_action" directive did run if a request was completed 
+    *) Bugfix: a "post_action" directive did run if a request was completed
        with 499 status code.
 
     *) Bugfix: optimization of 16K buffer usage in a SSL connection.
@@ -2178,71 +2576,71 @@ Changes with nginx 0.6.23               
     *) Bugfix: the STARTTLS in SMTP mode did not work.
        Thanks to Oleg Motienko.
 
-    *) Bugfix: in HTTPS mode requests might fail with the "bad write retry" 
+    *) Bugfix: in HTTPS mode requests might fail with the "bad write retry"
        error; the bug had appeared in 0.5.13.
 
 
 Changes with nginx 0.6.22                                        19 Dec 2007
 
-    *) Change: now all ngx_http_perl_module methods return values copied to 
+    *) Change: now all ngx_http_perl_module methods return values copied to
        perl's allocated memory.
 
-    *) Bugfix: if nginx was built with ngx_http_perl_module, the perl 
-       before 5.8.6 was used, and perl supported threads, then during 
-       reconfiguration the master process aborted; the bug had appeared in 
+    *) Bugfix: if nginx was built with ngx_http_perl_module, the perl before
+       5.8.6 was used, and perl supported threads, then during
+       reconfiguration the master process aborted; the bug had appeared in
        0.5.9.
        Thanks to Boris Zhmurov.
 
-    *) Bugfix: the ngx_http_perl_module methods may get invalid values of 
+    *) Bugfix: the ngx_http_perl_module methods may get invalid values of
        the regex captures.
 
-    *) Bugfix: a segmentation fault occurred in worker process, if the 
-       $r->has_request_body() method was called for a request whose small 
+    *) Bugfix: a segmentation fault occurred in worker process, if the
+       $r->has_request_body() method was called for a request whose small
        request body was already received.
 
-    *) Bugfix: large_client_header_buffers did not freed before going to 
+    *) Bugfix: large_client_header_buffers did not freed before going to
        keep-alive state.
        Thanks to Olexander Shtepa.
 
-    *) Bugfix: the last address was missed in the $upstream_addr variable; 
+    *) Bugfix: the last address was missed in the $upstream_addr variable;
        the bug had appeared in 0.6.18.
 
-    *) Bugfix: the "fastcgi_catch_stderr" directive did return error code; 
-       now it returns 502 code, that can be rerouted to a next server using 
+    *) Bugfix: the "fastcgi_catch_stderr" directive did return error code;
+       now it returns 502 code, that can be rerouted to a next server using
        the "fastcgi_next_upstream invalid_header" directive.
 
-    *) Bugfix: a segmentation fault occurred in master process if the 
-       "fastcgi_catch_stderr" directive was used; the bug had appeared in 
+    *) Bugfix: a segmentation fault occurred in master process if the
+       "fastcgi_catch_stderr" directive was used; the bug had appeared in
        0.6.10.
        Thanks to Manlio Perillo.
 
 
 Changes with nginx 0.6.21                                        03 Dec 2007
 
-    *) Change: if variable values used in a "proxy_pass" directive contain 
+    *) Change: if variable values used in a "proxy_pass" directive contain
        IP-addresses only, then a "resolver" directive is not mandatory.
 
-    *) Bugfix: a segmentation fault might occur in worker process if a 
-       "proxy_pass" directive with URI-part was used; the bug had appeared 
+    *) Bugfix: a segmentation fault might occur in worker process if a
+       "proxy_pass" directive with URI-part was used; the bug had appeared
        in 0.6.19.
 
-    *) Bugfix: if resolver was used on platform that does not support 
+    *) Bugfix: if resolver was used on platform that does not support
        kqueue, then nginx issued an alert "name is out of response".
        Thanks to Andrei Nigmatulin.
 
-    *) Bugfix: if the $server_protocol was used in FastCGI parameters and a 
-       request line length was near to the "client_header_buffer_size" 
-       directive value, then nginx issued an alert "fastcgi: the request 
+    *) Bugfix: if the $server_protocol was used in FastCGI parameters and a
+       request line length was near to the "client_header_buffer_size"
+       directive value, then nginx issued an alert "fastcgi: the request
        record is too big".
 
-    *) Bugfix: if a plain text HTTP/0.9 version request was made to HTTPS 
+    *) Bugfix: if a plain text HTTP/0.9 version request was made to HTTPS
        server, then nginx returned usual response.
 
 
 Changes with nginx 0.6.20                                        28 Nov 2007
 
-    *) Bugfix: a segmentation fault might occur in worker process if a 
-       "proxy_pass" directive with URI-part was used; the bug had appeared 
+    *) Bugfix: a segmentation fault might occur in worker process if a
+       "proxy_pass" directive with URI-part was used; the bug had appeared
        in 0.6.19.
 
 
@@ -2253,20 +2651,20 @@ Changes with nginx 0.6.19               
 
 Changes with nginx 0.6.18                                        27 Nov 2007
 
-    *) Change: now the ngx_http_userid_module adds start time microseconds 
+    *) Change: now the ngx_http_userid_module adds start time microseconds
        to the cookie field contains a pid value.
 
-    *) Change: now the full request line instead of URI only is written to 
+    *) Change: now the full request line instead of URI only is written to
        error_log.
 
     *) Feature: variables support in the "proxy_pass" directive.
 
     *) Feature: the "resolver" and "resolver_timeout" directives.
 
-    *) Feature: now the directive "add_header last-modified ''" deletes a 
+    *) Feature: now the directive "add_header last-modified ''" deletes a
        "Last-Modified" response header line.
 
-    *) Bugfix: the "limit_rate" directive did not allow to use full 
+    *) Bugfix: the "limit_rate" directive did not allow to use full
        throughput, even if limit value was very high.
 
 
@@ -2275,19 +2673,19 @@ Changes with nginx 0.6.17               
     *) Feature: the "If-Range" request header line support.
        Thanks to Alexander V. Inyukhin.
 
-    *) Bugfix: URL double escaping in a redirect of the "msie_refresh" 
+    *) Bugfix: URL double escaping in a redirect of the "msie_refresh"
        directive; the bug had appeared in 0.6.4.
 
-    *) Bugfix: the "autoindex" directive did not work with the "alias /" 
+    *) Bugfix: the "autoindex" directive did not work with the "alias /"
        directive.
 
-    *) Bugfix: a segmentation fault might occur in worker process if 
+    *) Bugfix: a segmentation fault might occur in worker process if
        subrequests were used.
 
-    *) Bugfix: the big responses may be transferred truncated if SSL and 
+    *) Bugfix: the big responses may be transferred truncated if SSL and
        gzip were used.
 
-    *) Bugfix: the $status variable was equal to 0 if a proxied server 
+    *) Bugfix: the $status variable was equal to 0 if a proxied server
        returned response in HTTP/0.9 version.
 
 
@@ -2296,8 +2694,8 @@ Changes with nginx 0.6.16               
     *) Change: now the uname(2) is used on Linux instead of procfs.
        Thanks to Ilya Novikov.
 
-    *) Bugfix: if the "?" character was in a "error_page" directive, then 
-       it was escaped in a proxied request; the bug had appeared in 0.6.11.
+    *) Bugfix: if the "?" character was in a "error_page" directive, then it
+       was escaped in a proxied request; the bug had appeared in 0.6.11.
 
     *) Bugfix: compatibility with mget.
 
@@ -2315,21 +2713,21 @@ Changes with nginx 0.6.15               
 
     *) Bugfix: nginx did not unescape URI in the "include" SSI command.
 
-    *) Bugfix: the segmentation fault was occurred on start or while 
-       reconfiguration if variable was used in the "charset" or 
+    *) Bugfix: the segmentation fault was occurred on start or while
+       reconfiguration if variable was used in the "charset" or
        "source_charset" directives.
 
-    *) Bugfix: nginx returned the 400 response on requests like 
+    *) Bugfix: nginx returned the 400 response on requests like
        "GET http://www.domain.com HTTP/1.0".
        Thanks to James Oakley.
 
-    *) Bugfix: if request with request body was redirected using the 
-       "error_page" directive, then nginx tried to read the request body 
+    *) Bugfix: if request with request body was redirected using the
+       "error_page" directive, then nginx tried to read the request body
        again; the bug had appeared in 0.6.7.
 
-    *) Bugfix: a segmentation fault occurred in worker process if no 
-       server_name was explicitly defined for server processing request; 
-       the bug had appeared in 0.6.7.
+    *) Bugfix: a segmentation fault occurred in worker process if no
+       server_name was explicitly defined for server processing request; the
+       bug had appeared in 0.6.7.
 
 
 Changes with nginx 0.6.14                                        15 Oct 2007
@@ -2338,31 +2736,31 @@ Changes with nginx 0.6.14               
 
     *) Feature: the "encoding" parameter in the "echo" SSI command.
 
-    *) Feature: the "access_log" directive may be used inside the 
+    *) Feature: the "access_log" directive may be used inside the
        "limit_except" block.
 
-    *) Bugfix: if all upstream servers were failed, then all servers had 
-       got weight the was equal one until servers became alive; the bug had 
+    *) Bugfix: if all upstream servers were failed, then all servers had got
+       weight the was equal one until servers became alive; the bug had
        appeared in 0.6.6.
 
-    *) Bugfix: a segmentation fault occurred in worker process if 
-       $date_local and $date_gmt were used outside the 
+    *) Bugfix: a segmentation fault occurred in worker process if
+       $date_local and $date_gmt were used outside the
        ngx_http_ssi_filter_module.
 
-    *) Bugfix: a segmentation fault might occur in worker process if debug 
+    *) Bugfix: a segmentation fault might occur in worker process if debug
        log was enabled.
        Thanks to Andrei Nigmatulin.
 
-    *) Bugfix: ngx_http_memcached_module did not set 
+    *) Bugfix: ngx_http_memcached_module did not set
        $upstream_response_time.
        Thanks to Maxim Dounin.
 
-    *) Bugfix: a worker process may got caught in an endless loop, if the 
+    *) Bugfix: a worker process may got caught in an endless loop, if the
        memcached was used.
 
-    *) Bugfix: nginx supported low case only "close" and "keep-alive" 
-       values in the "Connection" request header line; the bug had appeared 
-       in 0.6.11.
+    *) Bugfix: nginx supported low case only "close" and "keep-alive" values
+       in the "Connection" request header line; the bug had appeared in
+       0.6.11.
 
     *) Bugfix: sub_filter did not work with empty substitution.
 
@@ -2371,7 +2769,7 @@ Changes with nginx 0.6.14               
 
 Changes with nginx 0.6.13                                        24 Sep 2007
 
-    *) Bugfix: nginx did not close directory file on HEAD request if 
+    *) Bugfix: nginx did not close directory file on HEAD request if
        autoindex was used.
        Thanks to Arkadiusz Patyk.
 
@@ -2380,82 +2778,82 @@ Changes with nginx 0.6.12               
 
     *) Change: mail proxy was split on three modules: pop3, imap and smtp.
 
-    *) Feature: the --without-mail_pop3_module, --without-mail_imap_module, 
+    *) Feature: the --without-mail_pop3_module, --without-mail_imap_module,
        and --without-mail_smtp_module configuration parameters.
 
-    *) Feature: the "smtp_greeting_delay" and "smtp_client_buffer" 
+    *) Feature: the "smtp_greeting_delay" and "smtp_client_buffer"
        directives of the ngx_mail_smtp_module.
 
-    *) Bugfix: the trailing wildcards did not work; the bug had appeared in 
+    *) Bugfix: the trailing wildcards did not work; the bug had appeared in
        0.6.9.
 
-    *) Bugfix: nginx could not start on Solaris if the shared PCRE library 
+    *) Bugfix: nginx could not start on Solaris if the shared PCRE library
        located in non-standard place was used.
 
-    *) Bugfix: the "proxy_hide_header" and "fastcgi_hide_header" directives 
-       did not hide response header lines whose name was longer than 32 
+    *) Bugfix: the "proxy_hide_header" and "fastcgi_hide_header" directives
+       did not hide response header lines whose name was longer than 32
        characters.
        Thanks to Manlio Perillo.
 
 
 Changes with nginx 0.6.11                                        11 Sep 2007
 
-    *) Bugfix: active connection counter always increased if mail proxy was 
+    *) Bugfix: active connection counter always increased if mail proxy was
        used.
 
-    *) Bugfix: if backend returned response header only using non-buffered 
+    *) Bugfix: if backend returned response header only using non-buffered
        proxy, then nginx closed backend connection on timeout.
 
-    *) Bugfix: nginx did not support several "Connection" request header 
+    *) Bugfix: nginx did not support several "Connection" request header
        lines.
 
-    *) Bugfix: if the "max_fails" was set for upstream server, then after 
-       first failure server weight was always one; the bug had appeared in 
+    *) Bugfix: if the "max_fails" was set for upstream server, then after
+       first failure server weight was always one; the bug had appeared in
        0.6.6.
 
 
 Changes with nginx 0.6.10                                        03 Sep 2007
 
-    *) Feature: the "open_file_cache", "open_file_cache_retest", and 
+    *) Feature: the "open_file_cache", "open_file_cache_retest", and
        "open_file_cache_errors" directives.
 
     *) Bugfix: socket leak; the bug had appeared in 0.6.7.
 
-    *) Bugfix: a charset set by the "charset" directive was not appended to 
+    *) Bugfix: a charset set by the "charset" directive was not appended to
        the "Content-Type" header set by $r->send_http_header().
 
-    *) Bugfix: a segmentation fault might occur in worker process if 
+    *) Bugfix: a segmentation fault might occur in worker process if
        /dev/poll method was used.
 
 
 Changes with nginx 0.6.9                                         28 Aug 2007
 
-    *) Bugfix: a worker process may got caught in an endless loop, if the 
+    *) Bugfix: a worker process may got caught in an endless loop, if the
        HTTPS protocol was used; the bug had appeared in 0.6.7.
 
-    *) Bugfix: if server listened on two addresses or ports and trailing 
+    *) Bugfix: if server listened on two addresses or ports and trailing
        wildcard was used, then nginx did not run.
 
-    *) Bugfix: the "ip_hash" directive might incorrectly mark servers as 
+    *) Bugfix: the "ip_hash" directive might incorrectly mark servers as
        down.
 
-    *) Bugfix: nginx could not be built on amd64; the bug had appeared in 
+    *) Bugfix: nginx could not be built on amd64; the bug had appeared in
        0.6.8.
 
 
 Changes with nginx 0.6.8                                         20 Aug 2007
 
-    *) Change: now nginx tries to set the "worker_priority", 
-       "worker_rlimit_nofile", "worker_rlimit_core", and 
+    *) Change: now nginx tries to set the "worker_priority",
+       "worker_rlimit_nofile", "worker_rlimit_core", and
        "worker_rlimit_sigpending" without super-user privileges.
 
-    *) Change: now nginx escapes space and "%" in request to a mail proxy 
+    *) Change: now nginx escapes space and "%" in request to a mail proxy
        authentication server.
 
     *) Change: now nginx escapes "%" in $memcached_key variable.
 
-    *) Bugfix: nginx used path relative to configuration prefix for 
-       non-absolute configuration file path specified in the "-c" key; the 
+    *) Bugfix: nginx used path relative to configuration prefix for
+       non-absolute configuration file path specified in the "-c" key; the
        bug had appeared in 0.6.6.
 
     *) Bugfix: nginx did not work on FreeBSD/sparc64.
@@ -2463,45 +2861,45 @@ Changes with nginx 0.6.8                
 
 Changes with nginx 0.6.7                                         15 Aug 2007
 
-    *) Change: now the paths specified in the "include", 
-       "auth_basic_user_file", "perl_modules", "ssl_certificate", 
-       "ssl_certificate_key", and "ssl_client_certificate" directives are 
-       relative to directory of nginx configuration file nginx.conf, but 
-       not to nginx prefix directory.
+    *) Change: now the paths specified in the "include",
+       "auth_basic_user_file", "perl_modules", "ssl_certificate",
+       "ssl_certificate_key", and "ssl_client_certificate" directives are
+       relative to directory of nginx configuration file nginx.conf, but not
+       to nginx prefix directory.
 
     *) Change: the --sysconfdir=PATH option in configure was canceled.
 
-    *) Change: the special make target "upgrade1" was defined for online 
+    *) Change: the special make target "upgrade1" was defined for online
        upgrade of 0.1.x versions.
 
-    *) Feature: the "server_name" and "valid_referers" directives support 
+    *) Feature: the "server_name" and "valid_referers" directives support
        regular expressions.
 
-    *) Feature: the "server" directive in the "upstream" context supports 
+    *) Feature: the "server" directive in the "upstream" context supports
        the "backup" parameter.
 
-    *) Feature: the ngx_http_perl_module supports the 
+    *) Feature: the ngx_http_perl_module supports the
        $r->discard_request_body.
 
-    *) Feature: the "add_header Last-Modified ..." directive changes the 
+    *) Feature: the "add_header Last-Modified ..." directive changes the
        "Last-Modified" response header line.
 
-    *) Bugfix: if a response different than 200 was returned to a request 
-       with body and connection went to the keep-alive state after the 
+    *) Bugfix: if a response different than 200 was returned to a request
+       with body and connection went to the keep-alive state after the
        request, then nginx returned 400 for the next request.
 
-    *) Bugfix: a segmentation fault occurred in worker process if invalid 
+    *) Bugfix: a segmentation fault occurred in worker process if invalid
        address was set in the "auth_http" directive.
 
-    *) Bugfix: now nginx uses default listen backlog value 511 on all 
+    *) Bugfix: now nginx uses default listen backlog value 511 on all
        platforms except FreeBSD.
        Thanks to Jiang Hong.
 
-    *) Bugfix: a worker process may got caught in an endless loop, if a 
-       "server" inside "upstream" block was marked as "down"; the bug had 
+    *) Bugfix: a worker process may got caught in an endless loop, if a
+       "server" inside "upstream" block was marked as "down"; the bug had
        appeared in 0.6.6.
 
-    *) Bugfix: now Solaris sendfilev() is not used to transfer the client 
+    *) Bugfix: now Solaris sendfilev() is not used to transfer the client
        request body to FastCGI-server via the unix domain socket.
 
 
@@ -2517,13 +2915,13 @@ Changes with nginx 0.6.6                
 
     *) Bugfix: fair big weight upstream balancer.
 
-    *) Bugfix: if a client has closed connection to mail proxy then nginx 
+    *) Bugfix: if a client has closed connection to mail proxy then nginx
        might not close connection to backend.
 
-    *) Bugfix: if the same host without specified port was used as backend 
+    *) Bugfix: if the same host without specified port was used as backend
        for HTTP and HTTPS, then nginx used only one port - 80 or 443.
 
-    *) Bugfix: fix building on Solaris/amd64 by Sun Studio 11 and early 
+    *) Bugfix: fix building on Solaris/amd64 by Sun Studio 11 and early
        versions; the bug had appeared in 0.6.4.
 
 
@@ -2540,8 +2938,7 @@ Changes with nginx 0.6.5                
 
     *) Bugfix: now nginx escapes space in $memcached_key variable.
 
-    *) Bugfix: nginx was incorrectly built by Sun Studio on 
-       Solaris/amd64.
+    *) Bugfix: nginx was incorrectly built by Sun Studio on Solaris/amd64.
        Thanks to Jiang Hong.
 
     *) Bugfix: of minor potential bugs.
@@ -2553,13 +2950,13 @@ Changes with nginx 0.6.4                
     *) Security: the "msie_refresh" directive allowed XSS.
        Thanks to Maxim Boguk.
 
-    *) Change: the "proxy_store" and "fastcgi_store" directives were 
+    *) Change: the "proxy_store" and "fastcgi_store" directives were
        changed.
 
-    *) Feature: the "proxy_store_access" and "fastcgi_store_access" 
+    *) Feature: the "proxy_store_access" and "fastcgi_store_access"
        directives.
 
-    *) Bugfix: nginx did not work on Solaris/sparc64 if it was built by Sun 
+    *) Bugfix: nginx did not work on Solaris/sparc64 if it was built by Sun
        Studio.
        Thanks to Andrei Nigmatulin.
 
@@ -2571,79 +2968,79 @@ Changes with nginx 0.6.3                
 
     *) Feature: the "proxy_store" and "fastcgi_store" directives.
 
-    *) Bugfix: a segmentation fault might occur in worker process if the 
+    *) Bugfix: a segmentation fault might occur in worker process if the
        "auth_http_header" directive was used.
        Thanks to Maxim Dounin.
 
-    *) Bugfix: a segmentation fault occurred in worker process if the 
+    *) Bugfix: a segmentation fault occurred in worker process if the
        CRAM-MD5 authentication method was used, but it was not enabled.
 
-    *) Bugfix: a segmentation fault might occur in worker process when the 
+    *) Bugfix: a segmentation fault might occur in worker process when the
        HTTPS protocol was used in the "proxy_pass" directive.
 
-    *) Bugfix: a segmentation fault might occur in worker process if the 
+    *) Bugfix: a segmentation fault might occur in worker process if the
        eventport method was used.
 
-    *) Bugfix: the "proxy_ignore_client_abort" and 
-       "fastcgi_ignore_client_abort" directives did not work; the bug had 
+    *) Bugfix: the "proxy_ignore_client_abort" and
+       "fastcgi_ignore_client_abort" directives did not work; the bug had
        appeared in 0.5.13.
 
 
 Changes with nginx 0.6.2                                         09 Jul 2007
 
-    *) Bugfix: if the FastCGI header was split in records, then nginx 
-       passed garbage in the header to a client.
+    *) Bugfix: if the FastCGI header was split in records, then nginx passed
+       garbage in the header to a client.
 
 
 Changes with nginx 0.6.1                                         17 Jun 2007
 
     *) Bugfix: in SSI parsing.
 
-    *) Bugfix: if remote SSI subrequest was used, then posterior local file 
+    *) Bugfix: if remote SSI subrequest was used, then posterior local file
        subrequest might transferred to client in wrong order.
 
-    *) Bugfix: large SSI inclusions buffered in temporary files were 
+    *) Bugfix: large SSI inclusions buffered in temporary files were
        truncated.
 
-    *) Bugfix: the perl $$ variable value in ngx_http_perl_module was equal 
+    *) Bugfix: the perl $$ variable value in ngx_http_perl_module was equal
        to the master process identification number.
 
 
 Changes with nginx 0.6.0                                         14 Jun 2007
 
-    *) Feature: the "server_name", "map", and "valid_referers" directives 
+    *) Feature: the "server_name", "map", and "valid_referers" directives
        support the "www.example.*" wildcards.
 
 
 Changes with nginx 0.5.25                                        11 Jun 2007
 
-    *) Bugfix: nginx could not be built with the 
-       --without-http_rewrite_module parameter; the bug had appeared in 
+    *) Bugfix: nginx could not be built with the
+       --without-http_rewrite_module parameter; the bug had appeared in
        0.5.24.
 
 
 Changes with nginx 0.5.24                                        06 Jun 2007
 
-    *) Security: the "ssl_verify_client" directive did not work if request 
+    *) Security: the "ssl_verify_client" directive did not work if request
        was made using HTTP/0.9.
 
-    *) Bugfix: a part of response body might be passed uncompressed if gzip 
+    *) Bugfix: a part of response body might be passed uncompressed if gzip
        was used; the bug had appeared in 0.5.23.
 
 
 Changes with nginx 0.5.23                                        04 Jun 2007
 
-    *) Feature: the ngx_http_ssl_module supports Server Name Indication TLS 
+    *) Feature: the ngx_http_ssl_module supports Server Name Indication TLS
        extension.
 
     *) Feature: the "fastcgi_catch_stderr" directive.
        Thanks to Nick S. Grechukh, OWOX project.
 
-    *) Bugfix: a segmentation fault occurred in master process if two 
+    *) Bugfix: a segmentation fault occurred in master process if two
        virtual servers should bind() to the overlapping ports.
 
-    *) Bugfix: if nginx was built with ngx_http_perl_module and perl 
-       supported threads, then during second reconfiguration the error 
+    *) Bugfix: if nginx was built with ngx_http_perl_module and perl
+       supported threads, then during second reconfiguration the error
        messages "panic: MUTEX_LOCK" and "perl_parse() failed" were issued.
 
     *) Bugfix: in the HTTPS protocol in the "proxy_pass" directive.
@@ -2651,20 +3048,20 @@ Changes with nginx 0.5.23               
 
 Changes with nginx 0.5.22                                        29 May 2007
 
-    *) Bugfix: a big request body might not be passed to backend; the bug 
+    *) Bugfix: a big request body might not be passed to backend; the bug
        had appeared in 0.5.21.
 
 
 Changes with nginx 0.5.21                                        28 May 2007
 
-    *) Bugfix: if server has more than about ten locations, then regex 
+    *) Bugfix: if server has more than about ten locations, then regex
        locations might be choosen not in that order as they were specified.
 
-    *) Bugfix: a worker process may got caught in an endless loop on 64-bit 
+    *) Bugfix: a worker process may got caught in an endless loop on 64-bit
        platform, if the 33-rd or next in succession backend has failed.
        Thanks to Anton Povarov.
 
-    *) Bugfix: a bus error might occur on Solaris/sparc64 if the PCRE 
+    *) Bugfix: a bus error might occur on Solaris/sparc64 if the PCRE
        library was used.
        Thanks to Andrei Nigmatulin.
 
@@ -2675,22 +3072,21 @@ Changes with nginx 0.5.20               
 
     *) Feature: the "sendfile_max_chunk" directive.
 
-    *) Feature: the "$http_...", "$sent_http_...", and "$upstream_http_..." 
+    *) Feature: the "$http_...", "$sent_http_...", and "$upstream_http_..."
        variables may be changed using the "set" directive.
 
-    *) Bugfix: a segmentation fault might occur in worker process if the 
-       SSI command 'if expr="$var = /"' was used.
+    *) Bugfix: a segmentation fault might occur in worker process if the SSI
+       command 'if expr="$var = /"' was used.
 
-    *) Bugfix: trailing boundary of multipart range response was 
-       transferred incorrectly.
+    *) Bugfix: trailing boundary of multipart range response was transferred
+       incorrectly.
        Thanks to Evan Miller.
 
-    *) Bugfix: nginx did not work on Solaris/sparc64 if it was built by Sun 
+    *) Bugfix: nginx did not work on Solaris/sparc64 if it was built by Sun
        Studio.
        Thanks to Andrei Nigmatulin.
 
-    *) Bugfix: the ngx_http_perl_module could not be built by Solaris 
-       make.
+    *) Bugfix: the ngx_http_perl_module could not be built by Solaris make.
        Thanks to Andrei Nigmatulin.
 
 
@@ -2698,19 +3094,19 @@ Changes with nginx 0.5.19               
 
     *) Change: now the $request_time variable has millisecond precision.
 
-    *) Change: the method $r->rflush of ngx_http_perl_module was renamed to 
+    *) Change: the method $r->rflush of ngx_http_perl_module was renamed to
        the $r->flush.
 
     *) Feature: the $upstream_addr variable.
 
-    *) Feature: the "proxy_headers_hash_max_size" and 
+    *) Feature: the "proxy_headers_hash_max_size" and
        "proxy_headers_hash_bucket_size" directives.
        Thanks to Volodymyr Kostyrko.
 
-    *) Bugfix: the files more than 2G could not be transferred using 
+    *) Bugfix: the files more than 2G could not be transferred using
        sendfile and limit_rate on 64-bit platforms.
 
-    *) Bugfix: the files more than 2G could not be transferred using 
+    *) Bugfix: the files more than 2G could not be transferred using
        sendfile on 64-bit Linux.
 
 
@@ -2720,16 +3116,16 @@ Changes with nginx 0.5.18               
 
     *) Feature: the "$upstream_http_..." variables.
 
-    *) Feature: now the $upstream_status and $upstream_response_time 
+    *) Feature: now the $upstream_status and $upstream_response_time
        variables keep data about all upstreams before X-Accel-Redirect.
 
-    *) Bugfix: a segmentation fault occurred in master process after first 
-       reconfiguration and receiving any signal if nginx was built with 
-       ngx_http_perl_module and perl did not support multiplicity; the bug 
+    *) Bugfix: a segmentation fault occurred in master process after first
+       reconfiguration and receiving any signal if nginx was built with
+       ngx_http_perl_module and perl did not support multiplicity; the bug
        had appeared in 0.5.9.
 
-    *) Bugfix: if perl did not support multiplicity, then after 
-       reconfiguration perl code did not work; the bug had appeared in 
+    *) Bugfix: if perl did not support multiplicity, then after
+       reconfiguration perl code did not work; the bug had appeared in
        0.3.38.
 
 
@@ -2737,68 +3133,68 @@ Changes with nginx 0.5.17               
 
     *) Change: now nginx always returns the 405 status for the TRACE method.
 
-    *) Feature: now nginx supports the "include" directive inside the 
+    *) Feature: now nginx supports the "include" directive inside the
        "types" block.
 
-    *) Bugfix: the $document_root variable usage in the "root" and "alias" 
+    *) Bugfix: the $document_root variable usage in the "root" and "alias"
        directives is disabled: this caused recursive stack overflow.
 
     *) Bugfix: in the HTTPS protocol in the "proxy_pass" directive.
 
-    *) Bugfix: in some cases non-cachable variables (such as $uri variable) 
+    *) Bugfix: in some cases non-cachable variables (such as $uri variable)
        returned old cached value.
 
 
 Changes with nginx 0.5.16                                        26 Mar 2007
 
-    *) Bugfix: the C-class network was not used as hash key in the 
-       "ip_hash" directive.
+    *) Bugfix: the C-class network was not used as hash key in the "ip_hash"
+       directive.
        Thanks to Pavel Yarkovoy.
 
-    *) Bugfix: a segmentation fault might occur in worker process if a 
-       charset was set in the "Content-Type" header line and the line has 
+    *) Bugfix: a segmentation fault might occur in worker process if a
+       charset was set in the "Content-Type" header line and the line has
        trailing ";"; the bug had appeared in 0.3.50.
 
-    *) Bugfix: the "[alert] zero size buf" error when FastCGI server was 
-       used and a request body written in a temporary file was multiple of 
+    *) Bugfix: the "[alert] zero size buf" error when FastCGI server was
+       used and a request body written in a temporary file was multiple of
        32K.
 
-    *) Bugfix: nginx could not be built on Solaris without the --with-debug 
+    *) Bugfix: nginx could not be built on Solaris without the --with-debug
        option; the bug had appeared in 0.5.15.
 
 
 Changes with nginx 0.5.15                                        19 Mar 2007
 
-    *) Feature: the mail proxy supports authenticated SMTP proxying and the 
+    *) Feature: the mail proxy supports authenticated SMTP proxying and the
        "smtp_auth", "smtp_capablities", and "xclient" directives.
        Thanks to Anton Yuzhaninov and Maxim Dounin.
 
-    *) Feature: now the keep-alive connections are closed just after 
+    *) Feature: now the keep-alive connections are closed just after
        receiving the reconfiguration signal.
 
-    *) Change: the "imap" and "auth" directives were renamed to the "mail" 
+    *) Change: the "imap" and "auth" directives were renamed to the "mail"
        and "pop3_auth" directives.
 
-    *) Bugfix: a segmentation fault occurred in worker process if the 
-       CRAM-MD5 authentication method was used and the APOP method was 
+    *) Bugfix: a segmentation fault occurred in worker process if the
+       CRAM-MD5 authentication method was used and the APOP method was
        disabled.
 
-    *) Bugfix: if the "starttls only" directive was used in POP3 protocol, 
+    *) Bugfix: if the "starttls only" directive was used in POP3 protocol,
        then nginx allowed authentication without switching to the SSL mode.
 
-    *) Bugfix: worker processes did not exit after reconfiguration and did 
+    *) Bugfix: worker processes did not exit after reconfiguration and did
        not rotate logs if the eventport method was used.
 
-    *) Bugfix: a worker process may got caught in an endless loop, if the 
+    *) Bugfix: a worker process may got caught in an endless loop, if the
        "ip_hash" directive was used.
 
-    *) Bugfix: now nginx does not log some alerts if eventport or /dev/poll 
+    *) Bugfix: now nginx does not log some alerts if eventport or /dev/poll
        methods are used.
 
 
 Changes with nginx 0.5.14                                        23 Feb 2007
 
-    *) Bugfix: nginx ignored superfluous closing "}" in the end of 
+    *) Bugfix: nginx ignored superfluous closing "}" in the end of
        configuration file.
 
 
@@ -2806,33 +3202,33 @@ Changes with nginx 0.5.13               
 
     *) Feature: the COPY and MOVE methods.
 
-    *) Bugfix: the ngx_http_realip_module set garbage for requests passed 
+    *) Bugfix: the ngx_http_realip_module set garbage for requests passed
        via keep-alive connection.
 
     *) Bugfix: nginx did not work on big-endian 64-bit Linux.
        Thanks to Andrei Nigmatulin.
 
-    *) Bugfix: now when IMAP/POP3 proxy receives too long command it closes 
+    *) Bugfix: now when IMAP/POP3 proxy receives too long command it closes
        the connection right away, but not after timeout.
 
-    *) Bugfix: if the "epoll" method was used and a client closed a 
-       connection prematurely, then nginx closed the connection after a 
-       send timeout only.
+    *) Bugfix: if the "epoll" method was used and a client closed a
+       connection prematurely, then nginx closed the connection after a send
+       timeout only.
 
-    *) Bugfix: nginx could not be built on platforms different from i386, 
+    *) Bugfix: nginx could not be built on platforms different from i386,
        amd64, sparc, and ppc; the bug had appeared in 0.5.8.
 
 
 Changes with nginx 0.5.12                                        12 Feb 2007
 
-    *) Bugfix: nginx could not be built on platforms different from i386, 
+    *) Bugfix: nginx could not be built on platforms different from i386,
        amd64, sparc, and ppc; the bug had appeared in 0.5.8.
 
-    *) Bugfix: a segmentation fault might occur in worker process if the 
-       temporary files were used while working with FastCGI server; the bug 
+    *) Bugfix: a segmentation fault might occur in worker process if the
+       temporary files were used while working with FastCGI server; the bug
        had appeared in 0.5.8.
 
-    *) Bugfix: a segmentation fault might occur in worker process if the 
+    *) Bugfix: a segmentation fault might occur in worker process if the
        $fastcgi_script_name variable was logged.
 
     *) Bugfix: ngx_http_perl_module could not be built on Solaris.
@@ -2843,69 +3239,69 @@ Changes with nginx 0.5.11               
     *) Feature: now configure detects system PCRE library in MacPorts.
        Thanks to Chris McGrath.
 
-    *) Bugfix: the response was incorrect if several ranges were requested; 
+    *) Bugfix: the response was incorrect if several ranges were requested;
        the bug had appeared in 0.5.6.
 
-    *) Bugfix: the "create_full_put_path" directive could not create the 
+    *) Bugfix: the "create_full_put_path" directive could not create the
        intermediate directories if no "dav_access" directive was set.
        Thanks to Evan Miller.
 
-    *) Bugfix: the "0" response code might be logged in the access_log 
+    *) Bugfix: the "0" response code might be logged in the access_log
        instead of the "400" and "408" error codes.
 
-    *) Bugfix: a segmentation fault might occur in worker process if nginx 
+    *) Bugfix: a segmentation fault might occur in worker process if nginx
        was built with -O2 optimization.
 
 
 Changes with nginx 0.5.10                                        26 Jan 2007
 
-    *) Bugfix: while online executable file upgrade the new master process 
+    *) Bugfix: while online executable file upgrade the new master process
        did not inherit the listening sockets; the bug had appeared in 0.5.9.
 
-    *) Bugfix: a segmentation fault might occur in worker process if nginx 
+    *) Bugfix: a segmentation fault might occur in worker process if nginx
        was built with -O2 optimization; the bug had appeared in 0.5.1.
 
 
 Changes with nginx 0.5.9                                         25 Jan 2007
 
-    *) Change: now the ngx_http_memcached_module uses the $memcached_key 
+    *) Change: now the ngx_http_memcached_module uses the $memcached_key
        variable value as a key.
 
     *) Feature: the $memcached_key variable.
 
-    *) Feature: the "clean" parameter in the "client_body_in_file_only" 
+    *) Feature: the "clean" parameter in the "client_body_in_file_only"
        directive.
 
     *) Feature: the "env" directive.
 
     *) Feature: the "sendfile" directive is available inside the "if" block.
 
-    *) Feature: now on failure of the writing to access nginx logs a 
-       message to error_log, but not more often than once a minute.
+    *) Feature: now on failure of the writing to access nginx logs a message
+       to error_log, but not more often than once a minute.
 
-    *) Bugfix: the "access_log off" directive did not always turn off the 
+    *) Bugfix: the "access_log off" directive did not always turn off the
        logging.
 
 
 Changes with nginx 0.5.8                                         19 Jan 2007
 
-    *) Bugfix: a segmentation fault might occur if 
+    *) Bugfix: a segmentation fault might occur if
        "client_body_in_file_only on" was used and a request body was small.
 
-    *) Bugfix: a segmentation fault occurred if 
-       "client_body_in_file_only on" and "proxy_pass_request_body off" or 
-       "fastcgi_pass_request_body off" directives were used, and nginx 
+    *) Bugfix: a segmentation fault occurred if
+       "client_body_in_file_only on" and "proxy_pass_request_body off" or
+       "fastcgi_pass_request_body off" directives were used, and nginx
        switched to a next upstream.
 
-    *) Bugfix: if the "proxy_buffering off" directive was used and a client 
-       connection was non-active, then the connection was closed after send 
+    *) Bugfix: if the "proxy_buffering off" directive was used and a client
+       connection was non-active, then the connection was closed after send
        timeout; the bug had appeared in 0.4.7.
 
-    *) Bugfix: if the "epoll" method was used and a client closed a 
-       connection prematurely, then nginx closed the connection after a 
-       send timeout only.
+    *) Bugfix: if the "epoll" method was used and a client closed a
+       connection prematurely, then nginx closed the connection after a send
+       timeout only.
 
-    *) Bugfix: the "[alert] zero size buf" error when FastCGI server was 
+    *) Bugfix: the "[alert] zero size buf" error when FastCGI server was
        used.
 
     *) Bugfixes in the "limit_zone" directive.
@@ -2917,15 +3313,15 @@ Changes with nginx 0.5.7                
 
     *) Bugfixes in the "ssl_session_cache" and "limit_zone" directives.
 
-    *) Bugfix: the segmentation fault was occurred on start or while 
-       reconfiguration if the "ssl_session_cache" or "limit_zone" 
-       directives were used on 64-bit platforms.
-
-    *) Bugfix: a segmentation fault occurred if the "add_before_body" or 
-       "add_after_body" directives were used and there was no 
-       "Content-Type" header line in response.
+    *) Bugfix: the segmentation fault was occurred on start or while
+       reconfiguration if the "ssl_session_cache" or "limit_zone" directives
+       were used on 64-bit platforms.
+
+    *) Bugfix: a segmentation fault occurred if the "add_before_body" or
+       "add_after_body" directives were used and there was no "Content-Type"
+       header line in response.
 
-    *) Bugfix: the OpenSSL library was always built with the threads 
+    *) Bugfix: the OpenSSL library was always built with the threads
        support.
        Thanks to Den Ivanov.
 
@@ -2934,19 +3330,19 @@ Changes with nginx 0.5.7                
 
 Changes with nginx 0.5.6                                         09 Jan 2007
 
-    *) Change: now the ngx_http_index_module ignores all methods except the 
+    *) Change: now the ngx_http_index_module ignores all methods except the
        GET, HEAD, and POST methods.
 
     *) Feature: the ngx_http_limit_zone_module.
 
     *) Feature: the $binary_remote_addr variable.
 
-    *) Feature: the "ssl_session_cache" directives of the 
+    *) Feature: the "ssl_session_cache" directives of the
        ngx_http_ssl_module and ngx_imap_ssl_module.
 
     *) Feature: the DELETE method supports recursive removal.
 
-    *) Bugfix: the byte-ranges were transferred incorrectly if the 
+    *) Bugfix: the byte-ranges were transferred incorrectly if the
        $r->sendfile() was used.
 
 
@@ -2956,13 +3352,13 @@ Changes with nginx 0.5.5                
 
     *) Feature: the -V switch.
 
-    *) Feature: the "worker_rlimit_core" directive supports size in K, M, 
+    *) Feature: the "worker_rlimit_core" directive supports size in K, M,
        and G.
 
-    *) Bugfix: the nginx.pm module now could be installed by an 
-       unprivileged user.
+    *) Bugfix: the nginx.pm module now could be installed by an unprivileged
+       user.
 
-    *) Bugfix: a segmentation fault might occur if the $r->request_body or 
+    *) Bugfix: a segmentation fault might occur if the $r->request_body or
        $r->request_body_file methods were used.
 
     *) Bugfix: the ppc platform specific bugs.
@@ -2970,85 +3366,85 @@ Changes with nginx 0.5.5                
 
 Changes with nginx 0.5.4                                         15 Dec 2006
 
-    *) Feature: the "perl" directive may be used inside the "limit_except" 
+    *) Feature: the "perl" directive may be used inside the "limit_except"
        block.
 
-    *) Bugfix: the ngx_http_dav_module required the "Date" request header 
+    *) Bugfix: the ngx_http_dav_module required the "Date" request header
        line for the DELETE method.
 
-    *) Bugfix: if one only parameter was used in the "dav_access" 
-       directive, then nginx might report about configuration error.
+    *) Bugfix: if one only parameter was used in the "dav_access" directive,
+       then nginx might report about configuration error.
 
-    *) Bugfix: a segmentation fault might occur if the $host variable was 
+    *) Bugfix: a segmentation fault might occur if the $host variable was
        used; the bug had appeared in 0.4.14.
 
 
 Changes with nginx 0.5.3                                         13 Dec 2006
 
-    *) Feature: the ngx_http_perl_module supports the $r->status, 
+    *) Feature: the ngx_http_perl_module supports the $r->status,
        $r->log_error, and $r->sleep methods.
 
-    *) Feature: the $r->variable method supports variables that do not 
-       exist in nginx configuration.
+    *) Feature: the $r->variable method supports variables that do not exist
+       in nginx configuration.
 
     *) Bugfix: the $r->has_request_body method did not work.
 
 
 Changes with nginx 0.5.2                                         11 Dec 2006
 
-    *) Bugfix: if the "proxy_pass" directive used the name of the 
-       "upstream" block, then nginx tried to resolve the name; the bug had 
-       appeared in 0.5.1.
+    *) Bugfix: if the "proxy_pass" directive used the name of the "upstream"
+       block, then nginx tried to resolve the name; the bug had appeared in
+       0.5.1.
 
 
 Changes with nginx 0.5.1                                         11 Dec 2006
 
-    *) Bugfix: the "post_action" directive might not run after a 
+    *) Bugfix: the "post_action" directive might not run after a
        unsuccessful completion of a request.
 
     *) Workaround: for Eudora for Mac; the bug had appeared in 0.4.11.
        Thanks to Bron Gondwana.
 
-    *) Bugfix: if the "upstream" name was used in the "fastcgi_pass", then 
-       the message "no port in upstream" was issued; the bug had appeared 
-       in 0.5.0.
+    *) Bugfix: if the "upstream" name was used in the "fastcgi_pass", then
+       the message "no port in upstream" was issued; the bug had appeared in
+       0.5.0.
 
-    *) Bugfix: if the "proxy_pass" and "fastcgi_pass" directives used the 
-       same servers but different ports, then these directives uses the 
+    *) Bugfix: if the "proxy_pass" and "fastcgi_pass" directives used the
+       same servers but different ports, then these directives uses the
        first described port; the bug had appeared in 0.5.0.
 
-    *) Bugfix: if the "proxy_pass" and "fastcgi_pass" directives used the 
-       unix domain sockets, then these directives used first described 
+    *) Bugfix: if the "proxy_pass" and "fastcgi_pass" directives used the
+       unix domain sockets, then these directives used first described
        socket; the bug had appeared in 0.5.0.
 
-    *) Bugfix: ngx_http_auth_basic_module ignored the user if it was in the 
-       last line in the password file and there was no the carriage return, 
+    *) Bugfix: ngx_http_auth_basic_module ignored the user if it was in the
+       last line in the password file and there was no the carriage return,
        the line feed, or the ":" symbol after the password.
 
-    *) Bugfix: the $upstream_response_time variable might be equal to 
+    *) Bugfix: the $upstream_response_time variable might be equal to
        "0.000", although response time was more than 1 millisecond.
 
 
 Changes with nginx 0.5.0                                         04 Dec 2006
 
-    *) Change: the parameters in the "%name" form in the "log_format" 
+    *) Change: the parameters in the "%name" form in the "log_format"
        directive are not supported anymore.
 
-    *) Change: the "proxy_upstream_max_fails", 
-       "proxy_upstream_fail_timeout", "fastcgi_upstream_max_fails", 
-       "fastcgi_upstream_fail_timeout", "memcached_upstream_max_fails", and 
-       "memcached_upstream_fail_timeout" directives are not supported 
+    *) Change: the "proxy_upstream_max_fails",
+       "proxy_upstream_fail_timeout", "fastcgi_upstream_max_fails",
+       "fastcgi_upstream_fail_timeout", "memcached_upstream_max_fails", and
+       "memcached_upstream_fail_timeout" directives are not supported
        anymore.
 
-    *) Feature: the "server" directive in the "upstream" context supports 
+    *) Feature: the "server" directive in the "upstream" context supports
        the "max_fails", "fail_timeout", and "down" parameters.
 
     *) Feature: the "ip_hash" directive inside the "upstream" block.
 
-    *) Feature: the WAIT status in the "Auth-Status" header line of the 
+    *) Feature: the WAIT status in the "Auth-Status" header line of the
        IMAP/POP3 proxy authentication server response.
 
-    *) Bugfix: nginx could not be built on 64-bit platforms; the bug had 
+    *) Bugfix: nginx could not be built on 64-bit platforms; the bug had
        appeared in 0.4.14.
 
 
@@ -3056,62 +3452,62 @@ Changes with nginx 0.4.14               
 
     *) Feature: the "proxy_pass_error_message" directive in IMAP/POP3 proxy.
 
-    *) Feature: now configure detects system PCRE library on FreeBSD, 
-       Linux, and NetBSD.
+    *) Feature: now configure detects system PCRE library on FreeBSD, Linux,
+       and NetBSD.
 
-    *) Bugfix: ngx_http_perl_module did not work with perl built with the 
+    *) Bugfix: ngx_http_perl_module did not work with perl built with the
        threads support; the bug had appeared in 0.3.38.
 
-    *) Bugfix: ngx_http_perl_module did not work if perl was called 
+    *) Bugfix: ngx_http_perl_module did not work if perl was called
        recursively.
 
     *) Bugfix: nginx ignored a host name in a request line.
 
-    *) Bugfix: a worker process may got caught in an endless loop, if a 
+    *) Bugfix: a worker process may got caught in an endless loop, if a
        FastCGI server sent too many data to the stderr.
 
-    *) Bugfix: the $upstream_response_time variable may be negative if the 
+    *) Bugfix: the $upstream_response_time variable may be negative if the
        system time was changed backward.
 
-    *) Bugfix: the "Auth-Login-Attempt" parameter was not sent to IMAP/POP3 
+    *) Bugfix: the "Auth-Login-Attempt" parameter was not sent to IMAP/POP3
        proxy authentication server when POP3 was used.
 
-    *) Bugfix: a segmentation fault might occur if connect to IMAP/POP3 
+    *) Bugfix: a segmentation fault might occur if connect to IMAP/POP3
        proxy authentication server failed.
 
 
 Changes with nginx 0.4.13                                        15 Nov 2006
 
-    *) Feature: the "proxy_pass" directive may be used inside the 
+    *) Feature: the "proxy_pass" directive may be used inside the
        "limit_except" block.
 
     *) Feature: the "limit_except" directive supports all WebDAV methods.
 
-    *) Bugfix: if the "add_before_body" directive was used without the 
-       "add_after_body" directive, then a response did not transferred 
+    *) Bugfix: if the "add_before_body" directive was used without the
+       "add_after_body" directive, then a response did not transferred
        complete.
 
-    *) Bugfix: a large request body did not receive if the epoll method and 
+    *) Bugfix: a large request body did not receive if the epoll method and
        the deferred accept() were used.
 
-    *) Bugfix: a charset could not be set for ngx_http_autoindex_module 
+    *) Bugfix: a charset could not be set for ngx_http_autoindex_module
        responses; the bug had appeared in 0.3.50.
 
-    *) Bugfix: the "[alert] zero size buf" error when FastCGI server was 
+    *) Bugfix: the "[alert] zero size buf" error when FastCGI server was
        used;
 
     *) Bugfix: the --group= configuration parameter was ignored.
        Thanks to Thomas Moschny.
 
-    *) Bugfix: the 50th subrequest in SSI response did not work; the bug 
-       had appeared in 0.3.50.
+    *) Bugfix: the 50th subrequest in SSI response did not work; the bug had
+       appeared in 0.3.50.
 
 
 Changes with nginx 0.4.12                                        31 Oct 2006
 
     *) Feature: the ngx_http_perl_module supports the $r->variable method.
 
-    *) Bugfix: if a big static file was included using SSI in a response, 
+    *) Bugfix: if a big static file was included using SSI in a response,
        then the response may be transferred incomplete.
 
     *) Bugfix: nginx did not omit the "#fragment" part in URI.
@@ -3121,28 +3517,28 @@ Changes with nginx 0.4.11               
 
     *) Feature: the POP3 proxy supports the AUTH LOGIN PLAIN and CRAM-MD5.
 
-    *) Feature: the ngx_http_perl_module supports the $r->allow_ranges 
+    *) Feature: the ngx_http_perl_module supports the $r->allow_ranges
        method.
 
-    *) Bugfix: if the APOP was enabled in the POP3 proxy, then the 
-       USER/PASS commands might not work; the bug had appeared in 0.4.10.
+    *) Bugfix: if the APOP was enabled in the POP3 proxy, then the USER/PASS
+       commands might not work; the bug had appeared in 0.4.10.
 
 
 Changes with nginx 0.4.10                                        23 Oct 2006
 
     *) Feature: the POP3 proxy supports the APOP command.
 
-    *) Bugfix: if the select, poll or /dev/poll methods were used, then 
-       while waiting authentication server response the IMAP/POP3 proxy 
+    *) Bugfix: if the select, poll or /dev/poll methods were used, then
+       while waiting authentication server response the IMAP/POP3 proxy
        hogged CPU.
 
-    *) Bugfix: a segmentation fault might occur if the $server_addr 
-       variable was used in the "map" directive.
+    *) Bugfix: a segmentation fault might occur if the $server_addr variable
+       was used in the "map" directive.
 
-    *) Bugfix: the ngx_http_flv_module did not support the byte ranges for 
+    *) Bugfix: the ngx_http_flv_module did not support the byte ranges for
        full responses; the bug had appeared in 0.4.7.
 
-    *) Bugfix: nginx could not be built on Debian amd64; the bug had 
+    *) Bugfix: nginx could not be built on Debian amd64; the bug had
        appeared in 0.4.9.
 
 
@@ -3150,17 +3546,17 @@ Changes with nginx 0.4.9                
 
     *) Feature: the "set" parameter in the "include" SSI command.
 
-    *) Feature: the ngx_http_perl_module now tests the nginx.pm module 
+    *) Feature: the ngx_http_perl_module now tests the nginx.pm module
        version.
 
 
 Changes with nginx 0.4.8                                         11 Oct 2006
 
-    *) Bugfix: if an "include" SSI command were before another "include" 
-       SSI command with a "wait" parameter, then the "wait" parameter might 
-       not work.
+    *) Bugfix: if an "include" SSI command were before another "include" SSI
+       command with a "wait" parameter, then the "wait" parameter might not
+       work.
 
-    *) Bugfix: the ngx_http_flv_module added the FLV header to the full 
+    *) Bugfix: the ngx_http_flv_module added the FLV header to the full
        responses.
        Thanks to Alexey Kovyrin.
 
@@ -3171,38 +3567,38 @@ Changes with nginx 0.4.7                
 
     *) Feature: the $request_body_file variable.
 
-    *) Feature: the "charset" and "source_charset" directives support the 
+    *) Feature: the "charset" and "source_charset" directives support the
        variables.
 
-    *) Bugfix: if an "include" SSI command were before another "include" 
-       SSI command with a "wait" parameter, then the "wait" parameter might 
-       not work.
+    *) Bugfix: if an "include" SSI command were before another "include" SSI
+       command with a "wait" parameter, then the "wait" parameter might not
+       work.
 
-    *) Bugfix: if the "proxy_buffering off" directive was used or while 
-       working with memcached the connections might not be closed on 
+    *) Bugfix: if the "proxy_buffering off" directive was used or while
+       working with memcached the connections might not be closed on
        timeout.
 
-    *) Bugfix: nginx did not run on 64-bit platforms except amd64, sparc64, 
+    *) Bugfix: nginx did not run on 64-bit platforms except amd64, sparc64,
        and ppc64.
 
 
 Changes with nginx 0.4.6                                         06 Oct 2006
 
-    *) Bugfix: nginx did not run on 64-bit platforms except amd64, sparc64, 
+    *) Bugfix: nginx did not run on 64-bit platforms except amd64, sparc64,
        and ppc64.
 
     *) Bugfix: nginx sent the chunked response for HTTP/1.1 request,
-       if its length was set by text string in the 
+       if its length was set by text string in the
        $r->headers_out("Content-Length", ...) method.
 
-    *) Bugfix: after redirecting error by an "error_page" directive any 
-       ngx_http_rewrite_module directive returned this error code; the bug 
+    *) Bugfix: after redirecting error by an "error_page" directive any
+       ngx_http_rewrite_module directive returned this error code; the bug
        had appeared in 0.4.4.
 
 
 Changes with nginx 0.4.5                                         02 Oct 2006
 
-    *) Bugfix: nginx could not be built on Linux and Solaris; the bug had 
+    *) Bugfix: nginx could not be built on Linux and Solaris; the bug had
        appeared in 0.4.4.
 
 
@@ -3215,29 +3611,29 @@ Changes with nginx 0.4.4                
     *) Feature: the "include" directive supports the "*" mask.
        Thanks to Jonathan Dance.
 
-    *) Bugfix: the "return" directive always overrode the "error_page" 
+    *) Bugfix: the "return" directive always overrode the "error_page"
        response code redirected by the "error_page" directive.
 
-    *) Bugfix: a segmentation fault occurred if zero-length body was in PUT 
+    *) Bugfix: a segmentation fault occurred if zero-length body was in PUT
        method.
 
-    *) Bugfix: the redirect was changed incorrectly if the variables were 
+    *) Bugfix: the redirect was changed incorrectly if the variables were
        used in the "proxy_redirect" directive.
 
 
 Changes with nginx 0.4.3                                         26 Sep 2006
 
-    *) Change: now the 499 error could not be redirected using an 
+    *) Change: now the 499 error could not be redirected using an
        "error_page" directive.
 
     *) Feature: the Solaris 10 event ports support.
 
     *) Feature: the ngx_http_browser_module.
 
-    *) Bugfix: a segmentation fault may occur while redirecting the 400 
+    *) Bugfix: a segmentation fault may occur while redirecting the 400
        error to the proxied server using a "proxy_pass" directive.
 
-    *) Bugfix: a segmentation fault occurred if an unix domain socket was 
+    *) Bugfix: a segmentation fault occurred if an unix domain socket was
        used in a "proxy_pass" directive; the bug had appeared in 0.3.47.
 
     *) Bugfix: SSI did work with memcached and nonbuffered responses.
@@ -3247,8 +3643,8 @@ Changes with nginx 0.4.3                
 
 Changes with nginx 0.4.2                                         14 Sep 2006
 
-    *) Bugfix: the O_NOATIME flag support on Linux was canceled; the bug 
-       had appeared in 0.4.1.
+    *) Bugfix: the O_NOATIME flag support on Linux was canceled; the bug had
+       appeared in 0.4.1.
 
 
 Changes with nginx 0.4.1                                         14 Sep 2006
@@ -3256,32 +3652,31 @@ Changes with nginx 0.4.1                
     *) Bugfix: the DragonFlyBSD compatibility.
        Thanks to Pavel Nazarov.
 
-    *) Workaround: of bug in 64-bit Linux sendfile(), when file is more 
-       than 2G.
+    *) Workaround: of bug in 64-bit Linux sendfile(), when file is more than
+       2G.
 
-    *) Feature: now on Linux nginx uses O_NOATIME flag for static 
-       requests.
+    *) Feature: now on Linux nginx uses O_NOATIME flag for static requests.
        Thanks to Yusuf Goolamabbas.
 
 
 Changes with nginx 0.4.0                                         30 Aug 2006
 
-    *) Change in internal API: the HTTP modules initialization was moved 
+    *) Change in internal API: the HTTP modules initialization was moved
        from the init module phase to the HTTP postconfiguration phase.
 
-    *) Change: now the request body is not read beforehand for the 
-       ngx_http_perl_module: it's required to start the reading using the 
+    *) Change: now the request body is not read beforehand for the
+       ngx_http_perl_module: it's required to start the reading using the
        $r->has_request_body method.
 
     *) Feature: the ngx_http_perl_module supports the DECLINED return code.
 
-    *) Feature: the ngx_http_dav_module supports the incoming "Date" header 
+    *) Feature: the ngx_http_dav_module supports the incoming "Date" header
        line for the PUT method.
 
     *) Feature: the "ssi" directive is available inside the "if" block.
 
-    *) Bugfix: a segmentation fault occurred if there was an "index" 
-       directive with variables and the first index name was without 
+    *) Bugfix: a segmentation fault occurred if there was an "index"
+       directive with variables and the first index name was without
        variables; the bug had appeared in 0.1.29.
 
 
@@ -3293,26 +3688,26 @@ Changes with nginx 0.3.61               
 
     *) Feature: the "recursive_error_pages" directive.
 
-    *) Bugfix: the "rewrite" directive returned incorrect redirect, if the 
+    *) Bugfix: the "rewrite" directive returned incorrect redirect, if the
        redirect had the captured escaped symbols from original URI.
 
 
 Changes with nginx 0.3.60                                        18 Aug 2006
 
-    *) Bugfix: a worker process may got caught in an endless loop while an 
+    *) Bugfix: a worker process may got caught in an endless loop while an
        error redirection; the bug had appeared in 0.3.59.
 
 
 Changes with nginx 0.3.59                                        16 Aug 2006
 
-    *) Feature: now is possible to do several redirection using the 
+    *) Feature: now is possible to do several redirection using the
        "error_page" directive.
 
     *) Bugfix: the "dav_access" directive did not support three parameters.
 
-    *) Bugfix: the "error_page" directive did not changes the 
-       "Content-Type" header line after the "X-Accel-Redirect" was used; 
-       the bug had appeared in 0.3.58.
+    *) Bugfix: the "error_page" directive did not changes the "Content-Type"
+       header line after the "X-Accel-Redirect" was used; the bug had
+       appeared in 0.3.58.
 
 
 Changes with nginx 0.3.58                                        14 Aug 2006
@@ -3321,12 +3716,12 @@ Changes with nginx 0.3.58               
 
     *) Change: now the procfs interface instead of sysctl is used on Linux.
 
-    *) Change: now the "Content-Type" header line is inherited from first 
+    *) Change: now the "Content-Type" header line is inherited from first
        response when the "X-Accel-Redirect" was used.
 
     *) Bugfix: the "error_page" directive did not redirect the 413 error.
 
-    *) Bugfix: the trailing "?" did not remove old arguments if no new 
+    *) Bugfix: the trailing "?" did not remove old arguments if no new
        arguments were added to a rewritten URI.
 
     *) Bugfix: nginx could not run on 64-bit FreeBSD 7.0-CURRENT.
@@ -3339,10 +3734,10 @@ Changes with nginx 0.3.57               
     *) Bugfix: in the "!-e" operator of the "if" directive.
        Thanks to Andrian Budanstov.
 
-    *) Bugfix: while a client certificate verification nginx did not send 
-       to a client the required certificates information.
+    *) Bugfix: while a client certificate verification nginx did not send to
+       a client the required certificates information.
 
-    *) Bugfix: the $document_root variable did not support the variables in 
+    *) Bugfix: the $document_root variable did not support the variables in
        the "root" directive.
 
 
@@ -3350,11 +3745,11 @@ Changes with nginx 0.3.56               
 
     *) Feature: the "dav_access" directive.
 
-    *) Feature: the "if" directive supports the "-d", "!-d", "-e", "!-e", 
+    *) Feature: the "if" directive supports the "-d", "!-d", "-e", "!-e",
        "-x", and "!-x" operators.
 
-    *) Bugfix: a segmentation fault occurred if a request returned a 
-       redirect and some sent to client header lines were logged in the 
+    *) Bugfix: a segmentation fault occurred if a request returned a
+       redirect and some sent to client header lines were logged in the
        access log.
 
 
@@ -3366,108 +3761,108 @@ Changes with nginx 0.3.55               
 
     *) Feature: the unicode2nginx script was added to contrib.
 
-    *) Bugfix: if a "root" was specified by variable only, then the root 
-       was relative to a server prefix.
+    *) Bugfix: if a "root" was specified by variable only, then the root was
+       relative to a server prefix.
 
-    *) Bugfix: if the request contained "//" or "/./" and escaped symbols 
+    *) Bugfix: if the request contained "//" or "/./" and escaped symbols
        after them, then the proxied request was sent unescaped.
 
-    *) Bugfix: the $r->header_in("Cookie") of the ngx_http_perl_module now 
+    *) Bugfix: the $r->header_in("Cookie") of the ngx_http_perl_module now
        returns all "Cookie" header lines.
 
-    *) Bugfix: a segmentation fault occurred if 
-       "client_body_in_file_only on" was used and nginx switched to a next 
+    *) Bugfix: a segmentation fault occurred if
+       "client_body_in_file_only on" was used and nginx switched to a next
        upstream.
 
-    *) Bugfix: on some condition while reconfiguration character codes 
-       inside the "charset_map" may be treated invalid; the bug had 
-       appeared in 0.3.50.
+    *) Bugfix: on some condition while reconfiguration character codes
+       inside the "charset_map" may be treated invalid; the bug had appeared
+       in 0.3.50.
 
 
 Changes with nginx 0.3.54                                        11 Jul 2006
 
     *) Feature: nginx now logs the subrequest information to the error log.
 
-    *) Feature: the "proxy_next_upstream", "fastcgi_next_upstream", and 
+    *) Feature: the "proxy_next_upstream", "fastcgi_next_upstream", and
        "memcached_next_upstream" directives support the "off" parameter.
 
-    *) Feature: the "debug_connection" directive supports the CIDR address 
+    *) Feature: the "debug_connection" directive supports the CIDR address
        form.
 
-    *) Bugfix: if a response of proxied server or FastCGI server was 
+    *) Bugfix: if a response of proxied server or FastCGI server was
        converted from UTF-8 or back, then it may be transferred incomplete.
 
-    *) Bugfix: the $upstream_response_time variable had the time of the 
+    *) Bugfix: the $upstream_response_time variable had the time of the
        first request to a backend only.
 
-    *) Bugfix: nginx could not be built on amd64 platform; the bug had 
+    *) Bugfix: nginx could not be built on amd64 platform; the bug had
        appeared in 0.3.53.
 
 
 Changes with nginx 0.3.53                                        07 Jul 2006
 
-    *) Change: the "add_header" directive adds the string to 204, 301, and 
+    *) Change: the "add_header" directive adds the string to 204, 301, and
        302 responses.
 
-    *) Feature: the "server" directive in the "upstream" context supports 
+    *) Feature: the "server" directive in the "upstream" context supports
        the "weight" parameter.
 
     *) Feature: the "server_name" directive supports the "*" wildcard.
 
     *) Feature: nginx supports the request body size more than 2G.
 
-    *) Bugfix: if a client was successfully authorized using "satisfy_any 
-       on", then anyway the message "access forbidden by rule" was written 
+    *) Bugfix: if a client was successfully authorized using "satisfy_any
+       on", then anyway the message "access forbidden by rule" was written
        in the log.
 
-    *) Bugfix: the "PUT" method may erroneously not create a file and 
-       return the 409 code.
+    *) Bugfix: the "PUT" method may erroneously not create a file and return
+       the 409 code.
 
-    *) Bugfix: if the IMAP/POP3 backend returned an error, then nginx 
+    *) Bugfix: if the IMAP/POP3 backend returned an error, then nginx
        continued proxying anyway.
 
 
 Changes with nginx 0.3.52                                        03 Jul 2006
 
-    *) Change: the ngx_http_index_module behavior for the "POST /" requests 
-       is reverted to the 0.3.40 version state: the module now does not 
+    *) Change: the ngx_http_index_module behavior for the "POST /" requests
+       is reverted to the 0.3.40 version state: the module now does not
        return the 405 error.
 
-    *) Bugfix: the worker process may got caught in an endless loop if the 
+    *) Bugfix: the worker process may got caught in an endless loop if the
        limit rate was used; the bug had appeared in 0.3.37.
 
-    *) Bugfix: ngx_http_charset_module logged "unknown charset" alert, even 
+    *) Bugfix: ngx_http_charset_module logged "unknown charset" alert, even
        if the recoding was not needed; the bug had appeared in 0.3.50.
 
-    *) Bugfix: if a code response of the PUT request was 409, then a 
+    *) Bugfix: if a code response of the PUT request was 409, then a
        temporary file was not removed.
 
 
 Changes with nginx 0.3.51                                        30 Jun 2006
 
-    *) Bugfix: the "<" symbols might disappeared some conditions in the 
-       SSI; the bug had appeared in 0.3.50.
+    *) Bugfix: the "<" symbols might disappeared some conditions in the SSI;
+       the bug had appeared in 0.3.50.
 
 
 Changes with nginx 0.3.50                                        28 Jun 2006
 
-    *) Change: the "proxy_redirect_errors" and "fastcgi_redirect_errors" 
-       directives was renamed to the "proxy_intercept_errors" and 
+    *) Change: the "proxy_redirect_errors" and "fastcgi_redirect_errors"
+       directives was renamed to the "proxy_intercept_errors" and
        "fastcgi_intercept_errors" directives.
 
-    *) Feature: the ngx_http_charset_module supports the recoding from the 
+    *) Feature: the ngx_http_charset_module supports the recoding from the
        single byte encodings to the UTF-8 encoding and back.
 
-    *) Feature: the "X-Accel-Charset" response header line is supported in 
+    *) Feature: the "X-Accel-Charset" response header line is supported in
        proxy and FastCGI mode.
 
-    *) Bugfix: the "\" escape symbol in the "\"" and "\'" pairs in the SSI 
+    *) Bugfix: the "\" escape symbol in the "\"" and "\'" pairs in the SSI
        command was removed only if the command also has the "$" symbol.
 
-    *) Bugfix: the "<!--" string might be added on some conditions in the 
+    *) Bugfix: the "<!--" string might be added on some conditions in the
        SSI after inclusion.
 
-    *) Bugfix: if the "Content-Length: 0" header line was in response, then 
+    *) Bugfix: if the "Content-Length: 0" header line was in response, then
        in nonbuffered proxying mode the client connection was not closed.
 
 
@@ -3475,26 +3870,26 @@ Changes with nginx 0.3.49               
 
     *) Bugfix: in the "set" directive.
 
-    *) Bugfix: if two or more FastCGI subrequests was in SSI, then first 
-       subrequest output was included instead of second and following 
+    *) Bugfix: if two or more FastCGI subrequests was in SSI, then first
+       subrequest output was included instead of second and following
        subrequests.
 
 
 Changes with nginx 0.3.48                                        29 May 2006
 
-    *) Change: now the ngx_http_charset_module works for subrequests, if 
-       the response has no "Content-Type" header line.
+    *) Change: now the ngx_http_charset_module works for subrequests, if the
+       response has no "Content-Type" header line.
 
-    *) Bugfix: if the "proxy_pass" directive has no URI part, then the 
-       "proxy_redirect default" directive add the unnecessary slash in 
-       start of the rewritten redirect.
-
-    *) Bugfix: the internal redirect always transform client's HTTP method 
-       to GET, now the transformation is made for the "X-Accel-Redirect" 
-       redirects only and if the method is not HEAD; the bug had appeared 
-       in 0.3.42.
+    *) Bugfix: if the "proxy_pass" directive has no URI part, then the
+       "proxy_redirect default" directive add the unnecessary slash in start
+       of the rewritten redirect.
+
+    *) Bugfix: the internal redirect always transform client's HTTP method
+       to GET, now the transformation is made for the "X-Accel-Redirect"
+       redirects only and if the method is not HEAD; the bug had appeared in
+       0.3.42.
 
-    *) Bugfix: the ngx_http_perl_module could not be built, if the perl was 
+    *) Bugfix: the ngx_http_perl_module could not be built, if the perl was
        built with the threads support; the bug had appeared in 0.3.46.
 
 
@@ -3502,42 +3897,42 @@ Changes with nginx 0.3.47               
 
     *) Feature: the "upstream" directive.
 
-    *) Change: now the "\" escape symbol in the "\"" and "\'" pairs in the 
+    *) Change: now the "\" escape symbol in the "\"" and "\'" pairs in the
        SSI command is always removed.
 
 
 Changes with nginx 0.3.46                                        11 May 2006
 
-    *) Feature: the "proxy_hide_header", "proxy_pass_header", 
+    *) Feature: the "proxy_hide_header", "proxy_pass_header",
        "fastcgi_hide_header", and "fastcgi_pass_header" directives.
 
-    *) Change: the "proxy_pass_x_powered_by", "fastcgi_x_powered_by", and 
+    *) Change: the "proxy_pass_x_powered_by", "fastcgi_x_powered_by", and
        "proxy_pass_server" directives were canceled.
 
-    *) Feature: the "X-Accel-Buffering" response header line is supported 
-       in proxy mode.
+    *) Feature: the "X-Accel-Buffering" response header line is supported in
+       proxy mode.
 
-    *) Bugfix: the reconfiguration bug and memory leaks in the 
+    *) Bugfix: the reconfiguration bug and memory leaks in the
        ngx_http_perl_module.
 
 
 Changes with nginx 0.3.45                                        06 May 2006
 
-    *) Feature: the "ssl_verify_client", "ssl_verify_depth", and 
+    *) Feature: the "ssl_verify_client", "ssl_verify_depth", and
        "ssl_client_certificate" directives.
 
-    *) Change: the $request_method variable now returns the main request 
+    *) Change: the $request_method variable now returns the main request
        method.
 
-    *) Change: the &deg; symbol codes were changed in koi-win conversion 
+    *) Change: the &deg; symbol codes were changed in koi-win conversion
        table.
 
-    *) Feature: the euro and N symbols were added to koi-win conversion 
+    *) Feature: the euro and N symbols were added to koi-win conversion
        table.
 
-    *) Bugfix: if nginx distributed the requests among several backends and 
-       some backend failed, then requests intended for this backend was 
-       directed to one live backend only instead of being distributed among 
+    *) Bugfix: if nginx distributed the requests among several backends and
+       some backend failed, then requests intended for this backend was
+       directed to one live backend only instead of being distributed among
        the rest.
 
 
@@ -3545,7 +3940,7 @@ Changes with nginx 0.3.44               
 
     *) Feature: the "wait" parameter in the "include" SSI command.
 
-    *) Feature: the Ukrainian and Byelorussian characters were added to 
+    *) Feature: the Ukrainian and Byelorussian characters were added to
        koi-win conversion table.
 
     *) Bugfix: in the SSI.
@@ -3558,18 +3953,18 @@ Changes with nginx 0.3.43               
 
 Changes with nginx 0.3.42                                        26 Apr 2006
 
-    *) Feature: the "bind" option of the "listen" directive in IMAP/POP3 
+    *) Feature: the "bind" option of the "listen" directive in IMAP/POP3
        proxy.
 
-    *) Bugfix: if the same capture in the "rewrite" directive was used more 
+    *) Bugfix: if the same capture in the "rewrite" directive was used more
        then once.
 
-    *) Bugfix: the $sent_http_content_type, $sent_http_content_length, 
-       $sent_http_last_modified, $sent_http_connection, 
-       $sent_http_keep_alive, and $sent_http_transfer_encoding variables 
+    *) Bugfix: the $sent_http_content_type, $sent_http_content_length,
+       $sent_http_last_modified, $sent_http_connection,
+       $sent_http_keep_alive, and $sent_http_transfer_encoding variables
        were not written to access log.
 
-    *) Bugfix: the $sent_http_cache_control returned value of the single 
+    *) Bugfix: the $sent_http_cache_control returned value of the single
        "Cache-Control" response header line.
 
 
@@ -3577,13 +3972,13 @@ Changes with nginx 0.3.41               
 
     *) Feature: the -v switch.
 
-    *) Bugfix: the segmentation fault may occurred if the SSI page has 
+    *) Bugfix: the segmentation fault may occurred if the SSI page has
        remote subrequests.
 
     *) Bugfix: in FastCGI handling.
 
-    *) Bugfix: if the perl modules path was not set using 
-       --with-perl_modules_path=PATH or the "perl_modules", then the 
+    *) Bugfix: if the perl modules path was not set using
+       --with-perl_modules_path=PATH or the "perl_modules", then the
        segmentation fault was occurred.
 
 
@@ -3598,21 +3993,21 @@ Changes with nginx 0.3.40               
 
 Changes with nginx 0.3.39                                        17 Apr 2006
 
-    *) Feature: the "uninitialized_variable_warn" directive; the logging 
-       level of the "uninitialized variable" message was lowered from 
+    *) Feature: the "uninitialized_variable_warn" directive; the logging
+       level of the "uninitialized variable" message was lowered from
        "alert" to "warn".
 
     *) Feature: the "override_charset" directive.
 
-    *) Change: now if the unknown variable is used in the "echo" and "if 
-       expr='$name'" SSI-commands, then the "unknown variable" message is 
+    *) Change: now if the unknown variable is used in the "echo" and "if
+       expr='$name'" SSI-commands, then the "unknown variable" message is
        not logged.
 
-    *) Bugfix: the active connection counter increased on the exceeding of 
-       the connection limit specified by the "worker_connections" 
-       directive; the bug had appeared in 0.2.0.
+    *) Bugfix: the active connection counter increased on the exceeding of
+       the connection limit specified by the "worker_connections" directive;
+       the bug had appeared in 0.2.0.
 
-    *) Bugfix: the limit rate might not work on some condition; the bug had 
+    *) Bugfix: the limit rate might not work on some condition; the bug had
        appeared in 0.3.38.
 
 
@@ -3623,20 +4018,20 @@ Changes with nginx 0.3.38               
     *) Change: the ngx_http_perl_module optimizations.
        Thanks to Sergey Skvortsov.
 
-    *) Feature: the ngx_http_perl_module supports the $r->request_body_file 
+    *) Feature: the ngx_http_perl_module supports the $r->request_body_file
        method.
 
     *) Feature: the "client_body_in_file_only" directive.
 
-    *) Workaround: now on disk overflow nginx tries to write access logs 
+    *) Workaround: now on disk overflow nginx tries to write access logs
        once a second only.
        Thanks to Anton Yuzhaninov and Maxim Dounin.
 
-    *) Bugfix: now the "limit_rate" directive more precisely limits rate if 
+    *) Bugfix: now the "limit_rate" directive more precisely limits rate if
        rate is more than 100 Kbyte/s.
        Thanks to ForJest.
 
-    *) Bugfix: now the IMAP/POP3 proxy escapes the "\r" and "\n" symbols in 
+    *) Bugfix: now the IMAP/POP3 proxy escapes the "\r" and "\n" symbols in
        login and password to pass authorization server.
        Thanks to Maxim Dounin.
 
@@ -3645,10 +4040,10 @@ Changes with nginx 0.3.37               
 
     *) Feature: the "limit_except" directive.
 
-    *) Feature: the "if" directive supports the "!~", "!~*", "-f", and 
-       "!-f" operators.
+    *) Feature: the "if" directive supports the "!~", "!~*", "-f", and "!-f"
+       operators.
 
-    *) Feature: the ngx_http_perl_module supports the $r->request_body 
+    *) Feature: the ngx_http_perl_module supports the $r->request_body
        method.
 
     *) Bugfix: in the ngx_http_addition_filter_module.
@@ -3658,37 +4053,37 @@ Changes with nginx 0.3.36               
 
     *) Feature: the ngx_http_addition_filter_module.
 
-    *) Feature: the "proxy_pass" and "fastcgi_pass" directives may be used 
+    *) Feature: the "proxy_pass" and "fastcgi_pass" directives may be used
        inside the "if" block.
 
-    *) Feature: the "proxy_ignore_client_abort" and 
+    *) Feature: the "proxy_ignore_client_abort" and
        "fastcgi_ignore_client_abort" directives.
 
     *) Feature: the "$request_completion" variable.
 
-    *) Feature: the ngx_http_perl_module supports the $r->request_method 
-       and $r->remote_addr.
+    *) Feature: the ngx_http_perl_module supports the $r->request_method and
+       $r->remote_addr.
 
     *) Feature: the ngx_http_ssi_module supports the "elif" command.
 
-    *) Bugfix: the "\/" string in the expression of the "if" command of the 
+    *) Bugfix: the "\/" string in the expression of the "if" command of the
        ngx_http_ssi_module was treated incorrectly.
 
-    *) Bugfix: in the regular expressions in the "if" command of the 
+    *) Bugfix: in the regular expressions in the "if" command of the
        ngx_http_ssi_module.
 
-    *) Bugfix: if the relative path was specified in the 
-       "client_body_temp_path", "proxy_temp_path", "fastcgi_temp_path", and 
-       "perl_modules" directives, then the directory was used relatively to 
+    *) Bugfix: if the relative path was specified in the
+       "client_body_temp_path", "proxy_temp_path", "fastcgi_temp_path", and
+       "perl_modules" directives, then the directory was used relatively to
        a current path but not to a server prefix.
 
 
 Changes with nginx 0.3.35                                        22 Mar 2006
 
-    *) Bugfix: the accept-filter and the TCP_DEFER_ACCEPT option were set 
+    *) Bugfix: the accept-filter and the TCP_DEFER_ACCEPT option were set
        for first "listen" directive only; the bug had appeared in 0.3.31.
 
-    *) Bugfix: in the "proxy_pass" directive without the URI part in a 
+    *) Bugfix: in the "proxy_pass" directive without the URI part in a
        subrequest.
 
 
@@ -3699,10 +4094,10 @@ Changes with nginx 0.3.34               
 
 Changes with nginx 0.3.33                                        15 Mar 2006
 
-    *) Feature: the "http_503" parameter of the "proxy_next_upstream" or 
+    *) Feature: the "http_503" parameter of the "proxy_next_upstream" or
        "fastcgi_next_upstream" directives.
 
-    *) Bugfix: ngx_http_perl_module did not work with inlined in the 
+    *) Bugfix: ngx_http_perl_module did not work with inlined in the
        configuration code, if it was not started with the "sub" word.
 
     *) Bugfix: in the "post_action" directive.
@@ -3710,7 +4105,7 @@ Changes with nginx 0.3.33               
 
 Changes with nginx 0.3.32                                        11 Mar 2006
 
-    *) Bugfix: the debug logging on startup and reconfiguration time was 
+    *) Bugfix: the debug logging on startup and reconfiguration time was
        removed; the bug had appeared in 0.3.31.
 
 
@@ -3718,22 +4113,21 @@ Changes with nginx 0.3.31               
 
     *) Change: now nginx passes the malformed proxied backend responses.
 
-    *) Feature: the "listen" directives support the address in the "*:port" 
+    *) Feature: the "listen" directives support the address in the "*:port"
        form.
 
     *) Feature: the EVFILER_TIMER support in MacOSX 10.4.
 
-    *) Workaround: for MacOSX 64-bit kernel kqueue millisecond timeout 
-       bug.
+    *) Workaround: for MacOSX 64-bit kernel kqueue millisecond timeout bug.
        Thanks to Andrei Nigmatulin.
 
-    *) Bugfix: if there were several "listen" directives listening one 
-       various addresses inside one server, then server names like 
-       "*.domain.tld" worked for first address only; the bug had appeared 
-       in 0.3.18.
+    *) Bugfix: if there were several "listen" directives listening one
+       various addresses inside one server, then server names like
+       "*.domain.tld" worked for first address only; the bug had appeared in
+       0.3.18.
 
-    *) Bugfix: if the HTTPS protocol was used in the "proxy_pass" directive 
-       and the request body was in temporary file then the request was not 
+    *) Bugfix: if the HTTPS protocol was used in the "proxy_pass" directive
+       and the request body was in temporary file then the request was not
        transferred.
 
     *) Bugfix: perl 5.8.8 compatibility.
@@ -3741,29 +4135,29 @@ Changes with nginx 0.3.31               
 
 Changes with nginx 0.3.30                                        22 Feb 2006
 
-    *) Change: the ECONNABORTED error log level was changed to "error" from 
+    *) Change: the ECONNABORTED error log level was changed to "error" from
        "crit".
 
-    *) Bugfix: the ngx_http_perl_module could not be build without the 
+    *) Bugfix: the ngx_http_perl_module could not be build without the
        ngx_http_ssi_filter_module.
 
-    *) Bugfix: nginx could not be built on i386 platform, if the PIC was 
+    *) Bugfix: nginx could not be built on i386 platform, if the PIC was
        used; the bug had appeared in 0.3.27.
 
 
 Changes with nginx 0.3.29                                        20 Feb 2006
 
-    *) Feature: now nginx uses less memory, if PHP in FastCGI mode sends 
+    *) Feature: now nginx uses less memory, if PHP in FastCGI mode sends
        many warnings before the response.
 
-    *) Bugfix: the "Transfer-Encoding: chunked" header line was issued in 
+    *) Bugfix: the "Transfer-Encoding: chunked" header line was issued in
        the 204 responses for the HTTP/1.1 requests.
 
-    *) Bugfix: nginx returned the 502 response, if the complete response 
+    *) Bugfix: nginx returned the 502 response, if the complete response
        header lines were transferred in a separate FastCGI records.
 
-    *) Bugfix: if the proxied URI was specified in the "post_action" 
-       directive, then it ran only after a successful completion of a 
+    *) Bugfix: if the proxied URI was specified in the "post_action"
+       directive, then it ran only after a successful completion of a
        request.
 
 
@@ -3773,58 +4167,58 @@ Changes with nginx 0.3.28               
 
     *) Feature: the --with-cpu-opt=ppc64 configuration parameter.
 
-    *) Bugfix: on some condition the proxied connection with a client was 
+    *) Bugfix: on some condition the proxied connection with a client was
        terminated prematurely.
        Thanks to Vladimir Shutoff.
 
-    *) Bugfix: the "X-Accel-Limit-Rate" header line was not taken into 
-       account if the request was redirected using the "X-Accel-Redirect" 
+    *) Bugfix: the "X-Accel-Limit-Rate" header line was not taken into
+       account if the request was redirected using the "X-Accel-Redirect"
        header line.
 
-    *) Bugfix: the "post_action" directive ran only after a successful 
+    *) Bugfix: the "post_action" directive ran only after a successful
        completion of a request.
 
-    *) Bugfix: the proxied response body generated by the "post_action" 
+    *) Bugfix: the proxied response body generated by the "post_action"
        directive was transferred to a client.
 
 
 Changes with nginx 0.3.27                                        08 Feb 2006
 
-    *) Change: the "variables_hash_max_size" and 
+    *) Change: the "variables_hash_max_size" and
        "variables_hash_bucket_size" directives.
 
-    *) Feature: the $body_bytes_sent variable can be used not only in the 
+    *) Feature: the $body_bytes_sent variable can be used not only in the
        "log_format" directive.
 
     *) Feature: the $ssl_protocol and $ssl_cipher variables.
 
-    *) Feature: the cache line size detection for widespread CPUs at start 
+    *) Feature: the cache line size detection for widespread CPUs at start
        time.
 
-    *) Feature: now the "accept_mutex" directive is supported using 
-       fcntl(2) on platforms different from i386, amd64, sparc64, and ppc.
+    *) Feature: now the "accept_mutex" directive is supported using fcntl(2)
+       on platforms different from i386, amd64, sparc64, and ppc.
 
-    *) Feature: the "lock_file" directive and the --with-lock-path=PATH 
+    *) Feature: the "lock_file" directive and the --with-lock-path=PATH
        autoconfiguration directive.
 
-    *) Bugfix: if the HTTPS protocol was used in the "proxy_pass" directive 
+    *) Bugfix: if the HTTPS protocol was used in the "proxy_pass" directive
        then the requests with the body was not transferred.
 
 
 Changes with nginx 0.3.26                                        03 Feb 2006
 
-    *) Change: the "optimize_host_names" directive was renamed to the 
+    *) Change: the "optimize_host_names" directive was renamed to the
        "optimize_server_names".
 
-    *) Bugfix: if in the "proxy_pass" directive was no the URI part, then 
-       the main request URI was transferred to a backend while proxying the 
+    *) Bugfix: if in the "proxy_pass" directive was no the URI part, then
+       the main request URI was transferred to a backend while proxying the
        SSI subrequest.
 
 
 Changes with nginx 0.3.25                                        01 Feb 2006
 
-    *) Bugfix: the segmentation fault was occurred on start or while 
-       reconfiguration if there was invalid configuration; the bug had 
+    *) Bugfix: the segmentation fault was occurred on start or while
+       reconfiguration if there was invalid configuration; the bug had
        appeared in 0.3.24.
 
 
@@ -3832,16 +4226,16 @@ Changes with nginx 0.3.24               
 
     *) Workaround: for bug in FreeBSD kqueue.
 
-    *) Bugfix: now a response generated by the "post_action" directive is 
+    *) Bugfix: now a response generated by the "post_action" directive is
        not transferred to a client.
 
     *) Bugfix: the memory leaks were occurring if many log files were used.
 
-    *) Bugfix: the first "proxy_redirect" directive was working inside one 
+    *) Bugfix: the first "proxy_redirect" directive was working inside one
        location.
 
-    *) Bugfix: on 64-bit platforms segmentation fault may occurred on start 
-       if the many names were used in the "server_name" directives; the bug 
+    *) Bugfix: on 64-bit platforms segmentation fault may occurred on start
+       if the many names were used in the "server_name" directives; the bug
        had appeared in 0.3.18.
 
 
@@ -3849,23 +4243,23 @@ Changes with nginx 0.3.23               
 
     *) Feature: the "optimize_host_names" directive.
 
-    *) Bugfix: in using of the variables in the "path" and "alias" 
+    *) Bugfix: in using of the variables in the "path" and "alias"
        directives.
 
-    *) Bugfix: the ngx_http_perl_module was incorrectly built on Linux and 
+    *) Bugfix: the ngx_http_perl_module was incorrectly built on Linux and
        Solaris.
 
 
 Changes with nginx 0.3.22                                        17 Jan 2006
 
-    *) Feature: the ngx_http_perl_module supports the $r->args and 
+    *) Feature: the ngx_http_perl_module supports the $r->args and
        $r->unescape methods.
 
-    *) Feature: the method $r->query_string of ngx_http_perl_module was 
+    *) Feature: the method $r->query_string of ngx_http_perl_module was
        canceled.
 
-    *) Bugfix: segmentation fault was occurred if the "none" or "blocked" 
-       values was specified in the "valid_referers" directive; the bug had 
+    *) Bugfix: segmentation fault was occurred if the "none" or "blocked"
+       values was specified in the "valid_referers" directive; the bug had
        appeared in 0.3.18.
 
 
@@ -3873,7 +4267,7 @@ Changes with nginx 0.3.21               
 
     *) Feature: the ngx_http_perl_module.
 
-    *) Change: the "valid_referers" directive allows the referreres without 
+    *) Change: the "valid_referers" directive allows the referreres without
        URI part.
 
 
@@ -3881,8 +4275,8 @@ Changes with nginx 0.3.20               
 
     *) Bugfix: in SSI handling.
 
-    *) Bugfix: the ngx_http_memcached_module did not support the keys in 
-       the "/usr?args" form.
+    *) Bugfix: the ngx_http_memcached_module did not support the keys in the
+       "/usr?args" form.
 
 
 Changes with nginx 0.3.19                                        28 Dec 2005
@@ -3896,47 +4290,47 @@ Changes with nginx 0.3.19               
 
 Changes with nginx 0.3.18                                        26 Dec 2005
 
-    *) Feature: the "server_names" directive supports the ".domain.tld" 
+    *) Feature: the "server_names" directive supports the ".domain.tld"
        names.
 
-    *) Feature: the "server_names" directive uses the hash for the 
+    *) Feature: the "server_names" directive uses the hash for the
        "*.domain.tld" names and more effective hash for usual names.
 
-    *) Change: the "server_names_hash_max_size" and 
+    *) Change: the "server_names_hash_max_size" and
        "server_names_hash_bucket_size" directives.
 
-    *) Change: the "server_names_hash" and "server_names_hash_threshold" 
+    *) Change: the "server_names_hash" and "server_names_hash_threshold"
        directives were canceled.
 
     *) Feature: the "valid_referers" directive uses the hash site names.
 
-    *) Change: now the "valid_referers" directive checks the site names 
-       only without the URI part.
+    *) Change: now the "valid_referers" directive checks the site names only
+       without the URI part.
 
-    *) Bugfix: some ".domain.tld" names incorrectly processed by the 
+    *) Bugfix: some ".domain.tld" names incorrectly processed by the
        ngx_http_map_module.
 
-    *) Bugfix: segmentation fault was occurred if configuration file did 
-       not exist; the bug had appeared in 0.3.12.
+    *) Bugfix: segmentation fault was occurred if configuration file did not
+       exist; the bug had appeared in 0.3.12.
 
-    *) Bugfix: on 64-bit platforms segmentation fault may occurred on 
-       start; the bug had appeared in 0.3.16.
+    *) Bugfix: on 64-bit platforms segmentation fault may occurred on start;
+       the bug had appeared in 0.3.16.
 
 
 Changes with nginx 0.3.17                                        18 Dec 2005
 
-    *) Change: now on Linux configure checks the presence of epoll and 
+    *) Change: now on Linux configure checks the presence of epoll and
        sendfile64() in kernel.
 
-    *) Feature: the "map" directive supports domain names in the 
+    *) Feature: the "map" directive supports domain names in the
        ".domain.tld" form.
 
-    *) Bugfix: the timeouts were not used in SSL handshake; the bug had 
+    *) Bugfix: the timeouts were not used in SSL handshake; the bug had
        appeared in 0.2.4.
 
     *) Bugfix: in the HTTPS protocol in the "proxy_pass" directive.
 
-    *) Bugfix: when the HTTPS protocol was used in the "proxy_pass" 
+    *) Bugfix: when the HTTPS protocol was used in the "proxy_pass"
        directive the port 80 was used by default.
 
 
@@ -3944,41 +4338,41 @@ Changes with nginx 0.3.16               
 
     *) Feature: the ngx_http_map_module.
 
-    *) Feature: the "types_hash_max_size" and "types_hash_bucket_size" 
+    *) Feature: the "types_hash_max_size" and "types_hash_bucket_size"
        directives.
 
     *) Feature: the "ssi_value_length" directive.
 
     *) Feature: the "worker_rlimit_core" directive.
 
-    *) Workaround: the connection number in logs was always 1 if nginx was 
-       built by the icc 8.1 or 9.0 compilers with optimization for 
+    *) Workaround: the connection number in logs was always 1 if nginx was
+       built by the icc 8.1 or 9.0 compilers with optimization for
        Pentium 4.
 
     *) Bugfix: the "config timefmt" SSI command set incorrect time format.
 
-    *) Bugfix: nginx did not close connection to IMAP/POP3 backend for the 
+    *) Bugfix: nginx did not close connection to IMAP/POP3 backend for the
        SSL connections; the bug had appeared in 0.3.13.
        Thanks to Rob Mueller.
 
-    *) Bugfix: segmentation fault may occurred in at SSL shutdown; the bug 
+    *) Bugfix: segmentation fault may occurred in at SSL shutdown; the bug
        had appeared in 0.3.13.
 
 
 Changes with nginx 0.3.15                                        07 Dec 2005
 
-    *) Feature: the new 444 code of the "return" directive to close 
+    *) Feature: the new 444 code of the "return" directive to close
        connection.
 
     *) Feature: the "so_keepalive" directive in IMAP/POP3 proxy.
 
-    *) Bugfix: if there are unclosed connection nginx now calls abort() 
-       only on gracefull quit and active "debug_points" directive.
+    *) Bugfix: if there are unclosed connection nginx now calls abort() only
+       on gracefull quit and active "debug_points" directive.
 
 
 Changes with nginx 0.3.14                                        05 Dec 2005
 
-    *) Bugfix: in the 304 response the body was transferred; the bug had 
+    *) Bugfix: in the 304 response the body was transferred; the bug had
        appeared in 0.3.13.
 
 
@@ -3986,69 +4380,69 @@ Changes with nginx 0.3.13               
 
     *) Feature: the IMAP/POP3 proxy supports STARTTLS and STLS.
 
-    *) Bugfix: the IMAP/POP3 proxy did not work with the select, poll, and 
+    *) Bugfix: the IMAP/POP3 proxy did not work with the select, poll, and
        /dev/poll methods.
 
     *) Bugfix: in SSI handling.
 
-    *) Bugfix: now Solaris sendfilev() is not used to transfer the client 
+    *) Bugfix: now Solaris sendfilev() is not used to transfer the client
        request body to FastCGI-server via the unix domain socket.
 
-    *) Bugfix: the "auth_basic" directive did not disable the 
-       authorization; the bug had appeared in 0.3.11.
+    *) Bugfix: the "auth_basic" directive did not disable the authorization;
+       the bug had appeared in 0.3.11.
 
 
 Changes with nginx 0.3.12                                        26 Nov 2005
 
-    *) Security: if nginx was built with the ngx_http_realip_module and the 
-       "satisfy_any on" directive was used, then access and authorization 
-       directives did not work. The ngx_http_realip_module was not built 
-       and is not built by default.
+    *) Security: if nginx was built with the ngx_http_realip_module and the
+       "satisfy_any on" directive was used, then access and authorization
+       directives did not work. The ngx_http_realip_module was not built and
+       is not built by default.
 
     *) Change: the "$time_gmt" variable name was changed to "$time_local".
 
-    *) Change: the "proxy_header_buffer_size" and 
-       "fastcgi_header_buffer_size" directives was renamed to the 
+    *) Change: the "proxy_header_buffer_size" and
+       "fastcgi_header_buffer_size" directives was renamed to the
        "proxy_buffer_size" and "fastcgi_buffer_size" directives.
 
     *) Feature: the ngx_http_memcached_module.
 
     *) Feature: the "proxy_buffering" directive.
 
-    *) Bugfix: the changes in accept mutex handling when the "rtsig" method 
+    *) Bugfix: the changes in accept mutex handling when the "rtsig" method
        was used; the bug had appeared in 0.3.0.
 
-    *) Bugfix: if the client sent the "Transfer-Encoding: chunked" header 
+    *) Bugfix: if the client sent the "Transfer-Encoding: chunked" header
        line, then nginx returns the 411 error.
 
-    *) Bugfix: if the "auth_basic" directive was inherited from the http 
-       level, then the realm in the "WWW-Authenticate" header line was 
+    *) Bugfix: if the "auth_basic" directive was inherited from the http
+       level, then the realm in the "WWW-Authenticate" header line was
        without the "Basic realm" text.
 
-    *) Bugfix: if the "combined" format was explicitly specified in the 
-       "access_log" directive, then the empty lines was written to the log; 
+    *) Bugfix: if the "combined" format was explicitly specified in the
+       "access_log" directive, then the empty lines was written to the log;
        the bug had appeared in 0.3.8.
 
-    *) Bugfix: nginx did not run on the sparc platform under any OS except 
+    *) Bugfix: nginx did not run on the sparc platform under any OS except
        Solaris.
 
-    *) Bugfix: now it is not necessary to place space between the quoted 
+    *) Bugfix: now it is not necessary to place space between the quoted
        string and closing bracket in the "if" directive.
 
 
 Changes with nginx 0.3.11                                        15 Nov 2005
 
-    *) Bugfix: nginx did not pass the client request headers and body while 
+    *) Bugfix: nginx did not pass the client request headers and body while
        proxying; the bug had appeared in 0.3.10.
 
 
 Changes with nginx 0.3.10                                        15 Nov 2005
 
-    *) Change: the "valid_referers" directive and the "$invalid_referer" 
-       variable were moved to the new ngx_http_referer_module from the 
+    *) Change: the "valid_referers" directive and the "$invalid_referer"
+       variable were moved to the new ngx_http_referer_module from the
        ngx_http_rewrite_module.
 
-    *) Change: the "$apache_bytes_sent" variable name was changed to 
+    *) Change: the "$apache_bytes_sent" variable name was changed to
        "$body_bytes_sent".
 
     *) Feature: the "$sent_http_..." variables.
@@ -4065,73 +4459,73 @@ Changes with nginx 0.3.10               
 
     *) Feature: the "worker_cpu_affinity" directive for Linux.
 
-    *) Bugfix: the "rewrite" directive did not unescape URI part in 
-       redirect, now it is unescaped except the %00-%25 and %7F-%FF 
+    *) Bugfix: the "rewrite" directive did not unescape URI part in
+       redirect, now it is unescaped except the %00-%25 and %7F-%FF
        characters.
 
     *) Bugfix: nginx could not be built by the icc 9.0 compiler.
 
-    *) Bugfix: if the SSI was enabled for zero size static file, then the 
+    *) Bugfix: if the SSI was enabled for zero size static file, then the
        chunked response was encoded incorrectly.
 
 
 Changes with nginx 0.3.9                                         10 Nov 2005
 
-    *) Bugfix: nginx considered URI as unsafe if two any symbols was 
-       between two slashes; the bug had appeared in 0.3.8.
+    *) Bugfix: nginx considered URI as unsafe if two any symbols was between
+       two slashes; the bug had appeared in 0.3.8.
 
 
 Changes with nginx 0.3.8                                         09 Nov 2005
 
-    *) Security: nginx now checks URI got from a backend in 
-       "X-Accel-Redirect" header line or in SSI file for the "/../" paths 
+    *) Security: nginx now checks URI got from a backend in
+       "X-Accel-Redirect" header line or in SSI file for the "/../" paths
        and zeroes.
 
-    *) Change: nginx now does not treat the empty user name in the 
+    *) Change: nginx now does not treat the empty user name in the
        "Authorization" header line as valid one.
 
-    *) Feature: the "ssl_session_timeout" directives of the 
+    *) Feature: the "ssl_session_timeout" directives of the
        ngx_http_ssl_module and ngx_imap_ssl_module.
 
-    *) Feature: the "auth_http_header" directive of the 
+    *) Feature: the "auth_http_header" directive of the
        ngx_imap_auth_http_module.
 
     *) Feature: the "add_header" directive.
 
     *) Feature: the ngx_http_realip_module.
 
-    *) Feature: the new variables to use in the "log_format" directive: 
-       $bytes_sent, $apache_bytes_sent, $status, $time_gmt, $uri, 
-       $request_time, $request_length, $upstream_status, 
-       $upstream_response_time, $gzip_ratio, $uid_got, $uid_set, 
-       $connection, $pipe, and $msec. The parameters in the "%name" form 
+    *) Feature: the new variables to use in the "log_format" directive:
+       $bytes_sent, $apache_bytes_sent, $status, $time_gmt, $uri,
+       $request_time, $request_length, $upstream_status,
+       $upstream_response_time, $gzip_ratio, $uid_got, $uid_set,
+       $connection, $pipe, and $msec. The parameters in the "%name" form
        will be canceled soon.
 
-    *) Change: now the false variable values in the "if" directive are the 
+    *) Change: now the false variable values in the "if" directive are the
        empty string "" and string starting with "0".
 
-    *) Bugfix: while using proxied or FastCGI-server nginx may leave 
+    *) Bugfix: while using proxied or FastCGI-server nginx may leave
        connections and temporary files with client requests in open state.
 
-    *) Bugfix: the worker processes did not flush the buffered logs on 
+    *) Bugfix: the worker processes did not flush the buffered logs on
        graceful exit.
 
-    *) Bugfix: if the request URI was changes by the "rewrite" directive 
-       and the request was proxied in location given by regular expression, 
-       then the incorrect request was transferred to backend; the bug had 
+    *) Bugfix: if the request URI was changes by the "rewrite" directive and
+       the request was proxied in location given by regular expression, then
+       the incorrect request was transferred to backend; the bug had
        appeared in 0.2.6.
 
-    *) Bugfix: the "expires" directive did not remove the previous 
-       "Expires" header.
+    *) Bugfix: the "expires" directive did not remove the previous "Expires"
+       header.
 
-    *) Bugfix: nginx may stop to accept requests if the "rtsig" method and 
+    *) Bugfix: nginx may stop to accept requests if the "rtsig" method and
        several worker processes were used.
 
-    *) Bugfix: the "\"" and "\'" escape symbols were incorrectly handled in 
+    *) Bugfix: the "\"" and "\'" escape symbols were incorrectly handled in
        SSI commands.
 
-    *) Bugfix: if the response was ended just after the SSI command and 
-       gzipping was used, then the response did not transferred complete or 
+    *) Bugfix: if the response was ended just after the SSI command and
+       gzipping was used, then the response did not transferred complete or
        did not transferred at all.
 
 
@@ -4139,78 +4533,77 @@ Changes with nginx 0.3.7                
 
     *) Feature: the "access_log" supports the "buffer=" parameter.
 
-    *) Bugfix: nginx could not be built on platforms different from i386, 
+    *) Bugfix: nginx could not be built on platforms different from i386,
        amd64, sparc, and ppc; the bug had appeared in 0.3.2.
 
 
 Changes with nginx 0.3.6                                         24 Oct 2005
 
-    *) Change: now the IMAP/POP3 proxy do not send the empty login to 
+    *) Change: now the IMAP/POP3 proxy do not send the empty login to
        authorization server.
 
     *) Feature: the "log_format" supports the variables in the $name form.
 
-    *) Bugfix: if at least in one server was no the "listen" directive, 
-       then nginx did not listen on the 80 port; the bug had appeared in 
-       0.3.3.
+    *) Bugfix: if at least in one server was no the "listen" directive, then
+       nginx did not listen on the 80 port; the bug had appeared in 0.3.3.
 
-    *) Bugfix: if the URI part is omitted in "proxy_pass" directive, the 
-       the 80 port was always used.
+    *) Bugfix: if the URI part is omitted in "proxy_pass" directive, the 80
+       port was always used.
 
 
 Changes with nginx 0.3.5                                         21 Oct 2005
 
-    *) Bugfix: the segmentation fault may occurred if the IMAP/POP3 login 
+    *) Bugfix: the segmentation fault may occurred if the IMAP/POP3 login
        was changed by authorization server; the bug had appeared in 0.2.2.
 
-    *) Bugfix: the accept mutex did not work and all connections were 
+    *) Bugfix: the accept mutex did not work and all connections were
        handled by one process; the bug had appeared in 0.3.3.
 
-    *) Bugfix: the timeout did not work if the "rtsig" method and the 
+    *) Bugfix: the timeout did not work if the "rtsig" method and the
        "timer_resolution" directive were used.
 
 
 Changes with nginx 0.3.4                                         19 Oct 2005
 
-    *) Bugfix: nginx could not be built on Linux 2.4+ and MacOS X; the bug 
+    *) Bugfix: nginx could not be built on Linux 2.4+ and MacOS X; the bug
        had appeared in 0.3.3.
 
 
 Changes with nginx 0.3.3                                         19 Oct 2005
 
-    *) Change: the "bl" and "af" parameters of the "listen" directive was 
+    *) Change: the "bl" and "af" parameters of the "listen" directive was
        renamed to the "backlog" and "accept_filter".
 
-    *) Feature: the "rcvbuf" and "sndbuf" parameters of the "listen" 
+    *) Feature: the "rcvbuf" and "sndbuf" parameters of the "listen"
        directive.
 
-    *) Change: the "$msec" log parameter does not require now the 
-       additional the gettimeofday() system call.
+    *) Change: the "$msec" log parameter does not require now the additional
+       the gettimeofday() system call.
 
     *) Feature: the -t switch now tests the "listen" directives.
 
-    *) Bugfix: if the invalid address was specified in the "listen" 
-       directive, then after the -HUP signal nginx left an open socket in 
+    *) Bugfix: if the invalid address was specified in the "listen"
+       directive, then after the -HUP signal nginx left an open socket in
        the CLOSED state.
 
-    *) Bugfix: the mime type may be incorrectly set to default value for 
+    *) Bugfix: the mime type may be incorrectly set to default value for
        index file with variable in the name; the bug had appeared in 0.3.0.
 
     *) Feature: the "timer_resolution" directive.
 
     *) Feature: the millisecond "$upstream_response_time" log parameter.
 
-    *) Bugfix: a temporary file with client request body now is removed 
-       just after the response header was transferred to a client.
+    *) Bugfix: a temporary file with client request body now is removed just
+       after the response header was transferred to a client.
 
     *) Bugfix: OpenSSL 0.9.6 compatibility.
 
     *) Bugfix: the SSL certificate and key file paths could not be relative.
 
-    *) Bugfix: the "ssl_prefer_server_ciphers" directive did not work in 
-       the ngx_imap_ssl_module.
+    *) Bugfix: the "ssl_prefer_server_ciphers" directive did not work in the
+       ngx_imap_ssl_module.
 
-    *) Bugfix: the "ssl_protocols" directive allowed to specify the single 
+    *) Bugfix: the "ssl_protocols" directive allowed to specify the single
        protocol only.
 
 
@@ -4218,101 +4611,100 @@ Changes with nginx 0.3.2                
 
     *) Feature: the Sun Studio 10 C compiler support.
 
-    *) Feature: the "proxy_upstream_max_fails", 
-       "proxy_upstream_fail_timeout", "fastcgi_upstream_max_fails", and 
+    *) Feature: the "proxy_upstream_max_fails",
+       "proxy_upstream_fail_timeout", "fastcgi_upstream_max_fails", and
        "fastcgi_upstream_fail_timeout" directives.
 
 
 Changes with nginx 0.3.1                                         10 Oct 2005
 
-    *) Bugfix: the segmentation fault occurred when the signal queue 
-       overflowed if the "rtsig" method was used; the bug had appeared in 
+    *) Bugfix: the segmentation fault occurred when the signal queue
+       overflowed if the "rtsig" method was used; the bug had appeared in
        0.2.0.
 
-    *) Change: correct handling of the "\\", "\"", "\'", and "\$" pairs in 
+    *) Change: correct handling of the "\\", "\"", "\'", and "\$" pairs in
        SSI.
 
 
 Changes with nginx 0.3.0                                         07 Oct 2005
 
-    *) Change: the 10-days live time limit of worker process was 
-       eliminated. The limit was introduced because of millisecond timers 
-       overflow.
+    *) Change: the 10-days live time limit of worker process was eliminated.
+       The limit was introduced because of millisecond timers overflow.
 
 
 Changes with nginx 0.2.6                                         05 Oct 2005
 
-    *) Change: while using load-balancing the time before the failed 
-       backend retry was decreased from 60 to 10 seconds.
+    *) Change: while using load-balancing the time before the failed backend
+       retry was decreased from 60 to 10 seconds.
 
-    *) Change: the "proxy_pass_unparsed_uri" was canceled, the original URI 
+    *) Change: the "proxy_pass_unparsed_uri" was canceled, the original URI
        now passed, if the URI part is omitted in "proxy_pass" directive.
 
-    *) Feature: the "error_page" directive supports redirects and allows 
+    *) Feature: the "error_page" directive supports redirects and allows
        more flexible to change an error code.
 
-    *) Change: the charset in the "Content-Type" header line now is ignored 
+    *) Change: the charset in the "Content-Type" header line now is ignored
        in proxied subrequests.
 
-    *) Bugfix: if the URI was changed in the "if" block and request did not 
-       found new configuration, then the ngx_http_rewrite_module rules ran 
+    *) Bugfix: if the URI was changed in the "if" block and request did not
+       found new configuration, then the ngx_http_rewrite_module rules ran
        again.
 
-    *) Bugfix: if the "set" directive set the ngx_http_geo_module variable 
-       in some configuration part, the this variable was not available in 
-       other configuration parts and the "using uninitialized variable" 
+    *) Bugfix: if the "set" directive set the ngx_http_geo_module variable
+       in some configuration part, the this variable was not available in
+       other configuration parts and the "using uninitialized variable"
        error was occurred; the bug had appeared in 0.2.2.
 
 
 Changes with nginx 0.2.5                                         04 Oct 2005
 
-    *) Change: the duplicate value of the ngx_http_geo_module variable now 
+    *) Change: the duplicate value of the ngx_http_geo_module variable now
        causes the warning and changes old value.
 
     *) Feature: the ngx_http_ssi_module supports the "set" command.
 
-    *) Feature: the ngx_http_ssi_module supports the "file" parameter in 
-       the "include" command.
+    *) Feature: the ngx_http_ssi_module supports the "file" parameter in the
+       "include" command.
 
-    *) Feature: the ngx_http_ssi_module supports the variable value 
+    *) Feature: the ngx_http_ssi_module supports the variable value
        substitutions in expressions of the "if" command.
 
 
 Changes with nginx 0.2.4                                         03 Oct 2005
 
-    *) Feature: the ngx_http_ssi_module supports "$var=text", "$var!=text", 
+    *) Feature: the ngx_http_ssi_module supports "$var=text", "$var!=text",
        "$var=/text/", and "$var!=/text/" expressions in the "if" command.
 
-    *) Bugfix: in proxying location without trailing slash; the bug had 
+    *) Bugfix: in proxying location without trailing slash; the bug had
        appeared in 0.1.44.
 
-    *) Bugfix: the segmentation fault may occurred if the "rtsig" method 
-       was used; the bug had appeared in 0.2.0.
+    *) Bugfix: the segmentation fault may occurred if the "rtsig" method was
+       used; the bug had appeared in 0.2.0.
 
 
 Changes with nginx 0.2.3                                         30 Sep 2005
 
-    *) Bugfix: nginx could not be built without the --with-debug option; 
-       the bug had appeared in 0.2.2.
+    *) Bugfix: nginx could not be built without the --with-debug option; the
+       bug had appeared in 0.2.2.
 
 
 Changes with nginx 0.2.2                                         30 Sep 2005
 
     *) Feature: the "config errmsg" command of the ngx_http_ssi_module.
 
-    *) Change: the ngx_http_geo_module variables can be overridden by the 
+    *) Change: the ngx_http_geo_module variables can be overridden by the
        "set" directive.
 
-    *) Feature: the "ssl_protocols" and "ssl_prefer_server_ciphers" 
+    *) Feature: the "ssl_protocols" and "ssl_prefer_server_ciphers"
        directives of the ngx_http_ssl_module and ngx_imap_ssl_module.
 
-    *) Bugfix: the ngx_http_autoindex_module did not show correctly the 
-       long file names;
+    *) Bugfix: the ngx_http_autoindex_module did not show correctly the long
+       file names;
 
-    *) Bugfix: the ngx_http_autoindex_module now do not show the files 
+    *) Bugfix: the ngx_http_autoindex_module now do not show the files
        starting by dot.
 
-    *) Bugfix: if the SSL handshake failed then another connection may be 
+    *) Bugfix: if the SSL handshake failed then another connection may be
        closed too.
        Thanks to Rob Mueller.
 
@@ -4321,36 +4713,36 @@ Changes with nginx 0.2.2                
 
 Changes with nginx 0.2.1                                         23 Sep 2005
 
-    *) Bugfix: if all backend using in load-balancing failed after one 
-       error, then nginx may got caught in an endless loop; the bug had 
+    *) Bugfix: if all backend using in load-balancing failed after one
+       error, then nginx may got caught in an endless loop; the bug had
        appeared in 0.2.0.
 
 
 Changes with nginx 0.2.0                                         23 Sep 2005
 
-    *) The pid-file names used during online upgrade was changed and now is 
-       not required a manual rename operation. The old master process adds 
-       the ".oldbin" suffix to its pid-file and executes a new binary file. 
-       The new master process creates usual pid-file without the ".newbin" 
-       suffix. If the master process exits, then old master process renames 
-       back its pid-file with the ".oldbin" suffix to the pid-file without 
+    *) The pid-file names used during online upgrade was changed and now is
+       not required a manual rename operation. The old master process adds
+       the ".oldbin" suffix to its pid-file and executes a new binary file.
+       The new master process creates usual pid-file without the ".newbin"
+       suffix. If the master process exits, then old master process renames
+       back its pid-file with the ".oldbin" suffix to the pid-file without
        suffix.
 
-    *) Change: the "worker_connections" directive, new name of the 
-       "connections" directive; now the directive specifies maximum number 
+    *) Change: the "worker_connections" directive, new name of the
+       "connections" directive; now the directive specifies maximum number
        of connections, but not maximum socket descriptor number.
 
     *) Feature: SSL supports the session cache inside one worker process.
 
     *) Feature: the "satisfy_any" directive.
 
-    *) Change: the ngx_http_access_module and ngx_http_auth_basic_module do 
+    *) Change: the ngx_http_access_module and ngx_http_auth_basic_module do
        not run for subrequests.
 
-    *) Feature: the "worker_rlimit_nofile" and "worker_rlimit_sigpending" 
+    *) Feature: the "worker_rlimit_nofile" and "worker_rlimit_sigpending"
        directives.
 
-    *) Bugfix: if all backend using in load-balancing failed after one 
+    *) Bugfix: if all backend using in load-balancing failed after one
        error, then nginx did not try do connect to them during 60 seconds.
 
     *) Bugfix: in IMAP/POP3 command argument parsing.
@@ -4360,17 +4752,17 @@ Changes with nginx 0.2.0                
 
     *) Bugfix: errors while using SSI and gzipping.
 
-    *) Bugfix: the "Expires" and "Cache-Control" header lines were omitted 
+    *) Bugfix: the "Expires" and "Cache-Control" header lines were omitted
        from the 304 responses.
        Thanks to Alexandr Kukushkin.
 
 
 Changes with nginx 0.1.45                                        08 Sep 2005
 
-    *) Change: the "ssl_engine" directive was canceled in the 
+    *) Change: the "ssl_engine" directive was canceled in the
        ngx_http_ssl_module and now is introduced at global level.
 
-    *) Bugfix: the responses with SSI subrequests did not transferred via 
+    *) Bugfix: the responses with SSI subrequests did not transferred via
        SSL connection.
 
     *) Various bug fixes in the IMAP/POP3 proxy.
@@ -4384,126 +4776,126 @@ Changes with nginx 0.1.44               
 
     *) Feature: the "userid_mark" directive.
 
-    *) Feature: the $remote_user variable value is determined independently 
+    *) Feature: the $remote_user variable value is determined independently
        of authorization use.
 
 
 Changes with nginx 0.1.43                                        30 Aug 2005
 
-    *) Feature: the listen(2) backlog in the "listen" directive can be 
+    *) Feature: the listen(2) backlog in the "listen" directive can be
        changed using the -HUP signal.
 
     *) Feature: the geo2nginx.pl script was added to contrib.
 
-    *) Change: the FastCGI parameters with the empty values now are passed 
+    *) Change: the FastCGI parameters with the empty values now are passed
        to a server.
 
-    *) Bugfix: the segmentation fault occurred or the worker process may 
-       got caught in an endless loop if the proxied or FastCGI server sent 
-       the "Cache-Control" header line and the "expires" directive was 
-       used; in the proxied mode the the bug had appeared in 0.1.29.
+    *) Bugfix: the segmentation fault occurred or the worker process may got
+       caught in an endless loop if the proxied or FastCGI server sent the
+       "Cache-Control" header line and the "expires" directive was used; in
+       the proxied mode the bug had appeared in 0.1.29.
 
 
 Changes with nginx 0.1.42                                        23 Aug 2005
 
-    *) Bugfix: if the request URI had a zero length after the processing in 
-       the ngx_http_proxy_module, then the segmentation fault or bus error 
+    *) Bugfix: if the request URI had a zero length after the processing in
+       the ngx_http_proxy_module, then the segmentation fault or bus error
        occurred in the ngx_http_proxy_module.
 
-    *) Bugfix: the "limit_rate" directive did not work inside the "if" 
+    *) Bugfix: the "limit_rate" directive did not work inside the "if"
        block; the bug had appeared in 0.1.38.
 
 
 Changes with nginx 0.1.41                                        25 Jul 2005
 
-    *) Bugfix: if the variable was used in the configuration file, then it 
+    *) Bugfix: if the variable was used in the configuration file, then it
        can not be used in SSI.
 
 
 Changes with nginx 0.1.40                                        22 Jul 2005
 
-    *) Bugfix: if a client sent too long header line, then the request 
+    *) Bugfix: if a client sent too long header line, then the request
        information did not logged in the error log.
 
-    *) Bugfix: the "Set-Cookie" header line was not transferred when the 
+    *) Bugfix: the "Set-Cookie" header line was not transferred when the
        "X-Accel-Redirect" was used; the bug had appeared in 0.1.39.
 
-    *) Bugfix: the "Content-Disposition" header line was not transferred 
+    *) Bugfix: the "Content-Disposition" header line was not transferred
        when the "X-Accel-Redirect" was used.
 
-    *) Bugfix: the master process did not close the listen socket on the 
+    *) Bugfix: the master process did not close the listen socket on the
        SIGQUIT signal.
 
-    *) Bugfix: after on-line upgrade on Linux and Solaris the process name 
+    *) Bugfix: after on-line upgrade on Linux and Solaris the process name
        became shorter in the "ps" command.
 
 
 Changes with nginx 0.1.39                                        14 Jul 2005
 
-    *) The changes in the ngx_http_charset_module: the "default_charset" 
-       directive was canceled; the "charset" directive sets the response 
+    *) The changes in the ngx_http_charset_module: the "default_charset"
+       directive was canceled; the "charset" directive sets the response
        charset; the "source_charset" directive sets the source charset only.
 
-    *) Bugfix: the backend "WWW-Authenticate" header line did not 
+    *) Bugfix: the backend "WWW-Authenticate" header line did not
        transferred while the 401 response code redirecting.
 
-    *) Bugfix: the ngx_http_proxy_module and ngx_http_fastcgi_module may 
-       close a connection before anything was transferred to a client; the 
+    *) Bugfix: the ngx_http_proxy_module and ngx_http_fastcgi_module may
+       close a connection before anything was transferred to a client; the
        bug had appeared in 0.1.38.
 
     *) Workaround: the Linux glibc crypt_r() initialization bug.
 
-    *) Bugfix: the ngx_http_ssi_module did not support the relative URI in 
+    *) Bugfix: the ngx_http_ssi_module did not support the relative URI in
        the "include virtual" command.
 
-    *) Bugfix: if the backend response had the "Location" header line and 
-       nginx should not rewrite this line, then the 500 code response body 
+    *) Bugfix: if the backend response had the "Location" header line and
+       nginx should not rewrite this line, then the 500 code response body
        was transferred; the bug had appeared in 0.1.29.
 
-    *) Bugfix: some directives of the ngx_http_proxy_module and 
-       ngx_http_fastcgi_module were not inherited from the server to the 
+    *) Bugfix: some directives of the ngx_http_proxy_module and
+       ngx_http_fastcgi_module were not inherited from the server to the
        location level; the bug had appeared in 0.1.29.
 
-    *) Bugfix: the ngx_http_ssl_module did not support the certificate 
+    *) Bugfix: the ngx_http_ssl_module did not support the certificate
        chain.
 
-    *) Bugfix: the ngx_http_autoindex_module did not show correctly the 
-       long file names; the bug had appeared in 0.1.38.
+    *) Bugfix: the ngx_http_autoindex_module did not show correctly the long
+       file names; the bug had appeared in 0.1.38.
 
-    *) Bugfixes in IMAP/POP3 proxy in interaction with a backend at the 
+    *) Bugfixes in IMAP/POP3 proxy in interaction with a backend at the
        login state.
 
 
 Changes with nginx 0.1.38                                        08 Jul 2005
 
-    *) Feature: the "limit_rate" directive is supported in in proxy and 
-       FastCGI mode.
+    *) Feature: the "limit_rate" directive is supported in proxy and FastCGI
+       mode.
 
-    *) Feature: the "X-Accel-Limit-Rate" response header line is supported 
+    *) Feature: the "X-Accel-Limit-Rate" response header line is supported
        in proxy and FastCGI mode.
 
     *) Feature: the "break" directive.
 
     *) Feature: the "log_not_found" directive.
 
-    *) Bugfix: the response status code was not changed when request was 
+    *) Bugfix: the response status code was not changed when request was
        redirected by the ""X-Accel-Redirect" header line.
 
-    *) Bugfix: the variables set by the "set" directive could not be used 
-       in SSI.
+    *) Bugfix: the variables set by the "set" directive could not be used in
+       SSI.
 
-    *) Bugfix: the segmentation fault may occurred if the SSI page has more 
+    *) Bugfix: the segmentation fault may occurred if the SSI page has more
        than one remote subrequest.
 
-    *) Bugfix: nginx treated the backend response as invalid if the status 
-       line in the header was transferred in two packets; the bug had 
+    *) Bugfix: nginx treated the backend response as invalid if the status
+       line in the header was transferred in two packets; the bug had
        appeared in 0.1.29.
 
     *) Feature: the "ssi_types" directive.
 
     *) Feature: the "autoindex_exact_size" directive.
 
-    *) Bugfix: the ngx_http_autoindex_module did not support the long file 
+    *) Bugfix: the ngx_http_autoindex_module did not support the long file
        names in UTF-8.
 
     *) Feature: the IMAP/POP3 proxy.
@@ -4513,34 +4905,34 @@ Changes with nginx 0.1.37               
 
     *) Change: now the "\n" is added to the end of the "nginx.pid" file.
 
-    *) Bugfix: the responses may be transferred not completely, if many 
+    *) Bugfix: the responses may be transferred not completely, if many
        parts or the big parts were included by SSI.
 
-    *) Bugfix: if all backends had returned the 404 reponse and the 
-       "http_404" parameter of the "proxy_next_upstream" or 
-       "fastcgi_next_upstream" directives was used, then nginx started to 
+    *) Bugfix: if all backends had returned the 404 reponse and the
+       "http_404" parameter of the "proxy_next_upstream" or
+       "fastcgi_next_upstream" directives was used, then nginx started to
        request all backends again.
 
 
 Changes with nginx 0.1.36                                        15 Jun 2005
 
-    *) Change: if the request header has duplicate the "Host", 
-       "Connection", "Content-Length", or "Authorization" lines, then nginx 
-       now returns the 400 error.
+    *) Change: if the request header has duplicate the "Host", "Connection",
+       "Content-Length", or "Authorization" lines, then nginx now returns
+       the 400 error.
 
     *) Change: the "post_accept_timeout" directive was canceled.
 
-    *) Feature: the "default", "af=", "bl=", "deferred", and "bind" 
+    *) Feature: the "default", "af=", "bl=", "deferred", and "bind"
        parameters of the "listen" directive.
 
     *) Feature: the FreeBSD accept filters support.
 
     *) Feature: the Linux TCP_DEFER_ACCEPT support.
 
-    *) Bugfix: the ngx_http_autoindex_module did not support the file names 
+    *) Bugfix: the ngx_http_autoindex_module did not support the file names
        in UTF-8.
 
-    *) Bugfix: the new log file can be rotated by the -USR1 signal only if 
+    *) Bugfix: the new log file can be rotated by the -USR1 signal only if
        the reconfiguration by the -HUP signal was made twice.
 
 
@@ -4550,61 +4942,61 @@ Changes with nginx 0.1.35               
 
     *) Feature: the "port_in_redirect" directive.
 
-    *) Bugfix: the segmentation fault was occurred if the backend response 
+    *) Bugfix: the segmentation fault was occurred if the backend response
        header was in several packets; the bug had appeared in 0.1.29.
 
-    *) Bugfix: if more than 10 servers were configured or some server did 
-       not use the "listen" directive, then the segmentation fault was 
+    *) Bugfix: if more than 10 servers were configured or some server did
+       not use the "listen" directive, then the segmentation fault was
        occurred on the start.
 
-    *) Bugfix: the segmentation fault might occur if the response was 
-       bigger than the temporary file.
+    *) Bugfix: the segmentation fault might occur if the response was bigger
+       than the temporary file.
 
-    *) Bugfix: nginx returned the 400 response on requests like 
-       "GET http://www.domain.com/uri HTTP/1.0"; the bug had appeared in 
+    *) Bugfix: nginx returned the 400 response on requests like
+       "GET http://www.domain.com/uri HTTP/1.0"; the bug had appeared in
        0.1.28.
 
 
 Changes with nginx 0.1.34                                        26 May 2005
 
-    *) Bugfix: the worker process may got caught in an endless loop if the 
+    *) Bugfix: the worker process may got caught in an endless loop if the
        big response part were include by SSI.
 
-    *) Bugfix: the variables set by the "set" directive were not available 
+    *) Bugfix: the variables set by the "set" directive were not available
        in SSI.
 
     *) Feature: the "autoindex_localtime" directive.
 
-    *) Bugfix: the empty value of the "proxy_set_header" directive forbids 
+    *) Bugfix: the empty value of the "proxy_set_header" directive forbids
        the client request header line passing.
 
 
 Changes with nginx 0.1.33                                        23 May 2005
 
-    *) Bugfix: nginx could not be built with the --without-pcre parameter; 
+    *) Bugfix: nginx could not be built with the --without-pcre parameter;
        the bug had appeared in 0.1.29.
 
-    *) Bugfix: 3, 4, 7, and 8 the "proxy_set_header" directives in one 
-       level cause the bus fault on start up.
+    *) Bugfix: 3, 4, 7, and 8 the "proxy_set_header" directives in one level
+       cause the bus fault on start up.
 
     *) Bugfix: the HTTP protocol was specified in the HTTPS redirects.
 
-    *) Bugfix: if the "rewrite" directive used the captures inside the "if" 
+    *) Bugfix: if the "rewrite" directive used the captures inside the "if"
        directive, then the 500 error code was returned.
 
 
 Changes with nginx 0.1.32                                        19 May 2005
 
-    *) Bugfix: the arguments were omitted in the redirects, issued by the 
+    *) Bugfix: the arguments were omitted in the redirects, issued by the
        "rewrite" directive; the bug had appeared in 0.1.29.
 
-    *) Feature: the "if" directive supports the captures in regular 
+    *) Feature: the "if" directive supports the captures in regular
        expressions.
 
-    *) Feature: the "set" directive supports the variables and the captures 
+    *) Feature: the "set" directive supports the variables and the captures
        of regular expressions.
 
-    *) Feature: the "X-Accel-Redirect" response header line is supported in 
+    *) Feature: the "X-Accel-Redirect" response header line is supported in
        proxy and FastCGI mode.
 
 
@@ -4616,23 +5008,22 @@ Changes with nginx 0.1.31               
 
     *) Bugfix: errors while using SSI and gzipping.
 
-    *) Bugfix: the redirect with the 301 code was transferred without 
+    *) Bugfix: the redirect with the 301 code was transferred without
        response body; the bug had appeared in 0.1.30.
 
 
 Changes with nginx 0.1.30                                        14 May 2005
 
-    *) Bugfix: the worker process may got caught in an endless loop if the 
+    *) Bugfix: the worker process may got caught in an endless loop if the
        SSI was used.
 
     *) Bugfix: the response encrypted by SSL may not transferred complete.
 
-    *) Bugfix: if the length of the response part received at once from 
-       proxied or FastCGI server was equal to 500, then nginx returns the 
-       500 response code; in proxy mode the the bug had appeared in 0.1.29 
-       only.
+    *) Bugfix: if the length of the response part received at once from
+       proxied or FastCGI server was equal to 500, then nginx returns the
+       500 response code; in proxy mode the bug had appeared in 0.1.29 only.
 
-    *) Bugfix: nginx did not consider the directives with 8 or 9 parameters 
+    *) Bugfix: nginx did not consider the directives with 8 or 9 parameters
        as invalid.
 
     *) Feature: the "return" directive can return the 204 response code.
@@ -4644,47 +5035,47 @@ Changes with nginx 0.1.29               
 
     *) Feature: the ngx_http_ssi_module supports "include virtual" command.
 
-    *) Feature: the ngx_http_ssi_module supports the condition command like 
-       'if expr="$NAME"' and "else" and "endif" commands. Only one nested 
+    *) Feature: the ngx_http_ssi_module supports the condition command like
+       'if expr="$NAME"' and "else" and "endif" commands. Only one nested
        level is supported.
 
-    *) Feature: the ngx_http_ssi_module supports the DATE_LOCAL and 
-       DATE_GMT variables and "config timefmt" command.
+    *) Feature: the ngx_http_ssi_module supports the DATE_LOCAL and DATE_GMT
+       variables and "config timefmt" command.
 
     *) Feature: the "ssi_ignore_recycled_buffers" directive.
 
-    *) Bugfix: the "echo" command did not show the default value for the 
+    *) Bugfix: the "echo" command did not show the default value for the
        empty QUERY_STRING variable.
 
     *) Change: the ngx_http_proxy_module was rewritten.
 
-    *) Feature: the "proxy_redirect", "proxy_pass_request_headers", 
+    *) Feature: the "proxy_redirect", "proxy_pass_request_headers",
        "proxy_pass_request_body", and "proxy_method" directives.
 
-    *) Feature: the "proxy_set_header" directive. The "proxy_x_var" was 
+    *) Feature: the "proxy_set_header" directive. The "proxy_x_var" was
        canceled and must be replaced with the proxy_set_header directive.
 
-    *) Change: the "proxy_preserve_host" is canceled and must be replaced 
-       with the "proxy_set_header Host $host" and the "proxy_redirect off" 
-       directives, the "proxy_set_header Host $host:$proxy_port" directive 
+    *) Change: the "proxy_preserve_host" is canceled and must be replaced
+       with the "proxy_set_header Host $host" and the "proxy_redirect off"
+       directives, the "proxy_set_header Host $host:$proxy_port" directive
        and the appropriate proxy_redirect directives.
 
-    *) Change: the "proxy_set_x_real_ip" is canceled and must be replaced 
+    *) Change: the "proxy_set_x_real_ip" is canceled and must be replaced
        with the "proxy_set_header X-Real-IP $remote_addr" directive.
 
-    *) Change: the "proxy_add_x_forwarded_for" is canceled and must be 
-       replaced with 
-       the "proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for" 
+    *) Change: the "proxy_add_x_forwarded_for" is canceled and must be
+       replaced with
+       the "proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for"
        directive.
 
-    *) Change: the "proxy_set_x_url" is canceled and must be replaced with 
-       the "proxy_set_header X-URL http://$host:$server_port$request_uri" 
+    *) Change: the "proxy_set_x_url" is canceled and must be replaced with
+       the "proxy_set_header X-URL http://$host:$server_port$request_uri"
        directive.
 
     *) Feature: the "fastcgi_param" directive.
 
-    *) Change: the "fastcgi_root", "fastcgi_set_var" and "fastcgi_params" 
-       directive are canceled and must be replaced with the fastcgi_param 
+    *) Change: the "fastcgi_root", "fastcgi_set_var" and "fastcgi_params"
+       directive are canceled and must be replaced with the fastcgi_param
        directives.
 
     *) Feature: the "index" directive can use the variables.
@@ -4697,32 +5088,32 @@ Changes with nginx 0.1.29               
 
     *) Feature: the "internal" directive.
 
-    *) Feature: the CONTENT_LENGTH, CONTENT_TYPE, REMOTE_PORT, SERVER_ADDR, 
-       SERVER_PORT, SERVER_PROTOCOL, DOCUMENT_ROOT, SERVER_NAME, 
+    *) Feature: the CONTENT_LENGTH, CONTENT_TYPE, REMOTE_PORT, SERVER_ADDR,
+       SERVER_PORT, SERVER_PROTOCOL, DOCUMENT_ROOT, SERVER_NAME,
        REQUEST_METHOD, REQUEST_URI, and REMOTE_USER variables.
 
-    *) Change: nginx now passes the invalid lines in a client request 
+    *) Change: nginx now passes the invalid lines in a client request
        headers or a backend response header.
 
-    *) Bugfix: if the backend did not transfer response for a long time and 
-       the "send_timeout" was less than "proxy_read_timeout", then nginx 
+    *) Bugfix: if the backend did not transfer response for a long time and
+       the "send_timeout" was less than "proxy_read_timeout", then nginx
        returned the 408 response.
 
-    *) Bugfix: the segmentation fault was occurred if the backend sent an 
+    *) Bugfix: the segmentation fault was occurred if the backend sent an
        invalid line in response header; the bug had appeared in 0.1.26.
 
-    *) Bugfix: the segmentation fault may occurred in FastCGI fault 
+    *) Bugfix: the segmentation fault may occurred in FastCGI fault
        tolerance configuration.
 
-    *) Bugfix: the "expires" directive did not remove the previous 
-       "Expires" and "Cache-Control" headers.
+    *) Bugfix: the "expires" directive did not remove the previous "Expires"
+       and "Cache-Control" headers.
 
-    *) Bugfix: nginx did not take into account trailing dot in "Host" 
-       header line.
+    *) Bugfix: nginx did not take into account trailing dot in "Host" header
+       line.
 
     *) Bugfix: the ngx_http_auth_module did not work under Linux.
 
-    *) Bugfix: the rewrite directive worked incorrectly, if the arguments 
+    *) Bugfix: the rewrite directive worked incorrectly, if the arguments
        were in a request.
 
     *) Bugfix: nginx could not be built on MacOS X.
@@ -4739,55 +5130,55 @@ Changes with nginx 0.1.27               
 
     *) Feature: the "blocked" parameter of the "valid_referers" directive.
 
-    *) Change: the errors while handling the request header now logged at 
-       "info" level. The server name and the "Host" and "Referer" header 
+    *) Change: the errors while handling the request header now logged at
+       "info" level. The server name and the "Host" and "Referer" header
        lines also logged.
 
     *) Change: the "Host" header line is also logged in error log.
 
-    *) Feature: the proxy_pass_unparsed_uri directive. The special handling 
-       of the "://" symbols in URI, appeared in 0.1.11 version, now is 
+    *) Feature: the proxy_pass_unparsed_uri directive. The special handling
+       of the "://" symbols in URI, appeared in 0.1.11 version, now is
        canceled.
 
-    *) Bugfix: nginx could not be built on FreeBSD and Linux, if the 
-       --without-ngx_http_auth_basic_module configuration parameter was 
+    *) Bugfix: nginx could not be built on FreeBSD and Linux, if the
+       --without-ngx_http_auth_basic_module configuration parameter was
        used.
 
 
 Changes with nginx 0.1.26                                        22 Mar 2005
 
-    *) Change: the invalid client header lines are now ignored and logged 
-       at the info level.
+    *) Change: the invalid client header lines are now ignored and logged at
+       the info level.
 
     *) Change: the server name is also logged in error log.
 
-    *) Feature: the ngx_http_auth_basic_module module and the auth_basic 
-       and auth_basic_user_file directives.
+    *) Feature: the ngx_http_auth_basic_module module and the auth_basic and
+       auth_basic_user_file directives.
 
 
 Changes with nginx 0.1.25                                        19 Mar 2005
 
     *) Bugfix: nginx did run on Linux parisc.
 
-    *) Feature: nginx now does not start under FreeBSD if the sysctl 
+    *) Feature: nginx now does not start under FreeBSD if the sysctl
        kern.ipc.somaxconn value is too big.
 
-    *) Bugfix: if a request was internally redirected by the 
-       ngx_http_index_module module to the ngx_http_proxy_module or 
-       ngx_http_fastcgi_module modules, then the index file was not closed 
+    *) Bugfix: if a request was internally redirected by the
+       ngx_http_index_module module to the ngx_http_proxy_module or
+       ngx_http_fastcgi_module modules, then the index file was not closed
        after request completion.
 
-    *) Feature: the "proxy_pass" can be used in location with regular 
+    *) Feature: the "proxy_pass" can be used in location with regular
        expression.
 
-    *) Feature: the ngx_http_rewrite_filter_module module supports the 
+    *) Feature: the ngx_http_rewrite_filter_module module supports the
        condition like "if ($HTTP_USER_AGENT ~ MSIE)".
 
-    *) Bugfix: nginx started too slow if the large number of addresses and 
+    *) Bugfix: nginx started too slow if the large number of addresses and
        text values were used in the "geo" directive.
 
-    *) Change: a variable name must be declared as "$name" in the "geo" 
-       directive. The previous variant without "$" is still supported, but 
+    *) Change: a variable name must be declared as "$name" in the "geo"
+       directive. The previous variant without "$" is still supported, but
        will be removed soon.
 
     *) Feature: the "%{VARIABLE}v" logging parameter.
@@ -4801,58 +5192,58 @@ Changes with nginx 0.1.25               
 
 Changes with nginx 0.1.24                                        04 Mar 2005
 
-    *) Feature: the ngx_http_ssi_filter_module supports the QUERY_STRING 
-       and DOCUMENT_URI variables.
+    *) Feature: the ngx_http_ssi_filter_module supports the QUERY_STRING and
+       DOCUMENT_URI variables.
 
-    *) Bugfix: the ngx_http_autoindex_module may some times return the 404 
-       response for existent directory, if this directory was used in 
+    *) Bugfix: the ngx_http_autoindex_module may some times return the 404
+       response for existent directory, if this directory was used in
        "alias" directive.
 
-    *) Bugfix: the ngx_http_ssi_filter_module ran incorrectly for large 
+    *) Bugfix: the ngx_http_ssi_filter_module ran incorrectly for large
        responses.
 
-    *) Bugfix: the lack of the "Referer" header line was always accounted 
-       as valid referrer.
+    *) Bugfix: the lack of the "Referer" header line was always accounted as
+       valid referrer.
 
 
 Changes with nginx 0.1.23                                        01 Mar 2005
 
-    *) Feature: the ngx_http_ssi_filter_module and the ssi, 
-       ssi_silent_errors, and ssi_min_file_chunk directives. The 'echo 
-       var="HTTP_..." default=""' and 'echo var="REMOTE_ADDR"' commands are 
+    *) Feature: the ngx_http_ssi_filter_module and the ssi,
+       ssi_silent_errors, and ssi_min_file_chunk directives. The 'echo
+       var="HTTP_..." default=""' and 'echo var="REMOTE_ADDR"' commands are
        supported.
 
     *) Feature: the %request_time log parameter.
 
-    *) Feature: if the request has no the "Host" header line, then the 
-       "proxy_preserve_host" directive set this header line to the first 
+    *) Feature: if the request has no the "Host" header line, then the
+       "proxy_preserve_host" directive set this header line to the first
        server name of the "server_name" directive.
 
-    *) Bugfix: nginx could not be built on platforms different from i386, 
+    *) Bugfix: nginx could not be built on platforms different from i386,
        amd64, sparc, and ppc; the bug had appeared in 0.1.22.
 
-    *) Bugfix: the ngx_http_autoindex_module now shows the information not 
+    *) Bugfix: the ngx_http_autoindex_module now shows the information not
        about the symlink, but about file or directory it points to.
 
-    *) Bugfix: the %apache_length parameter logged the negative length of 
+    *) Bugfix: the %apache_length parameter logged the negative length of
        the response header if the no response was transferred to a client.
 
 
 Changes with nginx 0.1.22                                        22 Feb 2005
 
-    *) Bugfix: the ngx_http_stub_status_module showed incorrect handled 
+    *) Bugfix: the ngx_http_stub_status_module showed incorrect handled
        connections statistics if the proxying or FastCGI server were used.
 
-    *) Bugfix: the installation paths were incorrectly quoted on Linux and 
+    *) Bugfix: the installation paths were incorrectly quoted on Linux and
        Solaris; the bug had appeared in 0.1.21.
 
 
 Changes with nginx 0.1.21                                        22 Feb 2005
 
-    *) Bugfix: the ngx_http_stub_status_module showed incorrect statistics 
+    *) Bugfix: the ngx_http_stub_status_module showed incorrect statistics
        if "rtsig" method was used or if several worker process ran on SMP.
 
-    *) Bugfix: nginx could not be built by the icc compiler on Linux or if 
+    *) Bugfix: nginx could not be built by the icc compiler on Linux or if
        the zlib-1.2.x library was building from sources.
 
     *) Bugfix: nginx could not be built on NetBSD 2.0.
@@ -4860,7 +5251,7 @@ Changes with nginx 0.1.21               
 
 Changes with nginx 0.1.20                                        17 Feb 2005
 
-    *) Feature: the new "script_filename" and "remote_port" parameters of 
+    *) Feature: the new "script_filename" and "remote_port" parameters of
        the fastcgi_params directive.
 
     *) Bugfix: the FastCGI stderr stream was handled incorrectly.
@@ -4868,68 +5259,68 @@ Changes with nginx 0.1.20               
 
 Changes with nginx 0.1.19                                        16 Feb 2005
 
-    *) Bugfix: now, if request contains the zero, then the 404 error is 
+    *) Bugfix: now, if request contains the zero, then the 404 error is
        returned for the local requests.
 
     *) Bugfix: nginx could not be built on NetBSD 2.0.
 
-    *) Bugfix: the timeout may occur while reading of the the client 
-       request body via SSL connections.
+    *) Bugfix: the timeout may occur while reading of the client request
+       body via SSL connections.
 
 
 Changes with nginx 0.1.18                                        09 Feb 2005
 
-    *) Workaround: the default values of the devpoll_events and the 
-       devpoll_changes directives changed from 512 to 32 to be compatible 
+    *) Workaround: the default values of the devpoll_events and the
+       devpoll_changes directives changed from 512 to 32 to be compatible
        with Solaris 10.
 
-    *) Bugfix: the proxy_set_x_var and fastcgi_set_var directives were not 
+    *) Bugfix: the proxy_set_x_var and fastcgi_set_var directives were not
        inherited.
 
-    *) Bugfix: in a redirect rewrite directive arguments were concatenated 
+    *) Bugfix: in a redirect rewrite directive arguments were concatenated
        with URI by an "&" rather than a "?".
 
-    *) Bugfix: the lines without trailing ";" in the file being included by 
+    *) Bugfix: the lines without trailing ";" in the file being included by
        the ngx_http_geo_module were silently ignored.
 
     *) Feature: the ngx_http_stub_status_module.
 
-    *) Bugfix: the unknown log format in the access_log directive caused 
-       the segmentation fault.
+    *) Bugfix: the unknown log format in the access_log directive caused the
+       segmentation fault.
 
-    *) Feature: the new "document_root" parameter of the fastcgi_params 
+    *) Feature: the new "document_root" parameter of the fastcgi_params
        directive.
 
     *) Feature: the fastcgi_redirect_errors directive.
 
-    *) Feature: the new "break" modifier of the "rewrite" directive allows 
-       to stop the rewrite/location cycle and sets the current 
-       configuration to the request.
+    *) Feature: the new "break" modifier of the "rewrite" directive allows
+       to stop the rewrite/location cycle and sets the current configuration
+       to the request.
 
 
 Changes with nginx 0.1.17                                        03 Feb 2005
 
-    *) Change: the ngx_http_rewrite_module was rewritten from the scratch. 
-       Now it is possible to redirect, to return the error codes, to check 
-       the variables and referrers. The directives can be used inside 
+    *) Change: the ngx_http_rewrite_module was rewritten from the scratch.
+       Now it is possible to redirect, to return the error codes, to check
+       the variables and referrers. The directives can be used inside
        locations. The redirect directive was canceled.
 
     *) Feature: the ngx_http_geo_module.
 
     *) Feature: the proxy_set_x_var and fastcgi_set_var directives.
 
-    *) Bugfix: the location configuration with "=" modifier may be used in 
+    *) Bugfix: the location configuration with "=" modifier may be used in
        another location.
 
-    *) Bugfix: the correct content type was set only for requests that use 
+    *) Bugfix: the correct content type was set only for requests that use
        small caps letters in extension.
 
-    *) Bugfix: if the proxy_pass or fastcgi_pass directives were set in the 
-       location, and access was denied, and the error was redirected to a 
+    *) Bugfix: if the proxy_pass or fastcgi_pass directives were set in the
+       location, and access was denied, and the error was redirected to a
        static page, then the segmentation fault occurred.
 
-    *) Bugfix: if in a proxied "Location" header was a relative URL, then a 
-       host name and a slash were added to them; the bug had appeared in 
+    *) Bugfix: if in a proxied "Location" header was a relative URL, then a
+       host name and a slash were added to them; the bug had appeared in
        0.1.14.
 
     *) Bugfix: the system error message was not logged on Linux.
@@ -4937,82 +5328,82 @@ Changes with nginx 0.1.17               
 
 Changes with nginx 0.1.16                                        25 Jan 2005
 
-    *) Bugfix: if the response were transferred by chunks, then on the HEAD 
+    *) Bugfix: if the response were transferred by chunks, then on the HEAD
        request the final chunk was issued.
 
-    *) Bugfix: the "Connection: keep-alive" header were issued, even if the 
+    *) Bugfix: the "Connection: keep-alive" header were issued, even if the
        keepalive_timeout directive forbade the keep-alive use.
 
-    *) Bugfix: the errors in the ngx_http_fastcgi_module caused the 
+    *) Bugfix: the errors in the ngx_http_fastcgi_module caused the
        segmentation faults.
 
-    *) Bugfix: the compressed response encrypted by SSL may not transferred 
+    *) Bugfix: the compressed response encrypted by SSL may not transferred
        complete.
 
-    *) Bugfix: the TCP-specific TCP_NODELAY, TCP_NOPSUH, and TCP_CORK 
+    *) Bugfix: the TCP-specific TCP_NODELAY, TCP_NOPSUH, and TCP_CORK
        options, are not used for the unix domain sockets.
 
     *) Feature: the rewrite directive supports the arguments rewriting.
 
-    *) Bugfix: the response code 400 was returned for the POST request with 
+    *) Bugfix: the response code 400 was returned for the POST request with
        the "Content-Length: 0" header; the bug had appeared in 0.1.14.
 
 
 Changes with nginx 0.1.15                                        19 Jan 2005
 
-    *) Bugfix: the error while the connecting to the FastCGI server caused 
+    *) Bugfix: the error while the connecting to the FastCGI server caused
        segmentation fault.
 
-    *) Bugfix: the correct handling of the regular expression, that has 
+    *) Bugfix: the correct handling of the regular expression, that has
        different number of the captures and substitutions.
 
-    *) Feature: the location, that is passed to the FastCGI server, can be 
+    *) Feature: the location, that is passed to the FastCGI server, can be
        regular expression.
 
-    *) Bugfix: the FastCGI's parameter REQUEST_URI is now passed with the 
+    *) Bugfix: the FastCGI's parameter REQUEST_URI is now passed with the
        arguments and in the original state.
 
-    *) Bugfix: the ngx_http_rewrite_module module was required to be built 
+    *) Bugfix: the ngx_http_rewrite_module module was required to be built
        to use the regular expressions in locations.
 
-    *) Bugfix: the directive "proxy_preserve_host  on" adds port 80 to the 
-       "Host" headers, if upstream listen on port 80; the bug had appeared 
+    *) Bugfix: the directive "proxy_preserve_host on" adds port 80 to the
+       "Host" headers, if upstream listen on port 80; the bug had appeared
        in 0.1.14.
 
-    *) Bugfix: the same paths in autoconfiguration parameters 
-       --http-client-body-temp-path=PATH and --http-proxy-temp-path=PATH, 
-       or --http-client-body-temp-path=PATH and 
-       --http-fastcgi-temp-path=PATH caused segmentation fault.
+    *) Bugfix: the same paths in autoconfiguration parameters
+       --http-client-body-temp-path=PATH and --http-proxy-temp-path=PATH, or
+       --http-client-body-temp-path=PATH and --http-fastcgi-temp-path=PATH
+       caused segmentation fault.
 
 
 Changes with nginx 0.1.14                                        18 Jan 2005
 
-    *) Feature: the autoconfiguration directives: 
-       --http-client-body-temp-path=PATH, --http-proxy-temp-path=PATH, and 
+    *) Feature: the autoconfiguration directives:
+       --http-client-body-temp-path=PATH, --http-proxy-temp-path=PATH, and
        --http-fastcgi-temp-path=PATH
 
-    *) Change: the directory name for the temporary files with the client 
-       request body is specified by directive client_body_temp_path, by 
+    *) Change: the directory name for the temporary files with the client
+       request body is specified by directive client_body_temp_path, by
        default it is <prefix>/client_body_temp.
 
-    *) Feature: the ngx_http_fastcgi_module and the directives: 
-       fastcgi_pass, fastcgi_root, fastcgi_index, fastcgi_params, 
-       fastcgi_connect_timeout, fastcgi_send_timeout, fastcgi_read_timeout, 
-       fastcgi_send_lowat, fastcgi_header_buffer_size, fastcgi_buffers, 
-       fastcgi_busy_buffers_size, fastcgi_temp_path, 
-       fastcgi_max_temp_file_size, fastcgi_temp_file_write_size, 
+    *) Feature: the ngx_http_fastcgi_module and the directives:
+       fastcgi_pass, fastcgi_root, fastcgi_index, fastcgi_params,
+       fastcgi_connect_timeout, fastcgi_send_timeout, fastcgi_read_timeout,
+       fastcgi_send_lowat, fastcgi_header_buffer_size, fastcgi_buffers,
+       fastcgi_busy_buffers_size, fastcgi_temp_path,
+       fastcgi_max_temp_file_size, fastcgi_temp_file_write_size,
        fastcgi_next_upstream, and fastcgi_x_powered_by.
 
-    *) Bugfix: the "[alert] zero size buf" error; the bug had appeared in 
+    *) Bugfix: the "[alert] zero size buf" error; the bug had appeared in
        0.1.3.
 
-    *) Change: the URI must be specified after the host name in the 
+    *) Change: the URI must be specified after the host name in the
        proxy_pass directive.
 
-    *) Change: the %3F symbol in the URI was considered as the argument 
+    *) Change: the %3F symbol in the URI was considered as the argument
        string start.
 
-    *) Feature: the unix domain sockets support in the 
+    *) Feature: the unix domain sockets support in the
        ngx_http_proxy_module.
 
     *) Feature: the ssl_engine and ssl_ciphers directives.
@@ -5021,13 +5412,13 @@ Changes with nginx 0.1.14               
 
 Changes with nginx 0.1.13                                        21 Dec 2004
 
-    *) Feature: the server_names_hash and server_names_hash_threshold 
+    *) Feature: the server_names_hash and server_names_hash_threshold
        directives.
 
-    *) Bugfix: the *.domain.tld names in the "server_name" directive did 
-       not work.
+    *) Bugfix: the *.domain.tld names in the "server_name" directive did not
+       work.
 
-    *) Bugfix: the %request_length log parameter logged the incorrect 
+    *) Bugfix: the %request_length log parameter logged the incorrect
        length.
 
 
@@ -5035,12 +5426,12 @@ Changes with nginx 0.1.12               
 
     *) Feature: the %request_length log parameter.
 
-    *) Bugfix: when using the /dev/poll, select and poll on the platforms, 
-       where these methods may do the false reports, there may be the long 
-       delay when the request was passed via the keep-alive connection. It 
+    *) Bugfix: when using the /dev/poll, select and poll on the platforms,
+       where these methods may do the false reports, there may be the long
+       delay when the request was passed via the keep-alive connection. It
        may be at least on Solaris when using the /dev/poll.
 
-    *) Bugfix: the send_lowat directive is ignored on Linux because Linux 
+    *) Bugfix: the send_lowat directive is ignored on Linux because Linux
        does not support the SO_SNDLOWAT option.
 
 
@@ -5048,26 +5439,26 @@ Changes with nginx 0.1.11               
 
     *) Feature: the worker_priority directive.
 
-    *) Change: both tcp_nopush and tcp_nodelay directives affect the 
+    *) Change: both tcp_nopush and tcp_nodelay directives affect the
        transferred response.
 
     *) Bugfix: nginx did not call initgroups().
        Thanks to Andrew Sitnikov and Andrei Nigmatulin.
 
-    *) Change: now the ngx_http_autoindex_module shows the file size in the 
+    *) Change: now the ngx_http_autoindex_module shows the file size in the
        bytes.
 
-    *) Bugfix: the ngx_http_autoindex_module returned the 500 error if the 
+    *) Bugfix: the ngx_http_autoindex_module returned the 500 error if the
        broken symlink was in a directory.
 
-    *) Bugfix: the files bigger than 4G could not be transferred using 
+    *) Bugfix: the files bigger than 4G could not be transferred using
        sendfile.
 
-    *) Bugfix: if the backend was resolved to several backends and there 
-       was an error while the response waiting then process may got caught 
-       in an endless loop.
+    *) Bugfix: if the backend was resolved to several backends and there was
+       an error while the response waiting then process may got caught in an
+       endless loop.
 
-    *) Bugfix: the worker process may exit with the "unknown cycle" message 
+    *) Bugfix: the worker process may exit with the "unknown cycle" message
        when the /dev/poll method was used.
 
     *) Bugfix: "close() channel failed" errors.
@@ -5076,44 +5467,43 @@ Changes with nginx 0.1.11               
 
     *) Bugfix: the send_lowat directive did not work on Linux.
 
-    *) Bugfix: the segmentation fault occurred if there was no events 
+    *) Bugfix: the segmentation fault occurred if there was no events
        section in configuration.
 
     *) Bugfix: nginx could not be built on OpenBSD.
 
-    *) Bugfix: the double slashes in "://" in the URI were converted to 
+    *) Bugfix: the double slashes in "://" in the URI were converted to
        ":/".
 
 
 Changes with nginx 0.1.10                                        26 Nov 2004
 
-    *) Bugfix: if the request without arguments contains "//", "/./", 
-       "/../" or "%XX" then the last character in the request line was 
-       lost; the bug had appeared in 0.1.9.
+    *) Bugfix: if the request without arguments contains "//", "/./", "/../"
+       or "%XX" then the last character in the request line was lost; the
+       bug had appeared in 0.1.9.
 
-    *) Bugfix: the fix in 0.1.9 for the files bigger than 2G on Linux did 
+    *) Bugfix: the fix in 0.1.9 for the files bigger than 2G on Linux did
        not work.
 
 
 Changes with nginx 0.1.9                                         25 Nov 2004
 
-    *) Bugfix: the proxied request was sent without arguments if the 
-       request contains "//", "/./", "/../" or "%XX".
+    *) Bugfix: the proxied request was sent without arguments if the request
+       contains "//", "/./", "/../" or "%XX".
 
-    *) Bugfix: the large compressed responses may be transferred not 
+    *) Bugfix: the large compressed responses may be transferred not
        completely.
 
-    *) Bugfix: the files bigger than 2G was not transferred on Linux that 
+    *) Bugfix: the files bigger than 2G was not transferred on Linux that
        does not support sendfile64().
 
-    *) Bugfix: while the build configuration on Linux the 
-       --with-poll_module parameter was required; the bug had appeared in 
-       0.1.8.
+    *) Bugfix: while the build configuration on Linux the --with-poll_module
+       parameter was required; the bug had appeared in 0.1.8.
 
 
 Changes with nginx 0.1.8                                         20 Nov 2004
 
-    *) Bugfix: in the ngx_http_autoindex_module if the long file names were 
+    *) Bugfix: in the ngx_http_autoindex_module if the long file names were
        in the listing.
 
     *) Feature: the "^~" modifier in the location directive.
@@ -5123,34 +5513,34 @@ Changes with nginx 0.1.8                
 
 Changes with nginx 0.1.7                                         12 Nov 2004
 
-    *) Bugfix: on FreeBSD the segmentation fault may occur if the size of 
+    *) Bugfix: on FreeBSD the segmentation fault may occur if the size of
        the transferred file was changed; the bug had appeared in 0.1.5.
 
 
 Changes with nginx 0.1.6                                         11 Nov 2004
 
-    *) Bugfix: some location directive combinations with the regular 
+    *) Bugfix: some location directive combinations with the regular
        expressions caused the wrong configuration choose.
 
 
 Changes with nginx 0.1.5                                         11 Nov 2004
 
-    *) Bugfix: on Solaris and Linux there may be too many "recvmsg() 
+    *) Bugfix: on Solaris and Linux there may be too many "recvmsg()
        returned not enough data" alerts.
 
-    *) Bugfix: there were the "writev() failed (22: Invalid argument)" 
-       errors on Solaris in proxy mode without sendfile. On other platforms 
-       that do not support sendfile at all the process got caught in an 
+    *) Bugfix: there were the "writev() failed (22: Invalid argument)"
+       errors on Solaris in proxy mode without sendfile. On other platforms
+       that do not support sendfile at all the process got caught in an
        endless loop.
 
-    *) Bugfix: segmentation fault on Solaris in proxy mode and using 
+    *) Bugfix: segmentation fault on Solaris in proxy mode and using
        sendfile.
 
     *) Bugfix: segmentation fault on Solaris.
 
     *) Bugfix: on-line upgrade did not work on Linux.
 
-    *) Bugfix: the ngx_http_autoindex_module module did not escape the 
+    *) Bugfix: the ngx_http_autoindex_module module did not escape the
        spaces, the quotes, and the percent signs in the directory listing.
 
     *) Change: the decrease of the copy operations.
@@ -5169,31 +5559,31 @@ Changes with nginx 0.1.3                
 
     *) Feature: the proxy_set_x_url directive.
 
-    *) Bugfix: proxy module may get caught in an endless loop when sendfile 
+    *) Bugfix: proxy module may get caught in an endless loop when sendfile
        is not used.
 
 
 Changes with nginx 0.1.2                                         21 Oct 2004
 
-    *) Feature: the --user=USER, --group=GROUP, and --with-ld-opt=OPTIONS 
+    *) Feature: the --user=USER, --group=GROUP, and --with-ld-opt=OPTIONS
        options in configure.
 
     *) Feature: the server_name directive supports *.domain.tld.
 
     *) Bugfix: the portability improvements.
 
-    *) Bugfix: if configuration file was set in command line, the 
+    *) Bugfix: if configuration file was set in command line, the
        reconfiguration was impossible; the bug had appeared in 0.1.1.
 
-    *) Bugfix: proxy module may get caught in an endless loop when sendfile 
+    *) Bugfix: proxy module may get caught in an endless loop when sendfile
        is not used.
 
-    *) Bugfix: with sendfile the response was not recoded according to the 
+    *) Bugfix: with sendfile the response was not recoded according to the
        charset module directives; the bug had appeared in 0.1.1.
 
     *) Bugfix: very seldom bug in the kqueue processing.
 
-    *) Bugfix: the gzip module compressed the proxied responses that was 
+    *) Bugfix: the gzip module compressed the proxied responses that was
        already compressed.
 
 
@@ -5203,24 +5593,24 @@ Changes with nginx 0.1.1                
 
     *) Feature: the tcp_nodelay directive.
 
-    *) Feature: the send_lowat directive is working not only on OSes that 
+    *) Feature: the send_lowat directive is working not only on OSes that
        support kqueue NOTE_LOWAT, but also on OSes that support SO_SNDLOWAT.
 
     *) Feature: the setproctitle() emulation for Linux and Solaris.
 
     *) Bugfix: the "Location" header rewrite bug fixed while the proxying.
 
-    *) Bugfix: the ngx_http_chunked_module module may get caught in an 
+    *) Bugfix: the ngx_http_chunked_module module may get caught in an
        endless loop.
 
     *) Bugfix: the /dev/poll module bugs fixed.
 
-    *) Bugfix: the responses were corrupted when the temporary files were 
+    *) Bugfix: the responses were corrupted when the temporary files were
        used while the proxying.
 
     *) Bugfix: the unescaped requests were passed to the backend.
 
-    *) Bugfix: while the build configuration on Linux 2.4 the 
+    *) Bugfix: while the build configuration on Linux 2.4 the
        --with-poll_module parameter was required.
 
 
--- nginx-1.0.0.orig/README
+++ nginx-1.0.0/README
@@ -1,4 +1,3 @@
 
-The Russian documentation is available at http://sysoev.ru/nginx/
-The English documentation is available at http://nginx.net
+Documentation is available at http://nginx.org
 
--- nginx-1.0.0.orig/conf/mime.types
+++ nginx-1.0.0/conf/mime.types
@@ -21,7 +21,8 @@ types {
     image/x-icon                          ico;
     image/x-jng                           jng;
     image/x-ms-bmp                        bmp;
-    image/svg+xml                         svg;
+    image/svg+xml                         svg svgz;
+    image/webp                            webp;
 
     application/java-archive              jar war ear;
     application/mac-binhex40              hqx;
@@ -62,12 +63,16 @@ types {
     audio/midi                            mid midi kar;
     audio/mpeg                            mp3;
     audio/ogg                             ogg;
+    audio/x-m4a                           m4a;
     audio/x-realaudio                     ra;
 
     video/3gpp                            3gpp 3gp;
+    video/mp4                             mp4;
     video/mpeg                            mpeg mpg;
     video/quicktime                       mov;
+    video/webm                            webm;
     video/x-flv                           flv;
+    video/x-m4v                           m4v;
     video/x-mng                           mng;
     video/x-ms-asf                        asx asf;
     video/x-ms-wmv                        wmv;
--- nginx-1.0.0.orig/conf/nginx.conf
+++ nginx-1.0.0/conf/nginx.conf
@@ -106,7 +106,7 @@ http {
     #    ssl_session_timeout  5m;
 
     #    ssl_protocols  SSLv2 SSLv3 TLSv1;
-    #    ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
+    #    ssl_ciphers  HIGH:!aNULL:!MD5;
     #    ssl_prefer_server_ciphers   on;
 
     #    location / {
--- nginx-1.0.0.orig/src/misc/ngx_google_perftools_module.c
+++ nginx-1.0.0/src/misc/ngx_google_perftools_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_posix_config.h
+++ nginx-1.0.0/src/os/unix/ngx_posix_config.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -96,6 +97,11 @@
 #include <ngx_auto_config.h>
 
 
+#if (NGX_HAVE_POSIX_SEM)
+#include <semaphore.h>
+#endif
+
+
 #if (NGX_HAVE_POLL)
 #include <poll.h>
 #endif
--- nginx-1.0.0.orig/src/os/unix/ngx_gcc_atomic_amd64.h
+++ nginx-1.0.0/src/os/unix/ngx_gcc_atomic_amd64.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_recv.c
+++ nginx-1.0.0/src/os/unix/ngx_recv.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_process.h
+++ nginx-1.0.0/src/os/unix/ngx_process.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_posix_init.c
+++ nginx-1.0.0/src/os/unix/ngx_posix_init.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -46,7 +47,13 @@ ngx_os_init(ngx_log_t *log)
 
     for (n = ngx_pagesize; n >>= 1; ngx_pagesize_shift++) { /* void */ }
 
+#if (NGX_HAVE_SC_NPROCESSORS_ONLN)
     if (ngx_ncpu == 0) {
+        ngx_ncpu = sysconf(_SC_NPROCESSORS_ONLN);
+    }
+#endif
+
+    if (ngx_ncpu < 1) {
         ngx_ncpu = 1;
     }
 
--- nginx-1.0.0.orig/src/os/unix/ngx_darwin_sendfile_chain.c
+++ nginx-1.0.0/src/os/unix/ngx_darwin_sendfile_chain.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -172,7 +173,7 @@ ngx_darwin_sendfile_chain(ngx_connection
 
         if (file && header.nelts == 0) {
 
-            /* create the tailer iovec and coalesce the neighbouring bufs */
+            /* create the trailer iovec and coalesce the neighbouring bufs */
 
             prev = NULL;
             iov = NULL;
--- nginx-1.0.0.orig/src/os/unix/ngx_freebsd_sendfile_chain.c
+++ nginx-1.0.0/src/os/unix/ngx_freebsd_sendfile_chain.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -11,7 +12,7 @@
 
 /*
  * Although FreeBSD sendfile() allows to pass a header and a trailer,
- * it can not send a header with a part of the file in one packet until
+ * it cannot send a header with a part of the file in one packet until
  * FreeBSD 5.3.  Besides, over the fast ethernet connection sendfile()
  * may send the partially filled packets, i.e. the 8 file pages may be sent
  * as the 11 full 1460-bytes packets, then one incomplete 324-bytes packet,
@@ -177,7 +178,7 @@ ngx_freebsd_sendfile_chain(ngx_connectio
 
         if (file) {
 
-            /* create the tailer iovec and coalesce the neighbouring bufs */
+            /* create the trailer iovec and coalesce the neighbouring bufs */
 
             prev = NULL;
             iov = NULL;
@@ -246,9 +247,14 @@ ngx_freebsd_sendfile_chain(ngx_connectio
                 }
             }
 
-            hdtr.headers = (struct iovec *) header.elts;
+            /*
+             * sendfile() does unneeded work if sf_hdtr's count is 0,
+             * but corresponding pointer is not NULL
+             */
+
+            hdtr.headers = header.nelts ? (struct iovec *) header.elts: NULL;
             hdtr.hdr_cnt = header.nelts;
-            hdtr.trailers = (struct iovec *) trailer.elts;
+            hdtr.trailers = trailer.nelts ? (struct iovec *) trailer.elts: NULL;
             hdtr.trl_cnt = trailer.nelts;
 
             /*
--- nginx-1.0.0.orig/src/os/unix/ngx_channel.h
+++ nginx-1.0.0/src/os/unix/ngx_channel.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_user.h
+++ nginx-1.0.0/src/os/unix/ngx_user.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -16,7 +17,7 @@ typedef uid_t  ngx_uid_t;
 typedef gid_t  ngx_gid_t;
 
 
-ngx_int_t ngx_crypt(ngx_pool_t *pool, u_char *key, u_char *salt,
+ngx_int_t ngx_libc_crypt(ngx_pool_t *pool, u_char *key, u_char *salt,
     u_char **encrypted);
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_file_aio_read.c
+++ nginx-1.0.0/src/os/unix/ngx_file_aio_read.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -23,7 +24,7 @@
  *    kqueue EVFILT_AIO filter is level triggered only: an event repeats
  *    until aio_return() will be called;
  *
- *    aio_cancel() can not cancel file AIO: it returns AIO_NOTCANCELED always.
+ *    aio_cancel() cannot cancel file AIO: it returns AIO_NOTCANCELED always.
  */
 
 
@@ -86,6 +87,9 @@ ngx_file_aio_read(ngx_file_t *file, u_ch
             return aio->nbytes;
         }
 
+        ngx_log_error(NGX_LOG_CRIT, file->log, ngx_errno,
+                      "aio read \"%s\" failed", file->name.data);
+
         return NGX_ERROR;
     }
 
@@ -153,24 +157,15 @@ ngx_file_aio_result(ngx_file_t *file, ng
         return NGX_ERROR;
     }
 
-    if (n != 0) {
-        if (n == NGX_EINPROGRESS) {
-            if (ev->ready) {
-                ev->ready = 0;
-                ngx_log_error(NGX_LOG_ALERT, file->log, n,
-                              "aio_read(\"%V\") still in progress",
-                              &file->name);
-            }
-
-            return NGX_AGAIN;
+    if (n == NGX_EINPROGRESS) {
+        if (ev->ready) {
+            ev->ready = 0;
+            ngx_log_error(NGX_LOG_ALERT, file->log, n,
+                          "aio_read(\"%V\") still in progress",
+                          &file->name);
         }
 
-        aio->err = n;
-        ev->ready = 0;
-
-        ngx_log_error(NGX_LOG_CRIT, file->log, n,
-                      "aio_read(\"%V\") failed", &file->name);
-        return NGX_ERROR;
+        return NGX_AGAIN;
     }
 
     n = aio_return(&aio->aiocb);
@@ -178,9 +173,9 @@ ngx_file_aio_result(ngx_file_t *file, ng
     if (n == -1) {
         err = ngx_errno;
         aio->err = err;
-        ev->ready = 0;
+        ev->ready = 1;
 
-        ngx_log_error(NGX_LOG_ALERT, file->log, err,
+        ngx_log_error(NGX_LOG_CRIT, file->log, err,
                       "aio_return(\"%V\") failed", &file->name);
         return NGX_ERROR;
     }
--- nginx-1.0.0.orig/src/os/unix/ngx_process.c
+++ nginx-1.0.0/src/os/unix/ngx_process.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -339,8 +340,10 @@ ngx_signal_handler(int signo)
             break;
 
         case ngx_signal_value(NGX_NOACCEPT_SIGNAL):
-            ngx_noaccept = 1;
-            action = ", stop accepting connections";
+            if (ngx_daemonized) {
+                ngx_noaccept = 1;
+                action = ", stop accepting connections";
+            }
             break;
 
         case ngx_signal_value(NGX_RECONFIGURE_SIGNAL):
@@ -392,6 +395,9 @@ ngx_signal_handler(int signo)
         switch (signo) {
 
         case ngx_signal_value(NGX_NOACCEPT_SIGNAL):
+            if (!ngx_daemonized) {
+                break;
+            }
             ngx_debug_quit = 1;
         case ngx_signal_value(NGX_SHUTDOWN_SIGNAL):
             ngx_quit = 1;
@@ -536,7 +542,7 @@ ngx_process_get_status(void)
         if (WEXITSTATUS(status) == 2 && ngx_processes[i].respawn) {
             ngx_log_error(NGX_LOG_ALERT, ngx_cycle->log, 0,
                           "%s %P exited with fatal code %d "
-                          "and can not be respawn",
+                          "and cannot be respawned",
                           process, pid, WEXITSTATUS(status));
             ngx_processes[i].respawn = 0;
         }
--- nginx-1.0.0.orig/src/os/unix/ngx_darwin_init.c
+++ nginx-1.0.0/src/os/unix/ngx_darwin_init.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -58,7 +59,6 @@ sysctl_t sysctls[] = {
 ngx_int_t
 ngx_os_specific_init(ngx_log_t *log)
 {
-    int         somaxconn;
     size_t      size;
     ngx_err_t   err;
     ngx_uint_t  i;
@@ -125,12 +125,9 @@ ngx_os_specific_init(ngx_log_t *log)
 
     ngx_ncpu = ngx_darwin_hw_ncpu;
 
-    somaxconn = 32676;
-
-    if (ngx_darwin_kern_ipc_somaxconn > somaxconn) {
+    if (ngx_darwin_kern_ipc_somaxconn > 32767) {
         ngx_log_error(NGX_LOG_ALERT, log, 0,
-                      "sysctl kern.ipc.somaxconn must be no more than %d",
-                      somaxconn);
+                      "sysctl kern.ipc.somaxconn must be less than 32768");
         return NGX_ERROR;
     }
 
--- nginx-1.0.0.orig/src/os/unix/ngx_linux.h
+++ nginx-1.0.0/src/os/unix/ngx_linux.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_solaris.h
+++ nginx-1.0.0/src/os/unix/ngx_solaris.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_setproctitle.c
+++ nginx-1.0.0/src/os/unix/ngx_setproctitle.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_files.c
+++ nginx-1.0.0/src/os/unix/ngx_files.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -153,7 +154,7 @@ ngx_write_chain_to_file(ngx_file_t *file
 {
     u_char        *prev;
     size_t         size;
-    ssize_t        n;
+    ssize_t        total, n;
     ngx_array_t    vec;
     struct iovec  *iov, iovs[NGX_IOVS];
 
@@ -165,6 +166,8 @@ ngx_write_chain_to_file(ngx_file_t *file
                               offset);
     }
 
+    total = 0;
+
     vec.elts = iovs;
     vec.size = sizeof(struct iovec);
     vec.nalloc = NGX_IOVS;
@@ -202,8 +205,15 @@ ngx_write_chain_to_file(ngx_file_t *file
 
         if (vec.nelts == 1) {
             iov = vec.elts;
-            return ngx_write_file(file, (u_char *) iov[0].iov_base,
-                                  iov[0].iov_len, offset);
+
+            n = ngx_write_file(file, (u_char *) iov[0].iov_base,
+                               iov[0].iov_len, offset);
+
+            if (n == NGX_ERROR) {
+                return n;
+            }
+
+            return total + n;
         }
 
         if (file->sys_offset != offset) {
@@ -233,10 +243,11 @@ ngx_write_chain_to_file(ngx_file_t *file
 
         file->sys_offset += n;
         file->offset += n;
+        total += n;
 
     } while (cl);
 
-    return n;
+    return total;
 }
 
 
@@ -454,7 +465,7 @@ ngx_unlock_fd(ngx_fd_t fd)
 }
 
 
-#if (NGX_HAVE_POSIX_FADVISE)
+#if (NGX_HAVE_POSIX_FADVISE) && !(NGX_HAVE_F_READAHEAD)
 
 ngx_int_t
 ngx_read_ahead(ngx_fd_t fd, size_t n)
--- nginx-1.0.0.orig/src/os/unix/ngx_user.c
+++ nginx-1.0.0/src/os/unix/ngx_user.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -23,7 +24,7 @@
 #if (NGX_HAVE_GNU_CRYPT_R)
 
 ngx_int_t
-ngx_crypt(ngx_pool_t *pool, u_char *key, u_char *salt, u_char **encrypted)
+ngx_libc_crypt(ngx_pool_t *pool, u_char *key, u_char *salt, u_char **encrypted)
 {
     char               *value;
     size_t              len;
@@ -58,7 +59,7 @@ ngx_crypt(ngx_pool_t *pool, u_char *key,
 #else
 
 ngx_int_t
-ngx_crypt(ngx_pool_t *pool, u_char *key, u_char *salt, u_char **encrypted)
+ngx_libc_crypt(ngx_pool_t *pool, u_char *key, u_char *salt, u_char **encrypted)
 {
     char       *value;
     size_t      len;
@@ -66,7 +67,7 @@ ngx_crypt(ngx_pool_t *pool, u_char *key,
 
 #if (NGX_THREADS && NGX_NONREENTRANT_CRYPT)
 
-    /* crypt() is a time consuming funtion, so we only try to lock */
+    /* crypt() is a time consuming function, so we only try to lock */
 
     if (ngx_mutex_trylock(ngx_crypt_mutex) != NGX_OK) {
         return NGX_AGAIN;
--- nginx-1.0.0.orig/src/os/unix/ngx_gcc_atomic_ppc.h
+++ nginx-1.0.0/src/os/unix/ngx_gcc_atomic_ppc.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_freebsd_rfork_thread.c
+++ nginx-1.0.0/src/os/unix/ngx_freebsd_rfork_thread.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_time.c
+++ nginx-1.0.0/src/os/unix/ngx_time.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_freebsd_init.c
+++ nginx-1.0.0/src/os/unix/ngx_freebsd_init.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -97,7 +98,7 @@ ngx_debug_init()
 ngx_int_t
 ngx_os_specific_init(ngx_log_t *log)
 {
-    int         version, somaxconn;
+    int         version;
     size_t      size;
     ngx_err_t   err;
     ngx_uint_t  i;
@@ -209,12 +210,9 @@ ngx_os_specific_init(ngx_log_t *log)
         ngx_ncpu = ngx_freebsd_hw_ncpu;
     }
 
-    somaxconn = version < 600008 ? 32676 : 65535;
-
-    if (ngx_freebsd_kern_ipc_somaxconn > somaxconn) {
+    if (version < 600008 && ngx_freebsd_kern_ipc_somaxconn > 32767) {
         ngx_log_error(NGX_LOG_ALERT, log, 0,
-                      "sysctl kern.ipc.somaxconn must be no more than %d",
-                      somaxconn);
+                      "sysctl kern.ipc.somaxconn must be less than 32768");
         return NGX_ERROR;
     }
 
--- nginx-1.0.0.orig/src/os/unix/ngx_process_cycle.h
+++ nginx-1.0.0/src/os/unix/ngx_process_cycle.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_aio_write_chain.c
+++ nginx-1.0.0/src/os/unix/ngx_aio_write_chain.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_aio_write.c
+++ nginx-1.0.0/src/os/unix/ngx_aio_write.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_os.h
+++ nginx-1.0.0/src/os/unix/ngx_os.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_gcc_atomic_sparc64.h
+++ nginx-1.0.0/src/os/unix/ngx_gcc_atomic_sparc64.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_linux_init.c
+++ nginx-1.0.0/src/os/unix/ngx_linux_init.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_freebsd_config.h
+++ nginx-1.0.0/src/os/unix/ngx_freebsd_config.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -68,6 +69,11 @@
 #include <ngx_auto_config.h>
 
 
+#if (NGX_HAVE_POSIX_SEM)
+#include <semaphore.h>
+#endif
+
+
 #if (NGX_HAVE_POLL)
 #include <poll.h>
 #endif
@@ -87,11 +93,6 @@ typedef struct aiocb  ngx_aiocb_t;
 #define NGX_LISTEN_BACKLOG        -1
 
 
-#if (defined SO_ACCEPTFILTER && !defined NGX_HAVE_DEFERRED_ACCEPT)
-#define NGX_HAVE_DEFERRED_ACCEPT  1
-#endif
-
-
 #if (__FreeBSD_version < 430000 || __FreeBSD_version < 500012)
 
 pid_t rfork_thread(int flags, void *stack, int (*func)(void *arg), void *arg);
--- nginx-1.0.0.orig/src/os/unix/ngx_alloc.c
+++ nginx-1.0.0/src/os/unix/ngx_alloc.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_aio_read.c
+++ nginx-1.0.0/src/os/unix/ngx_aio_read.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_solaris_init.c
+++ nginx-1.0.0/src/os/unix/ngx_solaris_init.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_socket.h
+++ nginx-1.0.0/src/os/unix/ngx_socket.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_send.c
+++ nginx-1.0.0/src/os/unix/ngx_send.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_alloc.h
+++ nginx-1.0.0/src/os/unix/ngx_alloc.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_freebsd_rfork_thread.h
+++ nginx-1.0.0/src/os/unix/ngx_freebsd_rfork_thread.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_sunpro_sparc64.il
+++ nginx-1.0.0/src/os/unix/ngx_sunpro_sparc64.il
@@ -1,5 +1,6 @@
 /
 / Copyright (C) Igor Sysoev
+/ Copyright (C) Nginx, Inc.
 /
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_pthread_thread.c
+++ nginx-1.0.0/src/os/unix/ngx_pthread_thread.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_setproctitle.h
+++ nginx-1.0.0/src/os/unix/ngx_setproctitle.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_channel.c
+++ nginx-1.0.0/src/os/unix/ngx_channel.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_sunpro_amd64.il
+++ nginx-1.0.0/src/os/unix/ngx_sunpro_amd64.il
@@ -1,5 +1,6 @@
 /
 / Copyright (C) Igor Sysoev
+/ Copyright (C) Nginx, Inc.
 /
 
 / ngx_atomic_uint_t ngx_atomic_cmp_set(ngx_atomic_t *lock,
--- nginx-1.0.0.orig/src/os/unix/ngx_solaris_sendfilev_chain.c
+++ nginx-1.0.0/src/os/unix/ngx_solaris_sendfilev_chain.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_sunpro_atomic_sparc64.h
+++ nginx-1.0.0/src/os/unix/ngx_sunpro_atomic_sparc64.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_errno.c
+++ nginx-1.0.0/src/os/unix/ngx_errno.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -12,7 +13,7 @@
  * The strerror() messages are copied because:
  *
  * 1) strerror() and strerror_r() functions are not Async-Signal-Safe,
- *    therefore, they can not be used in signal handlers;
+ *    therefore, they cannot be used in signal handlers;
  *
  * 2) a direct sys_errlist[] array may be used instead of these functions,
  *    but Linux linker warns about its usage:
--- nginx-1.0.0.orig/src/os/unix/ngx_process_cycle.c
+++ nginx-1.0.0/src/os/unix/ngx_process_cycle.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -620,7 +621,8 @@ ngx_reap_children(ngx_cycle_t *cycle)
                     == NGX_INVALID_PID)
                 {
                     ngx_log_error(NGX_LOG_ALERT, cycle->log, 0,
-                                  "can not respawn %s", ngx_processes[i].name);
+                                  "could not respawn %s",
+                                  ngx_processes[i].name);
                     continue;
                 }
 
@@ -913,7 +915,10 @@ ngx_worker_process_init(ngx_cycle_t *cyc
         ngx_log_error(NGX_LOG_NOTICE, cycle->log, 0,
                       "sched_setaffinity(0x%08Xl)", cpu_affinity);
 
-        if (sched_setaffinity(0, 32, (cpu_set_t *) &cpu_affinity) == -1) {
+        if (sched_setaffinity(0, sizeof(cpu_affinity),
+                              (cpu_set_t *) &cpu_affinity)
+            == -1)
+        {
             ngx_log_error(NGX_LOG_ALERT, cycle->log, ngx_errno,
                           "sched_setaffinity(0x%08Xl) failed", cpu_affinity);
         }
--- nginx-1.0.0.orig/src/os/unix/ngx_sunpro_x86.il
+++ nginx-1.0.0/src/os/unix/ngx_sunpro_x86.il
@@ -1,5 +1,6 @@
 /
 / Copyright (C) Igor Sysoev
+/ Copyright (C) Nginx, Inc.
 /
 
 / ngx_atomic_uint_t ngx_atomic_cmp_set(ngx_atomic_t *lock,
--- nginx-1.0.0.orig/src/os/unix/ngx_udp_recv.c
+++ nginx-1.0.0/src/os/unix/ngx_udp_recv.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_writev_chain.c
+++ nginx-1.0.0/src/os/unix/ngx_writev_chain.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_errno.h
+++ nginx-1.0.0/src/os/unix/ngx_errno.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_shmem.c
+++ nginx-1.0.0/src/os/unix/ngx_shmem.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_shmem.h
+++ nginx-1.0.0/src/os/unix/ngx_shmem.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_gcc_atomic_x86.h
+++ nginx-1.0.0/src/os/unix/ngx_gcc_atomic_x86.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_darwin.h
+++ nginx-1.0.0/src/os/unix/ngx_darwin.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_linux_aio_read.c
+++ nginx-1.0.0/src/os/unix/ngx_linux_aio_read.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -16,7 +17,7 @@ extern aio_context_t  ngx_aio_ctx;
 static void ngx_file_aio_event_handler(ngx_event_t *ev);
 
 
-static long
+static int
 io_submit(aio_context_t ctx, long n, struct iocb **paiocb)
 {
     return syscall(SYS_io_submit, ctx, n, paiocb);
@@ -27,7 +28,7 @@ ssize_t
 ngx_file_aio_read(ngx_file_t *file, u_char *buf, size_t size, off_t offset,
     ngx_pool_t *pool)
 {
-    long              n;
+    ngx_err_t         err;
     struct iocb      *piocb[1];
     ngx_event_t      *ev;
     ngx_event_aio_t  *aio;
@@ -74,6 +75,10 @@ ngx_file_aio_read(ngx_file_t *file, u_ch
         }
 
         ngx_set_errno(-aio->res);
+
+        ngx_log_error(NGX_LOG_CRIT, file->log, ngx_errno,
+                      "aio read \"%s\" failed", file->name.data);
+
         return NGX_ERROR;
     }
 
@@ -92,9 +97,7 @@ ngx_file_aio_read(ngx_file_t *file, u_ch
 
     piocb[0] = &aio->aiocb;
 
-    n = io_submit(ngx_aio_ctx, 1, piocb);
-
-    if (n == 1) {
+    if (io_submit(ngx_aio_ctx, 1, piocb) == 1) {
         ev->active = 1;
         ev->ready = 0;
         ev->complete = 0;
@@ -102,16 +105,16 @@ ngx_file_aio_read(ngx_file_t *file, u_ch
         return NGX_AGAIN;
     }
 
-    n = -n;
+    err = ngx_errno;
 
-    if (n == NGX_EAGAIN) {
+    if (err == NGX_EAGAIN) {
         return ngx_read_file(file, buf, size, offset);
     }
 
-    ngx_log_error(NGX_LOG_CRIT, file->log, n,
+    ngx_log_error(NGX_LOG_CRIT, file->log, err,
                   "io_submit(\"%V\") failed", &file->name);
 
-    if (n == NGX_ENOSYS) {
+    if (err == NGX_ENOSYS) {
         ngx_file_aio = 0;
         return ngx_read_file(file, buf, size, offset);
     }
--- nginx-1.0.0.orig/src/os/unix/ngx_atomic.h
+++ nginx-1.0.0/src/os/unix/ngx_atomic.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_time.h
+++ nginx-1.0.0/src/os/unix/ngx_time.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_daemon.c
+++ nginx-1.0.0/src/os/unix/ngx_daemon.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/rfork_thread.S
+++ nginx-1.0.0/src/os/unix/rfork_thread.S
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_darwin_config.h
+++ nginx-1.0.0/src/os/unix/ngx_darwin_config.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -8,6 +9,8 @@
 #define _NGX_DARWIN_CONFIG_H_INCLUDED_
 
 
+#define MAC_OS_X_VERSION_MIN_REQUIRED MAC_OS_X_VERSION_10_0
+
 
 #include <sys/types.h>
 #include <sys/time.h>
@@ -56,6 +59,11 @@
 #include <ngx_auto_config.h>
 
 
+#if (NGX_HAVE_POSIX_SEM)
+#include <semaphore.h>
+#endif
+
+
 #if (NGX_HAVE_POLL)
 #include <poll.h>
 #endif
--- nginx-1.0.0.orig/src/os/unix/ngx_linux_config.h
+++ nginx-1.0.0/src/os/unix/ngx_linux_config.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -58,6 +59,11 @@
 #include <ngx_auto_config.h>
 
 
+#if (NGX_HAVE_POSIX_SEM)
+#include <semaphore.h>
+#endif
+
+
 #if (NGX_HAVE_SYS_PRCTL_H)
 #include <sys/prctl.h>
 #endif
@@ -88,12 +94,7 @@ typedef struct iocb  ngx_aiocb_t;
 #endif
 
 
-#define NGX_LISTEN_BACKLOG        -1
-
-
-#if defined TCP_DEFER_ACCEPT && !defined NGX_HAVE_DEFERRED_ACCEPT
-#define NGX_HAVE_DEFERRED_ACCEPT  1
-#endif
+#define NGX_LISTEN_BACKLOG        511
 
 
 #ifndef NGX_HAVE_SO_SNDLOWAT
--- nginx-1.0.0.orig/src/os/unix/ngx_solaris_config.h
+++ nginx-1.0.0/src/os/unix/ngx_solaris_config.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -57,6 +58,11 @@
 #include <ngx_auto_config.h>
 
 
+#if (NGX_HAVE_POSIX_SEM)
+#include <semaphore.h>
+#endif
+
+
 #if (NGX_HAVE_POLL)
 #include <poll.h>
 #endif
--- nginx-1.0.0.orig/src/os/unix/ngx_linux_sendfile_chain.c
+++ nginx-1.0.0/src/os/unix/ngx_linux_sendfile_chain.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_readv_chain.c
+++ nginx-1.0.0/src/os/unix/ngx_readv_chain.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_freebsd.h
+++ nginx-1.0.0/src/os/unix/ngx_freebsd.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_socket.c
+++ nginx-1.0.0/src/os/unix/ngx_socket.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_thread.h
+++ nginx-1.0.0/src/os/unix/ngx_thread.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_aio_read_chain.c
+++ nginx-1.0.0/src/os/unix/ngx_aio_read_chain.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/os/unix/ngx_files.h
+++ nginx-1.0.0/src/os/unix/ngx_files.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -128,6 +129,7 @@ ngx_write_fd(ngx_fd_t fd, void *buf, siz
 
 #define ngx_linefeed(p)          *p++ = LF;
 #define NGX_LINEFEED_SIZE        1
+#define NGX_LINEFEED             "\x0a"
 
 
 #define ngx_rename_file(o, n)    rename((const char *) o, (const char *) n)
@@ -157,6 +159,7 @@ ngx_int_t ngx_set_file_time(u_char *name
 #define ngx_is_exec(sb)          (((sb)->st_mode & S_IXUSR) == S_IXUSR)
 #define ngx_file_access(sb)      ((sb)->st_mode & 0777)
 #define ngx_file_size(sb)        (sb)->st_size
+#define ngx_file_fs_size(sb)     ngx_max((sb)->st_size, (sb)->st_blocks * 512)
 #define ngx_file_mtime(sb)       (sb)->st_mtime
 #define ngx_file_uniq(sb)        (sb)->st_ino
 
@@ -252,6 +255,8 @@ ngx_de_info(u_char *name, ngx_dir_t *dir
 
 #define ngx_de_access(dir)       (((dir)->info.st_mode) & 0777)
 #define ngx_de_size(dir)         (dir)->info.st_size
+#define ngx_de_fs_size(dir)                                                  \
+    ngx_max((dir)->info.st_size, (dir)->info.st_blocks * 512)
 #define ngx_de_mtime(dir)        (dir)->info.st_mtime
 
 
--- nginx-1.0.0.orig/src/event/ngx_event_busy_lock.h
+++ nginx-1.0.0/src/event/ngx_event_busy_lock.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/event/ngx_event_posted.c
+++ nginx-1.0.0/src/event/ngx_event_posted.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/event/ngx_event_pipe.h
+++ nginx-1.0.0/src/event/ngx_event_pipe.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/event/ngx_event.c
+++ nginx-1.0.0/src/event/ngx_event.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -519,6 +520,7 @@ ngx_event_module_init(ngx_cycle_t *cycle
     shared = shm.addr;
 
     ngx_accept_mutex_ptr = (ngx_atomic_t *) shared;
+    ngx_accept_mutex.spin = (ngx_uint_t) -1;
 
     if (ngx_shmtx_create(&ngx_accept_mutex, shared, cycle->lock_file.data)
         != NGX_OK)
@@ -1026,7 +1028,7 @@ ngx_event_use(ngx_conf_t *cf, ngx_comman
                                "when the server runs without a master process "
                                "the \"%V\" event type must be the same as "
                                "in previous configuration - \"%s\" "
-                               "and it can not be changed on the fly, "
+                               "and it cannot be changed on the fly, "
                                "to change it you need to stop server "
                                "and start it again",
                                &value[1], old_ecf->name);
--- nginx-1.0.0.orig/src/event/ngx_event.h
+++ nginx-1.0.0/src/event/ngx_event.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -82,7 +83,7 @@ struct ngx_event_s {
 #endif
 
 #if (NGX_WIN32)
-    /* setsockopt(SO_UPDATE_ACCEPT_CONTEXT) was succesfull */
+    /* setsockopt(SO_UPDATE_ACCEPT_CONTEXT) was successful */
     unsigned         accept_context_updated:1;
 #endif
 
--- nginx-1.0.0.orig/src/event/ngx_event_posted.h
+++ nginx-1.0.0/src/event/ngx_event_posted.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/event/ngx_event_openssl.h
+++ nginx-1.0.0/src/event/ngx_event_openssl.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -81,9 +82,11 @@ typedef struct {
 
 
 
-#define NGX_SSL_SSLv2    2
-#define NGX_SSL_SSLv3    4
-#define NGX_SSL_TLSv1    8
+#define NGX_SSL_SSLv2    0x0002
+#define NGX_SSL_SSLv3    0x0004
+#define NGX_SSL_TLSv1    0x0008
+#define NGX_SSL_TLSv1_1  0x0010
+#define NGX_SSL_TLSv1_2  0x0020
 
 
 #define NGX_SSL_BUFFER   1
@@ -99,10 +102,12 @@ ngx_int_t ngx_ssl_certificate(ngx_conf_t
 ngx_int_t ngx_ssl_client_certificate(ngx_conf_t *cf, ngx_ssl_t *ssl,
     ngx_str_t *cert, ngx_int_t depth);
 ngx_int_t ngx_ssl_crl(ngx_conf_t *cf, ngx_ssl_t *ssl, ngx_str_t *crl);
-ngx_int_t ngx_ssl_generate_rsa512_key(ngx_ssl_t *ssl);
+RSA *ngx_ssl_rsa512_key_callback(SSL *ssl, int is_export, int key_length);
 ngx_int_t ngx_ssl_dhparam(ngx_conf_t *cf, ngx_ssl_t *ssl, ngx_str_t *file);
+ngx_int_t ngx_ssl_ecdh_curve(ngx_conf_t *cf, ngx_ssl_t *ssl, ngx_str_t *name);
 ngx_int_t ngx_ssl_session_cache(ngx_ssl_t *ssl, ngx_str_t *sess_ctx,
     ssize_t builtin_session_cache, ngx_shm_zone_t *shm_zone, time_t timeout);
+ngx_int_t ngx_ssl_session_cache_init(ngx_shm_zone_t *shm_zone, void *data);
 ngx_int_t ngx_ssl_create_connection(ngx_ssl_t *ssl, ngx_connection_t *c,
     ngx_uint_t flags);
 
--- nginx-1.0.0.orig/src/event/ngx_event_timer.c
+++ nginx-1.0.0/src/event/ngx_event_timer.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -103,11 +104,11 @@ ngx_event_expire_timers(void)
             if (ngx_threaded && ngx_trylock(ev->lock) == 0) {
 
                 /*
-                 * We can not change the timer of the event that is been
-                 * handling by another thread.  And we can not easy walk
-                 * the rbtree to find a next expired timer so we exit the loop.
-                 * However it should be rare case when the event that is
-                 * been handling has expired timer.
+                 * We cannot change the timer of the event that is being
+                 * handled by another thread.  And we cannot easy walk
+                 * the rbtree to find next expired timer so we exit the loop.
+                 * However, it should be a rare case when the event that is
+                 * being handled has an expired timer.
                  */
 
                 ngx_log_debug1(NGX_LOG_DEBUG_EVENT, ev->log, 0,
--- nginx-1.0.0.orig/src/event/ngx_event_connect.h
+++ nginx-1.0.0/src/event/ngx_event_connect.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/event/ngx_event_mutex.c
+++ nginx-1.0.0/src/event/ngx_event_mutex.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/event/ngx_event_openssl.c
+++ nginx-1.0.0/src/event/ngx_event_openssl.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -26,8 +27,7 @@ static void ngx_ssl_connection_error(ngx
     ngx_err_t err, char *text);
 static void ngx_ssl_clear_error(ngx_log_t *log);
 
-static ngx_int_t ngx_ssl_session_cache_init(ngx_shm_zone_t *shm_zone,
-    void *data);
+ngx_int_t ngx_ssl_session_cache_init(ngx_shm_zone_t *shm_zone, void *data);
 static int ngx_ssl_new_session(ngx_ssl_conn_t *ssl_conn,
     ngx_ssl_session_t *sess);
 static ngx_ssl_session_t *ngx_ssl_get_cached_session(ngx_ssl_conn_t *ssl_conn,
@@ -79,18 +79,6 @@ ngx_module_t  ngx_openssl_module = {
 };
 
 
-static long  ngx_ssl_protocols[] = {
-    SSL_OP_NO_SSLv2|SSL_OP_NO_SSLv3|SSL_OP_NO_TLSv1,
-    SSL_OP_NO_SSLv3|SSL_OP_NO_TLSv1,
-    SSL_OP_NO_SSLv2|SSL_OP_NO_TLSv1,
-    SSL_OP_NO_TLSv1,
-    SSL_OP_NO_SSLv2|SSL_OP_NO_SSLv3,
-    SSL_OP_NO_SSLv3,
-    SSL_OP_NO_SSLv2,
-    0,
-};
-
-
 int  ngx_ssl_connection_index;
 int  ngx_ssl_server_conf_index;
 int  ngx_ssl_session_cache_index;
@@ -104,8 +92,6 @@ ngx_ssl_init(ngx_log_t *log)
     SSL_library_init();
     SSL_load_error_strings();
 
-    ENGINE_load_builtin_engines();
-
     OpenSSL_add_all_algorithms();
 
     ngx_ssl_connection_index = SSL_get_ex_new_index(0, NULL, NULL, NULL, NULL);
@@ -172,9 +158,33 @@ ngx_ssl_create(ngx_ssl_t *ssl, ngx_uint_
 
     SSL_CTX_set_options(ssl->ctx, SSL_OP_SINGLE_DH_USE);
 
-    if (ngx_ssl_protocols[protocols >> 1] != 0) {
-        SSL_CTX_set_options(ssl->ctx, ngx_ssl_protocols[protocols >> 1]);
+    if (!(protocols & NGX_SSL_SSLv2)) {
+        SSL_CTX_set_options(ssl->ctx, SSL_OP_NO_SSLv2);
+    }
+    if (!(protocols & NGX_SSL_SSLv3)) {
+        SSL_CTX_set_options(ssl->ctx, SSL_OP_NO_SSLv3);
+    }
+    if (!(protocols & NGX_SSL_TLSv1)) {
+        SSL_CTX_set_options(ssl->ctx, SSL_OP_NO_TLSv1);
     }
+#ifdef SSL_OP_NO_TLSv1_1
+    if (!(protocols & NGX_SSL_TLSv1_1)) {
+        SSL_CTX_set_options(ssl->ctx, SSL_OP_NO_TLSv1_1);
+    }
+#endif
+#ifdef SSL_OP_NO_TLSv1_2
+    if (!(protocols & NGX_SSL_TLSv1_2)) {
+        SSL_CTX_set_options(ssl->ctx, SSL_OP_NO_TLSv1_2);
+    }
+#endif
+
+#ifdef SSL_OP_NO_COMPRESSION
+    SSL_CTX_set_options(ssl->ctx, SSL_OP_NO_COMPRESSION);
+#endif
+
+#ifdef SSL_MODE_RELEASE_BUFFERS
+    SSL_CTX_set_mode(ssl->ctx, SSL_MODE_RELEASE_BUFFERS);
+#endif
 
     SSL_CTX_set_read_ahead(ssl->ctx, 1);
 
@@ -371,28 +381,18 @@ ngx_ssl_info_callback(const ngx_ssl_conn
 }
 
 
-ngx_int_t
-ngx_ssl_generate_rsa512_key(ngx_ssl_t *ssl)
+RSA *
+ngx_ssl_rsa512_key_callback(SSL *ssl, int is_export, int key_length)
 {
-    RSA  *key;
-
-    if (SSL_CTX_need_tmp_RSA(ssl->ctx) == 0) {
-        return NGX_OK;
-    }
-
-    key = RSA_generate_key(512, RSA_F4, NULL, NULL);
-
-    if (key) {
-        SSL_CTX_set_tmp_rsa(ssl->ctx, key);
-
-        RSA_free(key);
+    static RSA  *key;
 
-        return NGX_OK;
+    if (key_length == 512) {
+        if (key == NULL) {
+            key = RSA_generate_key(512, RSA_F4, NULL, NULL);
+        }
     }
 
-    ngx_ssl_error(NGX_LOG_EMERG, ssl->log, 0, "RSA_generate_key(512) failed");
-
-    return NGX_ERROR;
+    return key;
 }
 
 
@@ -478,6 +478,45 @@ ngx_ssl_dhparam(ngx_conf_t *cf, ngx_ssl_
     return NGX_OK;
 }
 
+ngx_int_t
+ngx_ssl_ecdh_curve(ngx_conf_t *cf, ngx_ssl_t *ssl, ngx_str_t *name)
+{
+#if OPENSSL_VERSION_NUMBER >= 0x0090800fL
+#ifndef OPENSSL_NO_ECDH
+    int      nid;
+    EC_KEY  *ecdh;
+
+    /*
+     * Elliptic-Curve Diffie-Hellman parameters are either "named curves"
+     * from RFC 4492 section 5.1.1, or explicitely described curves over
+     * binary fields. OpenSSL only supports the "named curves", which provide
+     * maximum interoperability.
+     */
+
+    nid = OBJ_sn2nid((const char *) name->data);
+    if (nid == 0) {
+        ngx_ssl_error(NGX_LOG_EMERG, ssl->log, 0,
+                      "Unknown curve name \"%s\"", name->data);
+        return NGX_ERROR;
+    }
+
+    ecdh = EC_KEY_new_by_curve_name(nid);
+    if (ecdh == NULL) {
+        ngx_ssl_error(NGX_LOG_EMERG, ssl->log, 0,
+                      "Unable to create curve \"%s\"", name->data);
+        return NGX_ERROR;
+    }
+
+    SSL_CTX_set_tmp_ecdh(ssl->ctx, ecdh);
+
+    SSL_CTX_set_options(ssl->ctx, SSL_OP_SINGLE_ECDH_USE);
+
+    EC_KEY_free(ecdh);
+#endif
+#endif
+
+    return NGX_OK;
+}
 
 ngx_int_t
 ngx_ssl_create_connection(ngx_ssl_t *ssl, ngx_connection_t *c, ngx_uint_t flags)
@@ -803,7 +842,7 @@ ngx_ssl_recv(ngx_connection_t *c, u_char
         case NGX_ERROR:
             c->read->error = 1;
 
-            /* fall thruogh */
+            /* fall through */
 
         case NGX_AGAIN:
             return c->ssl->last;
@@ -827,6 +866,13 @@ ngx_ssl_handle_recv(ngx_connection_t *c,
 
         ngx_log_error(NGX_LOG_NOTICE, c->log, 0, "SSL renegotiation disabled");
 
+        while (ERR_peek_error()) {
+            ngx_ssl_error(NGX_LOG_DEBUG, c->log, 0,
+                          "ignoring stale global SSL error");
+        }
+
+        ERR_clear_error();
+
         c->ssl->no_wait_shutdown = 1;
         c->ssl->no_send_shutdown = 1;
 
@@ -957,10 +1003,10 @@ ngx_ssl_send_chain(ngx_connection_t *c, 
     }
 
 
-    /* the maximum limit size is the maximum uint32_t value - the page size */
+    /* the maximum limit size is the maximum int32_t value - the page size */
 
-    if (limit == 0 || limit > (off_t) (NGX_MAX_UINT32_VALUE - ngx_pagesize)) {
-        limit = NGX_MAX_UINT32_VALUE - ngx_pagesize;
+    if (limit == 0 || limit > (off_t) (NGX_MAX_INT32_VALUE - ngx_pagesize)) {
+        limit = NGX_MAX_INT32_VALUE - ngx_pagesize;
     }
 
     buf = c->ssl->buf;
@@ -1177,6 +1223,7 @@ ngx_ssl_shutdown(ngx_connection_t *c)
 
     if (c->timedout) {
         mode = SSL_RECEIVED_SHUTDOWN|SSL_SENT_SHUTDOWN;
+        SSL_set_quiet_shutdown(c->ssl->connection, 1);
 
     } else {
         mode = SSL_get_shutdown(c->ssl->connection);
@@ -1188,6 +1235,10 @@ ngx_ssl_shutdown(ngx_connection_t *c)
         if (c->ssl->no_send_shutdown) {
             mode |= SSL_SENT_SHUTDOWN;
         }
+
+        if (c->ssl->no_wait_shutdown && c->ssl->no_send_shutdown) {
+            SSL_set_quiet_shutdown(c->ssl->connection, 1);
+        }
     }
 
     SSL_set_shutdown(c->ssl->connection, mode);
@@ -1311,19 +1362,37 @@ ngx_ssl_connection_error(ngx_connection_
         n = ERR_GET_REASON(ERR_peek_error());
 
             /* handshake failures */
-        if (n == SSL_R_BLOCK_CIPHER_PAD_IS_WRONG                     /*  129 */
+        if (n == SSL_R_BAD_CHANGE_CIPHER_SPEC                        /*  103 */
+            || n == SSL_R_BLOCK_CIPHER_PAD_IS_WRONG                  /*  129 */
             || n == SSL_R_DIGEST_CHECK_FAILED                        /*  149 */
+            || n == SSL_R_ERROR_IN_RECEIVED_CIPHER_LIST              /*  151 */
+            || n == SSL_R_EXCESSIVE_MESSAGE_SIZE                     /*  152 */
             || n == SSL_R_LENGTH_MISMATCH                            /*  159 */
             || n == SSL_R_NO_CIPHERS_PASSED                          /*  182 */
             || n == SSL_R_NO_CIPHERS_SPECIFIED                       /*  183 */
+            || n == SSL_R_NO_COMPRESSION_SPECIFIED                   /*  187 */
             || n == SSL_R_NO_SHARED_CIPHER                           /*  193 */
             || n == SSL_R_RECORD_LENGTH_MISMATCH                     /*  213 */
+#ifdef SSL_R_PARSE_TLSEXT
+            || n == SSL_R_PARSE_TLSEXT                               /*  227 */
+#endif
             || n == SSL_R_UNEXPECTED_MESSAGE                         /*  244 */
             || n == SSL_R_UNEXPECTED_RECORD                          /*  245 */
             || n == SSL_R_UNKNOWN_ALERT_TYPE                         /*  246 */
             || n == SSL_R_UNKNOWN_PROTOCOL                           /*  252 */
             || n == SSL_R_WRONG_VERSION_NUMBER                       /*  267 */
             || n == SSL_R_DECRYPTION_FAILED_OR_BAD_RECORD_MAC        /*  281 */
+#ifdef SSL_R_RENEGOTIATE_EXT_TOO_LONG
+            || n == SSL_R_RENEGOTIATE_EXT_TOO_LONG                   /*  335 */
+            || n == SSL_R_RENEGOTIATION_ENCODING_ERR                 /*  336 */
+            || n == SSL_R_RENEGOTIATION_MISMATCH                     /*  337 */
+#endif
+#ifdef SSL_R_UNSAFE_LEGACY_RENEGOTIATION_DISABLED
+            || n == SSL_R_UNSAFE_LEGACY_RENEGOTIATION_DISABLED       /*  338 */
+#endif
+#ifdef SSL_R_SCSV_RECEIVED_WHEN_RENEGOTIATING
+            || n == SSL_R_SCSV_RECEIVED_WHEN_RENEGOTIATING           /*  345 */
+#endif
             || n == 1000 /* SSL_R_SSLV3_ALERT_CLOSE_NOTIFY */
             || n == SSL_R_SSLV3_ALERT_UNEXPECTED_MESSAGE             /* 1010 */
             || n == SSL_R_SSLV3_ALERT_BAD_RECORD_MAC                 /* 1020 */
@@ -1476,8 +1545,6 @@ ngx_ssl_session_cache(ngx_ssl_t *ssl, ng
     SSL_CTX_set_timeout(ssl->ctx, (long) timeout);
 
     if (shm_zone) {
-        shm_zone->init = ngx_ssl_session_cache_init;
-
         SSL_CTX_sess_set_new_cb(ssl->ctx, ngx_ssl_new_session);
         SSL_CTX_sess_set_get_cb(ssl->ctx, ngx_ssl_get_cached_session);
         SSL_CTX_sess_set_remove_cb(ssl->ctx, ngx_ssl_remove_session);
@@ -1495,7 +1562,7 @@ ngx_ssl_session_cache(ngx_ssl_t *ssl, ng
 }
 
 
-static ngx_int_t
+ngx_int_t
 ngx_ssl_session_cache_init(ngx_shm_zone_t *shm_zone, void *data)
 {
     size_t                    len;
@@ -1687,20 +1754,24 @@ ngx_ssl_get_cached_session(ngx_ssl_conn_
     ngx_int_t                 rc;
     ngx_shm_zone_t           *shm_zone;
     ngx_slab_pool_t          *shpool;
-    ngx_connection_t         *c;
     ngx_rbtree_node_t        *node, *sentinel;
     ngx_ssl_session_t        *sess;
     ngx_ssl_sess_id_t        *sess_id;
     ngx_ssl_session_cache_t  *cache;
     u_char                    buf[NGX_SSL_MAX_SESSION_SIZE];
-
-    c = ngx_ssl_get_connection(ssl_conn);
+#if (NGX_DEBUG)
+    ngx_connection_t         *c;
+#endif
 
     hash = ngx_crc32_short(id, (size_t) len);
     *copy = 0;
 
+#if (NGX_DEBUG)
+    c = ngx_ssl_get_connection(ssl_conn);
+
     ngx_log_debug2(NGX_LOG_DEBUG_EVENT, c->log, 0,
                    "ssl get session: %08XD:%d", hash, len);
+#endif
 
     shm_zone = SSL_CTX_get_ex_data(SSL_get_SSL_CTX(ssl_conn),
                                    ngx_ssl_session_cache_index);
@@ -1730,44 +1801,39 @@ ngx_ssl_get_cached_session(ngx_ssl_conn_
 
         /* hash == node->key */
 
-        do {
-            sess_id = (ngx_ssl_sess_id_t *) node;
+        sess_id = (ngx_ssl_sess_id_t *) node;
 
-            rc = ngx_memn2cmp(id, sess_id->id,
-                              (size_t) len, (size_t) node->data);
-            if (rc == 0) {
+        rc = ngx_memn2cmp(id, sess_id->id, (size_t) len, (size_t) node->data);
 
-                if (sess_id->expire > ngx_time()) {
-                    ngx_memcpy(buf, sess_id->session, sess_id->len);
+        if (rc == 0) {
 
-                    ngx_shmtx_unlock(&shpool->mutex);
+            if (sess_id->expire > ngx_time()) {
+                ngx_memcpy(buf, sess_id->session, sess_id->len);
 
-                    p = buf;
-                    sess = d2i_SSL_SESSION(NULL, &p, sess_id->len);
+                ngx_shmtx_unlock(&shpool->mutex);
 
-                    return sess;
-                }
+                p = buf;
+                sess = d2i_SSL_SESSION(NULL, &p, sess_id->len);
+
+                return sess;
+            }
 
-                ngx_queue_remove(&sess_id->queue);
+            ngx_queue_remove(&sess_id->queue);
 
-                ngx_rbtree_delete(&cache->session_rbtree, node);
+            ngx_rbtree_delete(&cache->session_rbtree, node);
 
-                ngx_slab_free_locked(shpool, sess_id->session);
+            ngx_slab_free_locked(shpool, sess_id->session);
 #if (NGX_PTR_SIZE == 4)
-                ngx_slab_free_locked(shpool, sess_id->id);
+            ngx_slab_free_locked(shpool, sess_id->id);
 #endif
-                ngx_slab_free_locked(shpool, sess_id);
-
-                sess = NULL;
+            ngx_slab_free_locked(shpool, sess_id);
 
-                goto done;
-            }
+            sess = NULL;
 
-            node = (rc < 0) ? node->left : node->right;
-
-        } while (node != sentinel && hash == node->key);
+            goto done;
+        }
 
-        break;
+        node = (rc < 0) ? node->left : node->right;
     }
 
 done:
@@ -1837,31 +1903,26 @@ ngx_ssl_remove_session(SSL_CTX *ssl, ngx
 
         /* hash == node->key */
 
-        do {
-            sess_id = (ngx_ssl_sess_id_t *) node;
+        sess_id = (ngx_ssl_sess_id_t *) node;
 
-            rc = ngx_memn2cmp(id, sess_id->id, len, (size_t) node->data);
+        rc = ngx_memn2cmp(id, sess_id->id, len, (size_t) node->data);
 
-            if (rc == 0) {
+        if (rc == 0) {
 
-                ngx_queue_remove(&sess_id->queue);
+            ngx_queue_remove(&sess_id->queue);
 
-                ngx_rbtree_delete(&cache->session_rbtree, node);
+            ngx_rbtree_delete(&cache->session_rbtree, node);
 
-                ngx_slab_free_locked(shpool, sess_id->session);
+            ngx_slab_free_locked(shpool, sess_id->session);
 #if (NGX_PTR_SIZE == 4)
-                ngx_slab_free_locked(shpool, sess_id->id);
+            ngx_slab_free_locked(shpool, sess_id->id);
 #endif
-                ngx_slab_free_locked(shpool, sess_id);
-
-                goto done;
-            }
+            ngx_slab_free_locked(shpool, sess_id);
 
-            node = (rc < 0) ? node->left : node->right;
-
-        } while (node != sentinel && hash == node->key);
+            goto done;
+        }
 
-        break;
+        node = (rc < 0) ? node->left : node->right;
     }
 
 done:
--- nginx-1.0.0.orig/src/event/ngx_event_connect.c
+++ nginx-1.0.0/src/event/ngx_event_connect.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -159,6 +160,9 @@ ngx_event_connect_peer(ngx_peer_connecti
             ngx_log_error(level, c->log, err, "connect() to %V failed",
                           pc->name);
 
+            ngx_close_connection(c);
+            pc->connection = NULL;
+
             return NGX_DECLINED;
         }
     }
@@ -240,12 +244,8 @@ ngx_event_connect_peer(ngx_peer_connecti
 
 failed:
 
-    ngx_free_connection(c);
-
-    if (ngx_close_socket(s) == -1) {
-        ngx_log_error(NGX_LOG_ALERT, pc->log, ngx_socket_errno,
-                      ngx_close_socket_n " failed");
-    }
+    ngx_close_connection(c);
+    pc->connection = NULL;
 
     return NGX_ERROR;
 }
--- nginx-1.0.0.orig/src/event/ngx_event_busy_lock.c
+++ nginx-1.0.0/src/event/ngx_event_busy_lock.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/event/ngx_event_accept.c
+++ nginx-1.0.0/src/event/ngx_event_accept.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/event/ngx_event_timer.h
+++ nginx-1.0.0/src/event/ngx_event_timer.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/event/ngx_event_pipe.c
+++ nginx-1.0.0/src/event/ngx_event_pipe.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -633,13 +634,13 @@ ngx_event_pipe_write_to_downstream(ngx_e
 
         rc = p->output_filter(p->output_ctx, out);
 
+        ngx_chain_update_chains(&p->free, &p->busy, &out, p->tag);
+
         if (rc == NGX_ERROR) {
             p->downstream_error = 1;
             return ngx_event_pipe_drain_chains(p);
         }
 
-        ngx_chain_update_chains(&p->free, &p->busy, &out, p->tag);
-
         for (cl = p->free; cl; cl = cl->next) {
 
             if (cl->buf->temp_file) {
@@ -945,7 +946,7 @@ ngx_event_pipe_add_free_buf(ngx_event_pi
         return NGX_OK;
     }
 
-    /* the first free buf is partialy filled, thus add the free buf after it */
+    /* the first free buf is partially filled, thus add the free buf after it */
 
     cl->next = p->free_raw_bufs->next;
     p->free_raw_bufs->next = cl;
--- nginx-1.0.0.orig/src/event/modules/ngx_epoll_module.c
+++ nginx-1.0.0/src/event/modules/ngx_epoll_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -86,6 +87,7 @@ int eventfd(u_int initval)
 
 typedef struct {
     ngx_uint_t  events;
+    ngx_uint_t  aio_requests;
 } ngx_epoll_conf_t;
 
 
@@ -133,6 +135,13 @@ static ngx_command_t  ngx_epoll_commands
       offsetof(ngx_epoll_conf_t, events),
       NULL },
 
+    { ngx_string("worker_aio_requests"),
+      NGX_EVENT_CONF|NGX_CONF_TAKE1,
+      ngx_conf_set_num_slot,
+      0,
+      offsetof(ngx_epoll_conf_t, aio_requests),
+      NULL },
+
       ngx_null_command
 };
 
@@ -184,7 +193,7 @@ ngx_module_t  ngx_epoll_module = {
  * into single eventfd() function with different number of parameters.
  */
 
-static long
+static int
 io_setup(u_int nr_reqs, aio_context_t *ctx)
 {
     return syscall(SYS_io_setup, nr_reqs, ctx);
@@ -198,13 +207,81 @@ io_destroy(aio_context_t ctx)
 }
 
 
-static long
+static int
 io_getevents(aio_context_t ctx, long min_nr, long nr, struct io_event *events,
     struct timespec *tmo)
 {
     return syscall(SYS_io_getevents, ctx, min_nr, nr, events, tmo);
 }
 
+
+static void
+ngx_epoll_aio_init(ngx_cycle_t *cycle, ngx_epoll_conf_t *epcf)
+{
+    int                 n;
+    struct epoll_event  ee;
+
+    ngx_eventfd = syscall(SYS_eventfd, 0);
+
+    if (ngx_eventfd == -1) {
+        ngx_log_error(NGX_LOG_EMERG, cycle->log, ngx_errno,
+                      "eventfd() failed");
+        ngx_file_aio = 0;
+        return;
+    }
+
+    ngx_log_debug1(NGX_LOG_DEBUG_EVENT, cycle->log, 0,
+                   "eventfd: %d", ngx_eventfd);
+
+    n = 1;
+
+    if (ioctl(ngx_eventfd, FIONBIO, &n) == -1) {
+        ngx_log_error(NGX_LOG_EMERG, cycle->log, ngx_errno,
+                      "ioctl(eventfd, FIONBIO) failed");
+        goto failed;
+    }
+
+    if (io_setup(epcf->aio_requests, &ngx_aio_ctx) == -1) {
+        ngx_log_error(NGX_LOG_EMERG, cycle->log, ngx_errno,
+                      "io_setup() failed");
+        goto failed;
+    }
+
+    ngx_eventfd_event.data = &ngx_eventfd_conn;
+    ngx_eventfd_event.handler = ngx_epoll_eventfd_handler;
+    ngx_eventfd_event.log = cycle->log;
+    ngx_eventfd_event.active = 1;
+    ngx_eventfd_conn.fd = ngx_eventfd;
+    ngx_eventfd_conn.read = &ngx_eventfd_event;
+    ngx_eventfd_conn.log = cycle->log;
+
+    ee.events = EPOLLIN|EPOLLET;
+    ee.data.ptr = &ngx_eventfd_conn;
+
+    if (epoll_ctl(ep, EPOLL_CTL_ADD, ngx_eventfd, &ee) != -1) {
+        return;
+    }
+
+    ngx_log_error(NGX_LOG_EMERG, cycle->log, ngx_errno,
+                  "epoll_ctl(EPOLL_CTL_ADD, eventfd) failed");
+
+    if (io_destroy(ngx_aio_ctx) == -1) {
+        ngx_log_error(NGX_LOG_ALERT, cycle->log, ngx_errno,
+                      "io_destroy() failed");
+    }
+
+failed:
+
+    if (close(ngx_eventfd) == -1) {
+        ngx_log_error(NGX_LOG_ALERT, cycle->log, ngx_errno,
+                      "eventfd close() failed");
+    }
+
+    ngx_eventfd = -1;
+    ngx_aio_ctx = 0;
+    ngx_file_aio = 0;
+}
+
 #endif
 
 
@@ -225,52 +302,9 @@ ngx_epoll_init(ngx_cycle_t *cycle, ngx_m
         }
 
 #if (NGX_HAVE_FILE_AIO)
-        {
-        int                 n;
-        struct epoll_event  ee;
-
-        ngx_eventfd = syscall(SYS_eventfd, 0);
-
-        if (ngx_eventfd == -1) {
-            ngx_log_error(NGX_LOG_EMERG, cycle->log, ngx_errno,
-                          "eventfd() failed");
-            return NGX_ERROR;
-        }
-
-        n = 1;
-
-        if (ioctl(ngx_eventfd, FIONBIO, &n) == -1) {
-            ngx_log_error(NGX_LOG_EMERG, cycle->log, ngx_errno,
-                          "ioctl(eventfd, FIONBIO) failed");
-        }
-
-        ngx_log_debug1(NGX_LOG_DEBUG_EVENT, cycle->log, 0,
-                       "eventfd: %d", ngx_eventfd);
-
-        n = io_setup(1024, &ngx_aio_ctx);
-
-        if (n != 0) {
-            ngx_log_error(NGX_LOG_EMERG, cycle->log, -n, "io_setup() failed");
-            return NGX_ERROR;
-        }
-
-        ngx_eventfd_event.data = &ngx_eventfd_conn;
-        ngx_eventfd_event.handler = ngx_epoll_eventfd_handler;
-        ngx_eventfd_event.log = cycle->log;
-        ngx_eventfd_event.active = 1;
-        ngx_eventfd_conn.fd = ngx_eventfd;
-        ngx_eventfd_conn.read = &ngx_eventfd_event;
-        ngx_eventfd_conn.log = cycle->log;
 
-        ee.events = EPOLLIN|EPOLLET;
-        ee.data.ptr = &ngx_eventfd_conn;
+        ngx_epoll_aio_init(cycle, epcf);
 
-        if (epoll_ctl(ep, EPOLL_CTL_ADD, ngx_eventfd, &ee) == -1) {
-            ngx_log_error(NGX_LOG_EMERG, cycle->log, ngx_errno,
-                          "epoll_ctl(EPOLL_CTL_ADD, eventfd) failed");
-            return NGX_ERROR;
-        }
-        }
 #endif
     }
 
@@ -316,9 +350,19 @@ ngx_epoll_done(ngx_cycle_t *cycle)
 
 #if (NGX_HAVE_FILE_AIO)
 
-    if (io_destroy(ngx_aio_ctx) != 0) {
-        ngx_log_error(NGX_LOG_ALERT, cycle->log, ngx_errno,
-                      "io_destroy() failed");
+    if (ngx_eventfd != -1) {
+
+        if (io_destroy(ngx_aio_ctx) == -1) {
+            ngx_log_error(NGX_LOG_ALERT, cycle->log, ngx_errno,
+                          "io_destroy() failed");
+        }
+
+        if (close(ngx_eventfd) == -1) {
+            ngx_log_error(NGX_LOG_ALERT, cycle->log, ngx_errno,
+                          "eventfd close() failed");
+        }
+
+        ngx_eventfd = -1;
     }
 
     ngx_aio_ctx = 0;
@@ -518,7 +562,6 @@ ngx_epoll_process_events(ngx_cycle_t *cy
     ngx_int_t          instance, i;
     ngx_uint_t         level;
     ngx_err_t          err;
-    ngx_log_t         *log;
     ngx_event_t       *rev, *wev, **queue;
     ngx_connection_t  *c;
 
@@ -565,8 +608,6 @@ ngx_epoll_process_events(ngx_cycle_t *cy
 
     ngx_mutex_lock(ngx_posted_events_mutex);
 
-    log = cycle->log;
-
     for (i = 0; i < events; i++) {
         c = event_list[i].data.ptr;
 
@@ -587,25 +628,21 @@ ngx_epoll_process_events(ngx_cycle_t *cy
             continue;
         }
 
-#if (NGX_DEBUG0)
-        log = c->log ? c->log : cycle->log;
-#endif
-
         revents = event_list[i].events;
 
-        ngx_log_debug3(NGX_LOG_DEBUG_EVENT, log, 0,
+        ngx_log_debug3(NGX_LOG_DEBUG_EVENT, cycle->log, 0,
                        "epoll: fd:%d ev:%04XD d:%p",
                        c->fd, revents, event_list[i].data.ptr);
 
         if (revents & (EPOLLERR|EPOLLHUP)) {
-            ngx_log_debug2(NGX_LOG_DEBUG_EVENT, log, 0,
+            ngx_log_debug2(NGX_LOG_DEBUG_EVENT, cycle->log, 0,
                            "epoll_wait() error on fd:%d ev:%04XD",
                            c->fd, revents);
         }
 
 #if 0
         if (revents & ~(EPOLLIN|EPOLLOUT|EPOLLERR|EPOLLHUP)) {
-            ngx_log_error(NGX_LOG_ALERT, log, 0,
+            ngx_log_error(NGX_LOG_ALERT, cycle->log, 0,
                           "strange epoll_wait() events fd:%d ev:%04XD",
                           c->fd, revents);
         }
@@ -647,6 +684,18 @@ ngx_epoll_process_events(ngx_cycle_t *cy
 
         if ((revents & EPOLLOUT) && wev->active) {
 
+            if (c->fd == -1 || wev->instance != instance) {
+
+                /*
+                 * the stale event from a file descriptor
+                 * that was just closed in this iteration
+                 */
+
+                ngx_log_debug1(NGX_LOG_DEBUG_EVENT, cycle->log, 0,
+                               "epoll: stale event %p", c);
+                continue;
+            }
+
             if (flags & NGX_POST_THREAD_EVENTS) {
                 wev->posted_ready = 1;
 
@@ -674,8 +723,8 @@ ngx_epoll_process_events(ngx_cycle_t *cy
 static void
 ngx_epoll_eventfd_handler(ngx_event_t *ev)
 {
-    int               n;
-    long              i, events;
+    int               n, events;
+    long              i;
     uint64_t          ready;
     ngx_err_t         err;
     ngx_event_t      *e;
@@ -745,8 +794,9 @@ ngx_epoll_eventfd_handler(ngx_event_t *e
             return;
         }
 
-        /* events < 0 */
-        ngx_log_error(NGX_LOG_ALERT, ev->log, -events, "io_getevents() failed");
+        /* events == -1 */
+        ngx_log_error(NGX_LOG_ALERT, ev->log, ngx_errno,
+                      "io_getevents() failed");
         return;
     }
 }
@@ -765,6 +815,7 @@ ngx_epoll_create_conf(ngx_cycle_t *cycle
     }
 
     epcf->events = NGX_CONF_UNSET;
+    epcf->aio_requests = NGX_CONF_UNSET;
 
     return epcf;
 }
@@ -776,6 +827,7 @@ ngx_epoll_init_conf(ngx_cycle_t *cycle, 
     ngx_epoll_conf_t *epcf = conf;
 
     ngx_conf_init_uint_value(epcf->events, 512);
+    ngx_conf_init_uint_value(epcf->aio_requests, 32);
 
     return NGX_CONF_OK;
 }
--- nginx-1.0.0.orig/src/event/modules/ngx_aio_module.c
+++ nginx-1.0.0/src/event/modules/ngx_aio_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/event/modules/ngx_kqueue_module.c
+++ nginx-1.0.0/src/event/modules/ngx_kqueue_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/event/modules/ngx_devpoll_module.c
+++ nginx-1.0.0/src/event/modules/ngx_devpoll_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/event/modules/ngx_rtsig_module.c
+++ nginx-1.0.0/src/event/modules/ngx_rtsig_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/event/modules/ngx_poll_module.c
+++ nginx-1.0.0/src/event/modules/ngx_poll_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/event/modules/ngx_eventport_module.c
+++ nginx-1.0.0/src/event/modules/ngx_eventport_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/event/modules/ngx_select_module.c
+++ nginx-1.0.0/src/event/modules/ngx_select_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/event/modules/ngx_win32_select_module.c
+++ nginx-1.0.0/src/event/modules/ngx_win32_select_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/mail/ngx_mail_imap_module.h
+++ nginx-1.0.0/src/mail/ngx_mail_imap_module.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/mail/ngx_mail_auth_http_module.c
+++ nginx-1.0.0/src/mail/ngx_mail_auth_http_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -783,7 +784,7 @@ ngx_mail_auth_http_process_headers(ngx_m
             sin->sin_family = AF_INET;
 
             port = ngx_atoi(ctx->port.data, ctx->port.len);
-            if (port == NGX_ERROR || port < 1 || port > 65536) {
+            if (port == NGX_ERROR || port < 1 || port > 65535) {
                 ngx_log_error(NGX_LOG_ERR, s->connection->log, 0,
                               "auth http server %V sent invalid server "
                               "port:\"%V\"",
--- nginx-1.0.0.orig/src/mail/ngx_mail_imap_handler.c
+++ nginx-1.0.0/src/mail/ngx_mail_imap_handler.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/mail/ngx_mail_core_module.c
+++ nginx-1.0.0/src/mail/ngx_mail_core_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/mail/ngx_mail_proxy_module.c
+++ nginx-1.0.0/src/mail/ngx_mail_proxy_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -60,7 +61,7 @@ static ngx_command_t  ngx_mail_proxy_com
       NULL },
 
     { ngx_string("proxy_pass_error_message"),
-      NGX_MAIL_MAIN_CONF|NGX_MAIL_SRV_CONF|NGX_CONF_TAKE1,
+      NGX_MAIL_MAIN_CONF|NGX_MAIL_SRV_CONF|NGX_CONF_FLAG,
       ngx_conf_set_flag_slot,
       NGX_MAIL_SRV_CONF_OFFSET,
       offsetof(ngx_mail_proxy_conf_t, pass_error_message),
--- nginx-1.0.0.orig/src/mail/ngx_mail_pop3_handler.c
+++ nginx-1.0.0/src/mail/ngx_mail_pop3_handler.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -217,7 +218,7 @@ ngx_mail_pop3_auth_state(ngx_event_t *re
 
             break;
 
-        /* suppress warinings */
+        /* suppress warnings */
         case ngx_pop3_passwd:
             break;
 
--- nginx-1.0.0.orig/src/mail/ngx_mail_imap_module.c
+++ nginx-1.0.0/src/mail/ngx_mail_imap_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/mail/ngx_mail_ssl_module.c
+++ nginx-1.0.0/src/mail/ngx_mail_ssl_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -9,7 +10,8 @@
 #include <ngx_mail.h>
 
 
-#define NGX_DEFAULT_CIPHERS  "HIGH:!ADH:!MD5"
+#define NGX_DEFAULT_CIPHERS     "HIGH:!aNULL:!MD5"
+#define NGX_DEFAULT_ECDH_CURVE  "prime256v1"
 
 
 static void *ngx_mail_ssl_create_conf(ngx_conf_t *cf);
@@ -36,6 +38,8 @@ static ngx_conf_bitmask_t  ngx_mail_ssl_
     { ngx_string("SSLv2"), NGX_SSL_SSLv2 },
     { ngx_string("SSLv3"), NGX_SSL_SSLv3 },
     { ngx_string("TLSv1"), NGX_SSL_TLSv1 },
+    { ngx_string("TLSv1.1"), NGX_SSL_TLSv1_1 },
+    { ngx_string("TLSv1.2"), NGX_SSL_TLSv1_2 },
     { ngx_null_string, 0 }
 };
 
@@ -77,6 +81,13 @@ static ngx_command_t  ngx_mail_ssl_comma
       offsetof(ngx_mail_ssl_conf_t, dhparam),
       NULL },
 
+    { ngx_string("ssl_ecdh_curve"),
+      NGX_MAIL_MAIN_CONF|NGX_MAIL_SRV_CONF|NGX_CONF_TAKE1,
+      ngx_conf_set_str_slot,
+      NGX_MAIL_SRV_CONF_OFFSET,
+      offsetof(ngx_mail_ssl_conf_t, ecdh_curve),
+      NULL },
+
     { ngx_string("ssl_protocols"),
       NGX_MAIL_MAIN_CONF|NGX_MAIL_SRV_CONF|NGX_CONF_1MORE,
       ngx_conf_set_bitmask_slot,
@@ -163,6 +174,7 @@ ngx_mail_ssl_create_conf(ngx_conf_t *cf)
      *     scf->certificate = { 0, NULL };
      *     scf->certificate_key = { 0, NULL };
      *     scf->dhparam = { 0, NULL };
+     *     scf->ecdh_curve = { 0, NULL };
      *     scf->ciphers = { 0, NULL };
      *     scf->shm_zone = NULL;
      */
@@ -197,13 +209,17 @@ ngx_mail_ssl_merge_conf(ngx_conf_t *cf, 
                          prev->prefer_server_ciphers, 0);
 
     ngx_conf_merge_bitmask_value(conf->protocols, prev->protocols,
-                         (NGX_CONF_BITMASK_SET|NGX_SSL_SSLv3|NGX_SSL_TLSv1));
+                         (NGX_CONF_BITMASK_SET|NGX_SSL_SSLv3|NGX_SSL_TLSv1
+                          |NGX_SSL_TLSv1_1|NGX_SSL_TLSv1_2));
 
     ngx_conf_merge_str_value(conf->certificate, prev->certificate, "");
     ngx_conf_merge_str_value(conf->certificate_key, prev->certificate_key, "");
 
     ngx_conf_merge_str_value(conf->dhparam, prev->dhparam, "");
 
+    ngx_conf_merge_str_value(conf->ecdh_curve, prev->ecdh_curve,
+                         NGX_DEFAULT_ECDH_CURVE);
+
     ngx_conf_merge_str_value(conf->ciphers, prev->ciphers, NGX_DEFAULT_CIPHERS);
 
 
@@ -286,9 +302,7 @@ ngx_mail_ssl_merge_conf(ngx_conf_t *cf, 
         SSL_CTX_set_options(conf->ssl.ctx, SSL_OP_CIPHER_SERVER_PREFERENCE);
     }
 
-    if (ngx_ssl_generate_rsa512_key(&conf->ssl) != NGX_OK) {
-        return NGX_CONF_ERROR;
-    }
+    SSL_CTX_set_tmp_rsa_callback(conf->ssl.ctx, ngx_ssl_rsa512_key_callback);
 
     if (ngx_ssl_dhparam(cf, &conf->ssl, &conf->dhparam) != NGX_OK) {
         return NGX_CONF_ERROR;
@@ -454,6 +468,8 @@ ngx_mail_ssl_session_cache(ngx_conf_t *c
                 return NGX_CONF_ERROR;
             }
 
+            scf->shm_zone->init = ngx_ssl_session_cache_init;
+
             continue;
         }
 
--- nginx-1.0.0.orig/src/mail/ngx_mail_parse.c
+++ nginx-1.0.0/src/mail/ngx_mail_parse.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/mail/ngx_mail_ssl_module.h
+++ nginx-1.0.0/src/mail/ngx_mail_ssl_module.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -34,6 +35,7 @@ typedef struct {
     ngx_str_t        certificate;
     ngx_str_t        certificate_key;
     ngx_str_t        dhparam;
+    ngx_str_t        ecdh_curve;
 
     ngx_str_t        ciphers;
 
--- nginx-1.0.0.orig/src/mail/ngx_mail_smtp_module.c
+++ nginx-1.0.0/src/mail/ngx_mail_smtp_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/mail/ngx_mail_pop3_module.c
+++ nginx-1.0.0/src/mail/ngx_mail_pop3_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/mail/ngx_mail_smtp_handler.c
+++ nginx-1.0.0/src/mail/ngx_mail_smtp_handler.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/mail/ngx_mail.h
+++ nginx-1.0.0/src/mail/ngx_mail.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/mail/ngx_mail_handler.c
+++ nginx-1.0.0/src/mail/ngx_mail_handler.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/mail/ngx_mail_pop3_module.h
+++ nginx-1.0.0/src/mail/ngx_mail_pop3_module.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/mail/ngx_mail_smtp_module.h
+++ nginx-1.0.0/src/mail/ngx_mail_smtp_module.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/mail/ngx_mail.c
+++ nginx-1.0.0/src/mail/ngx_mail.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- /dev/null
+++ nginx-1.0.0/src/core/ngx_murmurhash.c
@@ -0,0 +1,50 @@
+
+/*
+ * Copyright (C) Austin Appleby
+ */
+
+
+#include <ngx_config.h>
+#include <ngx_core.h>
+
+
+uint32_t
+ngx_murmur_hash2(u_char *data, size_t len)
+{
+    uint32_t  h, k;
+
+    h = 0 ^ len;
+
+    while (len >= 4) {
+        k  = data[0];
+        k |= data[1] << 8;
+        k |= data[2] << 16;
+        k |= data[3] << 24;
+
+        k *= 0x5bd1e995;
+        k ^= k >> 24;
+        k *= 0x5bd1e995;
+
+        h *= 0x5bd1e995;
+        h ^= k;
+
+        data += 4;
+        len -= 4;
+    }
+
+    switch (len) {
+    case 3:
+        h ^= data[2] << 16;
+    case 2:
+        h ^= data[1] << 8;
+    case 1:
+        h ^= data[0];
+        h *= 0x5bd1e995;
+    }
+
+    h ^= h >> 13;
+    h *= 0x5bd1e995;
+    h ^= h >> 15;
+
+    return h;
+}
--- nginx-1.0.0.orig/src/core/nginx.c
+++ nginx-1.0.0/src/core/nginx.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -203,6 +204,10 @@ main(int argc, char *const *argv)
     ngx_cycle_t      *cycle, init_cycle;
     ngx_core_conf_t  *ccf;
 
+#if (NGX_FREEBSD)
+    ngx_debug_init();
+#endif
+
     if (ngx_strerror_init() != NGX_OK) {
         return 1;
     }
@@ -212,47 +217,49 @@ main(int argc, char *const *argv)
     }
 
     if (ngx_show_version) {
-        ngx_log_stderr(0, "nginx version: " NGINX_VER);
+        ngx_write_stderr("nginx version: " NGINX_VER NGX_LINEFEED);
 
         if (ngx_show_help) {
-            ngx_log_stderr(0,
+            ngx_write_stderr(
                 "Usage: nginx [-?hvVtq] [-s signal] [-c filename] "
-                             "[-p prefix] [-g directives]" CRLF CRLF
-                "Options:" CRLF
-                "  -?,-h         : this help" CRLF
-                "  -v            : show version and exit" CRLF
+                             "[-p prefix] [-g directives]" NGX_LINEFEED
+                             NGX_LINEFEED
+                "Options:" NGX_LINEFEED
+                "  -?,-h         : this help" NGX_LINEFEED
+                "  -v            : show version and exit" NGX_LINEFEED
                 "  -V            : show version and configure options then exit"
-                                   CRLF
-                "  -t            : test configuration and exit" CRLF
+                                   NGX_LINEFEED
+                "  -t            : test configuration and exit" NGX_LINEFEED
                 "  -q            : suppress non-error messages "
-                                   "during configuration testing" CRLF
+                                   "during configuration testing" NGX_LINEFEED
                 "  -s signal     : send signal to a master process: "
-                                   "stop, quit, reopen, reload" CRLF
+                                   "stop, quit, reopen, reload" NGX_LINEFEED
 #ifdef NGX_PREFIX
                 "  -p prefix     : set prefix path (default: "
-                                   NGX_PREFIX ")" CRLF
+                                   NGX_PREFIX ")" NGX_LINEFEED
 #else
-                "  -p prefix     : set prefix path (default: NONE)" CRLF
+                "  -p prefix     : set prefix path (default: NONE)" NGX_LINEFEED
 #endif
                 "  -c filename   : set configuration file (default: "
-                                   NGX_CONF_PATH ")" CRLF
+                                   NGX_CONF_PATH ")" NGX_LINEFEED
                 "  -g directives : set global directives out of configuration "
-                                   "file" CRLF
+                                   "file" NGX_LINEFEED NGX_LINEFEED
                 );
         }
 
         if (ngx_show_configure) {
+            ngx_write_stderr(
 #ifdef NGX_COMPILER
-            ngx_log_stderr(0, "built by " NGX_COMPILER);
+                "built by " NGX_COMPILER NGX_LINEFEED
 #endif
 #if (NGX_SSL)
 #ifdef SSL_CTRL_SET_TLSEXT_HOSTNAME
-            ngx_log_stderr(0, "TLS SNI support enabled");
+                "TLS SNI support enabled" NGX_LINEFEED
 #else
-            ngx_log_stderr(0, "TLS SNI support disabled");
+                "TLS SNI support disabled" NGX_LINEFEED
 #endif
 #endif
-            ngx_log_stderr(0, "configure arguments:" NGX_CONFIGURE);
+                "configure arguments:" NGX_CONFIGURE NGX_LINEFEED);
         }
 
         if (!ngx_test_config) {
@@ -260,10 +267,6 @@ main(int argc, char *const *argv)
         }
     }
 
-#if (NGX_FREEBSD)
-    ngx_debug_init();
-#endif
-
     /* TODO */ ngx_max_sockets = -1;
 
     ngx_time_init();
@@ -374,6 +377,10 @@ main(int argc, char *const *argv)
         ngx_daemonized = 1;
     }
 
+    if (ngx_inherited) {
+        ngx_daemonized = 1;
+    }
+
 #endif
 
     if (ngx_create_pidfile(&ccf->pid, cycle->log) != NGX_OK) {
--- nginx-1.0.0.orig/src/core/ngx_times.h
+++ nginx-1.0.0/src/core/ngx_times.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/core/ngx_hash.c
+++ nginx-1.0.0/src/core/ngx_hash.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -277,7 +278,7 @@ ngx_hash_init(ngx_hash_init_t *hinit, ng
     start = nelts / (bucket_size / (2 * sizeof(void *)));
     start = start ? start : 1;
 
-    if (hinit->max_size > 10000 && hinit->max_size / nelts < 100) {
+    if (hinit->max_size > 10000 && nelts && hinit->max_size / nelts < 100) {
         start = hinit->max_size - 1000;
     }
 
--- nginx-1.0.0.orig/src/core/ngx_list.h
+++ nginx-1.0.0/src/core/ngx_list.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/core/ngx_cpuinfo.c
+++ nginx-1.0.0/src/core/ngx_cpuinfo.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/core/ngx_cycle.h
+++ nginx-1.0.0/src/core/ngx_cycle.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/core/ngx_buf.c
+++ nginx-1.0.0/src/core/ngx_buf.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/core/ngx_inet.h
+++ nginx-1.0.0/src/core/ngx_inet.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/core/ngx_array.h
+++ nginx-1.0.0/src/core/ngx_array.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/core/ngx_open_file_cache.c
+++ nginx-1.0.0/src/core/ngx_open_file_cache.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -155,6 +156,7 @@ ngx_open_cached_file(ngx_open_file_cache
             of->uniq = ngx_file_uniq(&fi);
             of->mtime = ngx_file_mtime(&fi);
             of->size = ngx_file_size(&fi);
+            of->fs_size = ngx_file_fs_size(&fi);
             of->is_dir = ngx_is_dir(&fi);
             of->is_file = ngx_is_file(&fi);
             of->is_link = ngx_is_link(&fi);
@@ -283,13 +285,13 @@ ngx_open_cached_file(ngx_open_file_cache
 
             if (of->uniq == file->uniq) {
 
-                file->count++;
-
                 if (file->event) {
                     file->use_event = 1;
                 }
 
-                goto renew;
+                of->is_directio = file->is_directio;
+
+                goto update;
             }
 
             /* file was changed */
@@ -393,8 +395,6 @@ update:
         }
     }
 
-renew:
-
     file->created = now;
 
 found:
@@ -557,6 +557,7 @@ done:
     of->uniq = ngx_file_uniq(&fi);
     of->mtime = ngx_file_mtime(&fi);
     of->size = ngx_file_size(&fi);
+    of->fs_size = ngx_file_fs_size(&fi);
     of->is_dir = ngx_is_dir(&fi);
     of->is_file = ngx_is_file(&fi);
     of->is_link = ngx_is_link(&fi);
@@ -836,20 +837,15 @@ ngx_open_file_lookup(ngx_open_file_cache
 
         /* hash == node->key */
 
-        do {
-            file = (ngx_cached_open_file_t *) node;
-
-            rc = ngx_strcmp(name->data, file->name);
+        file = (ngx_cached_open_file_t *) node;
 
-            if (rc == 0) {
-                return file;
-            }
+        rc = ngx_strcmp(name->data, file->name);
 
-            node = (rc < 0) ? node->left : node->right;
-
-        } while (node != sentinel && hash == node->key);
+        if (rc == 0) {
+            return file;
+        }
 
-        break;
+        node = (rc < 0) ? node->left : node->right;
     }
 
     return NULL;
--- nginx-1.0.0.orig/src/core/ngx_log.h
+++ nginx-1.0.0/src/core/ngx_log.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -121,15 +122,38 @@ void ngx_cdecl ngx_log_debug_core(ngx_lo
 
 #if (NGX_HAVE_VARIADIC_MACROS)
 
-#define ngx_log_debug0  ngx_log_debug
-#define ngx_log_debug1  ngx_log_debug
-#define ngx_log_debug2  ngx_log_debug
-#define ngx_log_debug3  ngx_log_debug
-#define ngx_log_debug4  ngx_log_debug
-#define ngx_log_debug5  ngx_log_debug
-#define ngx_log_debug6  ngx_log_debug
-#define ngx_log_debug7  ngx_log_debug
-#define ngx_log_debug8  ngx_log_debug
+#define ngx_log_debug0(level, log, err, fmt)                                  \
+        ngx_log_debug(level, log, err, fmt)
+
+#define ngx_log_debug1(level, log, err, fmt, arg1)                            \
+        ngx_log_debug(level, log, err, fmt, arg1)
+
+#define ngx_log_debug2(level, log, err, fmt, arg1, arg2)                      \
+        ngx_log_debug(level, log, err, fmt, arg1, arg2)
+
+#define ngx_log_debug3(level, log, err, fmt, arg1, arg2, arg3)                \
+        ngx_log_debug(level, log, err, fmt, arg1, arg2, arg3)
+
+#define ngx_log_debug4(level, log, err, fmt, arg1, arg2, arg3, arg4)          \
+        ngx_log_debug(level, log, err, fmt, arg1, arg2, arg3, arg4)
+
+#define ngx_log_debug5(level, log, err, fmt, arg1, arg2, arg3, arg4, arg5)    \
+        ngx_log_debug(level, log, err, fmt, arg1, arg2, arg3, arg4, arg5)
+
+#define ngx_log_debug6(level, log, err, fmt,                                  \
+                       arg1, arg2, arg3, arg4, arg5, arg6)                    \
+        ngx_log_debug(level, log, err, fmt,                                   \
+                       arg1, arg2, arg3, arg4, arg5, arg6)
+
+#define ngx_log_debug7(level, log, err, fmt,                                  \
+                       arg1, arg2, arg3, arg4, arg5, arg6, arg7)              \
+        ngx_log_debug(level, log, err, fmt,                                   \
+                       arg1, arg2, arg3, arg4, arg5, arg6, arg7)
+
+#define ngx_log_debug8(level, log, err, fmt,                                  \
+                       arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)        \
+        ngx_log_debug(level, log, err, fmt,                                   \
+                       arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
 
 
 #else /* NO VARIADIC MACROS */
@@ -203,6 +227,22 @@ void ngx_cdecl ngx_log_stderr(ngx_err_t 
 u_char *ngx_log_errno(u_char *buf, u_char *last, ngx_err_t err);
 
 
+/*
+ * ngx_write_stderr() cannot be implemented as macro, since
+ * MSVC does not allow to use #ifdef inside macro parameters.
+ *
+ * ngx_write_fd() is used instead of ngx_write_console(), since
+ * CharToOemBuff() inside ngx_write_console() cannot be used with
+ * read only buffer as destination and CharToOemBuff() is not needed
+ * for ngx_write_stderr() anyway.
+ */
+static ngx_inline void
+ngx_write_stderr(char *text)
+{
+    (void) ngx_write_fd(ngx_stderr, text, strlen(text));
+}
+
+
 extern ngx_module_t  ngx_errlog_module;
 extern ngx_uint_t    ngx_use_stderr;
 
--- nginx-1.0.0.orig/src/core/ngx_md5.h
+++ nginx-1.0.0/src/core/ngx_md5.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -12,6 +13,8 @@
 #include <ngx_core.h>
 
 
+#if (NGX_HAVE_MD5)
+
 #if (NGX_HAVE_OPENSSL_MD5_H)
 #include <openssl/md5.h>
 #else
@@ -37,4 +40,21 @@ typedef MD5_CTX  ngx_md5_t;
 #endif
 
 
+#else /* !NGX_HAVE_MD5 */
+
+
+typedef struct {
+    uint64_t  bytes;
+    uint32_t  a, b, c, d;
+    u_char    buffer[64];
+} ngx_md5_t;
+
+
+void ngx_md5_init(ngx_md5_t *ctx);
+void ngx_md5_update(ngx_md5_t *ctx, const void *data, size_t size);
+void ngx_md5_final(u_char result[16], ngx_md5_t *ctx);
+
+
+#endif
+
 #endif /* _NGX_MD5_H_INCLUDED_ */
--- nginx-1.0.0.orig/src/core/ngx_sha1.h
+++ nginx-1.0.0/src/core/ngx_sha1.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/core/ngx_inet.c
+++ nginx-1.0.0/src/core/ngx_inet.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -110,7 +111,7 @@ ngx_inet6_addr(u_char *p, size_t len, u_
         }
 
         if (c == '.' && nibbles) {
-            if (n < 2) {
+            if (n < 2 || digit == NULL) {
                 return NGX_ERROR;
             }
 
@@ -671,7 +672,7 @@ ngx_parse_inet_url(ngx_pool_t *pool, ngx
 
         n = ngx_atoi(port, len);
 
-        if (n < 1 || n > 65536) {
+        if (n < 1 || n > 65535) {
             u->err = "invalid port";
             return NGX_ERROR;
         }
@@ -695,7 +696,7 @@ ngx_parse_inet_url(ngx_pool_t *pool, ngx
 
                 if (n != NGX_ERROR) {
 
-                    if (n < 1 || n > 65536) {
+                    if (n < 1 || n > 65535) {
                         u->err = "invalid port";
                         return NGX_ERROR;
                     }
@@ -835,7 +836,7 @@ ngx_parse_inet6_url(ngx_pool_t *pool, ng
 
             n = ngx_atoi(port, len);
 
-            if (n < 1 || n > 65536) {
+            if (n < 1 || n > 65535) {
                 u->err = "invalid port";
                 return NGX_ERROR;
             }
--- nginx-1.0.0.orig/src/core/ngx_shmtx.h
+++ nginx-1.0.0/src/core/ngx_shmtx.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -15,95 +16,23 @@
 typedef struct {
 #if (NGX_HAVE_ATOMIC_OPS)
     ngx_atomic_t  *lock;
+#if (NGX_HAVE_POSIX_SEM)
+    ngx_uint_t     semaphore;
+    sem_t          sem;
+#endif
 #else
     ngx_fd_t       fd;
     u_char        *name;
 #endif
+    ngx_uint_t     spin;
 } ngx_shmtx_t;
 
 
 ngx_int_t ngx_shmtx_create(ngx_shmtx_t *mtx, void *addr, u_char *name);
-
-
-#if (NGX_HAVE_ATOMIC_OPS)
-
-static ngx_inline ngx_uint_t
-ngx_shmtx_trylock(ngx_shmtx_t *mtx)
-{
-    return (*mtx->lock == 0 && ngx_atomic_cmp_set(mtx->lock, 0, ngx_pid));
-}
-
-#define ngx_shmtx_lock(mtx)   ngx_spinlock((mtx)->lock, ngx_pid, 1024)
-
-#define ngx_shmtx_unlock(mtx) (void) ngx_atomic_cmp_set((mtx)->lock, ngx_pid, 0)
-
-#define ngx_shmtx_destory(mtx)
-
-
-#else
-
-static ngx_inline ngx_uint_t
-ngx_shmtx_trylock(ngx_shmtx_t *mtx)
-{
-    ngx_err_t  err;
-
-    err = ngx_trylock_fd(mtx->fd);
-
-    if (err == 0) {
-        return 1;
-    }
-
-    if (err == NGX_EAGAIN) {
-        return 0;
-    }
-
-#if __osf__ /* Tru64 UNIX */
-
-    if (err == NGX_EACCESS) {
-        return 0;
-    }
-
-#endif
-
-    ngx_log_abort(err, ngx_trylock_fd_n " %s failed", mtx->name);
-
-    return 0;
-}
-
-
-static ngx_inline void
-ngx_shmtx_lock(ngx_shmtx_t *mtx)
-{
-    ngx_err_t  err;
-
-    err = ngx_lock_fd(mtx->fd);
-
-    if (err == 0) {
-        return;
-    }
-
-    ngx_log_abort(err, ngx_lock_fd_n " %s failed", mtx->name);
-}
-
-
-static ngx_inline void
-ngx_shmtx_unlock(ngx_shmtx_t *mtx)
-{
-    ngx_err_t  err;
-
-    err = ngx_unlock_fd(mtx->fd);
-
-    if (err == 0) {
-        return;
-    }
-
-    ngx_log_abort(err, ngx_unlock_fd_n " %s failed", mtx->name);
-}
-
-
 void ngx_shmtx_destory(ngx_shmtx_t *mtx);
-
-#endif
+ngx_uint_t ngx_shmtx_trylock(ngx_shmtx_t *mtx);
+void ngx_shmtx_lock(ngx_shmtx_t *mtx);
+void ngx_shmtx_unlock(ngx_shmtx_t *mtx);
 
 
 #endif /* _NGX_SHMTX_H_INCLUDED_ */
--- nginx-1.0.0.orig/src/core/ngx_radix_tree.h
+++ nginx-1.0.0/src/core/ngx_radix_tree.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/core/ngx_config.h
+++ nginx-1.0.0/src/core/ngx_config.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -127,5 +128,7 @@ typedef intptr_t        ngx_flag_t;
 #define NGX_MAX_UINT32_VALUE  (uint32_t) 0xffffffff
 #endif
 
+#define NGX_MAX_INT32_VALUE   (uint32_t) 0x7fffffff
+
 
 #endif /* _NGX_CONFIG_H_INCLUDED_ */
--- nginx-1.0.0.orig/src/core/ngx_connection.c
+++ nginx-1.0.0/src/core/ngx_connection.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -580,7 +581,7 @@ ngx_configure_listening_sockets(ngx_cycl
             {
                 ngx_log_error(NGX_LOG_ALERT, cycle->log, ngx_errno,
                               "setsockopt(SO_ACCEPTFILTER, \"%s\") "
-                              " for %V failed, ignored",
+                              "for %V failed, ignored",
                               ls[i].accept_filter, &ls[i].addr_text);
                 continue;
             }
--- nginx-1.0.0.orig/src/core/ngx_array.c
+++ nginx-1.0.0/src/core/ngx_array.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/core/ngx_crc.h
+++ nginx-1.0.0/src/core/ngx_crc.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/core/ngx_rbtree.c
+++ nginx-1.0.0/src/core/ngx_rbtree.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/core/ngx_palloc.c
+++ nginx-1.0.0/src/core/ngx_palloc.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -68,7 +69,7 @@ ngx_destroy_pool(ngx_pool_t *pool)
 
     /*
      * we could allocate the pool->log from this pool
-     * so we can not use this log while the free()ing the pool
+     * so we cannot use this log while free()ing the pool
      */
 
     for (p = pool, n = pool->d.next; /* void */; p = n, n = n->d.next) {
--- nginx-1.0.0.orig/src/core/ngx_buf.h
+++ nginx-1.0.0/src/core/ngx_buf.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/core/ngx_regex.h
+++ nginx-1.0.0/src/core/ngx_regex.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/core/ngx_string.c
+++ nginx-1.0.0/src/core/ngx_string.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -381,7 +382,7 @@ ngx_vslprintf(u_char *buf, u_char *last,
 
                     /*
                      * (int64_t) cast is required for msvc6:
-                     * it can not convert uint64_t to double
+                     * it cannot convert uint64_t to double
                      */
                     ui64 = (uint64_t) ((f - (int64_t) ui64) * scale + 0.5);
 
@@ -1211,19 +1212,19 @@ ngx_utf8_decode(u_char **p, size_t n)
 
     u = **p;
 
-    if (u > 0xf0) {
+    if (u >= 0xf0) {
 
         u &= 0x07;
         valid = 0xffff;
         len = 3;
 
-    } else if (u > 0xe0) {
+    } else if (u >= 0xe0) {
 
         u &= 0x0f;
         valid = 0x7ff;
         len = 2;
 
-    } else if (u > 0xc0) {
+    } else if (u >= 0xc2) {
 
         u &= 0x1f;
         valid = 0x7f;
@@ -1380,6 +1381,26 @@ ngx_escape_uri(u_char *dst, u_char *src,
         0xffffffff  /* 1111 1111 1111 1111  1111 1111 1111 1111 */
     };
 
+                    /* not ALPHA, DIGIT, "-", ".", "_", "~" */
+
+    static uint32_t   uri_component[] = {
+        0xffffffff, /* 1111 1111 1111 1111  1111 1111 1111 1111 */
+
+                    /* ?>=< ;:98 7654 3210  /.-, +*)( '&%$ #"!  */
+        0xfc009fff, /* 1111 1100 0000 0000  1001 1111 1111 1111 */
+
+                    /* _^]\ [ZYX WVUT SRQP  ONML KJIH GFED CBA@ */
+        0x78000001, /* 0111 1000 0000 0000  0000 0000 0000 0001 */
+
+                    /*  ~}| {zyx wvut srqp  onml kjih gfed cba` */
+        0xb8000001, /* 1011 1000 0000 0000  0000 0000 0000 0001 */
+
+        0xffffffff, /* 1111 1111 1111 1111  1111 1111 1111 1111 */
+        0xffffffff, /* 1111 1111 1111 1111  1111 1111 1111 1111 */
+        0xffffffff, /* 1111 1111 1111 1111  1111 1111 1111 1111 */
+        0xffffffff  /* 1111 1111 1111 1111  1111 1111 1111 1111 */
+    };
+
                     /* " ", "#", """, "%", "'", %00-%1F, %7F-%FF */
 
     static uint32_t   html[] = {
@@ -1443,7 +1464,7 @@ ngx_escape_uri(u_char *dst, u_char *src,
                     /* mail_auth is the same as memcached */
 
     static uint32_t  *map[] =
-        { uri, args, html, refresh, memcached, memcached };
+        { uri, args, uri_component, html, refresh, memcached, memcached };
 
 
     escape = map[type];
@@ -1637,6 +1658,10 @@ ngx_escape_html(u_char *dst, u_char *src
                 len += sizeof("&amp;") - 2;
                 break;
 
+            case '"':
+                len += sizeof("&quot;") - 2;
+                break;
+
             default:
                 break;
             }
@@ -1664,6 +1689,11 @@ ngx_escape_html(u_char *dst, u_char *src
             *dst++ = ';';
             break;
 
+        case '"':
+            *dst++ = '&'; *dst++ = 'q'; *dst++ = 'u'; *dst++ = 'o';
+            *dst++ = 't'; *dst++ = ';';
+            break;
+
         default:
             *dst++ = ch;
             break;
--- nginx-1.0.0.orig/src/core/ngx_string.h
+++ nginx-1.0.0/src/core/ngx_string.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -189,12 +190,13 @@ size_t ngx_utf8_length(u_char *p, size_t
 u_char *ngx_utf8_cpystrn(u_char *dst, u_char *src, size_t n, size_t len);
 
 
-#define NGX_ESCAPE_URI         0
-#define NGX_ESCAPE_ARGS        1
-#define NGX_ESCAPE_HTML        2
-#define NGX_ESCAPE_REFRESH     3
-#define NGX_ESCAPE_MEMCACHED   4
-#define NGX_ESCAPE_MAIL_AUTH   5
+#define NGX_ESCAPE_URI            0
+#define NGX_ESCAPE_ARGS           1
+#define NGX_ESCAPE_URI_COMPONENT  2
+#define NGX_ESCAPE_HTML           3
+#define NGX_ESCAPE_REFRESH        4
+#define NGX_ESCAPE_MEMCACHED      5
+#define NGX_ESCAPE_MAIL_AUTH      6
 
 #define NGX_UNESCAPE_URI       1
 #define NGX_UNESCAPE_REDIRECT  2
--- nginx-1.0.0.orig/src/core/ngx_list.c
+++ nginx-1.0.0/src/core/ngx_list.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/core/ngx_resolver.h
+++ nginx-1.0.0/src/core/ngx_resolver.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- /dev/null
+++ nginx-1.0.0/src/core/ngx_crypt.c
@@ -0,0 +1,238 @@
+
+/*
+ * Copyright (C) Maxim Dounin
+ */
+
+
+#include <ngx_config.h>
+#include <ngx_core.h>
+#include <ngx_md5.h>
+#if (NGX_HAVE_SHA1)
+#include <ngx_sha1.h>
+#endif
+
+
+#if (NGX_CRYPT)
+
+static ngx_int_t ngx_crypt_apr1(ngx_pool_t *pool, u_char *key, u_char *salt,
+    u_char **encrypted);
+static ngx_int_t ngx_crypt_plain(ngx_pool_t *pool, u_char *key, u_char *salt,
+    u_char **encrypted);
+
+#if (NGX_HAVE_SHA1)
+
+static ngx_int_t ngx_crypt_ssha(ngx_pool_t *pool, u_char *key, u_char *salt,
+    u_char **encrypted);
+
+#endif
+
+
+static u_char *ngx_crypt_to64(u_char *p, uint32_t v, size_t n);
+
+
+ngx_int_t
+ngx_crypt(ngx_pool_t *pool, u_char *key, u_char *salt, u_char **encrypted)
+{
+    if (ngx_strncmp(salt, "$apr1$", sizeof("$apr1$") - 1) == 0) {
+        return ngx_crypt_apr1(pool, key, salt, encrypted);
+
+    } else if (ngx_strncmp(salt, "{PLAIN}", sizeof("{PLAIN}") - 1) == 0) {
+        return ngx_crypt_plain(pool, key, salt, encrypted);
+
+#if (NGX_HAVE_SHA1)
+    } else if (ngx_strncmp(salt, "{SSHA}", sizeof("{SSHA}") - 1) == 0) {
+        return ngx_crypt_ssha(pool, key, salt, encrypted);
+#endif
+    }
+
+    /* fallback to libc crypt() */
+
+    return ngx_libc_crypt(pool, key, salt, encrypted);
+}
+
+
+static ngx_int_t
+ngx_crypt_apr1(ngx_pool_t *pool, u_char *key, u_char *salt, u_char **encrypted)
+{
+    ngx_int_t          n;
+    ngx_uint_t         i;
+    u_char            *p, *last, final[16];
+    size_t             saltlen, keylen;
+    ngx_md5_t          md5, ctx1;
+
+    /* Apache's apr1 crypt is Paul-Henning Kamp's md5 crypt with $apr1$ magic */
+
+    keylen = ngx_strlen(key);
+
+    /* true salt: no magic, max 8 chars, stop at first $ */
+
+    salt += sizeof("$apr1$") - 1;
+    last = salt + 8;
+    for (p = salt; *p && *p != '$' && p < last; p++) { /* void */ }
+    saltlen = p - salt;
+
+    /* hash key and salt */
+
+    ngx_md5_init(&md5);
+    ngx_md5_update(&md5, key, keylen);
+    ngx_md5_update(&md5, (u_char *) "$apr1$", sizeof("$apr1$") - 1);
+    ngx_md5_update(&md5, salt, saltlen);
+
+    ngx_md5_init(&ctx1);
+    ngx_md5_update(&ctx1, key, keylen);
+    ngx_md5_update(&ctx1, salt, saltlen);
+    ngx_md5_update(&ctx1, key, keylen);
+    ngx_md5_final(final, &ctx1);
+
+    for (n = keylen; n > 0; n -= 16) {
+        ngx_md5_update(&md5, final, n > 16 ? 16 : n);
+    }
+
+    ngx_memzero(final, sizeof(final));
+
+    for (i = keylen; i; i >>= 1) {
+        if (i & 1) {
+            ngx_md5_update(&md5, final, 1);
+
+        } else {
+            ngx_md5_update(&md5, key, 1);
+        }
+    }
+
+    ngx_md5_final(final, &md5);
+
+    for (i = 0; i < 1000; i++) {
+        ngx_md5_init(&ctx1);
+
+        if (i & 1) {
+            ngx_md5_update(&ctx1, key, keylen);
+
+        } else {
+            ngx_md5_update(&ctx1, final, 16);
+        }
+
+        if (i % 3) {
+            ngx_md5_update(&ctx1, salt, saltlen);
+        }
+
+        if (i % 7) {
+            ngx_md5_update(&ctx1, key, keylen);
+        }
+
+        if (i & 1) {
+            ngx_md5_update(&ctx1, final, 16);
+
+        } else {
+            ngx_md5_update(&ctx1, key, keylen);
+        }
+
+        ngx_md5_final(final, &ctx1);
+    }
+
+    /* output */
+
+    *encrypted = ngx_pnalloc(pool, sizeof("$apr1$") - 1 + saltlen + 16 + 1);
+    if (*encrypted == NULL) {
+        return NGX_ERROR;
+    }
+
+    p = ngx_cpymem(*encrypted, "$apr1$", sizeof("$apr1$") - 1);
+    p = ngx_copy(p, salt, saltlen);
+    *p++ = '$';
+
+    p = ngx_crypt_to64(p, (final[ 0]<<16) | (final[ 6]<<8) | final[12], 4);
+    p = ngx_crypt_to64(p, (final[ 1]<<16) | (final[ 7]<<8) | final[13], 4);
+    p = ngx_crypt_to64(p, (final[ 2]<<16) | (final[ 8]<<8) | final[14], 4);
+    p = ngx_crypt_to64(p, (final[ 3]<<16) | (final[ 9]<<8) | final[15], 4);
+    p = ngx_crypt_to64(p, (final[ 4]<<16) | (final[10]<<8) | final[ 5], 4);
+    p = ngx_crypt_to64(p, final[11], 2);
+    *p = '\0';
+
+    return NGX_OK;
+}
+
+
+static u_char *
+ngx_crypt_to64(u_char *p, uint32_t v, size_t n)
+{
+    static u_char   itoa64[] =
+        "./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
+
+    while (n--) {
+       *p++ = itoa64[v & 0x3f];
+       v >>= 6;
+    }
+
+    return p;
+}
+
+
+static ngx_int_t
+ngx_crypt_plain(ngx_pool_t *pool, u_char *key, u_char *salt, u_char **encrypted)
+{
+    size_t   len;
+    u_char  *p;
+
+    len = ngx_strlen(key);
+
+    *encrypted = ngx_pnalloc(pool, sizeof("{PLAIN}") - 1 + len + 1);
+    if (*encrypted == NULL) {
+        return NGX_ERROR;
+    }
+
+    p = ngx_cpymem(*encrypted, "{PLAIN}", sizeof("{PLAIN}") - 1);
+    ngx_memcpy(p, key, len + 1);
+
+    return NGX_OK;
+}
+
+
+#if (NGX_HAVE_SHA1)
+
+static ngx_int_t
+ngx_crypt_ssha(ngx_pool_t *pool, u_char *key, u_char *salt, u_char **encrypted)
+{
+    size_t       len;
+    ngx_str_t    encoded, decoded;
+    ngx_sha1_t   sha1;
+
+    /* "{SSHA}" base64(SHA1(key salt) salt) */
+
+    /* decode base64 salt to find out true salt */
+
+    encoded.data = salt + sizeof("{SSHA}") - 1;
+    encoded.len = ngx_strlen(encoded.data);
+
+    decoded.data = ngx_pnalloc(pool, ngx_base64_decoded_length(encoded.len));
+    if (decoded.data == NULL) {
+        return NGX_ERROR;
+    }
+
+    ngx_decode_base64(&decoded, &encoded);
+
+    /* update SHA1 from key and salt */
+
+    ngx_sha1_init(&sha1);
+    ngx_sha1_update(&sha1, key, ngx_strlen(key));
+    ngx_sha1_update(&sha1, decoded.data + 20, decoded.len - 20);
+    ngx_sha1_final(decoded.data, &sha1);
+
+    /* encode it back to base64 */
+
+    len = sizeof("{SSHA}") - 1 + ngx_base64_encoded_length(decoded.len) + 1;
+
+    *encrypted = ngx_pnalloc(pool, len);
+    if (*encrypted == NULL) {
+        return NGX_ERROR;
+    }
+
+    encoded.data = ngx_cpymem(*encrypted, "{SSHA}", sizeof("{SSHA}") - 1);
+    ngx_encode_base64(&encoded, &decoded);
+    encoded.data[encoded.len] = '\0';
+
+    return NGX_OK;
+}
+
+#endif /* NGX_HAVE_SHA1 */
+
+#endif /* NGX_CRYPT */
--- nginx-1.0.0.orig/src/core/ngx_spinlock.c
+++ nginx-1.0.0/src/core/ngx_spinlock.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/core/nginx.h
+++ nginx-1.0.0/src/core/nginx.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -8,8 +9,8 @@
 #define _NGINX_H_INCLUDED_
 
 
-#define nginx_version      1000000
-#define NGINX_VERSION      "1.0.0"
+#define nginx_version      1000014
+#define NGINX_VERSION      "1.0.14"
 #define NGINX_VER          "nginx/" NGINX_VERSION
 
 #define NGINX_VAR          "NGINX"
--- nginx-1.0.0.orig/src/core/ngx_shmtx.c
+++ nginx-1.0.0/src/core/ngx_shmtx.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -16,9 +17,166 @@ ngx_shmtx_create(ngx_shmtx_t *mtx, void 
 {
     mtx->lock = addr;
 
+    if (mtx->spin == (ngx_uint_t) -1) {
+        return NGX_OK;
+    }
+
+    mtx->spin = 2048;
+
+#if (NGX_HAVE_POSIX_SEM)
+
+    if (sem_init(&mtx->sem, 1, 0) == -1) {
+        ngx_log_error(NGX_LOG_ALERT, ngx_cycle->log, ngx_errno,
+                      "sem_init() failed");
+    } else {
+        mtx->semaphore = 1;
+    }
+
+#endif
+
     return NGX_OK;
 }
 
+
+void
+ngx_shmtx_destory(ngx_shmtx_t *mtx)
+{
+#if (NGX_HAVE_POSIX_SEM)
+
+    if (mtx->semaphore) {
+        if (sem_destroy(&mtx->sem) == -1) {
+            ngx_log_error(NGX_LOG_ALERT, ngx_cycle->log, ngx_errno,
+                          "sem_destroy() failed");
+        }
+    }
+
+#endif
+}
+
+
+ngx_uint_t
+ngx_shmtx_trylock(ngx_shmtx_t *mtx)
+{
+    ngx_atomic_uint_t  val;
+
+    val = *mtx->lock;
+
+    return ((val & 0x80000000) == 0
+            && ngx_atomic_cmp_set(mtx->lock, val, val | 0x80000000));
+}
+
+
+void
+ngx_shmtx_lock(ngx_shmtx_t *mtx)
+{
+    ngx_uint_t         i, n;
+    ngx_atomic_uint_t  val;
+
+    ngx_log_debug0(NGX_LOG_DEBUG_CORE, ngx_cycle->log, 0, "shmtx lock");
+
+    for ( ;; ) {
+
+        val = *mtx->lock;
+
+        if ((val & 0x80000000) == 0
+            && ngx_atomic_cmp_set(mtx->lock, val, val | 0x80000000))
+        {
+            return;
+        }
+
+        if (ngx_ncpu > 1) {
+
+            for (n = 1; n < mtx->spin; n <<= 1) {
+
+                for (i = 0; i < n; i++) {
+                    ngx_cpu_pause();
+                }
+
+                val = *mtx->lock;
+
+                if ((val & 0x80000000) == 0
+                    && ngx_atomic_cmp_set(mtx->lock, val, val | 0x80000000))
+                {
+                    return;
+                }
+            }
+        }
+
+#if (NGX_HAVE_POSIX_SEM)
+
+        if (mtx->semaphore) {
+            val = *mtx->lock;
+
+            if ((val & 0x80000000)
+                && ngx_atomic_cmp_set(mtx->lock, val, val + 1))
+            {
+                ngx_log_debug1(NGX_LOG_DEBUG_CORE, ngx_cycle->log, 0,
+                               "shmtx wait %XA", val);
+
+                while (sem_wait(&mtx->sem) == -1) {
+                    ngx_err_t  err;
+
+                    err = ngx_errno;
+
+                    if (err != NGX_EINTR) {
+                        ngx_log_error(NGX_LOG_ALERT, ngx_cycle->log, err,
+                                   "sem_wait() failed while waiting on shmtx");
+                        break;
+                    }
+                }
+
+                ngx_log_debug0(NGX_LOG_DEBUG_CORE, ngx_cycle->log, 0,
+                               "shmtx awoke");
+            }
+
+            continue;
+        }
+
+#endif
+
+        ngx_sched_yield();
+    }
+}
+
+
+void
+ngx_shmtx_unlock(ngx_shmtx_t *mtx)
+{
+    ngx_atomic_uint_t  val, old, wait;
+
+    if (mtx->spin != (ngx_uint_t) -1) {
+        ngx_log_debug0(NGX_LOG_DEBUG_CORE, ngx_cycle->log, 0, "shmtx unlock");
+    }
+
+    for ( ;; ) {
+
+        old = *mtx->lock;
+        wait = old & 0x7fffffff;
+        val = wait ? wait - 1 : 0;
+
+        if (ngx_atomic_cmp_set(mtx->lock, old, val)) {
+            break;
+        }
+    }
+
+#if (NGX_HAVE_POSIX_SEM)
+
+    if (wait == 0 || !mtx->semaphore) {
+        return;
+    }
+
+    ngx_log_debug1(NGX_LOG_DEBUG_CORE, ngx_cycle->log, 0,
+                   "shmtx wake %XA", old);
+
+    if (sem_post(&mtx->sem) == -1) {
+        ngx_log_error(NGX_LOG_ALERT, ngx_cycle->log, ngx_errno,
+                      "sem_post() failed while wake shmtx");
+    }
+
+#endif
+}
+
+
 #else
 
 
@@ -65,4 +223,62 @@ ngx_shmtx_destory(ngx_shmtx_t *mtx)
 }
 
 
+ngx_uint_t
+ngx_shmtx_trylock(ngx_shmtx_t *mtx)
+{
+    ngx_err_t  err;
+
+    err = ngx_trylock_fd(mtx->fd);
+
+    if (err == 0) {
+        return 1;
+    }
+
+    if (err == NGX_EAGAIN) {
+        return 0;
+    }
+
+#if __osf__ /* Tru64 UNIX */
+
+    if (err == NGX_EACCESS) {
+        return 0;
+    }
+
+#endif
+
+    ngx_log_abort(err, ngx_trylock_fd_n " %s failed", mtx->name);
+
+    return 0;
+}
+
+
+void
+ngx_shmtx_lock(ngx_shmtx_t *mtx)
+{
+    ngx_err_t  err;
+
+    err = ngx_lock_fd(mtx->fd);
+
+    if (err == 0) {
+        return;
+    }
+
+    ngx_log_abort(err, ngx_lock_fd_n " %s failed", mtx->name);
+}
+
+
+void
+ngx_shmtx_unlock(ngx_shmtx_t *mtx)
+{
+    ngx_err_t  err;
+
+    err = ngx_unlock_fd(mtx->fd);
+
+    if (err == 0) {
+        return;
+    }
+
+    ngx_log_abort(err, ngx_unlock_fd_n " %s failed", mtx->name);
+}
+
 #endif
--- nginx-1.0.0.orig/src/core/ngx_crc32.c
+++ nginx-1.0.0/src/core/ngx_crc32.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/core/ngx_connection.h
+++ nginx-1.0.0/src/core/ngx_connection.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/core/ngx_file.c
+++ nginx-1.0.0/src/core/ngx_file.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -926,6 +927,7 @@ ngx_walk_tree(ngx_tree_ctx_t *ctx, ngx_s
                            "tree file \"%s\"", file.data);
 
             ctx->size = ngx_de_size(&dir);
+            ctx->fs_size = ngx_de_fs_size(&dir);
             ctx->access = ngx_de_access(&dir);
             ctx->mtime = ngx_de_mtime(&dir);
 
--- nginx-1.0.0.orig/src/core/ngx_resolver.c
+++ nginx-1.0.0/src/core/ngx_resolver.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -151,11 +152,6 @@ ngx_resolver_create(ngx_conf_t *cf, ngx_
         uc->sockaddr = addr->sockaddr;
         uc->socklen = addr->socklen;
         uc->server = addr->name;
-
-        uc->log = cf->cycle->new_log;
-        uc->log.handler = ngx_resolver_log_error;
-        uc->log.data = uc;
-        uc->log.action = "resolving";
     }
 
     return r;
@@ -829,6 +825,12 @@ ngx_resolver_send_query(ngx_resolver_t *
     uc = r->udp_connection;
 
     if (uc->connection == NULL) {
+
+        uc->log = *r->log;
+        uc->log.handler = ngx_resolver_log_error;
+        uc->log.data = uc;
+        uc->log.action = "resolving";
+
         if (ngx_udp_connect(uc) != NGX_OK) {
             return NGX_ERROR;
         }
@@ -1422,7 +1424,7 @@ ngx_resolver_process_ptr(ngx_resolver_t 
     in_addr_t             addr;
     ngx_int_t             digit;
     ngx_str_t             name;
-    ngx_uint_t            i, mask, qtype, qclass, qident;
+    ngx_uint_t            i, mask, qident;
     ngx_resolver_an_t    *an;
     ngx_resolver_ctx_t   *ctx, *next;
     ngx_resolver_node_t  *rn;
@@ -1514,12 +1516,12 @@ ngx_resolver_process_ptr(ngx_resolver_t 
 
     an = (ngx_resolver_an_t *) &buf[i + 2];
 
-    qtype = (an->type_hi << 8) + an->type_lo;
-    qclass = (an->class_hi << 8) + an->class_lo;
     len = (an->len_hi << 8) + an->len_lo;
 
     ngx_log_debug3(NGX_LOG_DEBUG_CORE, r->log, 0,
-                  "resolver qt:%ui cl:%ui len:%uz", qtype, qclass, len);
+                  "resolver qt:%ui cl:%ui len:%uz",
+                  (an->type_hi << 8) + an->type_lo,
+                  (an->class_hi << 8) + an->class_lo, len);
 
     i += 2 + sizeof(ngx_resolver_an_t);
 
@@ -1624,20 +1626,15 @@ ngx_resolver_lookup_name(ngx_resolver_t 
 
         /* hash == node->key */
 
-        do {
-            rn = (ngx_resolver_node_t *) node;
+        rn = (ngx_resolver_node_t *) node;
 
-            rc = ngx_memn2cmp(name->data, rn->name, name->len, rn->nlen);
+        rc = ngx_memn2cmp(name->data, rn->name, name->len, rn->nlen);
 
-            if (rc == 0) {
-                return rn;
-            }
-
-            node = (rc < 0) ? node->left : node->right;
-
-        } while (node != sentinel && hash == node->key);
+        if (rc == 0) {
+            return rn;
+        }
 
-        break;
+        node = (rc < 0) ? node->left : node->right;
     }
 
     /* not found */
@@ -1922,7 +1919,13 @@ done:
     n = *src++;
 
     for ( ;; ) {
-        if (n != 0xc0) {
+        if (n & 0xc0) {
+            n = ((n & 0x3f) << 8) + *src;
+            src = &buf[n];
+
+            n = *src++;
+
+        } else {
             ngx_memcpy(dst, src, n);
             dst += n;
             src += n;
@@ -1932,12 +1935,6 @@ done:
             if (n != 0) {
                 *dst++ = '.';
             }
-
-        } else {
-            n = ((n & 0x3f) << 8) + *src;
-            src = &buf[n];
-
-            n = *src++;
         }
 
         if (n == 0) {
--- nginx-1.0.0.orig/src/core/ngx_rbtree.h
+++ nginx-1.0.0/src/core/ngx_rbtree.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/core/ngx_parse.h
+++ nginx-1.0.0/src/core/ngx_parse.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -17,7 +18,7 @@
 
 ssize_t ngx_parse_size(ngx_str_t *line);
 off_t ngx_parse_offset(ngx_str_t *line);
-ngx_int_t ngx_parse_time(ngx_str_t *line, ngx_uint_t sec);
+ngx_int_t ngx_parse_time(ngx_str_t *line, ngx_uint_t is_sec);
 
 
 #endif /* _NGX_PARSE_H_INCLUDED_ */
--- nginx-1.0.0.orig/src/core/ngx_slab.h
+++ nginx-1.0.0/src/core/ngx_slab.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/core/ngx_log.c
+++ nginx-1.0.0/src/core/ngx_log.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -369,12 +370,13 @@ ngx_log_create(ngx_cycle_t *cycle, ngx_s
 char *
 ngx_log_set_levels(ngx_conf_t *cf, ngx_log_t *log)
 {
-    ngx_uint_t   i, n, d;
+    ngx_uint_t   i, n, d, found;
     ngx_str_t   *value;
 
     value = cf->args->elts;
 
     for (i = 2; i < cf->args->nelts; i++) {
+        found = 0;
 
         for (n = 1; n <= NGX_LOG_DEBUG; n++) {
             if (ngx_strcmp(value[i].data, err_levels[n].data) == 0) {
@@ -387,7 +389,8 @@ ngx_log_set_levels(ngx_conf_t *cf, ngx_l
                 }
 
                 log->log_level = n;
-                continue;
+                found = 1;
+                break;
             }
         }
 
@@ -401,11 +404,13 @@ ngx_log_set_levels(ngx_conf_t *cf, ngx_l
                 }
 
                 log->log_level |= d;
+                found = 1;
+                break;
             }
         }
 
 
-        if (log->log_level == 0) {
+        if (!found) {
             ngx_conf_log_error(NGX_LOG_EMERG, cf, 0,
                                "invalid log level \"%V\"", &value[i]);
             return NGX_CONF_ERROR;
--- nginx-1.0.0.orig/src/core/ngx_queue.h
+++ nginx-1.0.0/src/core/ngx_queue.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/core/ngx_core.h
+++ nginx-1.0.0/src/core/ngx_core.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -58,6 +59,7 @@ typedef void (*ngx_connection_handler_pt
 #include <ngx_file.h>
 #include <ngx_crc.h>
 #include <ngx_crc32.h>
+#include <ngx_murmurhash.h>
 #if (NGX_PCRE)
 #include <ngx_regex.h>
 #endif
--- nginx-1.0.0.orig/src/core/ngx_conf_file.h
+++ nginx-1.0.0/src/core/ngx_conf_file.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/core/ngx_output_chain.c
+++ nginx-1.0.0/src/core/ngx_output_chain.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/core/ngx_regex.c
+++ nginx-1.0.0/src/core/ngx_regex.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -137,23 +138,6 @@ failed:
 
 
 ngx_int_t
-ngx_regex_capture_count(ngx_regex_t *re)
-{
-    int  rc, n;
-
-    n = 0;
-
-    rc = pcre_fullinfo(re, NULL, PCRE_INFO_CAPTURECOUNT, &n);
-
-    if (rc < 0) {
-        return (ngx_int_t) rc;
-    }
-
-    return (ngx_int_t) n;
-}
-
-
-ngx_int_t
 ngx_regex_exec_array(ngx_array_t *a, ngx_str_t *s, ngx_log_t *log)
 {
     ngx_int_t         n;
--- nginx-1.0.0.orig/src/core/ngx_queue.c
+++ nginx-1.0.0/src/core/ngx_queue.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/core/ngx_palloc.h
+++ nginx-1.0.0/src/core/ngx_palloc.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/core/ngx_open_file_cache.h
+++ nginx-1.0.0/src/core/ngx_open_file_cache.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -20,6 +21,7 @@ typedef struct {
     ngx_file_uniq_t          uniq;
     time_t                   mtime;
     off_t                    size;
+    off_t                    fs_size;
     off_t                    directio;
     size_t                   read_ahead;
 
--- nginx-1.0.0.orig/src/core/ngx_file.h
+++ nginx-1.0.0/src/core/ngx_file.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -104,6 +105,7 @@ typedef ngx_int_t (*ngx_tree_handler_pt)
 
 struct ngx_tree_ctx_s {
     off_t                      size;
+    off_t                      fs_size;
     ngx_uint_t                 access;
     time_t                     mtime;
 
--- /dev/null
+++ nginx-1.0.0/src/core/ngx_md5.c
@@ -0,0 +1,289 @@
+
+/*
+ * An internal implementation, based on Alexander Peslyak's
+ * public domain implementation:
+ * http://openwall.info/wiki/people/solar/software/public-domain-source-code/md5
+ * It is not expected to be optimal and is used only
+ * if no MD5 implementation was found in system.
+ */
+
+
+#include <ngx_config.h>
+#include <ngx_core.h>
+#include <ngx_md5.h>
+
+
+#if !(NGX_HAVE_MD5)
+
+static const u_char *ngx_md5_body(ngx_md5_t *ctx, const u_char *data,
+    size_t size);
+
+
+void
+ngx_md5_init(ngx_md5_t *ctx)
+{
+    ctx->a = 0x67452301;
+    ctx->b = 0xefcdab89;
+    ctx->c = 0x98badcfe;
+    ctx->d = 0x10325476;
+
+    ctx->bytes = 0;
+}
+
+
+void
+ngx_md5_update(ngx_md5_t *ctx, const void *data, size_t size)
+{
+    size_t  used, free;
+
+    used = (size_t) (ctx->bytes & 0x3f);
+    ctx->bytes += size;
+
+    if (used) {
+        free = 64 - used;
+
+        if (size < free) {
+            ngx_memcpy(&ctx->buffer[used], data, size);
+            return;
+        }
+
+        ngx_memcpy(&ctx->buffer[used], data, free);
+        data = (u_char *) data + free;
+        size -= free;
+        (void) ngx_md5_body(ctx, ctx->buffer, 64);
+    }
+
+    if (size >= 64) {
+        data = ngx_md5_body(ctx, data, size & ~(size_t) 0x3f);
+        size &= 0x3f;
+    }
+
+    ngx_memcpy(ctx->buffer, data, size);
+}
+
+
+void
+ngx_md5_final(u_char result[16], ngx_md5_t *ctx)
+{
+    size_t  used, free;
+
+    used = (size_t) (ctx->bytes & 0x3f);
+
+    ctx->buffer[used++] = 0x80;
+
+    free = 64 - used;
+
+    if (free < 8) {
+        ngx_memzero(&ctx->buffer[used], free);
+        (void) ngx_md5_body(ctx, ctx->buffer, 64);
+        used = 0;
+        free = 64;
+    }
+
+    ngx_memzero(&ctx->buffer[used], free - 8);
+
+    ctx->bytes <<= 3;
+    ctx->buffer[56] = (u_char) ctx->bytes;
+    ctx->buffer[57] = (u_char) (ctx->bytes >> 8);
+    ctx->buffer[58] = (u_char) (ctx->bytes >> 16);
+    ctx->buffer[59] = (u_char) (ctx->bytes >> 24);
+    ctx->buffer[60] = (u_char) (ctx->bytes >> 32);
+    ctx->buffer[61] = (u_char) (ctx->bytes >> 40);
+    ctx->buffer[62] = (u_char) (ctx->bytes >> 48);
+    ctx->buffer[63] = (u_char) (ctx->bytes >> 56);
+
+    (void) ngx_md5_body(ctx, ctx->buffer, 64);
+
+    result[0] = (u_char) ctx->a;
+    result[1] = (u_char) (ctx->a >> 8);
+    result[2] = (u_char) (ctx->a >> 16);
+    result[3] = (u_char) (ctx->a >> 24);
+    result[4] = (u_char) ctx->b;
+    result[5] = (u_char) (ctx->b >> 8);
+    result[6] = (u_char) (ctx->b >> 16);
+    result[7] = (u_char) (ctx->b >> 24);
+    result[8] = (u_char) ctx->c;
+    result[9] = (u_char) (ctx->c >> 8);
+    result[10] = (u_char) (ctx->c >> 16);
+    result[11] = (u_char) (ctx->c >> 24);
+    result[12] = (u_char) ctx->d;
+    result[13] = (u_char) (ctx->d >> 8);
+    result[14] = (u_char) (ctx->d >> 16);
+    result[15] = (u_char) (ctx->d >> 24);
+
+    ngx_memzero(ctx, sizeof(*ctx));
+}
+
+
+/*
+ * The basic MD5 functions.
+ *
+ * F and G are optimized compared to their RFC 1321 definitions for
+ * architectures that lack an AND-NOT instruction, just like in
+ * Colin Plumb's implementation.
+ */
+
+#define F(x, y, z)  ((z) ^ ((x) & ((y) ^ (z))))
+#define G(x, y, z)  ((y) ^ ((z) & ((x) ^ (y))))
+#define H(x, y, z)  ((x) ^ (y) ^ (z))
+#define I(x, y, z)  ((y) ^ ((x) | ~(z)))
+
+/*
+ * The MD5 transformation for all four rounds.
+ */
+
+#define STEP(f, a, b, c, d, x, t, s)                                          \
+    (a) += f((b), (c), (d)) + (x) + (t);                                      \
+    (a) = (((a) << (s)) | (((a) & 0xffffffff) >> (32 - (s))));                \
+    (a) += (b)
+
+/*
+ * SET() reads 4 input bytes in little-endian byte order and stores them
+ * in a properly aligned word in host byte order.
+ *
+ * The check for little-endian architectures that tolerate unaligned
+ * memory accesses is just an optimization.  Nothing will break if it
+ * does not work.
+ */
+
+#if (NGX_HAVE_LITTLE_ENDIAN && NGX_HAVE_NONALIGNED)
+
+#define SET(n)      (*(uint32_t *) &p[n * 4])
+#define GET(n)      (*(uint32_t *) &p[n * 4])
+
+#else
+
+#define SET(n)                                                                \
+    (block[n] =                                                               \
+    (uint32_t) p[n * 4] |                                                     \
+    ((uint32_t) p[n * 4 + 1] << 8) |                                          \
+    ((uint32_t) p[n * 4 + 2] << 16) |                                         \
+    ((uint32_t) p[n * 4 + 3] << 24))
+
+#define GET(n)      block[n]
+
+#endif
+
+
+/*
+ * This processes one or more 64-byte data blocks, but does not update
+ * the bit counters.  There are no alignment requirements.
+ */
+
+static const u_char *
+ngx_md5_body(ngx_md5_t *ctx, const u_char *data, size_t size)
+{
+    uint32_t       a, b, c, d;
+    uint32_t       saved_a, saved_b, saved_c, saved_d;
+    const u_char  *p;
+#if !(NGX_HAVE_LITTLE_ENDIAN && NGX_HAVE_NONALIGNED)
+    uint32_t       block[16];
+#endif
+
+    p = data;
+
+    a = ctx->a;
+    b = ctx->b;
+    c = ctx->c;
+    d = ctx->d;
+
+    do {
+        saved_a = a;
+        saved_b = b;
+        saved_c = c;
+        saved_d = d;
+
+        /* Round 1 */
+
+        STEP(F, a, b, c, d, SET(0),  0xd76aa478, 7);
+        STEP(F, d, a, b, c, SET(1),  0xe8c7b756, 12);
+        STEP(F, c, d, a, b, SET(2),  0x242070db, 17);
+        STEP(F, b, c, d, a, SET(3),  0xc1bdceee, 22);
+        STEP(F, a, b, c, d, SET(4),  0xf57c0faf, 7);
+        STEP(F, d, a, b, c, SET(5),  0x4787c62a, 12);
+        STEP(F, c, d, a, b, SET(6),  0xa8304613, 17);
+        STEP(F, b, c, d, a, SET(7),  0xfd469501, 22);
+        STEP(F, a, b, c, d, SET(8),  0x698098d8, 7);
+        STEP(F, d, a, b, c, SET(9),  0x8b44f7af, 12);
+        STEP(F, c, d, a, b, SET(10), 0xffff5bb1, 17);
+        STEP(F, b, c, d, a, SET(11), 0x895cd7be, 22);
+        STEP(F, a, b, c, d, SET(12), 0x6b901122, 7);
+        STEP(F, d, a, b, c, SET(13), 0xfd987193, 12);
+        STEP(F, c, d, a, b, SET(14), 0xa679438e, 17);
+        STEP(F, b, c, d, a, SET(15), 0x49b40821, 22);
+
+        /* Round 2 */
+
+        STEP(G, a, b, c, d, GET(1),  0xf61e2562, 5);
+        STEP(G, d, a, b, c, GET(6),  0xc040b340, 9);
+        STEP(G, c, d, a, b, GET(11), 0x265e5a51, 14);
+        STEP(G, b, c, d, a, GET(0),  0xe9b6c7aa, 20);
+        STEP(G, a, b, c, d, GET(5),  0xd62f105d, 5);
+        STEP(G, d, a, b, c, GET(10), 0x02441453, 9);
+        STEP(G, c, d, a, b, GET(15), 0xd8a1e681, 14);
+        STEP(G, b, c, d, a, GET(4),  0xe7d3fbc8, 20);
+        STEP(G, a, b, c, d, GET(9),  0x21e1cde6, 5);
+        STEP(G, d, a, b, c, GET(14), 0xc33707d6, 9);
+        STEP(G, c, d, a, b, GET(3),  0xf4d50d87, 14);
+        STEP(G, b, c, d, a, GET(8),  0x455a14ed, 20);
+        STEP(G, a, b, c, d, GET(13), 0xa9e3e905, 5);
+        STEP(G, d, a, b, c, GET(2),  0xfcefa3f8, 9);
+        STEP(G, c, d, a, b, GET(7),  0x676f02d9, 14);
+        STEP(G, b, c, d, a, GET(12), 0x8d2a4c8a, 20);
+
+        /* Round 3 */
+
+        STEP(H, a, b, c, d, GET(5),  0xfffa3942, 4);
+        STEP(H, d, a, b, c, GET(8),  0x8771f681, 11);
+        STEP(H, c, d, a, b, GET(11), 0x6d9d6122, 16);
+        STEP(H, b, c, d, a, GET(14), 0xfde5380c, 23);
+        STEP(H, a, b, c, d, GET(1),  0xa4beea44, 4);
+        STEP(H, d, a, b, c, GET(4),  0x4bdecfa9, 11);
+        STEP(H, c, d, a, b, GET(7),  0xf6bb4b60, 16);
+        STEP(H, b, c, d, a, GET(10), 0xbebfbc70, 23);
+        STEP(H, a, b, c, d, GET(13), 0x289b7ec6, 4);
+        STEP(H, d, a, b, c, GET(0),  0xeaa127fa, 11);
+        STEP(H, c, d, a, b, GET(3),  0xd4ef3085, 16);
+        STEP(H, b, c, d, a, GET(6),  0x04881d05, 23);
+        STEP(H, a, b, c, d, GET(9),  0xd9d4d039, 4);
+        STEP(H, d, a, b, c, GET(12), 0xe6db99e5, 11);
+        STEP(H, c, d, a, b, GET(15), 0x1fa27cf8, 16);
+        STEP(H, b, c, d, a, GET(2),  0xc4ac5665, 23);
+
+        /* Round 4 */
+
+        STEP(I, a, b, c, d, GET(0),  0xf4292244, 6);
+        STEP(I, d, a, b, c, GET(7),  0x432aff97, 10);
+        STEP(I, c, d, a, b, GET(14), 0xab9423a7, 15);
+        STEP(I, b, c, d, a, GET(5),  0xfc93a039, 21);
+        STEP(I, a, b, c, d, GET(12), 0x655b59c3, 6);
+        STEP(I, d, a, b, c, GET(3),  0x8f0ccc92, 10);
+        STEP(I, c, d, a, b, GET(10), 0xffeff47d, 15);
+        STEP(I, b, c, d, a, GET(1),  0x85845dd1, 21);
+        STEP(I, a, b, c, d, GET(8),  0x6fa87e4f, 6);
+        STEP(I, d, a, b, c, GET(15), 0xfe2ce6e0, 10);
+        STEP(I, c, d, a, b, GET(6),  0xa3014314, 15);
+        STEP(I, b, c, d, a, GET(13), 0x4e0811a1, 21);
+        STEP(I, a, b, c, d, GET(4),  0xf7537e82, 6);
+        STEP(I, d, a, b, c, GET(11), 0xbd3af235, 10);
+        STEP(I, c, d, a, b, GET(2),  0x2ad7d2bb, 15);
+        STEP(I, b, c, d, a, GET(9),  0xeb86d391, 21);
+
+        a += saved_a;
+        b += saved_b;
+        c += saved_c;
+        d += saved_d;
+
+        p += 64;
+
+    } while (size -= 64);
+
+    ctx->a = a;
+    ctx->b = b;
+    ctx->c = c;
+    ctx->d = d;
+
+    return p;
+}
+
+#endif
--- /dev/null
+++ nginx-1.0.0/src/core/ngx_crypt.h
@@ -0,0 +1,20 @@
+
+/*
+ * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
+ */
+
+
+#ifndef _NGX_CRYPT_H_INCLUDED_
+#define _NGX_CRYPT_H_INCLUDED_
+
+
+#include <ngx_config.h>
+#include <ngx_core.h>
+
+
+ngx_int_t ngx_crypt(ngx_pool_t *pool, u_char *key, u_char *salt,
+    u_char **encrypted);
+
+
+#endif /* _NGX_CRYPT_H_INCLUDED_ */
--- nginx-1.0.0.orig/src/core/ngx_parse.c
+++ nginx-1.0.0/src/core/ngx_parse.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -93,7 +94,7 @@ ngx_parse_offset(ngx_str_t *line)
 
 
 ngx_int_t
-ngx_parse_time(ngx_str_t *line, ngx_uint_t sec)
+ngx_parse_time(ngx_str_t *line, ngx_uint_t is_sec)
 {
     u_char      *p, *last;
     ngx_int_t    value, total, scale;
@@ -114,8 +115,8 @@ ngx_parse_time(ngx_str_t *line, ngx_uint
     valid = 0;
     value = 0;
     total = 0;
-    step = sec ? st_start : st_month;
-    scale = sec ? 1 : 1000;
+    step = is_sec ? st_start : st_month;
+    scale = is_sec ? 1 : 1000;
 
     p = line->data;
     last = p + line->len;
@@ -135,81 +136,81 @@ ngx_parse_time(ngx_str_t *line, ngx_uint
                 return NGX_ERROR;
             }
             step = st_year;
-            max = 68;
+            max = NGX_MAX_INT32_VALUE / (60 * 60 * 24 * 365);
             scale = 60 * 60 * 24 * 365;
             break;
 
         case 'M':
-            if (step > st_year) {
+            if (step >= st_month) {
                 return NGX_ERROR;
             }
             step = st_month;
-            max = 828;
+            max = NGX_MAX_INT32_VALUE / (60 * 60 * 24 * 30);
             scale = 60 * 60 * 24 * 30;
             break;
 
         case 'w':
-            if (step > st_month) {
+            if (step >= st_week) {
                 return NGX_ERROR;
             }
             step = st_week;
-            max = 3550;
+            max = NGX_MAX_INT32_VALUE / (60 * 60 * 24 * 7);
             scale = 60 * 60 * 24 * 7;
             break;
 
         case 'd':
-            if (step > st_week) {
+            if (step >= st_day) {
                 return NGX_ERROR;
             }
             step = st_day;
-            max = 24855;
+            max = NGX_MAX_INT32_VALUE / (60 * 60 * 24);
             scale = 60 * 60 * 24;
             break;
 
         case 'h':
-            if (step > st_day) {
+            if (step >= st_hour) {
                 return NGX_ERROR;
             }
             step = st_hour;
-            max = 596523;
+            max = NGX_MAX_INT32_VALUE / (60 * 60);
             scale = 60 * 60;
             break;
 
         case 'm':
             if (*p == 's') {
-                if (sec || step > st_sec) {
+                if (is_sec || step >= st_msec) {
                     return NGX_ERROR;
                 }
                 p++;
                 step = st_msec;
-                max = 2147483647;
+                max = NGX_MAX_INT32_VALUE;
                 scale = 1;
                 break;
             }
 
-            if (step > st_hour) {
+            if (step >= st_min) {
                 return NGX_ERROR;
             }
             step = st_min;
-            max = 35791394;
+            max = NGX_MAX_INT32_VALUE / 60;
             scale = 60;
             break;
 
         case 's':
-            if (step > st_min) {
+            if (step >= st_sec) {
                 return NGX_ERROR;
             }
             step = st_sec;
-            max = 2147483647;
+            max = NGX_MAX_INT32_VALUE;
             scale = 1;
             break;
 
         case ' ':
-            if (step > st_min) {
+            if (step >= st_sec) {
                 return NGX_ERROR;
             }
             step = st_last;
-            max = 2147483647;
+            max = NGX_MAX_INT32_VALUE;
             scale = 1;
             break;
 
@@ -217,7 +218,7 @@ ngx_parse_time(ngx_str_t *line, ngx_uint
             return NGX_ERROR;
         }
 
-        if (step != st_msec && !sec) {
+        if (step != st_msec && !is_sec) {
             scale *= 1000;
             max /= 1000;
         }
@@ -228,12 +229,12 @@ ngx_parse_time(ngx_str_t *line, ngx_uint
 
         total += value * scale;
 
-        if ((ngx_uint_t) total > 2147483647) {
+        if ((ngx_uint_t) total > NGX_MAX_INT32_VALUE) {
             return NGX_ERROR;
         }
 
         value = 0;
-        scale = sec ? 1 : 1000;
+        scale = is_sec ? 1 : 1000;
 
         while (p < last && *p == ' ') {
             p++;
--- nginx-1.0.0.orig/src/core/ngx_slab.c
+++ nginx-1.0.0/src/core/ngx_slab.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 #include <ngx_config.h>
--- nginx-1.0.0.orig/src/core/ngx_times.c
+++ nginx-1.0.0/src/core/ngx_times.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -286,7 +287,7 @@ ngx_gmtime(time_t t, ngx_tm_t *tp)
 
     days = n / 86400;
 
-    /* Jaunary 1, 1970 was Thursday */
+    /* January 1, 1970 was Thursday */
 
     wday = (4 + days) % 7;
 
--- nginx-1.0.0.orig/src/core/ngx_hash.h
+++ nginx-1.0.0/src/core/ngx_hash.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- /dev/null
+++ nginx-1.0.0/src/core/ngx_murmurhash.h
@@ -0,0 +1,19 @@
+
+/*
+ * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
+ */
+
+
+#ifndef _NGX_MURMURHASH_H_INCLUDED_
+#define _NGX_MURMURHASH_H_INCLUDED_
+
+
+#include <ngx_config.h>
+#include <ngx_core.h>
+
+
+uint32_t ngx_murmur_hash2(u_char *data, size_t len);
+
+
+#endif /* _NGX_CRC_H_INCLUDED_ */
--- nginx-1.0.0.orig/src/core/ngx_conf_file.c
+++ nginx-1.0.0/src/core/ngx_conf_file.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/core/ngx_crc32.h
+++ nginx-1.0.0/src/core/ngx_crc32.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/core/ngx_cycle.c
+++ nginx-1.0.0/src/core/ngx_cycle.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -418,11 +419,6 @@ ngx_init_cycle(ngx_cycle_t *old_cycle)
             goto failed;
         }
 
-        if (shm_zone[i].init == NULL) {
-            /* unused shared zone */
-            continue;
-        }
-
         shm_zone[i].shm.log = cycle->log;
 
         opart = &old_cycle->shared_memory.part;
@@ -744,7 +740,7 @@ old_shm_zone_done:
         ngx_temp_pool = ngx_create_pool(128, cycle->log);
         if (ngx_temp_pool == NULL) {
             ngx_log_error(NGX_LOG_EMERG, cycle->log, 0,
-                          "can not create ngx_temp_pool");
+                          "could not create ngx_temp_pool");
             exit(1);
         }
 
--- nginx-1.0.0.orig/src/core/ngx_radix_tree.c
+++ nginx-1.0.0/src/core/ngx_radix_tree.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/http/ngx_http_variables.h
+++ nginx-1.0.0/src/http/ngx_http_variables.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -100,7 +101,7 @@ typedef struct {
 
 
 void *ngx_http_map_find(ngx_http_request_t *r, ngx_http_map_t *map,
-    ngx_uint_t key, u_char *text, size_t len, ngx_str_t *match);
+    ngx_str_t *match);
 
 
 ngx_int_t ngx_http_variables_add_core_vars(ngx_conf_t *cf);
--- nginx-1.0.0.orig/src/http/ngx_http_cache.h
+++ nginx-1.0.0/src/http/ngx_http_cache.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -50,7 +51,7 @@ typedef struct {
     time_t                           expire;
     time_t                           valid_sec;
     size_t                           body_start;
-    off_t                            length;
+    off_t                            fs_size;
 } ngx_http_file_cache_node_t;
 
 
@@ -68,6 +69,7 @@ struct ngx_http_cache_s {
     size_t                           header_start;
     size_t                           body_start;
     off_t                            length;
+    off_t                            fs_size;
 
     ngx_uint_t                       min_uses;
     ngx_uint_t                       error;
--- nginx-1.0.0.orig/src/http/ngx_http_request_body.c
+++ nginx-1.0.0/src/http/ngx_http_request_body.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -143,6 +144,7 @@ ngx_http_read_client_request_body(ngx_ht
 
             r->header_in->pos += (size_t) r->headers_in.content_length_n;
             r->request_length += r->headers_in.content_length_n;
+            b->last = r->header_in->pos;
 
             if (r->request_body_in_file_only) {
                 if (ngx_http_write_request_body(r, rb->bufs) != NGX_OK) {
@@ -371,10 +373,14 @@ ngx_http_do_read_client_request_body(ngx
         }
     }
 
-    if (r->request_body_in_file_only && rb->bufs->next) {
+    if (rb->bufs->next
+        && (r->request_body_in_file_only || r->request_body_in_single_buf))
+    {
         rb->bufs = rb->bufs->next;
     }
 
+    r->read_event_handler = ngx_http_block_reading;
+
     rb->post_handler(r);
 
     return NGX_OK;
--- nginx-1.0.0.orig/src/http/ngx_http_request.c
+++ nginx-1.0.0/src/http/ngx_http_request.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -671,7 +672,27 @@ ngx_http_ssl_servername(ngx_ssl_conn_t *
 
     sscf = ngx_http_get_module_srv_conf(r, ngx_http_ssl_module);
 
-    SSL_set_SSL_CTX(ssl_conn, sscf->ssl.ctx);
+    if (sscf->ssl.ctx) {
+        SSL_set_SSL_CTX(ssl_conn, sscf->ssl.ctx);
+
+        /*
+         * SSL_set_SSL_CTX() only changes certs as of 1.0.0d
+         * adjust other things we care about
+         */
+
+        SSL_set_verify(ssl_conn, SSL_CTX_get_verify_mode(sscf->ssl.ctx),
+                       SSL_CTX_get_verify_callback(sscf->ssl.ctx));
+
+        SSL_set_verify_depth(ssl_conn, SSL_CTX_get_verify_depth(sscf->ssl.ctx));
+
+#ifdef SSL_CTRL_CLEAR_OPTIONS
+        /* only in 0.9.8m+ */
+        SSL_clear_options(ssl_conn, SSL_get_options(ssl_conn) &
+                                    ~SSL_CTX_get_options(sscf->ssl.ctx));
+#endif
+
+        SSL_set_options(ssl_conn, SSL_CTX_get_options(sscf->ssl.ctx));
+    }
 
     return SSL_TLSEXT_ERR_OK;
 }
@@ -1439,8 +1460,6 @@ ngx_http_process_user_agent(ngx_http_req
 
             switch (msie[5]) {
             case '4':
-                r->headers_in.msie4 = 1;
-                /* fall through */
             case '5':
                 r->headers_in.msie6 = 1;
                 break;
@@ -1463,7 +1482,6 @@ ngx_http_process_user_agent(ngx_http_req
     if (ngx_strstrn(user_agent, "Opera", 5 - 1)) {
         r->headers_in.opera = 1;
         r->headers_in.msie = 0;
-        r->headers_in.msie4 = 0;
         r->headers_in.msie6 = 0;
     }
 
@@ -2126,11 +2144,11 @@ ngx_http_finalize_connection(ngx_http_re
 
         if (r->discard_body) {
             r->read_event_handler = ngx_http_discarded_request_body_handler;
+            ngx_add_timer(r->connection->read, clcf->lingering_timeout);
 
             if (r->lingering_time == 0) {
                 r->lingering_time = ngx_time()
                                       + (time_t) (clcf->lingering_time / 1000);
-                ngx_add_timer(r->connection->read, clcf->lingering_timeout);
             }
         }
 
@@ -2145,8 +2163,14 @@ ngx_http_finalize_connection(ngx_http_re
     {
         ngx_http_set_keepalive(r);
         return;
+    }
 
-    } else if (r->lingering_close && clcf->lingering_timeout > 0) {
+    if (clcf->lingering_close == NGX_HTTP_LINGERING_ALWAYS
+        || (clcf->lingering_close == NGX_HTTP_LINGERING_ON
+            && (r->lingering_close
+                || r->header_in->pos < r->header_in->last
+                || r->connection->read->ready)))
+    {
         ngx_http_set_lingering_close(r);
         return;
     }
@@ -2227,17 +2251,17 @@ ngx_http_writer(ngx_http_request_t *r)
             return;
         }
 
-    } else {
-        if (wev->delayed || r->aio) {
-            ngx_log_debug0(NGX_LOG_DEBUG_HTTP, wev->log, 0,
-                           "http writer delayed");
+    }
 
-            if (ngx_handle_write_event(wev, clcf->send_lowat) != NGX_OK) {
-                ngx_http_close_request(r, 0);
-            }
+    if (wev->delayed || r->aio) {
+        ngx_log_debug0(NGX_LOG_DEBUG_HTTP, wev->log, 0,
+                       "http writer delayed");
 
-            return;
+        if (ngx_handle_write_event(wev, clcf->send_lowat) != NGX_OK) {
+            ngx_http_close_request(r, 0);
         }
+
+        return;
     }
 
     rc = ngx_http_output_filter(r, NULL);
@@ -2253,7 +2277,7 @@ ngx_http_writer(ngx_http_request_t *r)
 
     if (r->buffered || r->postponed || (r == r->main && c->buffered)) {
 
-        if (!wev->ready && !wev->delayed) {
+        if (!wev->delayed) {
             ngx_add_timer(wev, clcf->send_timeout);
         }
 
@@ -2772,7 +2796,6 @@ ngx_http_lingering_close_handler(ngx_eve
                    "http lingering close handler");
 
     if (rev->timedout) {
-        c->timedout = 1;
         ngx_http_close_request(r, 0);
         return;
     }
@@ -2875,6 +2898,10 @@ ngx_http_post_action(ngx_http_request_t 
         return NGX_DECLINED;
     }
 
+    if (r->post_action && r->uri_changes == 0) {
+        return NGX_DECLINED;
+    }
+
     ngx_log_debug1(NGX_LOG_DEBUG_HTTP, r->connection->log, 0,
                    "post action: \"%V\"", &clcf->post_action);
 
--- nginx-1.0.0.orig/src/http/ngx_http.h
+++ nginx-1.0.0/src/http/ngx_http.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/http/ngx_http_config.h
+++ nginx-1.0.0/src/http/ngx_http_config.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/http/ngx_http_script.h
+++ nginx-1.0.0/src/http/ngx_http_script.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/http/ngx_http_header_filter_module.c
+++ nginx-1.0.0/src/http/ngx_http_header_filter_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -61,8 +62,8 @@ static ngx_str_t ngx_http_status_lines[]
 
     /* ngx_null_string, */  /* "207 Multi-Status" */
 
-#define NGX_HTTP_LAST_LEVEL_200  207
-#define NGX_HTTP_LEVEL_200       (NGX_HTTP_LAST_LEVEL_200 - 200)
+#define NGX_HTTP_LAST_2XX  207
+#define NGX_HTTP_OFF_3XX   (NGX_HTTP_LAST_2XX - 200)
 
     /* ngx_null_string, */  /* "300 Multiple Choices" */
 
@@ -70,13 +71,12 @@ static ngx_str_t ngx_http_status_lines[]
     ngx_string("302 Moved Temporarily"),
     ngx_string("303 See Other"),
     ngx_string("304 Not Modified"),
+    ngx_null_string,  /* "305 Use Proxy" */
+    ngx_null_string,  /* "306 unused" */
+    ngx_string("307 Temporary Redirect"),
 
-    /* ngx_null_string, */  /* "305 Use Proxy" */
-    /* ngx_null_string, */  /* "306 unused" */
-    /* ngx_null_string, */  /* "307 Temporary Redirect" */
-
-#define NGX_HTTP_LAST_LEVEL_300  305
-#define NGX_HTTP_LEVEL_300       (NGX_HTTP_LAST_LEVEL_300 - 301)
+#define NGX_HTTP_LAST_3XX  308
+#define NGX_HTTP_OFF_4XX   (NGX_HTTP_LAST_3XX - 301 + NGX_HTTP_OFF_3XX)
 
     ngx_string("400 Bad Request"),
     ngx_string("401 Unauthorized"),
@@ -108,8 +108,8 @@ static ngx_str_t ngx_http_status_lines[]
     /* ngx_null_string, */  /* "423 Locked" */
     /* ngx_null_string, */  /* "424 Failed Dependency" */
 
-#define NGX_HTTP_LAST_LEVEL_400  417
-#define NGX_HTTP_LEVEL_400       (NGX_HTTP_LAST_LEVEL_400 - 400)
+#define NGX_HTTP_LAST_4XX  417
+#define NGX_HTTP_OFF_5XX   (NGX_HTTP_LAST_4XX - 400 + NGX_HTTP_OFF_4XX)
 
     ngx_string("500 Internal Server Error"),
     ngx_string("501 Method Not Implemented"),
@@ -124,7 +124,7 @@ static ngx_str_t ngx_http_status_lines[]
     /* ngx_null_string, */  /* "509 unused" */
     /* ngx_null_string, */  /* "510 Not Extended" */
 
-#define NGX_HTTP_LAST_LEVEL_500  508
+#define NGX_HTTP_LAST_5XX  508
 
 };
 
@@ -216,7 +216,7 @@ ngx_http_header_filter(ngx_http_request_
         status = r->headers_out.status;
 
         if (status >= NGX_HTTP_OK
-            && status < NGX_HTTP_LAST_LEVEL_200)
+            && status < NGX_HTTP_LAST_2XX)
         {
             /* 2XX */
 
@@ -234,7 +234,7 @@ ngx_http_header_filter(ngx_http_request_
             len += ngx_http_status_lines[status].len;
 
         } else if (status >= NGX_HTTP_MOVED_PERMANENTLY
-                   && status < NGX_HTTP_LAST_LEVEL_300)
+                   && status < NGX_HTTP_LAST_3XX)
         {
             /* 3XX */
 
@@ -242,29 +242,26 @@ ngx_http_header_filter(ngx_http_request_
                 r->header_only = 1;
             }
 
-            status = status - NGX_HTTP_MOVED_PERMANENTLY + NGX_HTTP_LEVEL_200;
+            status = status - NGX_HTTP_MOVED_PERMANENTLY + NGX_HTTP_OFF_3XX;
             status_line = &ngx_http_status_lines[status];
             len += ngx_http_status_lines[status].len;
 
         } else if (status >= NGX_HTTP_BAD_REQUEST
-                   && status < NGX_HTTP_LAST_LEVEL_400)
+                   && status < NGX_HTTP_LAST_4XX)
         {
             /* 4XX */
             status = status - NGX_HTTP_BAD_REQUEST
-                            + NGX_HTTP_LEVEL_200
-                            + NGX_HTTP_LEVEL_300;
+                            + NGX_HTTP_OFF_4XX;
 
             status_line = &ngx_http_status_lines[status];
             len += ngx_http_status_lines[status].len;
 
         } else if (status >= NGX_HTTP_INTERNAL_SERVER_ERROR
-                   && status < NGX_HTTP_LAST_LEVEL_500)
+                   && status < NGX_HTTP_LAST_5XX)
         {
             /* 5XX */
             status = status - NGX_HTTP_INTERNAL_SERVER_ERROR
-                            + NGX_HTTP_LEVEL_200
-                            + NGX_HTTP_LEVEL_300
-                            + NGX_HTTP_LEVEL_400;
+                            + NGX_HTTP_OFF_5XX;
 
             status_line = &ngx_http_status_lines[status];
             len += ngx_http_status_lines[status].len;
--- nginx-1.0.0.orig/src/http/ngx_http.c
+++ nginx-1.0.0/src/http/ngx_http.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -1226,7 +1227,7 @@ ngx_http_add_addresses(ngx_conf_t *cf, n
 #endif
 
     /*
-     * we can not compare whole sockaddr struct's as kernel
+     * we cannot compare whole sockaddr struct's as kernel
      * may fill some fields in inherited sockaddr struct's
      */
 
@@ -1281,7 +1282,7 @@ ngx_http_add_addresses(ngx_conf_t *cf, n
 
             if (addr[i].opt.set) {
                 ngx_conf_log_error(NGX_LOG_EMERG, cf, 0,
-                        "a duplicate listen options for %s", addr[i].opt.addr);
+                        "duplicate listen options for %s", addr[i].opt.addr);
                 return NGX_ERROR;
             }
 
@@ -1747,10 +1748,12 @@ ngx_http_add_listening(ngx_conf_t *cf, n
 
 #if (NGX_WIN32)
     {
-    ngx_iocp_conf_t  *iocpcf;
+    ngx_iocp_conf_t  *iocpcf = NULL;
 
-    iocpcf = ngx_event_get_conf(cf->cycle->conf_ctx, ngx_iocp_module);
-    if (iocpcf->acceptex_read) {
+    if (ngx_get_conf(cf->cycle->conf_ctx, ngx_events_module)) {
+        iocpcf = ngx_event_get_conf(cf->cycle->conf_ctx, ngx_iocp_module);
+    }
+    if (iocpcf && iocpcf->acceptex_read) {
         ls->post_accept_buffer_size = cscf->client_header_buffer_size;
     }
     }
--- nginx-1.0.0.orig/src/http/ngx_http_script.c
+++ nginx-1.0.0/src/http/ngx_http_script.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -265,7 +266,7 @@ ngx_http_test_predicates(ngx_http_reques
             return NGX_ERROR;
         }
 
-        if (val.len && val.data[0] != '0') {
+        if (val.len && (val.len != 1 || val.data[0] != '0')) {
             return NGX_DECLINED;
         }
     }
@@ -1106,6 +1107,8 @@ ngx_http_script_regex_end_code(ngx_http_
                           "rewritten redirect: \"%V\"", &e->buf);
         }
 
+        ngx_http_clear_location(r);
+
         r->headers_out.location = ngx_list_push(&r->headers_out.headers);
         if (r->headers_out.location == NULL) {
             e->ip = ngx_http_script_exit;
@@ -1395,7 +1398,7 @@ ngx_http_script_if_code(ngx_http_script_
 
     e->sp--;
 
-    if (e->sp->len && e->sp->data[0] != '0') {
+    if (e->sp->len && (e->sp->len !=1 || e->sp->data[0] != '0')) {
         if (code->loc_conf) {
             e->request->loc_conf = code->loc_conf;
             ngx_http_update_location_config(e->request);
--- nginx-1.0.0.orig/src/http/ngx_http_upstream.c
+++ nginx-1.0.0/src/http/ngx_http_upstream.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -313,25 +314,25 @@ static ngx_http_variable_t  ngx_http_ups
 
     { ngx_string("upstream_addr"), NULL,
       ngx_http_upstream_addr_variable, 0,
-      NGX_HTTP_VAR_NOHASH|NGX_HTTP_VAR_NOCACHEABLE, 0 },
+      NGX_HTTP_VAR_NOCACHEABLE, 0 },
 
     { ngx_string("upstream_status"), NULL,
       ngx_http_upstream_status_variable, 0,
-      NGX_HTTP_VAR_NOHASH|NGX_HTTP_VAR_NOCACHEABLE, 0 },
+      NGX_HTTP_VAR_NOCACHEABLE, 0 },
 
     { ngx_string("upstream_response_time"), NULL,
       ngx_http_upstream_response_time_variable, 0,
-      NGX_HTTP_VAR_NOHASH|NGX_HTTP_VAR_NOCACHEABLE, 0 },
+      NGX_HTTP_VAR_NOCACHEABLE, 0 },
 
     { ngx_string("upstream_response_length"), NULL,
       ngx_http_upstream_response_length_variable, 0,
-      NGX_HTTP_VAR_NOHASH|NGX_HTTP_VAR_NOCACHEABLE, 0 },
+      NGX_HTTP_VAR_NOCACHEABLE, 0 },
 
 #if (NGX_HTTP_CACHE)
 
     { ngx_string("upstream_cache_status"), NULL,
       ngx_http_upstream_cache_status, 0,
-      NGX_HTTP_VAR_NOHASH|NGX_HTTP_VAR_NOCACHEABLE, 0 },
+      NGX_HTTP_VAR_NOCACHEABLE, 0 },
 
 #endif
 
@@ -360,6 +361,9 @@ ngx_conf_bitmask_t  ngx_http_upstream_ca
 ngx_conf_bitmask_t  ngx_http_upstream_ignore_headers_masks[] = {
     { ngx_string("X-Accel-Redirect"), NGX_HTTP_UPSTREAM_IGN_XA_REDIRECT },
     { ngx_string("X-Accel-Expires"), NGX_HTTP_UPSTREAM_IGN_XA_EXPIRES },
+    { ngx_string("X-Accel-Limit-Rate"), NGX_HTTP_UPSTREAM_IGN_XA_LIMIT_RATE },
+    { ngx_string("X-Accel-Buffering"), NGX_HTTP_UPSTREAM_IGN_XA_BUFFERING },
+    { ngx_string("X-Accel-Charset"), NGX_HTTP_UPSTREAM_IGN_XA_CHARSET },
     { ngx_string("Expires"), NGX_HTTP_UPSTREAM_IGN_EXPIRES },
     { ngx_string("Cache-Control"), NGX_HTTP_UPSTREAM_IGN_CACHE_CONTROL },
     { ngx_string("Set-Cookie"), NGX_HTTP_UPSTREAM_IGN_SET_COOKIE },
@@ -641,19 +645,6 @@ ngx_http_upstream_cache(ngx_http_request
 
     if (c == NULL) {
 
-        switch (ngx_http_test_predicates(r, u->conf->cache_bypass)) {
-
-        case NGX_ERROR:
-            return NGX_ERROR;
-
-        case NGX_DECLINED:
-            u->cache_status = NGX_HTTP_CACHE_BYPASS;
-            return NGX_DECLINED;
-
-        default: /* NGX_OK */
-            break;
-        }
-
         if (!(r->method & u->conf->cache_methods)) {
             return NGX_DECLINED;
         }
@@ -674,8 +665,32 @@ ngx_http_upstream_cache(ngx_http_request
 
         ngx_http_file_cache_create_key(r);
 
+        if (r->cache->header_start + 256 >= u->conf->buffer_size) {
+            ngx_log_error(NGX_LOG_ERR, r->connection->log, 0,
+                          "%V_buffer_size %uz is not enough for cache key, "
+                          "it should increased at least to %uz",
+                          &u->conf->module, u->conf->buffer_size,
+                          ngx_align(r->cache->header_start + 256, 1024));
+
+            r->cache = NULL;
+            return NGX_DECLINED;
+        }
+
         u->cacheable = 1;
 
+        switch (ngx_http_test_predicates(r, u->conf->cache_bypass)) {
+
+        case NGX_ERROR:
+            return NGX_ERROR;
+
+        case NGX_DECLINED:
+            u->cache_status = NGX_HTTP_CACHE_BYPASS;
+            return NGX_DECLINED;
+
+        default: /* NGX_OK */
+            break;
+        }
+
         c = r->cache;
 
         c->min_uses = u->conf->cache_min_uses;
@@ -976,7 +991,7 @@ ngx_http_upstream_check_broken_connectio
 
         if (!u->cacheable && u->peer.connection) {
             ngx_log_error(NGX_LOG_INFO, ev->log, ev->kq_errno,
-                          "kevent() reported that client closed prematurely "
+                          "kevent() reported that client prematurely closed "
                           "connection, so upstream connection is closed too");
             ngx_http_upstream_finalize_request(r, u,
                                                NGX_HTTP_CLIENT_CLOSED_REQUEST);
@@ -984,8 +999,8 @@ ngx_http_upstream_check_broken_connectio
         }
 
         ngx_log_error(NGX_LOG_INFO, ev->log, ev->kq_errno,
-                      "kevent() reported that client closed "
-                      "prematurely connection");
+                      "kevent() reported that client prematurely closed "
+                      "connection");
 
         if (u->peer.connection == NULL) {
             ngx_http_upstream_finalize_request(r, u,
@@ -1039,7 +1054,7 @@ ngx_http_upstream_check_broken_connectio
 
     if (!u->cacheable && u->peer.connection) {
         ngx_log_error(NGX_LOG_INFO, ev->log, err,
-                      "client closed prematurely connection, "
+                      "client prematurely closed connection, "
                       "so upstream connection is closed too");
         ngx_http_upstream_finalize_request(r, u,
                                            NGX_HTTP_CLIENT_CLOSED_REQUEST);
@@ -1047,7 +1062,7 @@ ngx_http_upstream_check_broken_connectio
     }
 
     ngx_log_error(NGX_LOG_INFO, ev->log, err,
-                  "client closed prematurely connection");
+                  "client prematurely closed connection");
 
     if (u->peer.connection == NULL) {
         ngx_http_upstream_finalize_request(r, u,
@@ -1546,7 +1561,7 @@ ngx_http_upstream_process_header(ngx_htt
 
         if (rc == NGX_AGAIN) {
 
-            if (u->buffer.pos == u->buffer.end) {
+            if (u->buffer.last == u->buffer.end) {
                 ngx_log_error(NGX_LOG_ERR, c->log, 0,
                               "upstream sent too big header");
 
@@ -2135,18 +2150,6 @@ ngx_http_upstream_send_response(ngx_http
 
         if (u->cache_status == NGX_HTTP_CACHE_BYPASS) {
 
-            if (ngx_http_file_cache_new(r) != NGX_OK) {
-                ngx_http_upstream_finalize_request(r, u, 0);
-                return;
-            }
-
-            if (u->create_key(r) != NGX_OK) {
-                ngx_http_upstream_finalize_request(r, u, 0);
-                return;
-            }
-
-            /* TODO: add keys */
-
             r->cache->min_uses = u->conf->cache_min_uses;
             r->cache->body_start = u->conf->buffer_size;
             r->cache->file_cache = u->conf->cache->data;
@@ -2155,8 +2158,6 @@ ngx_http_upstream_send_response(ngx_http
                 ngx_http_upstream_finalize_request(r, u, 0);
                 return;
             }
-
-            u->cacheable = 1;
         }
 
         break;
@@ -2262,7 +2263,7 @@ ngx_http_upstream_send_response(ngx_http
     }
 
     if (ngx_event_flags & NGX_USE_AIO_EVENT) {
-        /* the posted aio operation may currupt a shadow buffer */
+        /* the posted aio operation may corrupt a shadow buffer */
         p->single_buf = 1;
     }
 
@@ -2320,7 +2321,7 @@ ngx_http_upstream_process_non_buffered_d
     if (wev->timedout) {
         c->timedout = 1;
         ngx_connection_error(c, NGX_ETIMEDOUT, "client timed out");
-        ngx_http_upstream_finalize_request(r, u, 0);
+        ngx_http_upstream_finalize_request(r, u, NGX_HTTP_REQUEST_TIME_OUT);
         return;
     }
 
@@ -2615,7 +2616,6 @@ ngx_http_upstream_process_upstream(ngx_h
 static void
 ngx_http_upstream_process_request(ngx_http_request_t *r)
 {
-    ngx_uint_t            del;
     ngx_temp_file_t      *tf;
     ngx_event_pipe_t     *p;
     ngx_http_upstream_t  *u;
@@ -2627,30 +2627,16 @@ ngx_http_upstream_process_request(ngx_ht
 
         if (u->store) {
 
-            del = p->upstream_error;
-
-            tf = u->pipe->temp_file;
-
             if (p->upstream_eof || p->upstream_done) {
 
+                tf = u->pipe->temp_file;
+
                 if (u->headers_in.status_n == NGX_HTTP_OK
                     && (u->headers_in.content_length_n == -1
                         || (u->headers_in.content_length_n == tf->offset)))
                 {
                     ngx_http_upstream_store(r, u);
-
-                } else {
-                    del = 1;
-                }
-            }
-
-            if (del && tf->file.fd != NGX_INVALID_FILE) {
-
-                if (ngx_delete_file(tf->file.name.data) == NGX_FILE_ERROR) {
-
-                    ngx_log_error(NGX_LOG_CRIT, r->connection->log, ngx_errno,
-                                  ngx_delete_file_n " \"%s\" failed",
-                                  u->pipe->temp_file->file.name.data);
+                    u->store = 0;
                 }
             }
         }
@@ -2888,6 +2874,7 @@ ngx_http_upstream_next(ngx_http_request_
 #endif
 
         ngx_close_connection(u->peer.connection);
+        u->peer.connection = NULL;
     }
 
 #if 0
@@ -2992,18 +2979,33 @@ ngx_http_upstream_finalize_request(ngx_h
                        u->pipe->temp_file->file.fd);
     }
 
+    if (u->store && u->pipe && u->pipe->temp_file
+        && u->pipe->temp_file->file.fd != NGX_INVALID_FILE)
+    {
+        if (ngx_delete_file(u->pipe->temp_file->file.name.data)
+            == NGX_FILE_ERROR)
+        {
+            ngx_log_error(NGX_LOG_CRIT, r->connection->log, ngx_errno,
+                          ngx_delete_file_n " \"%s\" failed",
+                          u->pipe->temp_file->file.name.data);
+        }
+    }
+
 #if (NGX_HTTP_CACHE)
 
-    if (u->cacheable && r->cache) {
-        time_t  valid;
+    if (r->cache) {
+
+        if (u->cacheable) {
 
-        if (rc == NGX_HTTP_BAD_GATEWAY || rc == NGX_HTTP_GATEWAY_TIME_OUT) {
+            if (rc == NGX_HTTP_BAD_GATEWAY || rc == NGX_HTTP_GATEWAY_TIME_OUT) {
+                time_t  valid;
 
-            valid = ngx_http_file_cache_valid(u->conf->cache_valid, rc);
+                valid = ngx_http_file_cache_valid(u->conf->cache_valid, rc);
 
-            if (valid) {
-                r->cache->valid_sec = ngx_time() + valid;
-                r->cache->error = rc;
+                if (valid) {
+                    r->cache->valid_sec = ngx_time() + valid;
+                    r->cache->error = rc;
+                }
             }
         }
 
@@ -3013,6 +3015,7 @@ ngx_http_upstream_finalize_request(ngx_h
 #endif
 
     if (u->header_sent
+        && rc != NGX_HTTP_REQUEST_TIME_OUT
         && (rc == NGX_ERROR || rc >= NGX_HTTP_SPECIAL_RESPONSE))
     {
         rc = 0;
@@ -3024,7 +3027,12 @@ ngx_http_upstream_finalize_request(ngx_h
 
     r->connection->log->action = "sending to client";
 
-    if (rc == 0) {
+    if (rc == 0
+#if (NGX_HTTP_CACHE)
+        && !r->cached
+#endif
+       )
+    {
         rc = ngx_http_send_special(r, NGX_HTTP_LAST);
     }
 
@@ -3262,9 +3270,15 @@ static ngx_int_t
 ngx_http_upstream_process_limit_rate(ngx_http_request_t *r, ngx_table_elt_t *h,
     ngx_uint_t offset)
 {
-    ngx_int_t  n;
+    ngx_int_t             n;
+    ngx_http_upstream_t  *u;
 
-    r->upstream->headers_in.x_accel_limit_rate = h;
+    u = r->upstream;
+    u->headers_in.x_accel_limit_rate = h;
+
+    if (u->conf->ignore_headers & NGX_HTTP_UPSTREAM_IGN_XA_LIMIT_RATE) {
+        return NGX_OK;
+    }
 
     n = ngx_atoi(h->value.data, h->value.len);
 
@@ -3280,16 +3294,23 @@ static ngx_int_t
 ngx_http_upstream_process_buffering(ngx_http_request_t *r, ngx_table_elt_t *h,
     ngx_uint_t offset)
 {
-    u_char  c0, c1, c2;
+    u_char                c0, c1, c2;
+    ngx_http_upstream_t  *u;
 
-    if (r->upstream->conf->change_buffering) {
+    u = r->upstream;
+
+    if (u->conf->ignore_headers & NGX_HTTP_UPSTREAM_IGN_XA_BUFFERING) {
+        return NGX_OK;
+    }
+
+    if (u->conf->change_buffering) {
 
         if (h->value.len == 2) {
             c0 = ngx_tolower(h->value.data[0]);
             c1 = ngx_tolower(h->value.data[1]);
 
             if (c0 == 'n' && c1 == 'o') {
-                r->upstream->buffering = 0;
+                u->buffering = 0;
             }
 
         } else if (h->value.len == 3) {
@@ -3298,7 +3319,7 @@ ngx_http_upstream_process_buffering(ngx_
             c2 = ngx_tolower(h->value.data[2]);
 
             if (c0 == 'y' && c1 == 'e' && c2 == 's') {
-                r->upstream->buffering = 1;
+                u->buffering = 1;
             }
         }
     }
@@ -3311,6 +3332,10 @@ static ngx_int_t
 ngx_http_upstream_process_charset(ngx_http_request_t *r, ngx_table_elt_t *h,
     ngx_uint_t offset)
 {
+    if (r->upstream->conf->ignore_headers & NGX_HTTP_UPSTREAM_IGN_XA_CHARSET) {
+        return NGX_OK;
+    }
+
     r->headers_out.override_charset = &h->value;
 
     return NGX_OK;
@@ -4253,6 +4278,10 @@ ngx_http_upstream_add(ngx_conf_t *cf, ng
             continue;
         }
 
+        if (flags & NGX_HTTP_UPSTREAM_CREATE) {
+            uscfp[i]->flags = flags;
+        }
+
         return uscfp[i];
     }
 
--- nginx-1.0.0.orig/src/http/ngx_http_core_module.h
+++ nginx-1.0.0/src/http/ngx_http_core_module.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -33,6 +34,11 @@
 #define NGX_HTTP_SATISFY_ANY            1
 
 
+#define NGX_HTTP_LINGERING_OFF          0
+#define NGX_HTTP_LINGERING_ON           1
+#define NGX_HTTP_LINGERING_ALWAYS       2
+
+
 #define NGX_HTTP_IMS_OFF                0
 #define NGX_HTTP_IMS_EXACT              1
 #define NGX_HTTP_IMS_BEFORE             2
@@ -356,7 +362,9 @@ struct ngx_http_core_loc_conf_s {
     ngx_uint_t    keepalive_requests;      /* keepalive_requests */
     ngx_uint_t    keepalive_disable;       /* keepalive_disable */
     ngx_uint_t    satisfy;                 /* satisfy */
+    ngx_uint_t    lingering_close;         /* lingering_close */
     ngx_uint_t    if_modified_since;       /* if_modified_since */
+    ngx_uint_t    max_ranges;              /* max_ranges */
     ngx_uint_t    client_body_in_file_only; /* client_body_in_file_only */
 
     ngx_flag_t    client_body_in_single_buffer;
@@ -522,5 +530,12 @@ extern ngx_str_t  ngx_http_core_get_meth
         r->headers_out.last_modified = NULL;                                  \
     }
 
+#define ngx_http_clear_location(r)                                            \
+                                                                              \
+    if (r->headers_out.location) {                                            \
+        r->headers_out.location->hash = 0;                                    \
+        r->headers_out.location = NULL;                                       \
+    }
+
 
 #endif /* _NGX_HTTP_CORE_H_INCLUDED_ */
--- nginx-1.0.0.orig/src/http/ngx_http_busy_lock.c
+++ nginx-1.0.0/src/http/ngx_http_busy_lock.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/http/ngx_http_copy_filter_module.c
+++ nginx-1.0.0/src/http/ngx_http_copy_filter_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -158,6 +159,11 @@ ngx_http_copy_filter(ngx_http_request_t 
             ngx_file_t            *file;
             ngx_http_ephemeral_t  *e;
 
+            if (r->aio) {
+                c->busy_sendfile = NULL;
+                return rc;
+            }
+
             file = c->busy_sendfile->file;
             offset = c->busy_sendfile->file_pos;
 
@@ -184,7 +190,7 @@ ngx_http_copy_filter(ngx_http_request_t 
 
             rc = n;
 
-            if (file->aio) {
+            if (rc == NGX_AGAIN) {
                 file->aio->data = r;
                 file->aio->handler = ngx_http_copy_aio_sendfile_event_handler;
 
--- nginx-1.0.0.orig/src/http/ngx_http_busy_lock.h
+++ nginx-1.0.0/src/http/ngx_http_busy_lock.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/http/ngx_http_core_module.c
+++ nginx-1.0.0/src/http/ngx_http_core_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -70,6 +71,8 @@ static char *ngx_http_core_internal(ngx_
 static char *ngx_http_core_resolver(ngx_conf_t *cf, ngx_command_t *cmd,
     void *conf);
 #if (NGX_HTTP_GZIP)
+static ngx_int_t ngx_http_gzip_accept_encoding(ngx_str_t *ae);
+static ngx_uint_t ngx_http_gzip_quantity(u_char *p, u_char *last);
 static char *ngx_http_gzip_disable(ngx_conf_t *cf, ngx_command_t *cmd,
     void *conf);
 #endif
@@ -125,6 +128,14 @@ static ngx_conf_enum_t  ngx_http_core_sa
 };
 
 
+static ngx_conf_enum_t  ngx_http_core_lingering_close[] = {
+    { ngx_string("off"), NGX_HTTP_LINGERING_OFF },
+    { ngx_string("on"), NGX_HTTP_LINGERING_ON },
+    { ngx_string("always"), NGX_HTTP_LINGERING_ALWAYS },
+    { ngx_null_string, 0 }
+};
+
+
 static ngx_conf_enum_t  ngx_http_core_if_modified_since[] = {
     { ngx_string("off"), NGX_HTTP_IMS_OFF },
     { ngx_string("exact"), NGX_HTTP_IMS_EXACT },
@@ -133,7 +144,7 @@ static ngx_conf_enum_t  ngx_http_core_if
 };
 
 
-static ngx_conf_enum_t  ngx_http_core_keepalive_disable[] = {
+static ngx_conf_bitmask_t  ngx_http_core_keepalive_disable[] = {
     { ngx_string("none"), NGX_HTTP_KEEPALIVE_DISABLE_NONE },
     { ngx_string("msie6"), NGX_HTTP_KEEPALIVE_DISABLE_MSIE6 },
     { ngx_string("safari"), NGX_HTTP_KEEPALIVE_DISABLE_SAFARI },
@@ -392,7 +403,7 @@ static ngx_command_t  ngx_http_core_comm
 
     { ngx_string("sendfile"),
       NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_HTTP_LOC_CONF|NGX_HTTP_LIF_CONF
-                        |NGX_CONF_TAKE1,
+                        |NGX_CONF_FLAG,
       ngx_conf_set_flag_slot,
       NGX_HTTP_LOC_CONF_OFFSET,
       offsetof(ngx_http_core_loc_conf_t, sendfile),
@@ -503,8 +514,8 @@ static ngx_command_t  ngx_http_core_comm
       NULL },
 
     { ngx_string("keepalive_disable"),
-      NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_HTTP_LOC_CONF|NGX_CONF_TAKE1,
-      ngx_conf_set_enum_slot,
+      NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_HTTP_LOC_CONF|NGX_CONF_TAKE12,
+      ngx_conf_set_bitmask_slot,
       NGX_HTTP_LOC_CONF_OFFSET,
       offsetof(ngx_http_core_loc_conf_t, keepalive_disable),
       &ngx_http_core_keepalive_disable },
@@ -530,6 +541,13 @@ static ngx_command_t  ngx_http_core_comm
       0,
       NULL },
 
+    { ngx_string("lingering_close"),
+      NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_HTTP_LOC_CONF|NGX_CONF_TAKE1,
+      ngx_conf_set_enum_slot,
+      NGX_HTTP_LOC_CONF_OFFSET,
+      offsetof(ngx_http_core_loc_conf_t, lingering_close),
+      &ngx_http_core_lingering_close },
+
     { ngx_string("lingering_time"),
       NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_HTTP_LOC_CONF|NGX_CONF_TAKE1,
       ngx_conf_set_msec_slot,
@@ -614,8 +632,15 @@ static ngx_command_t  ngx_http_core_comm
       offsetof(ngx_http_core_loc_conf_t, if_modified_since),
       &ngx_http_core_if_modified_since },
 
-    { ngx_string("chunked_transfer_encoding"),
+    { ngx_string("max_ranges"),
       NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_HTTP_LOC_CONF|NGX_CONF_TAKE1,
+      ngx_conf_set_num_slot,
+      NGX_HTTP_LOC_CONF_OFFSET,
+      offsetof(ngx_http_core_loc_conf_t, max_ranges),
+      NULL },
+
+    { ngx_string("chunked_transfer_encoding"),
+      NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_HTTP_LOC_CONF|NGX_CONF_FLAG,
       ngx_conf_set_flag_slot,
       NGX_HTTP_LOC_CONF_OFFSET,
       offsetof(ngx_http_core_loc_conf_t, chunked_transfer_encoding),
@@ -959,6 +984,8 @@ ngx_http_core_find_config_phase(ngx_http
     }
 
     if (rc == NGX_DONE) {
+        ngx_http_clear_location(r);
+
         r->headers_out.location = ngx_list_push(&r->headers_out.headers);
         if (r->headers_out.location == NULL) {
             ngx_http_finalize_request(r, NGX_HTTP_INTERNAL_SERVER_ERROR);
@@ -1235,7 +1262,7 @@ ngx_http_core_try_files_phase(ngx_http_r
         tf++;
 
         ngx_log_debug3(NGX_LOG_DEBUG_HTTP, r->connection->log, 0,
-                       "try to use %s: \"%s\" \"%s\"",
+                       "trying to use %s: \"%s\" \"%s\"",
                        test_dir ? "dir" : "file", name, path.data);
 
         if (tf->lengths == NULL && tf->name.len == 0) {
@@ -1263,6 +1290,7 @@ ngx_http_core_try_files_phase(ngx_http_r
 
         ngx_memzero(&of, sizeof(ngx_open_file_info_t));
 
+        of.read_ahead = clcf->read_ahead;
         of.directio = clcf->directio;
         of.valid = clcf->open_file_cache_valid;
         of.min_uses = clcf->open_file_cache_min_uses;
@@ -1760,18 +1788,22 @@ ngx_http_send_response(ngx_http_request_
     ngx_buf_t    *b;
     ngx_chain_t   out;
 
-    r->headers_out.status = status;
-
-    if (status == NGX_HTTP_NO_CONTENT) {
-        r->header_only = 1;
-        return ngx_http_send_header(r);
+    if (ngx_http_discard_request_body(r) != NGX_OK) {
+        return NGX_HTTP_INTERNAL_SERVER_ERROR;
     }
 
+    r->headers_out.status = status;
+
     if (ngx_http_complex_value(r, cv, &val) != NGX_OK) {
         return NGX_HTTP_INTERNAL_SERVER_ERROR;
     }
 
-    if (status >= NGX_HTTP_MOVED_PERMANENTLY && status <= NGX_HTTP_SEE_OTHER) {
+    if (status == NGX_HTTP_MOVED_PERMANENTLY
+        || status == NGX_HTTP_MOVED_TEMPORARILY
+        || status == NGX_HTTP_SEE_OTHER
+        || status == NGX_HTTP_TEMPORARY_REDIRECT)
+    {
+        ngx_http_clear_location(r);
 
         r->headers_out.location = ngx_list_push(&r->headers_out.headers);
         if (r->headers_out.location == NULL) {
@@ -1873,7 +1905,7 @@ ngx_http_map_uri_to_path(ngx_http_reques
 
     if (alias && !r->valid_location) {
         ngx_log_error(NGX_LOG_ALERT, r->connection->log, 0,
-                      "\"alias\" could not be used in location \"%V\" "
+                      "\"alias\" cannot be used in location \"%V\" "
                       "where URI was rewritten", &clcf->name);
         return NULL;
     }
@@ -2016,24 +2048,35 @@ ngx_http_gzip_ok(ngx_http_request_t *r)
     time_t                     date, expires;
     ngx_uint_t                 p;
     ngx_array_t               *cc;
-    ngx_table_elt_t           *e, *d;
+    ngx_table_elt_t           *e, *d, *ae;
     ngx_http_core_loc_conf_t  *clcf;
 
     r->gzip_tested = 1;
 
-    if (r != r->main
-        || r->headers_in.accept_encoding == NULL
-        || ngx_strcasestrn(r->headers_in.accept_encoding->value.data,
-                           "gzip", 4 - 1)
-           == NULL
+    if (r != r->main) {
+        return NGX_DECLINED;
+    }
 
-        /*
-         * if the URL (without the "http://" prefix) is longer than 253 bytes,
-         * then MSIE 4.x can not handle the compressed stream - it waits
-         * too long, hangs up or crashes
-         */
+    ae = r->headers_in.accept_encoding;
+    if (ae == NULL) {
+        return NGX_DECLINED;
+    }
 
-        || (r->headers_in.msie4 && r->unparsed_uri.len > 200))
+    if (ae->value.len < sizeof("gzip") - 1) {
+        return NGX_DECLINED;
+    }
+
+    /*
+     * test first for the most common case "gzip,...":
+     *   MSIE:    "gzip, deflate"
+     *   Firefox: "gzip,deflate"
+     *   Chrome:  "gzip,deflate,sdch"
+     *   Safari:  "gzip, deflate"
+     *   Opera:   "gzip, deflate"
+     */
+
+    if (ngx_memcmp(ae->value.data, "gzip,", 5) != 0
+        && ngx_http_gzip_accept_encoding(&ae->value) != NGX_OK)
     {
         return NGX_DECLINED;
     }
@@ -2159,6 +2202,135 @@ ok:
     return NGX_OK;
 }
 
+
+/*
+ * gzip is enabled for the following quantities:
+ *     "gzip; q=0.001" ... "gzip; q=1.000"
+ * gzip is disabled for the following quantities:
+ *     "gzip; q=0" ... "gzip; q=0.000", and for any invalid cases
+ */
+
+static ngx_int_t
+ngx_http_gzip_accept_encoding(ngx_str_t *ae)
+{
+    u_char  *p, *start, *last;
+
+    start = ae->data;
+    last = start + ae->len;
+
+    for ( ;; ) {
+        p = ngx_strcasestrn(start, "gzip", 4 - 1);
+        if (p == NULL) {
+            return NGX_DECLINED;
+        }
+
+        if (p == start || (*(p - 1) == ',' || *(p - 1) == ' ')) {
+            break;
+        }
+
+        start = p + 4;
+    }
+
+    p += 4;
+
+    while (p < last) {
+        switch(*p++) {
+        case ',':
+            return NGX_OK;
+        case ';':
+            goto quantity;
+        case ' ':
+            continue;
+        default:
+            return NGX_DECLINED;
+        }
+    }
+
+    return NGX_OK;
+
+quantity:
+
+    while (p < last) {
+        switch(*p++) {
+        case 'q':
+        case 'Q':
+            goto equal;
+        case ' ':
+            continue;
+        default:
+            return NGX_DECLINED;
+        }
+    }
+
+    return NGX_OK;
+
+equal:
+
+    if (p + 2 > last || *p++ != '=') {
+        return NGX_DECLINED;
+    }
+
+    if (ngx_http_gzip_quantity(p, last) == 0) {
+        return NGX_DECLINED;
+    }
+
+    return NGX_OK;
+}
+
+
+ngx_uint_t
+ngx_http_gzip_quantity(u_char *p, u_char *last)
+{
+    u_char      c;
+    ngx_uint_t  n, q;
+
+    c = *p++;
+
+    if (c != '0' && c != '1') {
+        return 0;
+    }
+
+    q = (c - '0') * 100;
+
+    if (p == last) {
+        return q;
+    }
+
+    c = *p++;
+
+    if (c == ',' || c == ' ') {
+        return q;
+    }
+
+    if (c != '.') {
+        return 0;
+    }
+
+    n = 0;
+
+    while (p < last) {
+        c = *p++;
+
+        if (c == ',' || c == ' ') {
+            break;
+        }
+
+        if (c >= '0' && c <= '9') {
+            q += c - '0';
+            n++;
+            continue;
+        }
+
+        return 0;
+    }
+
+    if (q > 100 || n > 3) {
+        return 0;
+    }
+
+    return q;
+}
+
 #endif
 
 
@@ -2281,8 +2453,8 @@ ngx_http_subrequest(ngx_http_request_t *
     sr->uri_changes = NGX_HTTP_MAX_URI_CHANGES + 1;
 
     tp = ngx_timeofday();
-    r->start_sec = tp->sec;
-    r->start_msec = tp->msec;
+    sr->start_sec = tp->sec;
+    sr->start_msec = tp->msec;
 
     r->main->subrequests++;
     r->main->count++;
@@ -2304,7 +2476,7 @@ ngx_http_internal_redirect(ngx_http_requ
     if (r->uri_changes == 0) {
         ngx_log_error(NGX_LOG_ERR, r->connection->log, 0,
                       "rewrite or internal redirection cycle "
-                      "while internal redirect to \"%V\"", uri);
+                      "while internally redirecting to \"%V\"", uri);
 
         r->main->count++;
         ngx_http_finalize_request(r, NGX_HTTP_INTERNAL_SERVER_ERROR);
@@ -2355,6 +2527,16 @@ ngx_http_named_location(ngx_http_request
     ngx_http_core_main_conf_t   *cmcf;
 
     r->main->count++;
+    r->uri_changes--;
+
+    if (r->uri_changes == 0) {
+        ngx_log_error(NGX_LOG_ERR, r->connection->log, 0,
+                      "rewrite or internal redirection cycle "
+                      "while redirect to named location \"%V\"", name);
+
+        ngx_http_finalize_request(r, NGX_HTTP_INTERNAL_SERVER_ERROR);
+        return NGX_DONE;
+    }
 
     cscf = ngx_http_get_module_srv_conf(r, ngx_http_core_module);
 
@@ -2698,7 +2880,7 @@ ngx_http_core_location(ngx_conf_t *cf, n
 
         if (pclcf->exact_match) {
             ngx_conf_log_error(NGX_LOG_EMERG, cf, 0,
-                               "location \"%V\" could not be inside "
+                               "location \"%V\" cannot be inside "
                                "the exact location \"%V\"",
                                &clcf->name, &pclcf->name);
             return NGX_CONF_ERROR;
@@ -2706,7 +2888,7 @@ ngx_http_core_location(ngx_conf_t *cf, n
 
         if (pclcf->named) {
             ngx_conf_log_error(NGX_LOG_EMERG, cf, 0,
-                               "location \"%V\" could not be inside "
+                               "location \"%V\" cannot be inside "
                                "the named location \"%V\"",
                                &clcf->name, &pclcf->name);
             return NGX_CONF_ERROR;
@@ -2714,8 +2896,8 @@ ngx_http_core_location(ngx_conf_t *cf, n
 
         if (clcf->named) {
             ngx_conf_log_error(NGX_LOG_EMERG, cf, 0,
-                               "named location \"%V\" must be "
-                               "on server level only",
+                               "named location \"%V\" can be "
+                               "on the server level only",
                                &clcf->name);
             return NGX_CONF_ERROR;
         }
@@ -2784,7 +2966,7 @@ ngx_http_core_regex_location(ngx_conf_t 
 #else
 
     ngx_conf_log_error(NGX_LOG_EMERG, cf, 0,
-                       "the using of the regex \"%V\" requires PCRE library",
+                       "using regex \"%V\" requires PCRE library",
                        regex);
     return NGX_ERROR;
 
@@ -2831,6 +3013,12 @@ ngx_http_core_type(ngx_conf_t *cf, ngx_c
     value = cf->args->elts;
 
     if (ngx_strcmp(value[0].data, "include") == 0) {
+        if (cf->args->nelts != 2) {
+            ngx_conf_log_error(NGX_LOG_EMERG, cf, 0,
+                               "invalid number of arguments"
+                               " in \"include\" directive");
+            return NGX_CONF_ERROR;
+        }
         file = value[1];
 
         if (ngx_conf_full_name(cf->cycle, &file, 1) != NGX_OK) {
@@ -2860,11 +3048,11 @@ ngx_http_core_type(ngx_conf_t *cf, ngx_c
                 type[n].value = content_type;
 
                 ngx_conf_log_error(NGX_LOG_WARN, cf, 0,
-                                   "duplicate extention \"%V\", "
+                                   "duplicate extension \"%V\", "
                                    "content type: \"%V\", "
-                                   "old content type: \"%V\"",
+                                   "previous content type: \"%V\"",
                                    &value[i], content_type, old);
-                continue;
+                goto next;
             }
         }
 
@@ -2877,6 +3065,9 @@ ngx_http_core_type(ngx_conf_t *cf, ngx_c
         type->key = value[i];
         type->key_hash = hash;
         type->value = content_type;
+
+    next:
+        continue;
     }
 
     return NGX_CONF_OK;
@@ -3014,7 +3205,7 @@ ngx_http_core_merge_srv_conf(ngx_conf_t 
     if (conf->large_client_header_buffers.size < conf->connection_pool_size) {
         ngx_conf_log_error(NGX_LOG_EMERG, cf, 0,
                            "the \"large_client_header_buffers\" size must be "
-                           "equal to or bigger than \"connection_pool_size\"");
+                           "equal to or greater than \"connection_pool_size\"");
         return NGX_CONF_ERROR;
     }
 
@@ -3027,7 +3218,7 @@ ngx_http_core_merge_srv_conf(ngx_conf_t 
                               prev->underscores_in_headers, 0);
 
     if (conf->server_names.nelts == 0) {
-        /* the array has 4 empty preallocated elements, so push can not fail */
+        /* the array has 4 empty preallocated elements, so push cannot fail */
         sn = ngx_array_push(&conf->server_names);
 #if (NGX_PCRE)
         sn->regex = NULL;
@@ -3088,14 +3279,15 @@ ngx_http_core_create_loc_conf(ngx_conf_t
      *     clcf->auto_redirect = 0;
      *     clcf->alias = 0;
      *     clcf->gzip_proxied = 0;
+     *     clcf->keepalive_disable = 0;
      */
 
     clcf->client_max_body_size = NGX_CONF_UNSET;
     clcf->client_body_buffer_size = NGX_CONF_UNSET_SIZE;
     clcf->client_body_timeout = NGX_CONF_UNSET_MSEC;
-    clcf->keepalive_disable = NGX_CONF_UNSET_UINT;
     clcf->satisfy = NGX_CONF_UNSET_UINT;
     clcf->if_modified_since = NGX_CONF_UNSET_UINT;
+    clcf->max_ranges = NGX_CONF_UNSET_UINT;
     clcf->client_body_in_file_only = NGX_CONF_UNSET_UINT;
     clcf->client_body_in_single_buffer = NGX_CONF_UNSET;
     clcf->internal = NGX_CONF_UNSET;
@@ -3117,6 +3309,7 @@ ngx_http_core_create_loc_conf(ngx_conf_t
     clcf->keepalive_timeout = NGX_CONF_UNSET_MSEC;
     clcf->keepalive_header = NGX_CONF_UNSET;
     clcf->keepalive_requests = NGX_CONF_UNSET_UINT;
+    clcf->lingering_close = NGX_CONF_UNSET_UINT;
     clcf->lingering_time = NGX_CONF_UNSET_MSEC;
     clcf->lingering_timeout = NGX_CONF_UNSET_MSEC;
     clcf->resolver_timeout = NGX_CONF_UNSET_MSEC;
@@ -3208,7 +3401,7 @@ ngx_http_core_merge_loc_conf(ngx_conf_t 
                                              ngx_cacheline_size);
 
     /*
-     * the special handling the "types" directive in the "http" section
+     * the special handling of the "types" directive in the "http" section
      * to inherit the http's conf->types_hash to all servers
      */
 
@@ -3235,7 +3428,7 @@ ngx_http_core_merge_loc_conf(ngx_conf_t 
     }
 
     if (conf->types == NULL) {
-        conf->types = ngx_array_create(cf->pool, 4, sizeof(ngx_hash_key_t));
+        conf->types = ngx_array_create(cf->pool, 3, sizeof(ngx_hash_key_t));
         if (conf->types == NULL) {
             return NGX_CONF_ERROR;
         }
@@ -3260,7 +3453,7 @@ ngx_http_core_merge_loc_conf(ngx_conf_t 
         types_hash.key = ngx_hash_key_lc;
         types_hash.max_size = conf->types_hash_max_size;
         types_hash.bucket_size = conf->types_hash_bucket_size;
-        types_hash.name = "mime_types_hash";
+        types_hash.name = "types_hash";
         types_hash.pool = cf->pool;
         types_hash.temp_pool = NULL;
 
@@ -3294,15 +3487,20 @@ ngx_http_core_merge_loc_conf(ngx_conf_t 
     ngx_conf_merge_msec_value(conf->client_body_timeout,
                               prev->client_body_timeout, 60000);
 
-    ngx_conf_merge_uint_value(conf->keepalive_disable, prev->keepalive_disable,
-                              NGX_HTTP_KEEPALIVE_DISABLE_MSIE6
-                              |NGX_HTTP_KEEPALIVE_DISABLE_SAFARI);
+    ngx_conf_merge_bitmask_value(conf->keepalive_disable,
+                              prev->keepalive_disable,
+                              (NGX_CONF_BITMASK_SET
+                               |NGX_HTTP_KEEPALIVE_DISABLE_MSIE6
+                               |NGX_HTTP_KEEPALIVE_DISABLE_SAFARI));
     ngx_conf_merge_uint_value(conf->satisfy, prev->satisfy,
                               NGX_HTTP_SATISFY_ALL);
     ngx_conf_merge_uint_value(conf->if_modified_since, prev->if_modified_since,
                               NGX_HTTP_IMS_EXACT);
+    ngx_conf_merge_uint_value(conf->max_ranges, prev->max_ranges,
+                              NGX_MAX_INT32_VALUE);
     ngx_conf_merge_uint_value(conf->client_body_in_file_only,
-                              prev->client_body_in_file_only, 0);
+                              prev->client_body_in_file_only,
+                              NGX_HTTP_REQUEST_BODY_FILE_OFF);
     ngx_conf_merge_value(conf->client_body_in_single_buffer,
                               prev->client_body_in_single_buffer, 0);
     ngx_conf_merge_value(conf->internal, prev->internal, 0);
@@ -3310,11 +3508,11 @@ ngx_http_core_merge_loc_conf(ngx_conf_t 
     ngx_conf_merge_size_value(conf->sendfile_max_chunk,
                               prev->sendfile_max_chunk, 0);
 #if (NGX_HAVE_FILE_AIO)
-    ngx_conf_merge_value(conf->aio, prev->aio, 0);
+    ngx_conf_merge_value(conf->aio, prev->aio, NGX_HTTP_AIO_OFF);
 #endif
     ngx_conf_merge_size_value(conf->read_ahead, prev->read_ahead, 0);
     ngx_conf_merge_off_value(conf->directio, prev->directio,
-                              NGX_MAX_OFF_T_VALUE);
+                              NGX_OPEN_FILE_DIRECTIO_OFF);
     ngx_conf_merge_off_value(conf->directio_alignment, prev->directio_alignment,
                               512);
     ngx_conf_merge_value(conf->tcp_nopush, prev->tcp_nopush, 0);
@@ -3333,6 +3531,8 @@ ngx_http_core_merge_loc_conf(ngx_conf_t 
                               prev->keepalive_header, 0);
     ngx_conf_merge_uint_value(conf->keepalive_requests,
                               prev->keepalive_requests, 100);
+    ngx_conf_merge_uint_value(conf->lingering_close,
+                              prev->lingering_close, NGX_HTTP_LINGERING_ON);
     ngx_conf_merge_msec_value(conf->lingering_time,
                               prev->lingering_time, 30000);
     ngx_conf_merge_msec_value(conf->lingering_timeout,
@@ -3609,7 +3809,7 @@ ngx_http_core_listen(ngx_conf_t *cf, ngx
             continue;
 #else
             ngx_conf_log_error(NGX_LOG_EMERG, cf, 0,
-                               "bind ipv6only is not supported "
+                               "ipv6only is not supported "
                                "on this platform");
             return NGX_CONF_ERROR;
 #endif
@@ -3628,7 +3828,7 @@ ngx_http_core_listen(ngx_conf_t *cf, ngx
         }
 
         ngx_conf_log_error(NGX_LOG_EMERG, cf, 0,
-                           "the invalid \"%V\" parameter", &value[n]);
+                           "invalid parameter \"%V\"", &value[n]);
         return NGX_CONF_ERROR;
     }
 
@@ -3666,17 +3866,10 @@ ngx_http_core_server_name(ngx_conf_t *cf
 
         if (ngx_strchr(value[i].data, '/')) {
             ngx_conf_log_error(NGX_LOG_WARN, cf, 0,
-                               "server name \"%V\" has strange symbols",
+                               "server name \"%V\" has suspicious symbols",
                                &value[i]);
         }
 
-        if (value[i].len == 1 && ch == '*') {
-            ngx_conf_log_error(NGX_LOG_EMERG, cf, 0,
-                               "\"server_name *\" is unsupported, use "
-                               "\"server_name_in_redirect off\" instead");
-            return NGX_CONF_ERROR;
-        }
-
         sn = ngx_array_push(&cscf->server_names);
         if (sn == NULL) {
             return NGX_CONF_ERROR;
@@ -3737,7 +3930,7 @@ ngx_http_core_server_name(ngx_conf_t *cf
         }
 #else
         ngx_conf_log_error(NGX_LOG_EMERG, cf, 0,
-                           "the using of the regex \"%V\" "
+                           "using regex \"%V\" "
                            "requires PCRE library", &value[i]);
 
         return NGX_CONF_ERROR;
@@ -3769,7 +3962,7 @@ ngx_http_core_root(ngx_conf_t *cf, ngx_c
         } else {
             ngx_conf_log_error(NGX_LOG_EMERG, cf, 0,
                                "\"%V\" directive is duplicate, "
-                               "\"%s\" directive is specified before",
+                               "\"%s\" directive was specified earlier",
                                &cmd->name, clcf->alias ? "alias" : "root");
         }
 
@@ -3778,8 +3971,8 @@ ngx_http_core_root(ngx_conf_t *cf, ngx_c
 
     if (clcf->named && alias) {
         ngx_conf_log_error(NGX_LOG_EMERG, cf, 0,
-                           "the \"alias\" directive may not be used "
-                           "inside named location");
+                           "the \"alias\" directive cannot be used "
+                           "inside the named location");
 
         return NGX_CONF_ERROR;
     }
@@ -3790,7 +3983,7 @@ ngx_http_core_root(ngx_conf_t *cf, ngx_c
         || ngx_strstr(value[1].data, "${document_root}"))
     {
         ngx_conf_log_error(NGX_LOG_EMERG, cf, 0,
-                           "the $document_root variable may not be used "
+                           "the $document_root variable cannot be used "
                            "in the \"%V\" directive",
                            &cmd->name);
 
@@ -3801,7 +3994,7 @@ ngx_http_core_root(ngx_conf_t *cf, ngx_c
         || ngx_strstr(value[1].data, "${realpath_root}"))
     {
         ngx_conf_log_error(NGX_LOG_EMERG, cf, 0,
-                           "the $realpath_root variable may not be used "
+                           "the $realpath_root variable cannot be used "
                            "in the \"%V\" directive",
                            &cmd->name);
 
@@ -4219,7 +4412,7 @@ ngx_http_core_open_file_cache(ngx_conf_t
         if (ngx_strncmp(value[i].data, "max=", 4) == 0) {
 
             max = ngx_atoi(value[i].data + 4, value[i].len - 4);
-            if (max == NGX_ERROR) {
+            if (max <= 0) {
                 goto failed;
             }
 
@@ -4260,7 +4453,7 @@ ngx_http_core_open_file_cache(ngx_conf_t
 
     if (max == 0) {
         ngx_conf_log_error(NGX_LOG_EMERG, cf, 0,
-                           "\"open_file_cache\" must have \"max\" parameter");
+                           "\"open_file_cache\" must have the \"max\" parameter");
         return NGX_CONF_ERROR;
     }
 
--- nginx-1.0.0.orig/src/http/ngx_http_request.h
+++ nginx-1.0.0/src/http/ngx_http_request.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -74,6 +75,7 @@
 #define NGX_HTTP_MOVED_TEMPORARILY         302
 #define NGX_HTTP_SEE_OTHER                 303
 #define NGX_HTTP_NOT_MODIFIED              304
+#define NGX_HTTP_TEMPORARY_REDIRECT        307
 
 #define NGX_HTTP_BAD_REQUEST               400
 #define NGX_HTTP_UNAUTHORIZED              401
@@ -221,7 +223,6 @@ typedef struct {
 
     unsigned                          connection_type:2;
     unsigned                          msie:1;
-    unsigned                          msie4:1;
     unsigned                          msie6:1;
     unsigned                          opera:1;
     unsigned                          gecko:1;
--- nginx-1.0.0.orig/src/http/ngx_http_upstream_round_robin.h
+++ nginx-1.0.0/src/http/ngx_http_upstream_round_robin.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/http/ngx_http_special_response.c
+++ nginx-1.0.0/src/http/ngx_http_special_response.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -73,6 +74,14 @@ static char ngx_http_error_303_page[] =
 ;
 
 
+static char ngx_http_error_307_page[] =
+"<html>" CRLF
+"<head><title>307 Temporary Redirect</title></head>" CRLF
+"<body bgcolor=\"white\">" CRLF
+"<center><h1>307 Temporary Redirect</h1></center>" CRLF
+;
+
+
 static char ngx_http_error_400_page[] =
 "<html>" CRLF
 "<head><title>400 Bad Request</title></head>" CRLF
@@ -293,16 +302,20 @@ static ngx_str_t ngx_http_error_pages[] 
 
     ngx_null_string,                     /* 201, 204 */
 
-#define NGX_HTTP_LAST_LEVEL_200  202
-#define NGX_HTTP_LEVEL_200       (NGX_HTTP_LAST_LEVEL_200 - 201)
+#define NGX_HTTP_LAST_2XX  202
+#define NGX_HTTP_OFF_3XX   (NGX_HTTP_LAST_2XX - 201)
 
     /* ngx_null_string, */               /* 300 */
     ngx_string(ngx_http_error_301_page),
     ngx_string(ngx_http_error_302_page),
     ngx_string(ngx_http_error_303_page),
+    ngx_null_string,                     /* 304 */
+    ngx_null_string,                     /* 305 */
+    ngx_null_string,                     /* 306 */
+    ngx_string(ngx_http_error_307_page),
 
-#define NGX_HTTP_LAST_LEVEL_300  304
-#define NGX_HTTP_LEVEL_300       (NGX_HTTP_LAST_LEVEL_300 - 301)
+#define NGX_HTTP_LAST_3XX  308
+#define NGX_HTTP_OFF_4XX   (NGX_HTTP_LAST_3XX - 301 + NGX_HTTP_OFF_3XX)
 
     ngx_string(ngx_http_error_400_page),
     ngx_string(ngx_http_error_401_page),
@@ -322,8 +335,8 @@ static ngx_str_t ngx_http_error_pages[] 
     ngx_string(ngx_http_error_415_page),
     ngx_string(ngx_http_error_416_page),
 
-#define NGX_HTTP_LAST_LEVEL_400  417
-#define NGX_HTTP_LEVEL_400       (NGX_HTTP_LAST_LEVEL_400 - 400)
+#define NGX_HTTP_LAST_4XX  417
+#define NGX_HTTP_OFF_5XX   (NGX_HTTP_LAST_4XX - 400 + NGX_HTTP_OFF_4XX)
 
     ngx_string(ngx_http_error_494_page), /* 494, request header too large */
     ngx_string(ngx_http_error_495_page), /* 495, https certificate error */
@@ -341,7 +354,7 @@ static ngx_str_t ngx_http_error_pages[] 
     ngx_null_string,                     /* 506 */
     ngx_string(ngx_http_error_507_page)
 
-#define NGX_HTTP_LAST_LEVEL_500  508
+#define NGX_HTTP_LAST_5XX  508
 
 };
 
@@ -375,7 +388,7 @@ ngx_http_special_response_handler(ngx_ht
         }
     }
 
-    if (r->lingering_close == 1) {
+    if (r->lingering_close) {
         switch (error) {
             case NGX_HTTP_BAD_REQUEST:
             case NGX_HTTP_TO_HTTPS:
@@ -421,32 +434,28 @@ ngx_http_special_response_handler(ngx_ht
     if (error == NGX_HTTP_CREATED) {
         /* 201 */
         err = 0;
-        r->header_only = 1;
 
     } else if (error == NGX_HTTP_NO_CONTENT) {
         /* 204 */
         err = 0;
 
     } else if (error >= NGX_HTTP_MOVED_PERMANENTLY
-               && error < NGX_HTTP_LAST_LEVEL_300)
+               && error < NGX_HTTP_LAST_3XX)
     {
         /* 3XX */
-        err = error - NGX_HTTP_MOVED_PERMANENTLY + NGX_HTTP_LEVEL_200;
+        err = error - NGX_HTTP_MOVED_PERMANENTLY + NGX_HTTP_OFF_3XX;
 
     } else if (error >= NGX_HTTP_BAD_REQUEST
-               && error < NGX_HTTP_LAST_LEVEL_400)
+               && error < NGX_HTTP_LAST_4XX)
     {
         /* 4XX */
-        err = error - NGX_HTTP_BAD_REQUEST + NGX_HTTP_LEVEL_200
-                                           + NGX_HTTP_LEVEL_300;
+        err = error - NGX_HTTP_BAD_REQUEST + NGX_HTTP_OFF_4XX;
 
     } else if (error >= NGX_HTTP_NGINX_CODES
-               && error < NGX_HTTP_LAST_LEVEL_500)
+               && error < NGX_HTTP_LAST_5XX)
     {
         /* 49X, 5XX */
-        err = error - NGX_HTTP_NGINX_CODES + NGX_HTTP_LEVEL_200
-                                           + NGX_HTTP_LEVEL_300
-                                           + NGX_HTTP_LEVEL_400;
+        err = error - NGX_HTTP_NGINX_CODES + NGX_HTTP_OFF_5XX;
         switch (error) {
             case NGX_HTTP_TO_HTTPS:
             case NGX_HTTPS_CERT_ERROR:
@@ -570,12 +579,11 @@ ngx_http_send_error_page(ngx_http_reques
         return NGX_ERROR;
     }
 
-    if (overwrite >= NGX_HTTP_MOVED_PERMANENTLY
-        && overwrite <= NGX_HTTP_SEE_OTHER)
+    if (overwrite != NGX_HTTP_MOVED_PERMANENTLY
+        && overwrite != NGX_HTTP_MOVED_TEMPORARILY
+        && overwrite != NGX_HTTP_SEE_OTHER
+        && overwrite != NGX_HTTP_TEMPORARY_REDIRECT)
     {
-        r->err_status = overwrite;
-
-    } else {
         r->err_status = NGX_HTTP_MOVED_TEMPORARILY;
     }
 
@@ -583,6 +591,8 @@ ngx_http_send_error_page(ngx_http_reques
     ngx_str_set(&location->key, "Location");
     location->value = uri;
 
+    ngx_http_clear_location(r);
+
     r->headers_out.location = location;
 
     clcf = ngx_http_get_module_loc_conf(r, ngx_http_core_module);
@@ -593,7 +603,7 @@ ngx_http_send_error_page(ngx_http_reques
 
     return ngx_http_send_special_response(r, clcf, r->err_status
                                                    - NGX_HTTP_MOVED_PERMANENTLY
-                                                   + NGX_HTTP_LEVEL_200);
+                                                   + NGX_HTTP_OFF_3XX);
 }
 
 
@@ -624,7 +634,7 @@ ngx_http_send_special_response(ngx_http_
         if (clcf->msie_padding
             && (r->headers_in.msie || r->headers_in.chrome)
             && r->http_version >= NGX_HTTP_VERSION_10
-            && err >= NGX_HTTP_LEVEL_300)
+            && err >= NGX_HTTP_OFF_4XX)
         {
             r->headers_out.content_length_n +=
                                          sizeof(ngx_http_msie_padding) - 1;
@@ -636,7 +646,7 @@ ngx_http_send_special_response(ngx_http_
         r->headers_out.content_type_lowcase = NULL;
 
     } else {
-        r->headers_out.content_length_n = -1;
+        r->headers_out.content_length_n = 0;
     }
 
     if (r->headers_out.content_length) {
@@ -654,7 +664,7 @@ ngx_http_send_special_response(ngx_http_
     }
 
     if (ngx_http_error_pages[err].len == 0) {
-        return NGX_OK;
+        return ngx_http_send_special(r, NGX_HTTP_LAST);
     }
 
     b = ngx_calloc_buf(r->pool);
--- nginx-1.0.0.orig/src/http/ngx_http_postpone_filter_module.c
+++ nginx-1.0.0/src/http/ngx_http_postpone_filter_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/http/ngx_http_upstream_round_robin.c
+++ nginx-1.0.0/src/http/ngx_http_upstream_round_robin.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -14,6 +15,15 @@ static ngx_int_t ngx_http_upstream_cmp_s
 static ngx_uint_t
 ngx_http_upstream_get_peer(ngx_http_upstream_rr_peers_t *peers);
 
+#if (NGX_HTTP_SSL)
+
+static ngx_int_t ngx_http_upstream_empty_set_session(ngx_peer_connection_t *pc,
+    void *data);
+static void ngx_http_upstream_empty_save_session(ngx_peer_connection_t *pc,
+    void *data);
+
+#endif
+
 
 ngx_int_t
 ngx_http_upstream_init_round_robin(ngx_conf_t *cf,
@@ -219,13 +229,18 @@ ngx_http_upstream_init_round_robin_peer(
     rrp->peers = us->peer.data;
     rrp->current = 0;
 
-    if (rrp->peers->number <= 8 * sizeof(uintptr_t)) {
+    n = rrp->peers->number;
+
+    if (rrp->peers->next && rrp->peers->next->number > n) {
+        n = rrp->peers->next->number;
+    }
+
+    if (n <= 8 * sizeof(uintptr_t)) {
         rrp->tried = &rrp->data;
         rrp->data = 0;
 
     } else {
-        n = (rrp->peers->number + (8 * sizeof(uintptr_t) - 1))
-                / (8 * sizeof(uintptr_t));
+        n = (n + (8 * sizeof(uintptr_t) - 1)) / (8 * sizeof(uintptr_t));
 
         rrp->tried = ngx_pcalloc(r->pool, n * sizeof(uintptr_t));
         if (rrp->tried == NULL) {
@@ -343,10 +358,8 @@ ngx_http_upstream_create_round_robin_pee
     r->upstream->peer.free = ngx_http_upstream_free_round_robin_peer;
     r->upstream->peer.tries = rrp->peers->number;
 #if (NGX_HTTP_SSL)
-    r->upstream->peer.set_session =
-                               ngx_http_upstream_set_round_robin_peer_session;
-    r->upstream->peer.save_session =
-                               ngx_http_upstream_save_round_robin_peer_session;
+    r->upstream->peer.set_session = ngx_http_upstream_empty_set_session;
+    r->upstream->peer.save_session = ngx_http_upstream_empty_save_session;
 #endif
 
     return NGX_OK;
@@ -578,7 +591,7 @@ failed:
 static ngx_uint_t
 ngx_http_upstream_get_peer(ngx_http_upstream_rr_peers_t *peers)
 {
-    ngx_uint_t                    i, n;
+    ngx_uint_t                    i, n, reset = 0;
     ngx_http_upstream_rr_peer_t  *peer;
 
     peer = &peers->peer[0];
@@ -617,6 +630,10 @@ ngx_http_upstream_get_peer(ngx_http_upst
             return n;
         }
 
+        if (reset++) {
+            return 0;
+        }
+
         for (i = 0; i < peers->number; i++) {
             peer[i].current_weight = peer[i].weight;
         }
@@ -757,4 +774,18 @@ ngx_http_upstream_save_round_robin_peer_
     }
 }
 
+
+static ngx_int_t
+ngx_http_upstream_empty_set_session(ngx_peer_connection_t *pc, void *data)
+{
+    return NGX_OK;
+}
+
+
+static void
+ngx_http_upstream_empty_save_session(ngx_peer_connection_t *pc, void *data)
+{
+    return;
+}
+
 #endif
--- nginx-1.0.0.orig/src/http/ngx_http_parse.c
+++ nginx-1.0.0/src/http/ngx_http_parse.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -813,6 +814,10 @@ ngx_http_parse_header_line(ngx_http_requ
                     break;
                 }
 
+                if (ch == '\0') {
+                    return NGX_HTTP_PARSE_INVALID_HEADER;
+                }
+
                 r->invalid_header = 1;
 
                 break;
@@ -875,6 +880,10 @@ ngx_http_parse_header_line(ngx_http_requ
                 break;
             }
 
+            if (ch == '\0') {
+                return NGX_HTTP_PARSE_INVALID_HEADER;
+            }
+
             r->invalid_header = 1;
 
             break;
@@ -893,6 +902,8 @@ ngx_http_parse_header_line(ngx_http_requ
                 r->header_start = p;
                 r->header_end = p;
                 goto done;
+            case '\0':
+                return NGX_HTTP_PARSE_INVALID_HEADER;
             default:
                 r->header_start = p;
                 state = sw_value;
@@ -914,6 +925,8 @@ ngx_http_parse_header_line(ngx_http_requ
             case LF:
                 r->header_end = p;
                 goto done;
+            case '\0':
+                return NGX_HTTP_PARSE_INVALID_HEADER;
             }
             break;
 
@@ -927,6 +940,8 @@ ngx_http_parse_header_line(ngx_http_requ
                 break;
             case LF:
                 goto done;
+            case '\0':
+                return NGX_HTTP_PARSE_INVALID_HEADER;
             default:
                 state = sw_value;
                 break;
--- nginx-1.0.0.orig/src/http/ngx_http_upstream.h
+++ nginx-1.0.0/src/http/ngx_http_upstream.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -44,6 +45,9 @@
 #define NGX_HTTP_UPSTREAM_IGN_EXPIRES        0x00000008
 #define NGX_HTTP_UPSTREAM_IGN_CACHE_CONTROL  0x00000010
 #define NGX_HTTP_UPSTREAM_IGN_SET_COOKIE     0x00000020
+#define NGX_HTTP_UPSTREAM_IGN_XA_LIMIT_RATE  0x00000040
+#define NGX_HTTP_UPSTREAM_IGN_XA_BUFFERING   0x00000080
+#define NGX_HTTP_UPSTREAM_IGN_XA_CHARSET     0x00000100
 
 
 typedef struct {
@@ -179,6 +183,7 @@ typedef struct {
     ngx_flag_t                       ssl_session_reuse;
 #endif
 
+    ngx_str_t                        module;
 } ngx_http_upstream_conf_t;
 
 
--- nginx-1.0.0.orig/src/http/ngx_http_variables.c
+++ nginx-1.0.0/src/http/ngx_http_variables.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -427,7 +428,7 @@ ngx_http_get_flushed_variable(ngx_http_r
 
     v = &r->variables[index];
 
-    if (v->valid) {
+    if (v->valid || v->not_found) {
         if (!v->no_cacheable) {
             return v;
         }
@@ -640,8 +641,8 @@ static ngx_int_t
 ngx_http_variable_headers(ngx_http_request_t *r, ngx_http_variable_value_t *v,
     uintptr_t data)
 {
-    ssize_t            len;
-    u_char            *p;
+    size_t             len;
+    u_char            *p, *end;
     ngx_uint_t         i, n;
     ngx_array_t       *a;
     ngx_table_elt_t  **h;
@@ -649,18 +650,30 @@ ngx_http_variable_headers(ngx_http_reque
     a = (ngx_array_t *) ((char *) r + data);
 
     n = a->nelts;
+    h = a->elts;
 
-    if (n == 0) {
+    len = 0;
+
+    for (i = 0; i < n; i++) {
+
+        if (h[i]->hash == 0) {
+            continue;
+        }
+
+        len += h[i]->value.len + sizeof("; ") - 1;
+    }
+
+    if (len == 0) {
         v->not_found = 1;
         return NGX_OK;
     }
 
+    len -= sizeof("; ") - 1;
+
     v->valid = 1;
     v->no_cacheable = 0;
     v->not_found = 0;
 
-    h = a->elts;
-
     if (n == 1) {
         v->len = (*h)->value.len;
         v->data = (*h)->value.data;
@@ -668,12 +681,6 @@ ngx_http_variable_headers(ngx_http_reque
         return NGX_OK;
     }
 
-    len = - (ssize_t) (sizeof("; ") - 1);
-
-    for (i = 0; i < n; i++) {
-        len += h[i]->value.len + sizeof("; ") - 1;
-    }
-
     p = ngx_pnalloc(r->pool, len);
     if (p == NULL) {
         return NGX_ERROR;
@@ -682,10 +689,17 @@ ngx_http_variable_headers(ngx_http_reque
     v->len = len;
     v->data = p;
 
+    end = p + len;
+
     for (i = 0; /* void */ ; i++) {
+
+        if (h[i]->hash == 0) {
+            continue;
+        }
+
         p = ngx_copy(p, h[i]->value.data, h[i]->value.len);
 
-        if (i == n - 1) {
+        if (p == end) {
             break;
         }
 
@@ -738,6 +752,10 @@ ngx_http_variable_unknown_header(ngx_htt
             i = 0;
         }
 
+        if (header[i].hash == 0) {
+            continue;
+        }
+
         for (n = 0; n + prefix < var->len && n < header[i].key.len; n++) {
             ch = header[i].key.data[n];
 
@@ -1661,14 +1679,30 @@ ngx_http_variable_pid(ngx_http_request_t
 
 
 void *
-ngx_http_map_find(ngx_http_request_t *r, ngx_http_map_t *map, ngx_uint_t key,
-    u_char *text, size_t len, ngx_str_t *match)
+ngx_http_map_find(ngx_http_request_t *r, ngx_http_map_t *map, ngx_str_t *match)
 {
-    void  *p;
+    void        *value;
+    u_char      *low;
+    size_t       len;
+    ngx_uint_t   key;
+
+    len = match->len;
+
+    if (len) {
+        low = ngx_pnalloc(r->pool, len);
+        if (low == NULL) {
+            return NULL;
+        }
+
+    } else {
+        low = NULL;
+    }
+
+    key = ngx_hash_strlow(low, match->data, len);
 
-    p = ngx_hash_find_combined(&map->hash, key, text, len);
-    if (p) {
-        return p;
+    value = ngx_hash_find_combined(&map->hash, key, low, len);
+    if (value) {
+        return value;
     }
 
 #if (NGX_PCRE)
--- nginx-1.0.0.orig/src/http/ngx_http_parse_time.c
+++ nginx-1.0.0/src/http/ngx_http_parse_time.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -241,7 +242,7 @@ ngx_http_parse_time(u_char *value, size_
         year -= 1;
     }
 
-    /* Gauss' formula for Grigorian days since March 1, 1 BC */
+    /* Gauss' formula for Gregorian days since March 1, 1 BC */
 
     time = (uint64_t) (
             /* days in years including leap years since March 1, 1 BC */
--- nginx-1.0.0.orig/src/http/ngx_http_file_cache.c
+++ nginx-1.0.0/src/http/ngx_http_file_cache.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -31,7 +32,7 @@ static time_t ngx_http_file_cache_expire
 static void ngx_http_file_cache_delete(ngx_http_file_cache_t *cache,
     ngx_queue_t *q, u_char *name);
 static ngx_int_t
-    ngx_http_file_cache_manager_sleep(ngx_http_file_cache_t *cache);
+    ngx_http_file_cache_loader_sleep(ngx_http_file_cache_t *cache);
 static ngx_int_t ngx_http_file_cache_noop(ngx_tree_ctx_t *ctx,
     ngx_str_t *path);
 static ngx_int_t ngx_http_file_cache_manage_file(ngx_tree_ctx_t *ctx,
@@ -174,8 +175,6 @@ ngx_http_file_cache_create(ngx_http_requ
     ngx_pool_cleanup_t     *cln;
     ngx_http_file_cache_t  *cache;
 
-    ngx_http_file_cache_create_key(r);
-
     c = r->cache;
     cache = c->file_cache;
 
@@ -349,6 +348,7 @@ ngx_http_file_cache_open(ngx_http_reques
     c->file.log = r->connection->log;
     c->uniq = of.uniq;
     c->length = of.size;
+    c->fs_size = (of.fs_size + cache->bsize - 1) / cache->bsize;
 
     c->buf = ngx_create_temp_buf(r->pool, c->body_start);
     if (c->buf == NULL) {
@@ -377,7 +377,7 @@ ngx_http_file_cache_read(ngx_http_reques
     if ((size_t) n < c->header_start) {
         ngx_log_error(NGX_LOG_CRIT, r->connection->log, 0,
                       "cache file \"%s\" is too small", c->file.name.data);
-        return NGX_ERROR;
+        return NGX_DECLINED;
     }
 
     h = (ngx_http_file_cache_header_t *) c->buf->pos;
@@ -388,6 +388,13 @@ ngx_http_file_cache_read(ngx_http_reques
         return NGX_DECLINED;
     }
 
+    if (h->body_start > c->body_start) {
+        ngx_log_error(NGX_LOG_CRIT, r->connection->log, 0,
+                      "cache file \"%s\" has too long header",
+                      c->file.name.data);
+        return NGX_DECLINED;
+    }
+
     c->buf->last += n;
 
     c->valid_sec = h->valid_sec;
@@ -410,8 +417,9 @@ ngx_http_file_cache_read(ngx_http_reques
             c->node->body_start = c->body_start;
             c->node->exists = 1;
             c->node->uniq = c->uniq;
+            c->node->fs_size = c->fs_size;
 
-            cache->sh->size += (c->length + cache->bsize - 1) / cache->bsize;
+            cache->sh->size += c->fs_size;
         }
 
         ngx_shmtx_unlock(&cache->shpool->mutex);
@@ -531,26 +539,19 @@ ngx_http_file_cache_exists(ngx_http_file
             goto done;
         }
 
-        if (fcn->exists) {
+        if (fcn->exists || fcn->uses >= c->min_uses) {
 
             c->exists = fcn->exists;
-            c->body_start = fcn->body_start;
+            if (fcn->body_start) {
+                c->body_start = fcn->body_start;
+            }
 
             rc = NGX_OK;
 
             goto done;
         }
 
-        if (fcn->uses >= c->min_uses) {
-
-            c->exists = fcn->exists;
-            c->body_start = fcn->body_start;
-
-            rc = NGX_OK;
-
-        } else {
-            rc = NGX_AGAIN;
-        }
+        rc = NGX_AGAIN;
 
         goto done;
     }
@@ -594,7 +595,7 @@ renew:
     fcn->valid_sec = 0;
     fcn->uniq = 0;
     fcn->body_start = 0;
-    fcn->length = 0;
+    fcn->fs_size = 0;
 
 done:
 
@@ -672,21 +673,16 @@ ngx_http_file_cache_lookup(ngx_http_file
 
         /* node_key == node->key */
 
-        do {
-            fcn = (ngx_http_file_cache_node_t *) node;
-
-            rc = ngx_memcmp(&key[sizeof(ngx_rbtree_key_t)], fcn->key,
-                            NGX_HTTP_CACHE_KEY_LEN - sizeof(ngx_rbtree_key_t));
+        fcn = (ngx_http_file_cache_node_t *) node;
 
-            if (rc == 0) {
-                return fcn;
-            }
-
-            node = (rc < 0) ? node->left : node->right;
+        rc = ngx_memcmp(&key[sizeof(ngx_rbtree_key_t)], fcn->key,
+                        NGX_HTTP_CACHE_KEY_LEN - sizeof(ngx_rbtree_key_t));
 
-        } while (node != sentinel && node_key == node->key);
+        if (rc == 0) {
+            return fcn;
+        }
 
-        break;
+        node = (rc < 0) ? node->left : node->right;
     }
 
     /* not found */
@@ -777,7 +773,7 @@ ngx_http_file_cache_set_header(ngx_http_
 void
 ngx_http_file_cache_update(ngx_http_request_t *r, ngx_temp_file_t *tf)
 {
-    off_t                   size, length;
+    off_t                   fs_size;
     ngx_int_t               rc;
     ngx_file_uniq_t         uniq;
     ngx_file_info_t         fi;
@@ -800,7 +796,7 @@ ngx_http_file_cache_update(ngx_http_requ
     cache = c->file_cache;
 
     uniq = 0;
-    length = 0;
+    fs_size = 0;
 
     ngx_log_debug2(NGX_LOG_DEBUG_HTTP, r->connection->log, 0,
                    "http file cache rename: \"%s\" to \"%s\"",
@@ -825,23 +821,18 @@ ngx_http_file_cache_update(ngx_http_requ
 
         } else {
             uniq = ngx_file_uniq(&fi);
-            length = ngx_file_size(&fi);
+            fs_size = (ngx_file_fs_size(&fi) + cache->bsize - 1) / cache->bsize;
         }
     }
 
-    size = (length + cache->bsize - 1) / cache->bsize;
-
     ngx_shmtx_lock(&cache->shpool->mutex);
 
     c->node->count--;
     c->node->uniq = uniq;
     c->node->body_start = c->body_start;
 
-    size = size - (c->node->length + cache->bsize - 1) / cache->bsize;
-
-    c->node->length = length;
-
-    cache->sh->size += size;
+    cache->sh->size += fs_size - c->node->fs_size;
+    c->node->fs_size = fs_size;
 
     if (rc == NGX_OK) {
         c->node->exists = 1;
@@ -864,7 +855,11 @@ ngx_http_cache_send(ngx_http_request_t *
     c = r->cache;
 
     ngx_log_debug1(NGX_LOG_DEBUG_HTTP, r->connection->log, 0,
-                  "http file cache send: %s", c->file.name.data);
+                   "http file cache send: %s", c->file.name.data);
+
+    if (r != r->main && c->length - c->body_start == 0) {
+        return ngx_http_send_header(r);
+    }
 
     /* we need to allocate all before the header would be sent */
 
@@ -878,8 +873,6 @@ ngx_http_cache_send(ngx_http_request_t *
         return NGX_HTTP_INTERNAL_SERVER_ERROR;
     }
 
-    r->header_only = (c->length - c->body_start) == 0;
-
     rc = ngx_http_send_header(r);
 
     if (rc == NGX_ERROR || rc > NGX_OK || r->header_only) {
@@ -889,7 +882,7 @@ ngx_http_cache_send(ngx_http_request_t *
     b->file_pos = c->body_start;
     b->file_last = c->length;
 
-    b->in_file = 1;
+    b->in_file = (c->length - c->body_start) ? 1: 0;
     b->last_buf = (r == r->main) ? 1: 0;
     b->last_in_chain = 1;
 
@@ -910,7 +903,7 @@ ngx_http_file_cache_free(ngx_http_cache_
     ngx_http_file_cache_t       *cache;
     ngx_http_file_cache_node_t  *fcn;
 
-    if (c->updated) {
+    if (c->updated || c->node == NULL) {
         return;
     }
 
@@ -1105,7 +1098,8 @@ ngx_http_file_cache_expire(ngx_http_file
         }
 
         if (fcn->deleting) {
-            continue;
+            wait = 1;
+            break;
         }
 
         p = ngx_hex_dump(key, (u_char *) &fcn->node.key,
@@ -1116,12 +1110,12 @@ ngx_http_file_cache_expire(ngx_http_file
         /*
          * abnormally exited workers may leave locked cache entries,
          * and although it may be safe to remove them completely,
-         * we prefer to remove them from inactive queue and rbtree
-         * only, and to allow other leaks
+         * we prefer to just move them to the top of the inactive queue
          */
 
         ngx_queue_remove(q);
-        ngx_rbtree_delete(&cache->sh->rbtree, &fcn->node);
+        fcn->expire = ngx_time() + cache->inactive;
+        ngx_queue_insert_head(&cache->sh->queue, &fcn->queue);
 
         ngx_log_error(NGX_LOG_ALERT, ngx_cycle->log, 0,
                       "ignore long locked inactive cache entry %*s, count:%d",
@@ -1148,7 +1142,7 @@ ngx_http_file_cache_delete(ngx_http_file
     fcn = ngx_queue_data(q, ngx_http_file_cache_node_t, queue);
 
     if (fcn->exists) {
-        cache->sh->size -= (fcn->length + cache->bsize - 1) / cache->bsize;
+        cache->sh->size -= fcn->fs_size;
 
         path = cache->path;
         p = name + path->name.len + 1 + path->len;
@@ -1219,7 +1213,7 @@ ngx_http_file_cache_manager(void *data)
             return wait;
         }
 
-        if (ngx_http_file_cache_manager_sleep(cache) != NGX_OK) {
+        if (ngx_quit || ngx_terminate) {
             return next;
         }
     }
@@ -1273,7 +1267,7 @@ ngx_http_file_cache_loader(void *data)
 
 
 static ngx_int_t
-ngx_http_file_cache_manager_sleep(ngx_http_file_cache_t *cache)
+ngx_http_file_cache_loader_sleep(ngx_http_file_cache_t *cache)
 {
     ngx_msec_t  elapsed;
 
@@ -1325,72 +1319,34 @@ ngx_http_file_cache_manage_file(ngx_tree
         (void) ngx_http_file_cache_delete_file(ctx, path);
     }
 
-    return ngx_http_file_cache_manager_sleep(cache);
+    return ngx_http_file_cache_loader_sleep(cache);
 }
 
 
 static ngx_int_t
 ngx_http_file_cache_add_file(ngx_tree_ctx_t *ctx, ngx_str_t *name)
 {
-    u_char                        *p;
-    ngx_fd_t                       fd;
-    ngx_int_t                      n;
-    ngx_uint_t                     i;
-    ngx_file_info_t                fi;
-    ngx_http_cache_t               c;
-    ngx_http_file_cache_t         *cache;
-    ngx_http_file_cache_header_t   h;
+    u_char                 *p;
+    ngx_int_t               n;
+    ngx_uint_t              i;
+    ngx_http_cache_t        c;
+    ngx_http_file_cache_t  *cache;
 
     if (name->len < 2 * NGX_HTTP_CACHE_KEY_LEN) {
         return NGX_ERROR;
     }
 
-    ngx_memzero(&c, sizeof(ngx_http_cache_t));
-
-    fd = ngx_open_file(name->data, NGX_FILE_RDONLY, NGX_FILE_OPEN, 0);
-
-    if (fd == NGX_INVALID_FILE) {
-        ngx_log_error(NGX_LOG_CRIT, ctx->log, ngx_errno,
-                      ngx_open_file_n " \"%s\" failed", name->data);
-        return NGX_ERROR;
-    }
-
-    c.file.fd = fd;
-    c.file.name = *name;
-    c.file.log = ctx->log;
-
-    n = ngx_read_file(&c.file, (u_char *) &h,
-                      sizeof(ngx_http_file_cache_header_t), 0);
-    if (n == NGX_ERROR) {
-        return NGX_ERROR;
-    }
-
-    if ((size_t) n < sizeof(ngx_http_file_cache_header_t)) {
+    if (ctx->size < (off_t) sizeof(ngx_http_file_cache_header_t)) {
         ngx_log_error(NGX_LOG_CRIT, ctx->log, 0,
                       "cache file \"%s\" is too small", name->data);
         return NGX_ERROR;
     }
 
-    if (ngx_fd_info(fd, &fi) == NGX_FILE_ERROR) {
-        ngx_log_error(NGX_LOG_CRIT, ctx->log, ngx_errno,
-                      ngx_fd_info_n " \"%s\" failed", name->data);
-
-    } else {
-        c.uniq = ngx_file_uniq(&fi);
-        c.valid_sec = h.valid_sec;
-        c.valid_msec = h.valid_msec;
-        c.body_start = h.body_start;
-        c.length = ngx_file_size(&fi);
-    }
-
-    if (ngx_close_file(fd) == NGX_FILE_ERROR) {
-        ngx_log_error(NGX_LOG_ALERT, ctx->log, ngx_errno,
-                      ngx_close_file_n " \"%s\" failed", name->data);
-    }
+    ngx_memzero(&c, sizeof(ngx_http_cache_t));
+    cache = ctx->data;
 
-    if (c.body_start == 0) {
-        return NGX_ERROR;
-    }
+    c.length = ctx->size;
+    c.fs_size = (ctx->fs_size + cache->bsize - 1) / cache->bsize;
 
     p = &name->data[name->len - 2 * NGX_HTTP_CACHE_KEY_LEN];
 
@@ -1406,8 +1362,6 @@ ngx_http_file_cache_add_file(ngx_tree_ct
         c.key[i] = (u_char) n;
     }
 
-    cache = ctx->data;
-
     return ngx_http_file_cache_add(cache, &c);
 }
 
@@ -1439,17 +1393,17 @@ ngx_http_file_cache_add(ngx_http_file_ca
 
         fcn->uses = 1;
         fcn->count = 0;
-        fcn->valid_msec = c->valid_msec;
+        fcn->valid_msec = 0;
         fcn->error = 0;
         fcn->exists = 1;
         fcn->updating = 0;
         fcn->deleting = 0;
-        fcn->uniq = c->uniq;
-        fcn->valid_sec = c->valid_sec;
-        fcn->body_start = c->body_start;
-        fcn->length = c->length;
+        fcn->uniq = 0;
+        fcn->valid_sec = 0;
+        fcn->body_start = 0;
+        fcn->fs_size = c->fs_size;
 
-        cache->sh->size += (c->length + cache->bsize - 1) / cache->bsize;
+        cache->sh->size += c->fs_size;
 
     } else {
         ngx_queue_remove(&fcn->queue);
@@ -1656,6 +1610,8 @@ ngx_http_file_cache_set_slot(ngx_conf_t 
     cache->path->manager = ngx_http_file_cache_manager;
     cache->path->loader = ngx_http_file_cache_loader;
     cache->path->data = cache;
+    cache->path->conf_file = cf->conf_file->file.name.data;
+    cache->path->line = cf->conf_file->line;
 
     if (ngx_add_path(cf, &cache->path) != NGX_OK) {
         return NGX_CONF_ERROR;
@@ -1757,69 +1713,3 @@ ngx_http_file_cache_valid_set_slot(ngx_c
 
     return NGX_CONF_OK;
 }
-
-
-ngx_int_t
-ngx_http_cache(ngx_http_request_t *r, ngx_array_t *no_cache)
-{
-    ngx_str_t                  val;
-    ngx_uint_t                 i;
-    ngx_http_complex_value_t  *cv;
-
-    cv = no_cache->elts;
-
-    for (i = 0; i < no_cache->nelts; i++) {
-        if (ngx_http_complex_value(r, &cv[i], &val) != NGX_OK) {
-            return NGX_ERROR;
-        }
-
-        if (val.len && val.data[0] != '0') {
-            return NGX_DECLINED;
-        }
-    }
-
-    return NGX_OK;
-}
-
-
-char *
-ngx_http_no_cache_set_slot(ngx_conf_t *cf, ngx_command_t *cmd, void *conf)
-{
-    char  *p = conf;
-
-    ngx_str_t                          *value;
-    ngx_uint_t                          i;
-    ngx_array_t                       **a;
-    ngx_http_complex_value_t           *cv;
-    ngx_http_compile_complex_value_t    ccv;
-
-    a = (ngx_array_t **) (p + cmd->offset);
-
-    if (*a == NGX_CONF_UNSET_PTR) {
-        *a = ngx_array_create(cf->pool, 1, sizeof(ngx_http_complex_value_t));
-        if (*a == NULL) {
-            return NGX_CONF_ERROR;
-        }
-    }
-
-    value = cf->args->elts;
-
-    for (i = 1; i < cf->args->nelts; i++) {
-        cv = ngx_array_push(*a);
-        if (cv == NULL) {
-            return NGX_CONF_ERROR;
-        }
-
-        ngx_memzero(&ccv, sizeof(ngx_http_compile_complex_value_t));
-
-        ccv.cf = cf;
-        ccv.value = &value[i];
-        ccv.complex_value = cv;
-
-        if (ngx_http_compile_complex_value(&ccv) != NGX_OK) {
-            return NGX_CONF_ERROR;
-        }
-    }
-
-    return NGX_CONF_OK;
-}
--- nginx-1.0.0.orig/src/http/ngx_http_write_filter_module.c
+++ nginx-1.0.0/src/http/ngx_http_write_filter_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -223,11 +224,14 @@ ngx_http_write_filter(ngx_http_request_t
             return NGX_AGAIN;
         }
 
-    } else if (clcf->sendfile_max_chunk) {
-        limit = clcf->sendfile_max_chunk;
+        if (clcf->sendfile_max_chunk
+            && (off_t) clcf->sendfile_max_chunk < limit)
+        {
+            limit = clcf->sendfile_max_chunk;
+        }
 
     } else {
-        limit = 0;
+        limit = clcf->sendfile_max_chunk;
     }
 
     sent = c->sent;
@@ -262,17 +266,18 @@ ngx_http_write_filter(ngx_http_request_t
             }
         }
 
-        delay = (ngx_msec_t) ((nsent - sent) * 1000 / r->limit_rate + 1);
+        delay = (ngx_msec_t) ((nsent - sent) * 1000 / r->limit_rate);
 
         if (delay > 0) {
+            limit = 0;
             c->write->delayed = 1;
             ngx_add_timer(c->write, delay);
         }
+    }
 
-    } else if (c->write->ready
-               && clcf->sendfile_max_chunk
-               && (size_t) (c->sent - sent)
-                      >= clcf->sendfile_max_chunk - 2 * ngx_pagesize)
+    if (limit
+        && c->write->ready
+        && c->sent - sent >= limit - (off_t) (2 * ngx_pagesize))
     {
         c->write->delayed = 1;
         ngx_add_timer(c->write, 1);
--- nginx-1.0.0.orig/src/http/modules/ngx_http_autoindex_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_autoindex_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -26,9 +27,9 @@ typedef struct {
     ngx_str_t      name;
     size_t         utf_len;
     size_t         escape;
+    size_t         escape_html;
 
     unsigned       dir:1;
-    unsigned       colon:1;
 
     time_t         mtime;
     off_t          size;
@@ -94,8 +95,8 @@ static ngx_http_module_t  ngx_http_autoi
     NULL,                                  /* create server configuration */
     NULL,                                  /* merge server configuration */
 
-    ngx_http_autoindex_create_loc_conf,    /* create location configration */
-    ngx_http_autoindex_merge_loc_conf      /* merge location configration */
+    ngx_http_autoindex_create_loc_conf,    /* create location configuration */
+    ngx_http_autoindex_merge_loc_conf      /* merge location configuration */
 };
 
 
@@ -138,7 +139,7 @@ ngx_http_autoindex_handler(ngx_http_requ
 {
     u_char                         *last, *filename, scale;
     off_t                           length;
-    size_t                          len, utf_len, allocated, root;
+    size_t                          len, char_len, escape_html, allocated, root;
     ngx_tm_t                        tm;
     ngx_err_t                       err;
     ngx_buf_t                      *b;
@@ -338,7 +339,10 @@ ngx_http_autoindex_handler(ngx_http_requ
         ngx_cpystrn(entry->name.data, ngx_de_name(&dir), len + 1);
 
         entry->escape = 2 * ngx_escape_uri(NULL, ngx_de_name(&dir), len,
-                                           NGX_ESCAPE_HTML);
+                                           NGX_ESCAPE_URI_COMPONENT);
+
+        entry->escape_html = ngx_escape_html(NULL, entry->name.data,
+                                             entry->name.len);
 
         if (utf8) {
             entry->utf_len = ngx_utf8_length(entry->name.data, entry->name.len);
@@ -346,8 +350,6 @@ ngx_http_autoindex_handler(ngx_http_requ
             entry->utf_len = len;
         }
 
-        entry->colon = (ngx_strchr(entry->name.data, ':') != NULL);
-
         entry->dir = ngx_de_is_dir(&dir);
         entry->mtime = ngx_de_mtime(&dir);
         entry->size = ngx_de_size(&dir);
@@ -358,10 +360,12 @@ ngx_http_autoindex_handler(ngx_http_requ
                       ngx_close_dir_n " \"%s\" failed", &path);
     }
 
+    escape_html = ngx_escape_html(NULL, r->uri.data, r->uri.len);
+
     len = sizeof(title) - 1
-          + r->uri.len
+          + r->uri.len + escape_html
           + sizeof(header) - 1
-          + r->uri.len
+          + r->uri.len + escape_html
           + sizeof("</h1>") - 1
           + sizeof("<hr><pre><a href=\"../\">../</a>" CRLF) - 1
           + sizeof("</pre><hr>") - 1
@@ -373,7 +377,8 @@ ngx_http_autoindex_handler(ngx_http_requ
             + entry[i].name.len + entry[i].escape
             + 1                                          /* 1 is for "/" */
             + sizeof("\">") - 1
-            + entry[i].name.len - entry[i].utf_len + entry[i].colon * 2
+            + entry[i].name.len - entry[i].utf_len
+            + entry[i].escape_html
             + NGX_HTTP_AUTOINDEX_NAME_LEN + sizeof("&gt;") - 2
             + sizeof("</a>") - 1
             + sizeof(" 28-Sep-1970 12:00 ") - 1
@@ -393,9 +398,18 @@ ngx_http_autoindex_handler(ngx_http_requ
     }
 
     b->last = ngx_cpymem(b->last, title, sizeof(title) - 1);
-    b->last = ngx_cpymem(b->last, r->uri.data, r->uri.len);
-    b->last = ngx_cpymem(b->last, header, sizeof(header) - 1);
-    b->last = ngx_cpymem(b->last, r->uri.data, r->uri.len);
+
+    if (escape_html) {
+        b->last = (u_char *) ngx_escape_html(b->last, r->uri.data, r->uri.len);
+        b->last = ngx_cpymem(b->last, header, sizeof(header) - 1);
+        b->last = (u_char *) ngx_escape_html(b->last, r->uri.data, r->uri.len);
+
+    } else {
+        b->last = ngx_cpymem(b->last, r->uri.data, r->uri.len);
+        b->last = ngx_cpymem(b->last, header, sizeof(header) - 1);
+        b->last = ngx_cpymem(b->last, r->uri.data, r->uri.len);
+    }
+
     b->last = ngx_cpymem(b->last, "</h1>", sizeof("</h1>") - 1);
 
     b->last = ngx_cpymem(b->last, "<hr><pre><a href=\"../\">../</a>" CRLF,
@@ -406,14 +420,9 @@ ngx_http_autoindex_handler(ngx_http_requ
     for (i = 0; i < entries.nelts; i++) {
         b->last = ngx_cpymem(b->last, "<a href=\"", sizeof("<a href=\"") - 1);
 
-        if (entry[i].colon) {
-            *b->last++ = '.';
-            *b->last++ = '/';
-        }
-
         if (entry[i].escape) {
             ngx_escape_uri(b->last, entry[i].name.data, entry[i].name.len,
-                           NGX_ESCAPE_HTML);
+                           NGX_ESCAPE_URI_COMPONENT);
 
             b->last += entry[i].name.len + entry[i].escape;
 
@@ -433,20 +442,41 @@ ngx_http_autoindex_handler(ngx_http_requ
 
         if (entry[i].name.len != len) {
             if (len > NGX_HTTP_AUTOINDEX_NAME_LEN) {
-                utf_len = NGX_HTTP_AUTOINDEX_NAME_LEN - 3 + 1;
+                char_len = NGX_HTTP_AUTOINDEX_NAME_LEN - 3 + 1;
 
             } else {
-                utf_len = NGX_HTTP_AUTOINDEX_NAME_LEN + 1;
+                char_len = NGX_HTTP_AUTOINDEX_NAME_LEN + 1;
             }
 
+            last = b->last;
             b->last = ngx_utf8_cpystrn(b->last, entry[i].name.data,
-                                       utf_len, entry[i].name.len + 1);
+                                       char_len, entry[i].name.len + 1);
+
+            if (entry[i].escape_html) {
+                b->last = (u_char *) ngx_escape_html(last, entry[i].name.data,
+                                                     b->last - last);
+            }
+
             last = b->last;
 
         } else {
-            b->last = ngx_cpystrn(b->last, entry[i].name.data,
-                                  NGX_HTTP_AUTOINDEX_NAME_LEN + 1);
-            last = b->last - 3;
+            if (entry[i].escape_html) {
+                if (len > NGX_HTTP_AUTOINDEX_NAME_LEN) {
+                    char_len = NGX_HTTP_AUTOINDEX_NAME_LEN - 3;
+
+                } else {
+                    char_len = len;
+                }
+
+                b->last = (u_char *) ngx_escape_html(b->last,
+                                                  entry[i].name.data, char_len);
+                last = b->last;
+
+            } else {
+                b->last = ngx_cpystrn(b->last, entry[i].name.data,
+                                      NGX_HTTP_AUTOINDEX_NAME_LEN + 1);
+                last = b->last - 3;
+            }
         }
 
         if (len > NGX_HTTP_AUTOINDEX_NAME_LEN) {
--- nginx-1.0.0.orig/src/http/modules/ngx_http_geo_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_geo_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -257,17 +258,41 @@ ngx_http_geo_real_addr(ngx_http_request_
 {
     struct sockaddr_in         *sin;
     ngx_http_variable_value_t  *v;
+#if (NGX_HAVE_INET6)
+    u_char                     *p;
+    in_addr_t                   addr;
+    struct sockaddr_in6        *sin6;
+#endif
 
     if (ctx->index == -1) {
         ngx_log_debug1(NGX_LOG_DEBUG_HTTP, r->connection->log, 0,
                        "http geo started: %V", &r->connection->addr_text);
 
-        if (r->connection->sockaddr->sa_family != AF_INET) {
-            return 0;
+        switch (r->connection->sockaddr->sa_family) {
+
+        case AF_INET:
+            sin = (struct sockaddr_in *) r->connection->sockaddr;
+            return ntohl(sin->sin_addr.s_addr);
+
+#if (NGX_HAVE_INET6)
+
+        case AF_INET6:
+            sin6 = (struct sockaddr_in6 *) r->connection->sockaddr;
+
+            if (IN6_IS_ADDR_V4MAPPED(&sin6->sin6_addr)) {
+                p = sin6->sin6_addr.s6_addr;
+                addr = p[12] << 24;
+                addr += p[13] << 16;
+                addr += p[14] << 8;
+                addr += p[15];
+
+                return addr;
+            }
+
+#endif
         }
 
-        sin = (struct sockaddr_in *) r->connection->sockaddr;
-        return ntohl(sin->sin_addr.s_addr);
+        return INADDR_NONE;
     }
 
     v = ngx_http_get_flushed_variable(r, ctx->index);
--- nginx-1.0.0.orig/src/http/modules/ngx_http_geoip_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_geoip_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -14,6 +15,7 @@
 
 typedef struct {
     GeoIP      *country;
+    GeoIP      *org;
     GeoIP      *city;
 } ngx_http_geoip_conf_t;
 
@@ -28,6 +30,8 @@ typedef const char *(*ngx_http_geoip_var
 
 static ngx_int_t ngx_http_geoip_country_variable(ngx_http_request_t *r,
     ngx_http_variable_value_t *v, uintptr_t data);
+static ngx_int_t ngx_http_geoip_org_variable(ngx_http_request_t *r,
+    ngx_http_variable_value_t *v, uintptr_t data);
 static ngx_int_t ngx_http_geoip_city_variable(ngx_http_request_t *r,
     ngx_http_variable_value_t *v, uintptr_t data);
 static ngx_int_t ngx_http_geoip_region_name_variable(ngx_http_request_t *r,
@@ -42,6 +46,8 @@ static ngx_int_t ngx_http_geoip_add_vari
 static void *ngx_http_geoip_create_conf(ngx_conf_t *cf);
 static char *ngx_http_geoip_country(ngx_conf_t *cf, ngx_command_t *cmd,
     void *conf);
+static char *ngx_http_geoip_org(ngx_conf_t *cf, ngx_command_t *cmd,
+    void *conf);
 static char *ngx_http_geoip_city(ngx_conf_t *cf, ngx_command_t *cmd,
     void *conf);
 static void ngx_http_geoip_cleanup(void *data);
@@ -56,6 +62,13 @@ static ngx_command_t  ngx_http_geoip_com
       0,
       NULL },
 
+    { ngx_string("geoip_org"),
+      NGX_HTTP_MAIN_CONF|NGX_CONF_TAKE12,
+      ngx_http_geoip_org,
+      NGX_HTTP_MAIN_CONF_OFFSET,
+      0,
+      NULL },
+
     { ngx_string("geoip_city"),
       NGX_HTTP_MAIN_CONF|NGX_CONF_TAKE12,
       ngx_http_geoip_city,
@@ -112,6 +125,10 @@ static ngx_http_variable_t  ngx_http_geo
       ngx_http_geoip_country_variable,
       (uintptr_t) GeoIP_country_name_by_ipnum, 0, 0 },
 
+    { ngx_string("geoip_org"), NULL,
+      ngx_http_geoip_org_variable,
+      (uintptr_t) GeoIP_name_by_ipnum, 0, 0 },
+
     { ngx_string("geoip_city_continent_code"), NULL,
       ngx_http_geoip_city_variable,
       offsetof(GeoIPRecord, continent_code), 0, 0 },
@@ -164,6 +181,44 @@ static ngx_http_variable_t  ngx_http_geo
 };
 
 
+static u_long
+ngx_http_geoip_addr(ngx_http_request_t *r)
+{
+    struct sockaddr_in   *sin;
+#if (NGX_HAVE_INET6)
+    u_char               *p;
+    u_long                addr;
+    struct sockaddr_in6  *sin6;
+#endif
+
+    switch (r->connection->sockaddr->sa_family) {
+
+    case AF_INET:
+        sin = (struct sockaddr_in *) r->connection->sockaddr;
+        return ntohl(sin->sin_addr.s_addr);
+
+#if (NGX_HAVE_INET6)
+
+    case AF_INET6:
+        sin6 = (struct sockaddr_in6 *) r->connection->sockaddr;
+
+        if (IN6_IS_ADDR_V4MAPPED(&sin6->sin6_addr)) {
+            p = sin6->sin6_addr.s6_addr;
+            addr = p[12] << 24;
+            addr += p[13] << 16;
+            addr += p[14] << 8;
+            addr += p[15];
+
+            return addr;
+        }
+
+#endif
+    }
+
+    return INADDR_NONE;
+}
+
+
 static ngx_int_t
 ngx_http_geoip_country_variable(ngx_http_request_t *r,
     ngx_http_variable_value_t *v, uintptr_t data)
@@ -171,9 +226,7 @@ ngx_http_geoip_country_variable(ngx_http
     ngx_http_geoip_variable_handler_pt  handler =
         (ngx_http_geoip_variable_handler_pt) data;
 
-    u_long                  addr;
     const char             *val;
-    struct sockaddr_in     *sin;
     ngx_http_geoip_conf_t  *gcf;
 
     gcf = ngx_http_get_module_main_conf(r, ngx_http_geoip_module);
@@ -182,14 +235,45 @@ ngx_http_geoip_country_variable(ngx_http
         goto not_found;
     }
 
-    if (r->connection->sockaddr->sa_family != AF_INET) {
+    val = handler(gcf->country, ngx_http_geoip_addr(r));
+
+    if (val == NULL) {
         goto not_found;
     }
 
-    sin = (struct sockaddr_in *) r->connection->sockaddr;
-    addr = ntohl(sin->sin_addr.s_addr);
+    v->len = ngx_strlen(val);
+    v->valid = 1;
+    v->no_cacheable = 0;
+    v->not_found = 0;
+    v->data = (u_char *) val;
+
+    return NGX_OK;
 
-    val = handler(gcf->country, addr);
+not_found:
+
+    v->not_found = 1;
+
+    return NGX_OK;
+}
+
+
+static ngx_int_t
+ngx_http_geoip_org_variable(ngx_http_request_t *r,
+    ngx_http_variable_value_t *v, uintptr_t data)
+{
+    ngx_http_geoip_variable_handler_pt  handler =
+        (ngx_http_geoip_variable_handler_pt) data;
+
+    const char             *val;
+    ngx_http_geoip_conf_t  *gcf;
+
+    gcf = ngx_http_get_module_main_conf(r, ngx_http_geoip_module);
+
+    if (gcf->org == NULL) {
+        goto not_found;
+    }
+
+    val = handler(gcf->org, ngx_http_geoip_addr(r));
 
     if (val == NULL) {
         goto not_found;
@@ -364,18 +448,12 @@ ngx_http_geoip_city_int_variable(ngx_htt
 static GeoIPRecord *
 ngx_http_geoip_get_city_record(ngx_http_request_t *r)
 {
-    u_long                  addr;
-    struct sockaddr_in     *sin;
     ngx_http_geoip_conf_t  *gcf;
 
     gcf = ngx_http_get_module_main_conf(r, ngx_http_geoip_module);
 
-    if (gcf->city && r->connection->sockaddr->sa_family == AF_INET) {
-
-        sin = (struct sockaddr_in *) r->connection->sockaddr;
-        addr = ntohl(sin->sin_addr.s_addr);
-
-        return GeoIP_record_by_ipnum(gcf->city, addr);
+    if (gcf->city) {
+        return GeoIP_record_by_ipnum(gcf->city, ngx_http_geoip_addr(r));
     }
 
     return NULL;
@@ -441,7 +519,7 @@ ngx_http_geoip_country(ngx_conf_t *cf, n
 
     if (gcf->country == NULL) {
         ngx_conf_log_error(NGX_LOG_EMERG, cf, 0,
-                           "GeoIO_open(\"%V\") failed", &value[1]);
+                           "GeoIP_open(\"%V\") failed", &value[1]);
 
         return NGX_CONF_ERROR;
     }
@@ -475,6 +553,57 @@ ngx_http_geoip_country(ngx_conf_t *cf, n
 
 
 static char *
+ngx_http_geoip_org(ngx_conf_t *cf, ngx_command_t *cmd, void *conf)
+{
+    ngx_http_geoip_conf_t  *gcf = conf;
+
+    ngx_str_t  *value;
+
+    if (gcf->org) {
+        return "is duplicate";
+    }
+
+    value = cf->args->elts;
+
+    gcf->org = GeoIP_open((char *) value[1].data, GEOIP_MEMORY_CACHE);
+
+    if (gcf->org == NULL) {
+        ngx_conf_log_error(NGX_LOG_EMERG, cf, 0,
+                           "GeoIP_open(\"%V\") failed", &value[1]);
+
+        return NGX_CONF_ERROR;
+    }
+
+    if (cf->args->nelts == 3) {
+        if (ngx_strcmp(value[2].data, "utf8") == 0) {
+            GeoIP_set_charset (gcf->org, GEOIP_CHARSET_UTF8);
+
+        } else {
+            ngx_conf_log_error(NGX_LOG_EMERG, cf, 0,
+                               "invalid parameter \"%V\"", &value[2]);
+            return NGX_CONF_ERROR;
+        }
+    }
+
+    switch (gcf->org->databaseType) {
+
+    case GEOIP_ISP_EDITION:
+    case GEOIP_ORG_EDITION:
+    case GEOIP_DOMAIN_EDITION:
+    case GEOIP_ASNUM_EDITION:
+
+        return NGX_CONF_OK;
+
+    default:
+        ngx_conf_log_error(NGX_LOG_EMERG, cf, 0,
+                           "invalid GeoIP database \"%V\" type:%d",
+                           &value[1], gcf->org->databaseType);
+        return NGX_CONF_ERROR;
+    }
+}
+
+
+static char *
 ngx_http_geoip_city(ngx_conf_t *cf, ngx_command_t *cmd, void *conf)
 {
     ngx_http_geoip_conf_t  *gcf = conf;
@@ -491,7 +620,7 @@ ngx_http_geoip_city(ngx_conf_t *cf, ngx_
 
     if (gcf->city == NULL) {
         ngx_conf_log_error(NGX_LOG_EMERG, cf, 0,
-                           "GeoIO_open(\"%V\") failed", &value[1]);
+                           "GeoIP_open(\"%V\") failed", &value[1]);
 
         return NGX_CONF_ERROR;
     }
@@ -532,6 +661,10 @@ ngx_http_geoip_cleanup(void *data)
         GeoIP_delete(gcf->country);
     }
 
+    if (gcf->org) {
+        GeoIP_delete(gcf->org);
+    }
+
     if (gcf->city) {
         GeoIP_delete(gcf->city);
     }
--- nginx-1.0.0.orig/src/http/modules/ngx_http_stub_status_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_stub_status_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/http/modules/ngx_http_browser_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_browser_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/http/modules/ngx_http_charset_filter_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_charset_filter_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/http/modules/ngx_http_map_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_map_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -111,7 +112,6 @@ ngx_http_map_variable(ngx_http_request_t
 
     size_t                      len;
     ngx_str_t                   val;
-    ngx_uint_t                  key;
     ngx_http_variable_value_t  *value;
 
     ngx_log_debug0(NGX_LOG_DEBUG_HTTP, r->connection->log, 0,
@@ -127,9 +127,7 @@ ngx_http_map_variable(ngx_http_request_t
         len--;
     }
 
-    key = ngx_hash_strlow(val.data, val.data, len);
-
-    value = ngx_http_map_find(r, &map->map, key, val.data, len, &val);
+    value = ngx_http_map_find(r, &map->map, &val);
 
     if (value == NULL) {
         value = map->default_value;
@@ -529,6 +527,12 @@ found:
 
         ngx_memzero(&rc, sizeof(ngx_regex_compile_t));
 
+        if (value[0].data[0] == '*') {
+            value[0].len--;
+            value[0].data++;
+            rc.options = NGX_REGEX_CASELESS;
+        }
+
         rc.pattern = value[0];
         rc.err.len = NGX_MAX_CONF_ERRSTR;
         rc.err.data = errstr;
--- nginx-1.0.0.orig/src/http/modules/ngx_http_userid_filter_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_userid_filter_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -38,6 +39,7 @@ typedef struct {
     uint32_t    uid_got[4];
     uint32_t    uid_set[4];
     ngx_str_t   cookie;
+    ngx_uint_t  reset;
 } ngx_http_userid_ctx_t;
 
 
@@ -164,8 +166,8 @@ static ngx_http_module_t  ngx_http_useri
     NULL,                                  /* create server configuration */
     NULL,                                  /* merge server configuration */
 
-    ngx_http_userid_create_conf,           /* create location configration */
-    ngx_http_userid_merge_conf             /* merge location configration */
+    ngx_http_userid_create_conf,           /* create location configuration */
+    ngx_http_userid_merge_conf             /* merge location configuration */
 };
 
 
@@ -185,8 +187,10 @@ ngx_module_t  ngx_http_userid_filter_mod
 };
 
 
-static ngx_str_t  ngx_http_userid_got = ngx_string("uid_got");
-static ngx_str_t  ngx_http_userid_set = ngx_string("uid_set");
+static ngx_str_t   ngx_http_userid_got = ngx_string("uid_got");
+static ngx_str_t   ngx_http_userid_set = ngx_string("uid_set");
+static ngx_str_t   ngx_http_userid_reset = ngx_string("uid_reset");
+static ngx_uint_t  ngx_http_userid_reset_index;
 
 
 static ngx_int_t
@@ -387,7 +391,7 @@ ngx_http_userid_set_uid(ngx_http_request
     p = ngx_copy(cookie, conf->name.data, conf->name.len);
     *p++ = '=';
 
-    if (ctx->uid_got[3] == 0) {
+    if (ctx->uid_got[3] == 0 || ctx->reset) {
         src.len = 16;
         src.data = (u_char *) ctx->uid_set;
         dst.data = p;
@@ -452,11 +456,12 @@ static ngx_int_t
 ngx_http_userid_create_uid(ngx_http_request_t *r, ngx_http_userid_ctx_t *ctx,
     ngx_http_userid_conf_t *conf)
 {
-    ngx_connection_t     *c;
-    struct sockaddr_in   *sin;
+    ngx_connection_t           *c;
+    struct sockaddr_in         *sin;
+    ngx_http_variable_value_t  *vv;
 #if (NGX_HAVE_INET6)
-    u_char               *p;
-    struct sockaddr_in6  *sin6;
+    u_char                     *p;
+    struct sockaddr_in6        *sin6;
 #endif
 
     if (ctx->uid_set[3] != 0) {
@@ -465,20 +470,35 @@ ngx_http_userid_create_uid(ngx_http_requ
 
     if (ctx->uid_got[3] != 0) {
 
-        if (conf->mark == '\0'
-            || (ctx->cookie.len > 23
-                && ctx->cookie.data[22] == conf->mark
-                && ctx->cookie.data[23] == '='))
-        {
+        vv = ngx_http_get_indexed_variable(r, ngx_http_userid_reset_index);
+
+        if (vv->len == 0 || (vv->len == 1 && vv->data[0] == '0')) {
+
+            if (conf->mark == '\0'
+                || (ctx->cookie.len > 23
+                    && ctx->cookie.data[22] == conf->mark
+                    && ctx->cookie.data[23] == '='))
+            {
+                return NGX_OK;
+            }
+
+            ctx->uid_set[0] = ctx->uid_got[0];
+            ctx->uid_set[1] = ctx->uid_got[1];
+            ctx->uid_set[2] = ctx->uid_got[2];
+            ctx->uid_set[3] = ctx->uid_got[3];
+
             return NGX_OK;
-        }
 
-        ctx->uid_set[0] = ctx->uid_got[0];
-        ctx->uid_set[1] = ctx->uid_got[1];
-        ctx->uid_set[2] = ctx->uid_got[2];
-        ctx->uid_set[3] = ctx->uid_got[3];
+        } else {
+            ctx->reset = 1;
 
-        return NGX_OK;
+            if (vv->len == 3 && ngx_strncmp(vv->data, "log", 3) == 0) {
+                ngx_log_error(NGX_LOG_NOTICE, r->connection->log, 0,
+                        "userid cookie \"%V=%08XD%08XD%08XD%08XD\" was reset",
+                        &conf->name, ctx->uid_got[0], ctx->uid_got[1],
+                        ctx->uid_got[2], ctx->uid_got[3]);
+            }
+        }
     }
 
     /*
@@ -566,8 +586,19 @@ ngx_http_userid_variable(ngx_http_reques
 
 
 static ngx_int_t
+ngx_http_userid_reset_variable(ngx_http_request_t *r,
+    ngx_http_variable_value_t *v, uintptr_t data)
+{
+    *v = ngx_http_variable_null_value;
+
+    return NGX_OK;
+}
+
+
+static ngx_int_t
 ngx_http_userid_add_variables(ngx_conf_t *cf)
 {
+    ngx_int_t             n;
     ngx_http_variable_t  *var;
 
     var = ngx_http_add_variable(cf, &ngx_http_userid_got, 0);
@@ -584,6 +615,21 @@ ngx_http_userid_add_variables(ngx_conf_t
 
     var->get_handler = ngx_http_userid_set_variable;
 
+    var = ngx_http_add_variable(cf, &ngx_http_userid_reset,
+                                NGX_HTTP_VAR_CHANGEABLE);
+    if (var == NULL) {
+        return NGX_ERROR;
+    }
+
+    var->get_handler = ngx_http_userid_reset_variable;
+
+    n = ngx_http_get_variable_index(cf, &ngx_http_userid_reset);
+    if (n == NGX_ERROR) {
+        return NGX_ERROR;
+    }
+
+    ngx_http_userid_reset_index = n;
+
     return NGX_OK;
 }
 
--- nginx-1.0.0.orig/src/http/modules/ngx_http_chunked_filter_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_chunked_filter_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -9,6 +10,12 @@
 #include <ngx_http.h>
 
 
+typedef struct {
+    ngx_chain_t         *free;
+    ngx_chain_t         *busy;
+} ngx_http_chunked_filter_ctx_t;
+
+
 static ngx_int_t ngx_http_chunked_filter_init(ngx_conf_t *cf);
 
 
@@ -50,7 +57,8 @@ static ngx_http_output_body_filter_pt   
 static ngx_int_t
 ngx_http_chunked_header_filter(ngx_http_request_t *r)
 {
-    ngx_http_core_loc_conf_t  *clcf;
+    ngx_http_core_loc_conf_t       *clcf;
+    ngx_http_chunked_filter_ctx_t  *ctx;
 
     if (r->headers_out.status == NGX_HTTP_NOT_MODIFIED
         || r->headers_out.status == NGX_HTTP_NO_CONTENT
@@ -70,6 +78,14 @@ ngx_http_chunked_header_filter(ngx_http_
             if (clcf->chunked_transfer_encoding) {
                 r->chunked = 1;
 
+                ctx = ngx_pcalloc(r->pool,
+                                  sizeof(ngx_http_chunked_filter_ctx_t));
+                if (ctx == NULL) {
+                    return NGX_ERROR;
+                }
+
+                ngx_http_set_ctx(r, ctx, ngx_http_chunked_filter_module);
+
             } else {
                 r->keepalive = 0;
             }
@@ -83,17 +99,21 @@ ngx_http_chunked_header_filter(ngx_http_
 static ngx_int_t
 ngx_http_chunked_body_filter(ngx_http_request_t *r, ngx_chain_t *in)
 {
-    u_char       *chunk;
-    off_t         size;
-    ngx_buf_t    *b;
-    ngx_chain_t   out, tail, *cl, *tl, **ll;
+    u_char                         *chunk;
+    off_t                           size;
+    ngx_int_t                       rc;
+    ngx_buf_t                      *b;
+    ngx_chain_t                    *out, *cl, *tl, **ll;
+    ngx_http_chunked_filter_ctx_t  *ctx;
 
     if (in == NULL || !r->chunked || r->header_only) {
         return ngx_http_next_body_filter(r, in);
     }
 
-    out.buf = NULL;
-    ll = &out.next;
+    ctx = ngx_http_get_module_ctx(r, ngx_http_chunked_filter_module);
+
+    out = NULL;
+    ll = &out;
 
     size = 0;
     cl = in;
@@ -127,31 +147,46 @@ ngx_http_chunked_body_filter(ngx_http_re
     }
 
     if (size) {
-        b = ngx_calloc_buf(r->pool);
-        if (b == NULL) {
+        tl = ngx_chain_get_free_buf(r->pool, &ctx->free);
+        if (tl == NULL) {
             return NGX_ERROR;
         }
 
-        /* the "0000000000000000" is 64-bit hexadimal string */
+        b = tl->buf;
+        chunk = b->start;
 
-        chunk = ngx_palloc(r->pool, sizeof("0000000000000000" CRLF) - 1);
         if (chunk == NULL) {
-            return NGX_ERROR;
+            /* the "0000000000000000" is 64-bit hexadecimal string */
+
+            chunk = ngx_palloc(r->pool, sizeof("0000000000000000" CRLF) - 1);
+            if (chunk == NULL) {
+                return NGX_ERROR;
+            }
+
+            b->start = chunk;
+            b->end = chunk + sizeof("0000000000000000" CRLF) - 1;
         }
 
+        b->tag = (ngx_buf_tag_t) &ngx_http_chunked_filter_module;
+        b->memory = 0;
         b->temporary = 1;
         b->pos = chunk;
         b->last = ngx_sprintf(chunk, "%xO" CRLF, size);
 
-        out.buf = b;
+        tl->next = out;
+        out = tl;
     }
 
     if (cl->buf->last_buf) {
-        b = ngx_calloc_buf(r->pool);
-        if (b == NULL) {
+        tl = ngx_chain_get_free_buf(r->pool, &ctx->free);
+        if (tl == NULL) {
             return NGX_ERROR;
         }
 
+        b = tl->buf;
+
+        b->tag = (ngx_buf_tag_t) &ngx_http_chunked_filter_module;
+        b->temporary = 0;
         b->memory = 1;
         b->last_buf = 1;
         b->pos = (u_char *) CRLF "0" CRLF CRLF;
@@ -159,35 +194,38 @@ ngx_http_chunked_body_filter(ngx_http_re
 
         cl->buf->last_buf = 0;
 
-        if (size == 0) {
-            b->pos += 2;
-            out.buf = b;
-            out.next = NULL;
-
-            return ngx_http_next_body_filter(r, &out);
-        }
+        *ll = tl;
 
-    } else {
         if (size == 0) {
-            *ll = NULL;
-            return ngx_http_next_body_filter(r, out.next);
+            b->pos += 2;
         }
 
-        b = ngx_calloc_buf(r->pool);
-        if (b == NULL) {
+    } else if (size > 0) {
+        tl = ngx_chain_get_free_buf(r->pool, &ctx->free);
+        if (tl == NULL) {
             return NGX_ERROR;
         }
 
+        b = tl->buf;
+
+        b->tag = (ngx_buf_tag_t) &ngx_http_chunked_filter_module;
+        b->temporary = 0;
         b->memory = 1;
         b->pos = (u_char *) CRLF;
         b->last = b->pos + 2;
+
+        *ll = tl;
+
+    } else {
+        *ll = NULL;
     }
 
-    tail.buf = b;
-    tail.next = NULL;
-    *ll = &tail;
+    rc = ngx_http_next_body_filter(r, out);
+
+    ngx_chain_update_chains(&ctx->free, &ctx->busy, &out,
+                            (ngx_buf_tag_t) &ngx_http_chunked_filter_module);
 
-    return ngx_http_next_body_filter(r, &out);
+    return rc;
 }
 
 
--- nginx-1.0.0.orig/src/http/modules/ngx_http_range_filter_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_range_filter_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -58,8 +59,8 @@ typedef struct {
 } ngx_http_range_filter_ctx_t;
 
 
-ngx_int_t ngx_http_range_parse(ngx_http_request_t *r,
-    ngx_http_range_filter_ctx_t *ctx);
+static ngx_int_t ngx_http_range_parse(ngx_http_request_t *r,
+    ngx_http_range_filter_ctx_t *ctx, ngx_uint_t ranges);
 static ngx_int_t ngx_http_range_singlepart_header(ngx_http_request_t *r,
     ngx_http_range_filter_ctx_t *ctx);
 static ngx_int_t ngx_http_range_multipart_header(ngx_http_request_t *r,
@@ -146,7 +147,7 @@ static ngx_int_t
 ngx_http_range_header_filter(ngx_http_request_t *r)
 {
     time_t                        if_range;
-    ngx_int_t                     rc;
+    ngx_http_core_loc_conf_t     *clcf;
     ngx_http_range_filter_ctx_t  *ctx;
 
     if (r->http_version < NGX_HTTP_VERSION_10
@@ -158,6 +159,12 @@ ngx_http_range_header_filter(ngx_http_re
         return ngx_http_next_header_filter(r);
     }
 
+    clcf = ngx_http_get_module_loc_conf(r, ngx_http_core_module);
+
+    if (clcf->max_ranges == 0) {
+        return ngx_http_next_header_filter(r);
+    }
+
     if (r->headers_in.range == NULL
         || r->headers_in.range->value.len < 7
         || ngx_strncasecmp(r->headers_in.range->value.data,
@@ -192,10 +199,9 @@ ngx_http_range_header_filter(ngx_http_re
         return NGX_ERROR;
     }
 
-    rc = ngx_http_range_parse(r, ctx);
-
-    if (rc == NGX_OK) {
+    switch (ngx_http_range_parse(r, ctx, clcf->max_ranges)) {
 
+    case NGX_OK:
         ngx_http_set_ctx(r, ctx, ngx_http_range_body_filter_module);
 
         r->headers_out.status = NGX_HTTP_PARTIAL_CONTENT;
@@ -206,15 +212,16 @@ ngx_http_range_header_filter(ngx_http_re
         }
 
         return ngx_http_range_multipart_header(r, ctx);
-    }
 
-    if (rc == NGX_HTTP_RANGE_NOT_SATISFIABLE) {
+    case NGX_HTTP_RANGE_NOT_SATISFIABLE:
         return ngx_http_range_not_satisfiable(r);
-    }
 
-    /* rc == NGX_ERROR */
+    case NGX_ERROR:
+        return NGX_ERROR;
 
-    return rc;
+    default: /* NGX_DECLINED */
+        break;
+    }
 
 next_filter:
 
@@ -231,15 +238,18 @@ next_filter:
 }
 
 
-ngx_int_t
-ngx_http_range_parse(ngx_http_request_t *r, ngx_http_range_filter_ctx_t *ctx)
+static ngx_int_t
+ngx_http_range_parse(ngx_http_request_t *r, ngx_http_range_filter_ctx_t *ctx,
+    ngx_uint_t ranges)
 {
     u_char            *p;
-    off_t              start, end;
+    off_t              start, end, size, content_length;
     ngx_uint_t         suffix;
     ngx_http_range_t  *range;
 
     p = r->headers_in.range->value.data + 6;
+    size = 0;
+    content_length = r->headers_out.content_length_n;
 
     for ( ;; ) {
         start = 0;
@@ -263,26 +273,11 @@ ngx_http_range_parse(ngx_http_request_t 
                 return NGX_HTTP_RANGE_NOT_SATISFIABLE;
             }
 
-            if (start >= r->headers_out.content_length_n) {
-                return NGX_HTTP_RANGE_NOT_SATISFIABLE;
-            }
-
             while (*p == ' ') { p++; }
 
             if (*p == ',' || *p == '\0') {
-                range = ngx_array_push(&ctx->ranges);
-                if (range == NULL) {
-                    return NGX_ERROR;
-                }
-
-                range->start = start;
-                range->end = r->headers_out.content_length_n;
-
-                if (*p++ != ',') {
-                    return NGX_OK;
-                }
-
-                continue;
+                end = content_length;
+                goto found;
             }
 
         } else {
@@ -305,36 +300,49 @@ ngx_http_range_parse(ngx_http_request_t 
         }
 
         if (suffix) {
-           start = r->headers_out.content_length_n - end;
-           end = r->headers_out.content_length_n - 1;
+            start = content_length - end;
+            end = content_length - 1;
         }
 
-        if (start > end) {
-            return NGX_HTTP_RANGE_NOT_SATISFIABLE;
-        }
+        if (end >= content_length) {
+            end = content_length;
 
-        range = ngx_array_push(&ctx->ranges);
-        if (range == NULL) {
-            return NGX_ERROR;
+        } else {
+            end++;
         }
 
-        range->start = start;
+    found:
 
-        if (end >= r->headers_out.content_length_n) {
-            /*
-             * Download Accelerator sends the last byte position
-             * that equals to the file length
-             */
-            range->end = r->headers_out.content_length_n;
+        if (start < end) {
+            range = ngx_array_push(&ctx->ranges);
+            if (range == NULL) {
+                return NGX_ERROR;
+            }
 
-        } else {
-            range->end = end + 1;
+            range->start = start;
+            range->end = end;
+
+            size += end - start;
+
+            if (ranges-- == 0) {
+                return NGX_DECLINED;
+            }
         }
 
         if (*p++ != ',') {
-            return NGX_OK;
+            break;
         }
     }
+
+    if (ctx->ranges.nelts == 0) {
+        return NGX_HTTP_RANGE_NOT_SATISFIABLE;
+    }
+
+    if (size > content_length) {
+        return NGX_DECLINED;
+    }
+
+    return NGX_OK;
 }
 
 
@@ -587,15 +595,8 @@ ngx_http_range_test_overlapped(ngx_http_
     buf = in->buf;
 
     if (!buf->last_buf) {
-
-        if (buf->in_file) {
-            start = buf->file_pos + ctx->offset;
-            last = buf->file_last + ctx->offset;
-
-        } else {
-            start = buf->pos - buf->start + ctx->offset;
-            last = buf->last - buf->start + ctx->offset;
-        }
+        start = ctx->offset;
+        last = ctx->offset + ngx_buf_size(buf);
 
         range = ctx->ranges.elts;
         for (i = 0; i < ctx->ranges.nelts; i++) {
@@ -708,7 +709,6 @@ static ngx_int_t
 ngx_http_range_multipart_body(ngx_http_request_t *r,
     ngx_http_range_filter_ctx_t *ctx, ngx_chain_t *in)
 {
-    off_t              body_start;
     ngx_buf_t         *b, *buf;
     ngx_uint_t         i;
     ngx_chain_t       *out, *hcl, *rcl, *dcl, **ll;
@@ -718,12 +718,6 @@ ngx_http_range_multipart_body(ngx_http_r
     buf = in->buf;
     range = ctx->ranges.elts;
 
-#if (NGX_HTTP_CACHE)
-    body_start = r->cached ? r->cache->body_start : 0;
-#else
-    body_start = 0;
-#endif
-
     for (i = 0; i < ctx->ranges.nelts; i++) {
 
         /*
@@ -784,13 +778,13 @@ ngx_http_range_multipart_body(ngx_http_r
         b->file = buf->file;
 
         if (buf->in_file) {
-            b->file_pos = body_start + range[i].start;
-            b->file_last = body_start + range[i].end;
+            b->file_pos = buf->file_pos + range[i].start;
+            b->file_last = buf->file_pos + range[i].end;
         }
 
         if (ngx_buf_in_memory(buf)) {
-            b->pos = buf->start + (size_t) range[i].start;
-            b->last = buf->start + (size_t) range[i].end;
+            b->pos = buf->pos + (size_t) range[i].start;
+            b->last = buf->pos + (size_t) range[i].end;
         }
 
         dcl = ngx_alloc_chain_link(r->pool);
--- nginx-1.0.0.orig/src/http/modules/ngx_http_access_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_access_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -108,20 +109,30 @@ ngx_http_access_handler(ngx_http_request
 {
     struct sockaddr_in          *sin;
     ngx_http_access_loc_conf_t  *alcf;
+#if (NGX_HAVE_INET6)
+    u_char                      *p;
+    in_addr_t                    addr;
+    struct sockaddr_in6         *sin6;
+#endif
 
     alcf = ngx_http_get_module_loc_conf(r, ngx_http_access_module);
 
-#if (NGX_HAVE_INET6)
+    switch (r->connection->sockaddr->sa_family) {
+
+    case AF_INET:
+        if (alcf->rules) {
+            sin = (struct sockaddr_in *) r->connection->sockaddr;
+            return ngx_http_access_inet(r, alcf, sin->sin_addr.s_addr);
+        }
+        break;
 
-    if (alcf->rules6 && r->connection->sockaddr->sa_family == AF_INET6) {
-        u_char               *p;
-        in_addr_t             addr;
-        struct sockaddr_in6  *sin6;
+#if (NGX_HAVE_INET6)
 
+    case AF_INET6:
         sin6 = (struct sockaddr_in6 *) r->connection->sockaddr;
         p = sin6->sin6_addr.s6_addr;
 
-        if (IN6_IS_ADDR_V4MAPPED(&sin6->sin6_addr)) {
+        if (alcf->rules && IN6_IS_ADDR_V4MAPPED(&sin6->sin6_addr)) {
             addr = p[12] << 24;
             addr += p[13] << 16;
             addr += p[14] << 8;
@@ -129,14 +140,11 @@ ngx_http_access_handler(ngx_http_request
             return ngx_http_access_inet(r, alcf, htonl(addr));
         }
 
-        return ngx_http_access_inet6(r, alcf, p);
-    }
+        if (alcf->rules6) {
+            return ngx_http_access_inet6(r, alcf, p);
+        }
 
 #endif
-
-    if (alcf->rules && r->connection->sockaddr->sa_family == AF_INET) {
-        sin = (struct sockaddr_in *) r->connection->sockaddr;
-        return ngx_http_access_inet(r, alcf, sin->sin_addr.s_addr);
     }
 
     return NGX_DECLINED;
--- nginx-1.0.0.orig/src/http/modules/ngx_http_limit_zone_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_limit_zone_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -95,8 +96,8 @@ static ngx_http_module_t  ngx_http_limit
     NULL,                                  /* create server configuration */
     NULL,                                  /* merge server configuration */
 
-    ngx_http_limit_zone_create_conf,       /* create location configration */
-    ngx_http_limit_zone_merge_conf         /* merge location configration */
+    ngx_http_limit_zone_create_conf,       /* create location configuration */
+    ngx_http_limit_zone_merge_conf         /* merge location configuration */
 };
 
 
@@ -193,31 +194,26 @@ ngx_http_limit_zone_handler(ngx_http_req
 
         /* hash == node->key */
 
-        do {
-            lz = (ngx_http_limit_zone_node_t *) &node->color;
+        lz = (ngx_http_limit_zone_node_t *) &node->color;
 
-            rc = ngx_memn2cmp(vv->data, lz->data, len, (size_t) lz->len);
+        rc = ngx_memn2cmp(vv->data, lz->data, len, (size_t) lz->len);
 
-            if (rc == 0) {
-                if ((ngx_uint_t) lz->conn < lzcf->conn) {
-                    lz->conn++;
-                    goto done;
-                }
-
-                ngx_shmtx_unlock(&shpool->mutex);
-
-                ngx_log_error(lzcf->log_level, r->connection->log, 0,
-                              "limiting connections by zone \"%V\"",
-                              &lzcf->shm_zone->shm.name);
-
-                return NGX_HTTP_SERVICE_UNAVAILABLE;
+        if (rc == 0) {
+            if ((ngx_uint_t) lz->conn < lzcf->conn) {
+                lz->conn++;
+                goto done;
             }
 
-            node = (rc < 0) ? node->left : node->right;
+            ngx_shmtx_unlock(&shpool->mutex);
 
-        } while (node != sentinel && hash == node->key);
+            ngx_log_error(lzcf->log_level, r->connection->log, 0,
+                          "limiting connections by zone \"%V\"",
+                          &lzcf->shm_zone->shm.name);
+
+            return NGX_HTTP_SERVICE_UNAVAILABLE;
+        }
 
-        break;
+        node = (rc < 0) ? node->left : node->right;
     }
 
     n = offsetof(ngx_rbtree_node_t, color)
@@ -421,7 +417,8 @@ ngx_http_limit_zone_merge_conf(ngx_conf_
     ngx_http_limit_zone_conf_t *conf = child;
 
     if (conf->shm_zone == NULL) {
-        *conf = *prev;
+        conf->shm_zone = prev->shm_zone;
+        conf->conn = prev->conn;
     }
 
     ngx_conf_merge_uint_value(conf->log_level, prev->log_level, NGX_LOG_ERR);
--- nginx-1.0.0.orig/src/http/modules/ngx_http_realip_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_realip_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/http/modules/ngx_http_limit_req_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_limit_req_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -111,8 +112,8 @@ static ngx_http_module_t  ngx_http_limit
     NULL,                                  /* create server configuration */
     NULL,                                  /* merge server configuration */
 
-    ngx_http_limit_req_create_conf,        /* create location configration */
-    ngx_http_limit_req_merge_conf          /* merge location configration */
+    ngx_http_limit_req_create_conf,        /* create location configuration */
+    ngx_http_limit_req_merge_conf          /* merge location configuration */
 };
 
 
@@ -371,47 +372,42 @@ ngx_http_limit_req_lookup(ngx_http_limit
 
         /* hash == node->key */
 
-        do {
-            lr = (ngx_http_limit_req_node_t *) &node->color;
+        lr = (ngx_http_limit_req_node_t *) &node->color;
 
-            rc = ngx_memn2cmp(data, lr->data, len, (size_t) lr->len);
+        rc = ngx_memn2cmp(data, lr->data, len, (size_t) lr->len);
 
-            if (rc == 0) {
-                ngx_queue_remove(&lr->queue);
-                ngx_queue_insert_head(&ctx->sh->queue, &lr->queue);
+        if (rc == 0) {
+            ngx_queue_remove(&lr->queue);
+            ngx_queue_insert_head(&ctx->sh->queue, &lr->queue);
 
-                tp = ngx_timeofday();
+            tp = ngx_timeofday();
 
-                now = (ngx_msec_t) (tp->sec * 1000 + tp->msec);
-                ms = (ngx_msec_int_t) (now - lr->last);
+            now = (ngx_msec_t) (tp->sec * 1000 + tp->msec);
+            ms = (ngx_msec_int_t) (now - lr->last);
 
-                excess = lr->excess - ctx->rate * ngx_abs(ms) / 1000 + 1000;
+            excess = lr->excess - ctx->rate * ngx_abs(ms) / 1000 + 1000;
 
-                if (excess < 0) {
-                    excess = 0;
-                }
-
-                *ep = excess;
+            if (excess < 0) {
+                excess = 0;
+            }
 
-                if ((ngx_uint_t) excess > lrcf->burst) {
-                    return NGX_BUSY;
-                }
+            *ep = excess;
 
-                lr->excess = excess;
-                lr->last = now;
+            if ((ngx_uint_t) excess > lrcf->burst) {
+                return NGX_BUSY;
+            }
 
-                if (excess) {
-                    return NGX_AGAIN;
-                }
+            lr->excess = excess;
+            lr->last = now;
 
-                return NGX_OK;
+            if (excess) {
+                return NGX_AGAIN;
             }
 
-            node = (rc < 0) ? node->left : node->right;
-
-        } while (node != sentinel && hash == node->key);
+            return NGX_OK;
+        }
 
-        break;
+        node = (rc < 0) ? node->left : node->right;
     }
 
     *ep = 0;
@@ -569,7 +565,9 @@ ngx_http_limit_req_merge_conf(ngx_conf_t
     ngx_http_limit_req_conf_t *conf = child;
 
     if (conf->shm_zone == NULL) {
-        *conf = *prev;
+        conf->shm_zone = prev->shm_zone;
+        conf->burst = prev->burst;
+        conf->nodelay = prev->nodelay;
     }
 
     ngx_conf_merge_uint_value(conf->limit_log_level, prev->limit_log_level,
--- nginx-1.0.0.orig/src/http/modules/ngx_http_referer_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_referer_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -29,6 +30,9 @@ typedef struct {
     ngx_flag_t               blocked_referer;
 
     ngx_hash_keys_arrays_t  *keys;
+
+    ngx_uint_t               referer_hash_max_size;
+    ngx_uint_t               referer_hash_bucket_size;
 } ngx_http_referer_conf_t;
 
 
@@ -54,6 +58,20 @@ static ngx_command_t  ngx_http_referer_c
       0,
       NULL },
 
+    { ngx_string("referer_hash_max_size"),
+      NGX_HTTP_SRV_CONF|NGX_HTTP_LOC_CONF|NGX_CONF_TAKE1,
+      ngx_conf_set_num_slot,
+      NGX_HTTP_LOC_CONF_OFFSET,
+      offsetof(ngx_http_referer_conf_t, referer_hash_max_size),
+      NULL },
+
+    { ngx_string("referer_hash_bucket_size"),
+      NGX_HTTP_SRV_CONF|NGX_HTTP_LOC_CONF|NGX_CONF_TAKE1,
+      ngx_conf_set_num_slot,
+      NGX_HTTP_LOC_CONF_OFFSET,
+      offsetof(ngx_http_referer_conf_t, referer_hash_bucket_size),
+      NULL },
+
       ngx_null_command
 };
 
@@ -239,6 +257,8 @@ ngx_http_referer_create_conf(ngx_conf_t 
 
     conf->no_referer = NGX_CONF_UNSET;
     conf->blocked_referer = NGX_CONF_UNSET;
+    conf->referer_hash_max_size = NGX_CONF_UNSET_UINT;
+    conf->referer_hash_bucket_size = NGX_CONF_UNSET_UINT;
 
     return conf;
 }
@@ -260,6 +280,10 @@ ngx_http_referer_merge_conf(ngx_conf_t *
 #endif
         ngx_conf_merge_value(conf->no_referer, prev->no_referer, 0);
         ngx_conf_merge_value(conf->blocked_referer, prev->blocked_referer, 0);
+        ngx_conf_merge_uint_value(conf->referer_hash_max_size,
+                                  prev->referer_hash_max_size, 2048);
+        ngx_conf_merge_uint_value(conf->referer_hash_bucket_size,
+                                  prev->referer_hash_bucket_size, 64);
 
         return NGX_CONF_OK;
     }
@@ -276,10 +300,17 @@ ngx_http_referer_merge_conf(ngx_conf_t *
         return NGX_CONF_ERROR;
     }
 
+    ngx_conf_merge_uint_value(conf->referer_hash_max_size,
+                              prev->referer_hash_max_size, 2048);
+    ngx_conf_merge_uint_value(conf->referer_hash_bucket_size,
+                              prev->referer_hash_bucket_size, 64);
+    conf->referer_hash_bucket_size = ngx_align(conf->referer_hash_bucket_size,
+                                               ngx_cacheline_size);
+
     hash.key = ngx_hash_key_lc;
-    hash.max_size = 2048; /* TODO: referer_hash_max_size; */
-    hash.bucket_size = 64; /* TODO: referer_hash_bucket_size; */
-    hash.name = "referers_hash";
+    hash.max_size = conf->referer_hash_max_size;
+    hash.bucket_size = conf->referer_hash_bucket_size;
+    hash.name = "referer_hash";
     hash.pool = cf->pool;
 
     if (conf->keys->keys.nelts) {
--- nginx-1.0.0.orig/src/http/modules/ngx_http_memcached_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_memcached_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -114,8 +115,8 @@ static ngx_http_module_t  ngx_http_memca
     NULL,                                  /* create server configuration */
     NULL,                                  /* merge server configuration */
 
-    ngx_http_memcached_create_loc_conf,    /* create location configration */
-    ngx_http_memcached_merge_loc_conf      /* merge location configration */
+    ngx_http_memcached_create_loc_conf,    /* create location configuration */
+    ngx_http_memcached_merge_loc_conf      /* merge location configuration */
 };
 
 
--- nginx-1.0.0.orig/src/http/modules/ngx_http_uwsgi_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_uwsgi_module.c
@@ -3,6 +3,7 @@
  * Copyright (C) Unbit S.a.s. 2009-2010
  * Copyright (C) 2008 Manlio Perillo (manlio.perillo@gmail.com)
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -50,6 +51,8 @@ static void ngx_http_uwsgi_finalize_requ
 static void *ngx_http_uwsgi_create_loc_conf(ngx_conf_t *cf);
 static char *ngx_http_uwsgi_merge_loc_conf(ngx_conf_t *cf, void *parent,
     void *child);
+static ngx_int_t ngx_http_uwsgi_merge_params(ngx_conf_t *cf,
+    ngx_http_uwsgi_loc_conf_t *conf, ngx_http_uwsgi_loc_conf_t *prev);
 
 static char *ngx_http_uwsgi_pass(ngx_conf_t *cf, ngx_command_t *cmd,
     void *conf);
@@ -123,6 +126,13 @@ static ngx_command_t ngx_http_uwsgi_comm
       offsetof(ngx_http_uwsgi_loc_conf_t, upstream.store_access),
       NULL },
 
+    { ngx_string("uwsgi_buffering"),
+      NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_HTTP_LOC_CONF|NGX_CONF_FLAG,
+      ngx_conf_set_flag_slot,
+      NGX_HTTP_LOC_CONF_OFFSET,
+      offsetof(ngx_http_uwsgi_loc_conf_t, upstream.buffering),
+      NULL },
+
     { ngx_string("uwsgi_ignore_client_abort"),
       NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_HTTP_LOC_CONF|NGX_CONF_FLAG,
       ngx_conf_set_flag_slot,
@@ -445,7 +455,7 @@ ngx_http_uwsgi_handler(ngx_http_request_
     u->abort_request = ngx_http_uwsgi_abort_request;
     u->finalize_request = ngx_http_uwsgi_finalize_request;
 
-    u->buffering = 1;
+    u->buffering = uwcf->upstream.buffering;
 
     u->pipe = ngx_pcalloc(r->pool, sizeof(ngx_event_pipe_t));
     if (u->pipe == NULL) {
@@ -589,7 +599,15 @@ ngx_http_uwsgi_create_request(ngx_http_r
         lowcase_key = NULL;
 
         if (uwcf->header_params) {
-            ignored = ngx_palloc(r->pool, uwcf->header_params * sizeof(void *));
+            n = 0;
+            part = &r->headers_in.headers.part;
+
+            while (part) {
+                n += part->nelts;
+                part = part->next;
+            }
+
+            ignored = ngx_palloc(r->pool, n * sizeof(void *));
             if (ignored == NULL) {
                 return NGX_ERROR;
             }
@@ -929,8 +947,10 @@ ngx_http_uwsgi_process_header(ngx_http_r
             h->value.data = h->key.data + h->key.len + 1;
             h->lowcase_key = h->key.data + h->key.len + 1 + h->value.len + 1;
 
-            ngx_cpystrn(h->key.data, r->header_name_start, h->key.len + 1);
-            ngx_cpystrn(h->value.data, r->header_start, h->value.len + 1);
+            ngx_memcpy(h->key.data, r->header_name_start, h->key.len);
+            h->key.data[h->key.len] = '\0';
+            ngx_memcpy(h->value.data, r->header_start, h->value.len);
+            h->value.data[h->value.len] = '\0';
 
             if (h->key.len == r->lowcase_index) {
                 ngx_memcpy(h->lowcase_key, r->lowcase_header, h->key.len);
@@ -1083,6 +1103,10 @@ ngx_http_uwsgi_create_loc_conf(ngx_conf_
     /* "uwsgi_cyclic_temp_file" is disabled */
     conf->upstream.cyclic_temp_file = 0;
 
+    conf->upstream.change_buffering = 1;
+
+    ngx_str_set(&conf->upstream.module, "uwsgi");
+
     return conf;
 }
 
@@ -1093,17 +1117,9 @@ ngx_http_uwsgi_merge_loc_conf(ngx_conf_t
     ngx_http_uwsgi_loc_conf_t *prev = parent;
     ngx_http_uwsgi_loc_conf_t *conf = child;
 
-    u_char                       *p;
     size_t                        size;
-    uintptr_t                    *code;
-    ngx_uint_t                    i;
-    ngx_array_t                   headers_names;
-    ngx_keyval_t                 *src;
-    ngx_hash_key_t               *hk;
     ngx_hash_init_t               hash;
     ngx_http_core_loc_conf_t     *clcf;
-    ngx_http_script_compile_t     sc;
-    ngx_http_script_copy_code_t  *copy;
 
     if (conf->upstream.store != 0) {
         ngx_conf_merge_value(conf->upstream.store, prev->upstream.store, 0);
@@ -1285,6 +1301,10 @@ ngx_http_uwsgi_merge_loc_conf(ngx_conf_t
                                          |NGX_HTTP_UPSTREAM_FT_OFF;
     }
 
+    if (conf->upstream.cache_use_stale & NGX_HTTP_UPSTREAM_FT_ERROR) {
+        conf->upstream.cache_use_stale |= NGX_HTTP_UPSTREAM_FT_NOLIVE;
+    }
+
     if (conf->upstream.cache_methods == 0) {
         conf->upstream.cache_methods = prev->upstream.cache_methods;
     }
@@ -1346,95 +1366,146 @@ ngx_http_uwsgi_merge_loc_conf(ngx_conf_t
     ngx_conf_merge_uint_value(conf->modifier1, prev->modifier1, 0);
     ngx_conf_merge_uint_value(conf->modifier2, prev->modifier2, 0);
 
-    if (conf->params_source == NULL) {
-        conf->flushes = prev->flushes;
-        conf->params_len = prev->params_len;
-        conf->params = prev->params;
-        conf->params_source = prev->params_source;
-        conf->headers_hash = prev->headers_hash;
+    if (ngx_http_uwsgi_merge_params(cf, conf, prev) != NGX_OK) {
+        return NGX_CONF_ERROR;
+    }
 
-#if (NGX_HTTP_CACHE)
+    return NGX_CONF_OK;
+}
 
-        if (conf->params_source == NULL) {
 
-            if ((conf->upstream.cache == NULL)
-                == (prev->upstream.cache == NULL))
-            {
-                return NGX_CONF_OK;
-            }
+static ngx_int_t
+ngx_http_uwsgi_merge_params(ngx_conf_t *cf, ngx_http_uwsgi_loc_conf_t *conf,
+    ngx_http_uwsgi_loc_conf_t *prev)
+{
+    u_char                       *p;
+    size_t                        size;
+    uintptr_t                    *code;
+    ngx_uint_t                    i, nsrc;
+    ngx_array_t                   headers_names;
+#if (NGX_HTTP_CACHE)
+    ngx_array_t                   params_merged;
+#endif
+    ngx_keyval_t                 *src;
+    ngx_hash_key_t               *hk;
+    ngx_hash_init_t               hash;
+    ngx_http_script_compile_t     sc;
+    ngx_http_script_copy_code_t  *copy;
 
-            /* 6 is a number of ngx_http_uwsgi_cache_headers entries */
-            conf->params_source = ngx_array_create(cf->pool, 6,
-                                                   sizeof(ngx_keyval_t));
-            if (conf->params_source == NULL) {
-                return NGX_CONF_ERROR;
-            }
-        }
-#else
+    if (conf->params_source == NULL) {
+        conf->params_source = prev->params_source;
 
-        if (conf->params_source == NULL) {
-            return NGX_CONF_OK;
+        if (prev->headers_hash.buckets
+#if (NGX_HTTP_CACHE)
+            && ((conf->upstream.cache == NULL) == (prev->upstream.cache == NULL))
+#endif
+           )
+        {
+            conf->flushes = prev->flushes;
+            conf->params_len = prev->params_len;
+            conf->params = prev->params;
+            conf->headers_hash = prev->headers_hash;
+            conf->header_params = prev->header_params;
+
+            return NGX_OK;
         }
+    }
 
+    if (conf->params_source == NULL
+#if (NGX_HTTP_CACHE)
+        && (conf->upstream.cache == NULL)
 #endif
+       )
+    {
+        conf->headers_hash.buckets = (void *) 1;
+        return NGX_OK;
     }
 
     conf->params_len = ngx_array_create(cf->pool, 64, 1);
     if (conf->params_len == NULL) {
-        return NGX_CONF_ERROR;
+        return NGX_ERROR;
     }
 
     conf->params = ngx_array_create(cf->pool, 512, 1);
     if (conf->params == NULL) {
-        return NGX_CONF_ERROR;
+        return NGX_ERROR;
     }
 
     if (ngx_array_init(&headers_names, cf->temp_pool, 4, sizeof(ngx_hash_key_t))
         != NGX_OK)
     {
-        return NGX_CONF_ERROR;
+        return NGX_ERROR;
     }
 
-    src = conf->params_source->elts;
+    if (conf->params_source) {
+        src = conf->params_source->elts;
+        nsrc = conf->params_source->nelts;
+
+    } else {
+        src = NULL;
+        nsrc = 0;
+    }
 
 #if (NGX_HTTP_CACHE)
 
     if (conf->upstream.cache) {
         ngx_keyval_t  *h, *s;
 
-        for (h = ngx_http_uwsgi_cache_headers; h->key.len; h++) {
+        if (ngx_array_init(&params_merged, cf->temp_pool, 4, sizeof(ngx_keyval_t))
+            != NGX_OK)
+        {
+            return NGX_ERROR;
+        }
+
+        for (i = 0; i < nsrc; i++) {
 
-            for (i = 0; i < conf->params_source->nelts; i++) {
+            s = ngx_array_push(&params_merged);
+            if (s == NULL) {
+                return NGX_ERROR;
+            }
+
+            *s = src[i];
+        }
+
+        h = ngx_http_uwsgi_cache_headers;
+
+        while (h->key.len) {
+
+            src = params_merged.elts;
+            nsrc = params_merged.nelts;
+
+            for (i = 0; i < nsrc; i++) {
                 if (ngx_strcasecmp(h->key.data, src[i].key.data) == 0) {
                     goto next;
                 }
             }
 
-            s = ngx_array_push(conf->params_source);
+            s = ngx_array_push(&params_merged);
             if (s == NULL) {
-                return NGX_CONF_ERROR;
+                return NGX_ERROR;
             }
 
             *s = *h;
 
-            src = conf->params_source->elts;
-
         next:
 
             h++;
         }
+
+        src = params_merged.elts;
+        nsrc = params_merged.nelts;
     }
 
 #endif
 
-    for (i = 0; i < conf->params_source->nelts; i++) {
+    for (i = 0; i < nsrc; i++) {
 
         if (src[i].key.len > sizeof("HTTP_") - 1
             && ngx_strncmp(src[i].key.data, "HTTP_", sizeof("HTTP_") - 1) == 0)
         {
             hk = ngx_array_push(&headers_names);
             if (hk == NULL) {
-                return NGX_CONF_ERROR;
+                return NGX_ERROR;
             }
 
             hk->key.len = src[i].key.len - 5;
@@ -1450,7 +1521,7 @@ ngx_http_uwsgi_merge_loc_conf(ngx_conf_t
         copy = ngx_array_push_n(conf->params_len,
                                 sizeof(ngx_http_script_copy_code_t));
         if (copy == NULL) {
-            return NGX_CONF_ERROR;
+            return NGX_ERROR;
         }
 
         copy->code = (ngx_http_script_code_pt) ngx_http_script_copy_len_code;
@@ -1463,7 +1534,7 @@ ngx_http_uwsgi_merge_loc_conf(ngx_conf_t
 
         copy = ngx_array_push_n(conf->params, size);
         if (copy == NULL) {
-            return NGX_CONF_ERROR;
+            return NGX_ERROR;
         }
 
         copy->code = ngx_http_script_copy_code;
@@ -1482,12 +1553,12 @@ ngx_http_uwsgi_merge_loc_conf(ngx_conf_t
         sc.values = &conf->params;
 
         if (ngx_http_script_compile(&sc) != NGX_OK) {
-            return NGX_CONF_ERROR;
+            return NGX_ERROR;
         }
 
         code = ngx_array_push_n(conf->params_len, sizeof(uintptr_t));
         if (code == NULL) {
-            return NGX_CONF_ERROR;
+            return NGX_ERROR;
         }
 
         *code = (uintptr_t) NULL;
@@ -1495,7 +1566,7 @@ ngx_http_uwsgi_merge_loc_conf(ngx_conf_t
 
         code = ngx_array_push_n(conf->params, sizeof(uintptr_t));
         if (code == NULL) {
-            return NGX_CONF_ERROR;
+            return NGX_ERROR;
         }
 
         *code = (uintptr_t) NULL;
@@ -1503,7 +1574,7 @@ ngx_http_uwsgi_merge_loc_conf(ngx_conf_t
 
     code = ngx_array_push_n(conf->params_len, sizeof(uintptr_t));
     if (code == NULL) {
-        return NGX_CONF_ERROR;
+        return NGX_ERROR;
     }
 
     *code = (uintptr_t) NULL;
@@ -1518,12 +1589,7 @@ ngx_http_uwsgi_merge_loc_conf(ngx_conf_t
     hash.pool = cf->pool;
     hash.temp_pool = NULL;
 
-    if (ngx_hash_init(&hash, headers_names.elts, headers_names.nelts) != NGX_OK)
-    {
-        return NGX_CONF_ERROR;
-    }
-
-    return NGX_CONF_OK;
+    return ngx_hash_init(&hash, headers_names.elts, headers_names.nelts);
 }
 
 
--- nginx-1.0.0.orig/src/http/modules/ngx_http_static_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_static_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -139,6 +140,8 @@ ngx_http_static_handler(ngx_http_request
 
         ngx_log_debug0(NGX_LOG_DEBUG_HTTP, log, 0, "http dir");
 
+        ngx_http_clear_location(r);
+
         r->headers_out.location = ngx_palloc(r->pool, sizeof(ngx_table_elt_t));
         if (r->headers_out.location == NULL) {
             return NGX_HTTP_INTERNAL_SERVER_ERROR;
--- nginx-1.0.0.orig/src/http/modules/ngx_http_ssl_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_ssl_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -13,7 +14,8 @@ typedef ngx_int_t (*ngx_ssl_variable_han
     ngx_pool_t *pool, ngx_str_t *s);
 
 
-#define NGX_DEFAULT_CIPHERS  "HIGH:!ADH:!MD5"
+#define NGX_DEFAULT_CIPHERS     "HIGH:!aNULL:!MD5"
+#define NGX_DEFAULT_ECDH_CURVE  "prime256v1"
 
 
 static ngx_int_t ngx_http_ssl_static_variable(ngx_http_request_t *r,
@@ -36,6 +38,8 @@ static ngx_conf_bitmask_t  ngx_http_ssl_
     { ngx_string("SSLv2"), NGX_SSL_SSLv2 },
     { ngx_string("SSLv3"), NGX_SSL_SSLv3 },
     { ngx_string("TLSv1"), NGX_SSL_TLSv1 },
+    { ngx_string("TLSv1.1"), NGX_SSL_TLSv1_1 },
+    { ngx_string("TLSv1.2"), NGX_SSL_TLSv1_2 },
     { ngx_null_string, 0 }
 };
 
@@ -78,6 +82,13 @@ static ngx_command_t  ngx_http_ssl_comma
       offsetof(ngx_http_ssl_srv_conf_t, dhparam),
       NULL },
 
+    { ngx_string("ssl_ecdh_curve"),
+      NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_CONF_TAKE1,
+      ngx_conf_set_str_slot,
+      NGX_HTTP_SRV_CONF_OFFSET,
+      offsetof(ngx_http_ssl_srv_conf_t, ecdh_curve),
+      NULL },
+
     { ngx_string("ssl_protocols"),
       NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_CONF_1MORE,
       ngx_conf_set_bitmask_slot,
@@ -93,7 +104,7 @@ static ngx_command_t  ngx_http_ssl_comma
       NULL },
 
     { ngx_string("ssl_verify_client"),
-      NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_CONF_FLAG,
+      NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_CONF_TAKE1,
       ngx_conf_set_enum_slot,
       NGX_HTTP_SRV_CONF_OFFSET,
       offsetof(ngx_http_ssl_srv_conf_t, verify),
@@ -312,6 +323,7 @@ ngx_http_ssl_create_srv_conf(ngx_conf_t 
      *     sscf->certificate = { 0, NULL };
      *     sscf->certificate_key = { 0, NULL };
      *     sscf->dhparam = { 0, NULL };
+     *     sscf->ecdh_curve = { 0, NULL };
      *     sscf->client_certificate = { 0, NULL };
      *     sscf->crl = { 0, NULL };
      *     sscf->ciphers = { 0, NULL };
@@ -337,7 +349,16 @@ ngx_http_ssl_merge_srv_conf(ngx_conf_t *
 
     ngx_pool_cleanup_t  *cln;
 
-    ngx_conf_merge_value(conf->enable, prev->enable, 0);
+    if (conf->enable == NGX_CONF_UNSET) {
+        if (prev->enable == NGX_CONF_UNSET) {
+            conf->enable = 0;
+
+        } else {
+            conf->enable = prev->enable;
+            conf->file = prev->file;
+            conf->line = prev->line;
+        }
+    }
 
     ngx_conf_merge_value(conf->session_timeout,
                          prev->session_timeout, 300);
@@ -346,7 +367,8 @@ ngx_http_ssl_merge_srv_conf(ngx_conf_t *
                          prev->prefer_server_ciphers, 0);
 
     ngx_conf_merge_bitmask_value(conf->protocols, prev->protocols,
-                         (NGX_CONF_BITMASK_SET|NGX_SSL_SSLv3|NGX_SSL_TLSv1));
+                         (NGX_CONF_BITMASK_SET|NGX_SSL_SSLv3|NGX_SSL_TLSv1
+                          |NGX_SSL_TLSv1_1|NGX_SSL_TLSv1_2));
 
     ngx_conf_merge_uint_value(conf->verify, prev->verify, 0);
     ngx_conf_merge_uint_value(conf->verify_depth, prev->verify_depth, 1);
@@ -360,6 +382,9 @@ ngx_http_ssl_merge_srv_conf(ngx_conf_t *
                          "");
     ngx_conf_merge_str_value(conf->crl, prev->crl, "");
 
+    ngx_conf_merge_str_value(conf->ecdh_curve, prev->ecdh_curve,
+                         NGX_DEFAULT_ECDH_CURVE);
+
     ngx_conf_merge_str_value(conf->ciphers, prev->ciphers, NGX_DEFAULT_CIPHERS);
 
 
@@ -465,11 +490,13 @@ ngx_http_ssl_merge_srv_conf(ngx_conf_t *
     }
 
     /* a temporary 512-bit RSA key is required for export versions of MSIE */
-    if (ngx_ssl_generate_rsa512_key(&conf->ssl) != NGX_OK) {
+    SSL_CTX_set_tmp_rsa_callback(conf->ssl.ctx, ngx_ssl_rsa512_key_callback);
+
+    if (ngx_ssl_dhparam(cf, &conf->ssl, &conf->dhparam) != NGX_OK) {
         return NGX_CONF_ERROR;
     }
 
-    if (ngx_ssl_dhparam(cf, &conf->ssl, &conf->dhparam) != NGX_OK) {
+    if (ngx_ssl_ecdh_curve(cf, &conf->ssl, &conf->ecdh_curve) != NGX_OK) {
         return NGX_CONF_ERROR;
     }
 
@@ -602,6 +629,8 @@ ngx_http_ssl_session_cache(ngx_conf_t *c
                 return NGX_CONF_ERROR;
             }
 
+            sscf->shm_zone->init = ngx_ssl_session_cache_init;
+
             continue;
         }
 
--- nginx-1.0.0.orig/src/http/modules/ngx_http_log_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_log_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -160,8 +161,8 @@ static ngx_http_module_t  ngx_http_log_m
     NULL,                                  /* create server configuration */
     NULL,                                  /* merge server configuration */
 
-    ngx_http_log_create_loc_conf,          /* create location configration */
-    ngx_http_log_merge_loc_conf            /* merge location configration */
+    ngx_http_log_create_loc_conf,          /* create location configuration */
+    ngx_http_log_merge_loc_conf            /* merge location configuration */
 };
 
 
@@ -374,10 +375,10 @@ ngx_http_log_script_write(ngx_http_reque
 
     if (!r->root_tested) {
 
-        /* test root directory existance */
+        /* test root directory existence */
 
         if (ngx_http_map_uri_to_path(r, &path, &root, 0) == NULL) {
-            /* simulate successfull logging */
+            /* simulate successful logging */
             return len;
         }
 
@@ -398,14 +399,14 @@ ngx_http_log_script_write(ngx_http_reque
             != NGX_OK)
         {
             if (of.err == 0) {
-                /* simulate successfull logging */
+                /* simulate successful logging */
                 return len;
             }
 
             ngx_log_error(NGX_LOG_ERR, r->connection->log, of.err,
                           "testing \"%s\" existence failed", path.data);
 
-            /* simulate successfull logging */
+            /* simulate successful logging */
             return len;
         }
 
@@ -413,7 +414,7 @@ ngx_http_log_script_write(ngx_http_reque
             ngx_log_error(NGX_LOG_ERR, r->connection->log, NGX_ENOTDIR,
                           "testing \"%s\" existence failed", path.data);
 
-            /* simulate successfull logging */
+            /* simulate successful logging */
             return len;
         }
     }
@@ -422,7 +423,7 @@ ngx_http_log_script_write(ngx_http_reque
                             script->values->elts)
         == NULL)
     {
-        /* simulate successfull logging */
+        /* simulate successful logging */
         return len;
     }
 
@@ -446,7 +447,7 @@ ngx_http_log_script_write(ngx_http_reque
     {
         ngx_log_error(NGX_LOG_CRIT, r->connection->log, ngx_errno,
                       "%s \"%s\" failed", of.failed, log.data);
-        /* simulate successfull logging */
+        /* simulate successful logging */
         return len;
     }
 
@@ -690,12 +691,12 @@ ngx_http_log_escape(u_char *dst, u_char 
         0x10000000, /* 0001 0000 0000 0000  0000 0000 0000 0000 */
 
                     /*  ~}| {zyx wvut srqp  onml kjih gfed cba` */
-        0x00000000, /* 0000 0000 0000 0000  0000 0000 0000 0000 */
+        0x80000000, /* 1000 0000 0000 0000  0000 0000 0000 0000 */
 
-        0x00000000, /* 0000 0000 0000 0000  0000 0000 0000 0000 */
-        0x00000000, /* 0000 0000 0000 0000  0000 0000 0000 0000 */
-        0x00000000, /* 0000 0000 0000 0000  0000 0000 0000 0000 */
-        0x00000000, /* 0000 0000 0000 0000  0000 0000 0000 0000 */
+        0xffffffff, /* 1111 1111 1111 1111  1111 1111 1111 1111 */
+        0xffffffff, /* 1111 1111 1111 1111  1111 1111 1111 1111 */
+        0xffffffff, /* 1111 1111 1111 1111  1111 1111 1111 1111 */
+        0xffffffff, /* 1111 1111 1111 1111  1111 1111 1111 1111 */
     };
 
 
@@ -960,7 +961,7 @@ buffer:
 
         if (log->script) {
             ngx_conf_log_error(NGX_LOG_EMERG, cf, 0,
-                               "buffered logs can not have variables in name");
+                               "buffered logs cannot have variables in name");
             return NGX_CONF_ERROR;
         }
 
@@ -1055,25 +1056,6 @@ ngx_http_log_compile_format(ngx_conf_t *
 
     for ( /* void */ ; s < args->nelts; s++) {
 
-        for (i = 0; i < value[s].len; i++) {
-            if (value[s].data[i] != '%') {
-                continue;
-            }
-
-            ch = value[s].data[i + 1];
-
-            if ((ch >= 'A' && ch <= 'Z')
-                 || (ch >= 'a' && ch <= 'z')
-                 || ch == '{')
-            {
-                ngx_conf_log_error(NGX_LOG_EMERG, cf, 0,
-                     "the parameters in the \"%%name\" form are not supported, "
-                     "use the \"$variable\" instead");
-
-                return NGX_CONF_ERROR;
-            }
-        }
-
         i = 0;
 
         while (i < value[s].len) {
--- nginx-1.0.0.orig/src/http/modules/ngx_http_sub_filter_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_sub_filter_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/http/modules/ngx_http_auth_basic_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_auth_basic_module.c
@@ -1,12 +1,14 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
 #include <ngx_config.h>
 #include <ngx_core.h>
 #include <ngx_http.h>
+#include <ngx_crypt.h>
 
 
 #define NGX_HTTP_AUTH_BUF_SIZE  2048
--- nginx-1.0.0.orig/src/http/modules/ngx_http_secure_link_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_secure_link_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/http/modules/ngx_http_dav_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_dav_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -158,7 +159,7 @@ ngx_http_dav_handler(ngx_http_request_t 
 
         if (r->uri.data[r->uri.len - 1] == '/') {
             ngx_log_error(NGX_LOG_ERR, r->connection->log, 0,
-                          "can not PUT to a collection");
+                          "cannot PUT to a collection");
             return NGX_HTTP_CONFLICT;
         }
 
--- nginx-1.0.0.orig/src/http/modules/ngx_http_gzip_filter_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_gzip_filter_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/http/modules/ngx_http_xslt_filter_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_xslt_filter_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/http/modules/ngx_http_not_modified_filter_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_not_modified_filter_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/http/modules/ngx_http_scgi_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_scgi_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  * Copyright (C) Manlio Perillo (manlio.perillo@gmail.com)
  */
 
@@ -36,13 +37,14 @@ static ngx_int_t ngx_http_scgi_create_re
 static ngx_int_t ngx_http_scgi_reinit_request(ngx_http_request_t *r);
 static ngx_int_t ngx_http_scgi_process_status_line(ngx_http_request_t *r);
 static ngx_int_t ngx_http_scgi_process_header(ngx_http_request_t *r);
-static ngx_int_t ngx_http_scgi_process_header(ngx_http_request_t *r);
 static void ngx_http_scgi_abort_request(ngx_http_request_t *r);
 static void ngx_http_scgi_finalize_request(ngx_http_request_t *r, ngx_int_t rc);
 
 static void *ngx_http_scgi_create_loc_conf(ngx_conf_t *cf);
 static char *ngx_http_scgi_merge_loc_conf(ngx_conf_t *cf, void *parent,
     void *child);
+static ngx_int_t ngx_http_scgi_merge_params(ngx_conf_t *cf,
+    ngx_http_scgi_loc_conf_t *conf, ngx_http_scgi_loc_conf_t *prev);
 
 static char *ngx_http_scgi_pass(ngx_conf_t *cf, ngx_command_t *cmd, void *conf);
 static char *ngx_http_scgi_store(ngx_conf_t *cf, ngx_command_t *cmd,
@@ -96,6 +98,13 @@ static ngx_command_t ngx_http_scgi_comma
       offsetof(ngx_http_scgi_loc_conf_t, upstream.store_access),
       NULL },
 
+    { ngx_string("scgi_buffering"),
+      NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_HTTP_LOC_CONF|NGX_CONF_FLAG,
+      ngx_conf_set_flag_slot,
+      NGX_HTTP_LOC_CONF_OFFSET,
+      offsetof(ngx_http_scgi_loc_conf_t, upstream.buffering),
+      NULL },
+
     { ngx_string("scgi_ignore_client_abort"),
       NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_HTTP_LOC_CONF|NGX_CONF_FLAG,
       ngx_conf_set_flag_slot,
@@ -412,7 +421,7 @@ ngx_http_scgi_handler(ngx_http_request_t
     u->abort_request = ngx_http_scgi_abort_request;
     u->finalize_request = ngx_http_scgi_finalize_request;
 
-    u->buffering = 1;
+    u->buffering = scf->upstream.buffering;
 
     u->pipe = ngx_pcalloc(r->pool, sizeof(ngx_event_pipe_t));
     if (u->pipe == NULL) {
@@ -549,8 +558,10 @@ ngx_http_scgi_create_request(ngx_http_re
 
             while (*(uintptr_t *) le.ip) {
                 lcode = *(ngx_http_script_len_code_pt *) le.ip;
-                len += lcode(&le) + 1;
+                len += lcode(&le);
             }
+            len++;
+
             le.ip += sizeof(uintptr_t);
         }
     }
@@ -561,7 +572,15 @@ ngx_http_scgi_create_request(ngx_http_re
         lowcase_key = NULL;
 
         if (scf->header_params) {
-            ignored = ngx_palloc(r->pool, scf->header_params * sizeof(void *));
+            n = 0;
+            part = &r->headers_in.headers.part;
+
+            while (part) {
+                n += part->nelts;
+                part = part->next;
+            }
+
+            ignored = ngx_palloc(r->pool, n * sizeof(void *));
             if (ignored == NULL) {
                 return NGX_ERROR;
             }
@@ -805,11 +824,7 @@ ngx_http_scgi_process_status_line(ngx_ht
     }
 
     if (rc == NGX_ERROR) {
-
-        r->http_version = NGX_HTTP_VERSION_9;
-
         u->process_header = ngx_http_scgi_process_header;
-
         return ngx_http_scgi_process_header(r);
     }
 
@@ -879,8 +894,10 @@ ngx_http_scgi_process_header(ngx_http_re
             h->value.data = h->key.data + h->key.len + 1;
             h->lowcase_key = h->key.data + h->key.len + 1 + h->value.len + 1;
 
-            ngx_cpystrn(h->key.data, r->header_name_start, h->key.len + 1);
-            ngx_cpystrn(h->value.data, r->header_start, h->value.len + 1);
+            ngx_memcpy(h->key.data, r->header_name_start, h->key.len);
+            h->key.data[h->key.len] = '\0';
+            ngx_memcpy(h->value.data, r->header_start, h->value.len);
+            h->value.data[h->value.len] = '\0';
 
             if (h->key.len == r->lowcase_index) {
                 ngx_memcpy(h->lowcase_key, r->lowcase_header, h->key.len);
@@ -909,12 +926,12 @@ ngx_http_scgi_process_header(ngx_http_re
             ngx_log_debug0(NGX_LOG_DEBUG_HTTP, r->connection->log, 0,
                            "http scgi header done");
 
-            if (r->http_version > NGX_HTTP_VERSION_9) {
+            u = r->upstream;
+
+            if (u->headers_in.status_n) {
                 return NGX_OK;
             }
 
-            u = r->upstream;
-
             if (u->headers_in.status) {
                 status_line = &u->headers_in.status->value;
 
@@ -926,20 +943,15 @@ ngx_http_scgi_process_header(ngx_http_re
                     return NGX_HTTP_UPSTREAM_INVALID_HEADER;
                 }
 
-                r->http_version = NGX_HTTP_VERSION_10;
                 u->headers_in.status_n = status;
                 u->headers_in.status_line = *status_line;
 
             } else if (u->headers_in.location) {
-                r->http_version = NGX_HTTP_VERSION_10;
                 u->headers_in.status_n = 302;
                 ngx_str_set(&u->headers_in.status_line,
                             "302 Moved Temporarily");
 
             } else {
-                ngx_log_error(NGX_LOG_ERR, r->connection->log, 0,
-                              "upstream sent neither valid HTTP/1.0 header "
-                              "nor \"Status\" header line");
                 u->headers_in.status_n = 200;
                 ngx_str_set(&u->headers_in.status_line, "200 OK");
             }
@@ -1030,6 +1042,10 @@ ngx_http_scgi_create_loc_conf(ngx_conf_t
     /* "scgi_cyclic_temp_file" is disabled */
     conf->upstream.cyclic_temp_file = 0;
 
+    conf->upstream.change_buffering = 1;
+
+    ngx_str_set(&conf->upstream.module, "scgi");
+
     return conf;
 }
 
@@ -1040,17 +1056,9 @@ ngx_http_scgi_merge_loc_conf(ngx_conf_t 
     ngx_http_scgi_loc_conf_t *prev = parent;
     ngx_http_scgi_loc_conf_t *conf = child;
 
-    u_char                       *p;
     size_t                        size;
-    uintptr_t                    *code;
-    ngx_uint_t                    i;
-    ngx_array_t                   headers_names;
-    ngx_keyval_t                 *src;
-    ngx_hash_key_t               *hk;
     ngx_hash_init_t               hash;
     ngx_http_core_loc_conf_t     *clcf;
-    ngx_http_script_compile_t     sc;
-    ngx_http_script_copy_code_t  *copy;
 
     if (conf->upstream.store != 0) {
         ngx_conf_merge_value(conf->upstream.store, prev->upstream.store, 0);
@@ -1232,6 +1240,10 @@ ngx_http_scgi_merge_loc_conf(ngx_conf_t 
                                          |NGX_HTTP_UPSTREAM_FT_OFF;
     }
 
+    if (conf->upstream.cache_use_stale & NGX_HTTP_UPSTREAM_FT_ERROR) {
+        conf->upstream.cache_use_stale |= NGX_HTTP_UPSTREAM_FT_NOLIVE;
+    }
+
     if (conf->upstream.cache_methods == 0) {
         conf->upstream.cache_methods = prev->upstream.cache_methods;
     }
@@ -1288,95 +1300,146 @@ ngx_http_scgi_merge_loc_conf(ngx_conf_t 
         }
     }
 
-    if (conf->params_source == NULL) {
-        conf->flushes = prev->flushes;
-        conf->params_len = prev->params_len;
-        conf->params = prev->params;
-        conf->params_source = prev->params_source;
-        conf->headers_hash = prev->headers_hash;
+    if (ngx_http_scgi_merge_params(cf, conf, prev) != NGX_OK) {
+        return NGX_CONF_ERROR;
+    }
 
-#if (NGX_HTTP_CACHE)
+    return NGX_CONF_OK;
+}
 
-        if (conf->params_source == NULL) {
 
-            if ((conf->upstream.cache == NULL)
-                == (prev->upstream.cache == NULL))
-            {
-                return NGX_CONF_OK;
-            }
+static ngx_int_t
+ngx_http_scgi_merge_params(ngx_conf_t *cf, ngx_http_scgi_loc_conf_t *conf,
+    ngx_http_scgi_loc_conf_t *prev)
+{
+    u_char                       *p;
+    size_t                        size;
+    uintptr_t                    *code;
+    ngx_uint_t                    i, nsrc;
+    ngx_array_t                   headers_names;
+#if (NGX_HTTP_CACHE)
+    ngx_array_t                   params_merged;
+#endif
+    ngx_keyval_t                 *src;
+    ngx_hash_key_t               *hk;
+    ngx_hash_init_t               hash;
+    ngx_http_script_compile_t     sc;
+    ngx_http_script_copy_code_t  *copy;
 
-            /* 6 is a number of ngx_http_scgi_cache_headers entries */
-            conf->params_source = ngx_array_create(cf->pool, 6,
-                                                   sizeof(ngx_keyval_t));
-            if (conf->params_source == NULL) {
-                return NGX_CONF_ERROR;
-            }
-        }
-#else
+    if (conf->params_source == NULL) {
+        conf->params_source = prev->params_source;
+
+        if (prev->headers_hash.buckets
+#if (NGX_HTTP_CACHE)
+            && ((conf->upstream.cache == NULL) == (prev->upstream.cache == NULL))
+#endif
+           )
+        {
+            conf->flushes = prev->flushes;
+            conf->params_len = prev->params_len;
+            conf->params = prev->params;
+            conf->headers_hash = prev->headers_hash;
+            conf->header_params = prev->header_params;
 
-        if (conf->params_source == NULL) {
-            return NGX_CONF_OK;
+            return NGX_OK;
         }
+    }
 
+    if (conf->params_source == NULL
+#if (NGX_HTTP_CACHE)
+        && (conf->upstream.cache == NULL)
 #endif
+       )
+    {
+        conf->headers_hash.buckets = (void *) 1;
+        return NGX_OK;
     }
 
     conf->params_len = ngx_array_create(cf->pool, 64, 1);
     if (conf->params_len == NULL) {
-        return NGX_CONF_ERROR;
+        return NGX_ERROR;
     }
 
     conf->params = ngx_array_create(cf->pool, 512, 1);
     if (conf->params == NULL) {
-        return NGX_CONF_ERROR;
+        return NGX_ERROR;
     }
 
     if (ngx_array_init(&headers_names, cf->temp_pool, 4, sizeof(ngx_hash_key_t))
         != NGX_OK)
     {
-        return NGX_CONF_ERROR;
+        return NGX_ERROR;
     }
 
-    src = conf->params_source->elts;
+    if (conf->params_source) {
+        src = conf->params_source->elts;
+        nsrc = conf->params_source->nelts;
+
+    } else {
+        src = NULL;
+        nsrc = 0;
+    }
 
 #if (NGX_HTTP_CACHE)
 
     if (conf->upstream.cache) {
         ngx_keyval_t  *h, *s;
 
-        for (h = ngx_http_scgi_cache_headers; h->key.len; h++) {
+        if (ngx_array_init(&params_merged, cf->temp_pool, 4, sizeof(ngx_keyval_t))
+            != NGX_OK)
+        {
+            return NGX_ERROR;
+        }
+
+        for (i = 0; i < nsrc; i++) {
 
-            for (i = 0; i < conf->params_source->nelts; i++) {
+            s = ngx_array_push(&params_merged);
+            if (s == NULL) {
+                return NGX_ERROR;
+            }
+
+            *s = src[i];
+        }
+
+        h = ngx_http_scgi_cache_headers;
+
+        while (h->key.len) {
+
+            src = params_merged.elts;
+            nsrc = params_merged.nelts;
+
+            for (i = 0; i < nsrc; i++) {
                 if (ngx_strcasecmp(h->key.data, src[i].key.data) == 0) {
                     goto next;
                 }
             }
 
-            s = ngx_array_push(conf->params_source);
+            s = ngx_array_push(&params_merged);
             if (s == NULL) {
-                return NGX_CONF_ERROR;
+                return NGX_ERROR;
             }
 
             *s = *h;
 
-            src = conf->params_source->elts;
-
         next:
 
             h++;
         }
+
+        src = params_merged.elts;
+        nsrc = params_merged.nelts;
     }
 
 #endif
 
-    for (i = 0; i < conf->params_source->nelts; i++) {
+    for (i = 0; i < nsrc; i++) {
 
         if (src[i].key.len > sizeof("HTTP_") - 1
             && ngx_strncmp(src[i].key.data, "HTTP_", sizeof("HTTP_") - 1) == 0)
         {
             hk = ngx_array_push(&headers_names);
             if (hk == NULL) {
-                return NGX_CONF_ERROR;
+                return NGX_ERROR;
             }
 
             hk->key.len = src[i].key.len - 5;
@@ -1392,7 +1455,7 @@ ngx_http_scgi_merge_loc_conf(ngx_conf_t 
         copy = ngx_array_push_n(conf->params_len,
                                 sizeof(ngx_http_script_copy_code_t));
         if (copy == NULL) {
-            return NGX_CONF_ERROR;
+            return NGX_ERROR;
         }
 
         copy->code = (ngx_http_script_code_pt) ngx_http_script_copy_len_code;
@@ -1405,7 +1468,7 @@ ngx_http_scgi_merge_loc_conf(ngx_conf_t 
 
         copy = ngx_array_push_n(conf->params, size);
         if (copy == NULL) {
-            return NGX_CONF_ERROR;
+            return NGX_ERROR;
         }
 
         copy->code = ngx_http_script_copy_code;
@@ -1424,12 +1487,12 @@ ngx_http_scgi_merge_loc_conf(ngx_conf_t 
         sc.values = &conf->params;
 
         if (ngx_http_script_compile(&sc) != NGX_OK) {
-            return NGX_CONF_ERROR;
+            return NGX_ERROR;
         }
 
         code = ngx_array_push_n(conf->params_len, sizeof(uintptr_t));
         if (code == NULL) {
-            return NGX_CONF_ERROR;
+            return NGX_ERROR;
         }
 
         *code = (uintptr_t) NULL;
@@ -1437,7 +1500,7 @@ ngx_http_scgi_merge_loc_conf(ngx_conf_t 
 
         code = ngx_array_push_n(conf->params, sizeof(uintptr_t));
         if (code == NULL) {
-            return NGX_CONF_ERROR;
+            return NGX_ERROR;
         }
 
         *code = (uintptr_t) NULL;
@@ -1445,14 +1508,14 @@ ngx_http_scgi_merge_loc_conf(ngx_conf_t 
 
     code = ngx_array_push_n(conf->params_len, sizeof(uintptr_t));
     if (code == NULL) {
-        return NGX_CONF_ERROR;
+        return NGX_ERROR;
     }
 
     *code = (uintptr_t) NULL;
 
     code = ngx_array_push_n(conf->params, sizeof(uintptr_t));
     if (code == NULL) {
-        return NGX_CONF_ERROR;
+        return NGX_ERROR;
     }
 
     *code = (uintptr_t) NULL;
@@ -1467,12 +1530,7 @@ ngx_http_scgi_merge_loc_conf(ngx_conf_t 
     hash.pool = cf->pool;
     hash.temp_pool = NULL;
 
-    if (ngx_hash_init(&hash, headers_names.elts, headers_names.nelts) != NGX_OK)
-    {
-        return NGX_CONF_ERROR;
-    }
-
-    return NGX_CONF_OK;
+    return ngx_hash_init(&hash, headers_names.elts, headers_names.nelts);
 }
 
 
--- nginx-1.0.0.orig/src/http/modules/ngx_http_index_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_index_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -61,8 +62,8 @@ static ngx_http_module_t  ngx_http_index
     NULL,                                  /* create server configuration */
     NULL,                                  /* merge server configuration */
 
-    ngx_http_index_create_loc_conf,        /* create location configration */
-    ngx_http_index_merge_loc_conf          /* merge location configration */
+    ngx_http_index_create_loc_conf,        /* create location configuration */
+    ngx_http_index_merge_loc_conf          /* merge location configuration */
 };
 
 
--- nginx-1.0.0.orig/src/http/modules/ngx_http_ssi_filter_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_ssi_filter_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -78,6 +79,8 @@ static ngx_str_t *ngx_http_ssi_get_varia
     ngx_str_t *name, ngx_uint_t key);
 static ngx_int_t ngx_http_ssi_evaluate_string(ngx_http_request_t *r,
     ngx_http_ssi_ctx_t *ctx, ngx_str_t *text, ngx_uint_t flags);
+static ngx_int_t ngx_http_ssi_regex_match(ngx_http_request_t *r,
+    ngx_str_t *pattern, ngx_str_t *str);
 
 static ngx_int_t ngx_http_ssi_include(ngx_http_request_t *r,
     ngx_http_ssi_ctx_t *ctx, ngx_str_t **params);
@@ -139,14 +142,14 @@ static ngx_command_t  ngx_http_ssi_filte
       NULL },
 
     { ngx_string("ssi_min_file_chunk"),
-      NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_HTTP_LOC_CONF|NGX_CONF_FLAG,
+      NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_HTTP_LOC_CONF|NGX_CONF_TAKE1,
       ngx_conf_set_size_slot,
       NGX_HTTP_LOC_CONF_OFFSET,
       offsetof(ngx_http_ssi_loc_conf_t, min_file_chunk),
       NULL },
 
     { ngx_string("ssi_value_length"),
-      NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_HTTP_LOC_CONF|NGX_CONF_FLAG,
+      NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_HTTP_LOC_CONF|NGX_CONF_TAKE1,
       ngx_conf_set_size_slot,
       NGX_HTTP_LOC_CONF_OFFSET,
       offsetof(ngx_http_ssi_loc_conf_t, value_len),
@@ -624,16 +627,6 @@ ngx_http_ssi_body_filter(ngx_http_reques
                     continue;
                 }
 
-                if (cmd->conditional
-                    && (ctx->conditional == 0
-                        || ctx->conditional > cmd->conditional))
-                {
-                    ngx_log_error(NGX_LOG_ERR, r->connection->log, 0,
-                                  "invalid context of SSI command: \"%V\"",
-                                  &ctx->command);
-                    goto ssi_error;
-                }
-
                 if (!ctx->output && !cmd->block) {
 
                     if (ctx->block) {
@@ -709,6 +702,16 @@ ngx_http_ssi_body_filter(ngx_http_reques
                     }
                 }
 
+                if (cmd->conditional
+                    && (ctx->conditional == 0
+                        || ctx->conditional > cmd->conditional))
+                {
+                    ngx_log_error(NGX_LOG_ERR, r->connection->log, 0,
+                                  "invalid context of SSI command: \"%V\"",
+                                  &ctx->command);
+                    goto ssi_error;
+                }
+
                 if (ctx->params.nelts > NGX_HTTP_SSI_MAX_PARAMS) {
                     ngx_log_error(NGX_LOG_ERR, r->connection->log, 0,
                                   "too many SSI command paramters: \"%V\"",
@@ -1531,6 +1534,30 @@ ngx_http_ssi_get_variable(ngx_http_reque
 
     ctx = ngx_http_get_module_ctx(r->main, ngx_http_ssi_filter_module);
 
+#if (NGX_PCRE)
+    {
+    ngx_str_t  *value;
+
+    if (key >= '0' && key <= '9') {
+        i = key - '0';
+
+        if (i < ctx->ncaptures) {
+            value = ngx_palloc(r->pool, sizeof(ngx_str_t));
+            if (value == NULL) {
+                return NULL;
+            }
+
+            i *= 2;
+
+            value->data = ctx->captures_data + ctx->captures[i];
+            value->len = ctx->captures[i + 1] - ctx->captures[i];
+
+            return value;
+        }
+    }
+    }
+#endif
+
     if (ctx->variables == NULL) {
         return NULL;
     }
@@ -1820,6 +1847,115 @@ invalid_variable:
 
 
 static ngx_int_t
+ngx_http_ssi_regex_match(ngx_http_request_t *r, ngx_str_t *pattern,
+    ngx_str_t *str)
+{
+#if (NGX_PCRE)
+    int                   rc, *captures;
+    u_char               *p, errstr[NGX_MAX_CONF_ERRSTR];
+    size_t                size;
+    ngx_int_t             key;
+    ngx_str_t            *vv, name, value;
+    ngx_uint_t            i, n;
+    ngx_http_ssi_ctx_t   *ctx;
+    ngx_http_ssi_var_t   *var;
+    ngx_regex_compile_t   rgc;
+
+    ngx_memzero(&rgc, sizeof(ngx_regex_compile_t));
+
+    rgc.pattern = *pattern;
+    rgc.pool = r->pool;
+    rgc.err.len = NGX_MAX_CONF_ERRSTR;
+    rgc.err.data = errstr;
+
+    if (ngx_regex_compile(&rgc) != NGX_OK) {
+        ngx_log_error(NGX_LOG_ERR, r->connection->log, 0, "%V", &rgc.err);
+        return NGX_HTTP_SSI_ERROR;
+    }
+
+    n = (rgc.captures + 1) * 3;
+
+    captures = ngx_palloc(r->pool, n * sizeof(int));
+    if (captures == NULL) {
+        return NGX_ERROR;
+    }
+
+    rc = ngx_regex_exec(rgc.regex, str, captures, n);
+
+    if (rc < NGX_REGEX_NO_MATCHED) {
+        ngx_log_error(NGX_LOG_ALERT, r->connection->log, 0,
+                      ngx_regex_exec_n " failed: %i on \"%V\" using \"%V\"",
+                      rc, str, pattern);
+        return NGX_HTTP_SSI_ERROR;
+    }
+
+    if (rc == NGX_REGEX_NO_MATCHED) {
+        return NGX_DECLINED;
+    }
+
+    ctx = ngx_http_get_module_ctx(r->main, ngx_http_ssi_filter_module);
+
+    ctx->ncaptures = rc;
+    ctx->captures = captures;
+    ctx->captures_data = str->data;
+
+    if (rgc.named_captures > 0) {
+
+        if (ctx->variables == NULL) {
+            ctx->variables = ngx_list_create(r->pool, 4,
+                                             sizeof(ngx_http_ssi_var_t));
+            if (ctx->variables == NULL) {
+                return NGX_ERROR;
+            }
+        }
+
+        size = rgc.name_size;
+        p = rgc.names;
+
+        for (i = 0; i < (ngx_uint_t) rgc.named_captures; i++, p += size) {
+
+            name.data = &p[2];
+            name.len = ngx_strlen(name.data);
+
+            n = 2 * ((p[0] << 8) + p[1]);
+
+            value.data = &str->data[captures[n]];
+            value.len = captures[n + 1] - captures[n];
+
+            key = ngx_hash_strlow(name.data, name.data, name.len);
+
+            vv = ngx_http_ssi_get_variable(r, &name, key);
+
+            if (vv) {
+                *vv = value;
+                continue;
+            }
+
+            var = ngx_list_push(ctx->variables);
+            if (var == NULL) {
+                return NGX_ERROR;
+            }
+
+            var->name = name;
+            var->key = key;
+            var->value = value;
+        }
+    }
+
+    return NGX_OK;
+
+#else
+
+    ngx_log_error(NGX_LOG_ALERT, r->connection->log, 0,
+                  "the using of the regex \"%V\" in SSI requires PCRE library",
+                  pattern);
+    return NGX_HTTP_SSI_ERROR;
+
+#endif
+}
+
+
+static ngx_int_t
 ngx_http_ssi_include(ngx_http_request_t *r, ngx_http_ssi_ctx_t *ctx,
     ngx_str_t **params)
 {
@@ -2451,39 +2587,17 @@ ngx_http_ssi_if(ngx_http_request_t *r, n
         }
 
     } else {
-#if (NGX_PCRE)
-        ngx_regex_compile_t  rgc;
-        u_char               errstr[NGX_MAX_CONF_ERRSTR];
-
         right.data[right.len] = '\0';
 
-        ngx_memzero(&rgc, sizeof(ngx_regex_compile_t));
-
-        rgc.pattern = right;
-        rgc.pool = r->pool;
-        rgc.err.len = NGX_MAX_CONF_ERRSTR;
-        rgc.err.data = errstr;
-
-        if (ngx_regex_compile(&rgc) != NGX_OK) {
-            ngx_log_error(NGX_LOG_ERR, r->connection->log, 0, "%V", &rgc.err);
-            return NGX_HTTP_SSI_ERROR;
-        }
+        rc = ngx_http_ssi_regex_match(r, &right, &left);
 
-        rc = ngx_regex_exec(rgc.regex, &left, NULL, 0);
-
-        if (rc < NGX_REGEX_NO_MATCHED) {
-            ngx_log_error(NGX_LOG_ALERT, r->connection->log, 0,
-                          ngx_regex_exec_n " failed: %i on \"%V\" using \"%V\"",
-                          rc, &left, &right);
-            return NGX_HTTP_SSI_ERROR;
+        if (rc == NGX_OK) {
+            rc = 0;
+        } else if (rc == NGX_DECLINED) {
+            rc = -1;
+        } else {
+            return rc;
         }
-#else
-        ngx_log_error(NGX_LOG_ALERT, r->connection->log, 0,
-                      "the using of the regex \"%V\" in SSI "
-                      "requires PCRE library", &right);
-
-        return NGX_HTTP_SSI_ERROR;
-#endif
     }
 
     if ((rc == 0 && !negative) || (rc != 0 && negative)) {
--- nginx-1.0.0.orig/src/http/modules/ngx_http_image_filter_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_image_filter_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -41,6 +42,7 @@ typedef struct {
     ngx_uint_t                   height;
     ngx_uint_t                   angle;
     ngx_uint_t                   jpeg_quality;
+    ngx_uint_t                   sharpen;
 
     ngx_flag_t                   transparency;
 
@@ -48,6 +50,7 @@ typedef struct {
     ngx_http_complex_value_t    *hcv;
     ngx_http_complex_value_t    *acv;
     ngx_http_complex_value_t    *jqcv;
+    ngx_http_complex_value_t    *shcv;
 
     size_t                       buffer_size;
 } ngx_http_image_filter_conf_t;
@@ -105,13 +108,15 @@ static char *ngx_http_image_filter(ngx_c
     void *conf);
 static char *ngx_http_image_filter_jpeg_quality(ngx_conf_t *cf,
     ngx_command_t *cmd, void *conf);
+static char *ngx_http_image_filter_sharpen(ngx_conf_t *cf, ngx_command_t *cmd,
+    void *conf);
 static ngx_int_t ngx_http_image_filter_init(ngx_conf_t *cf);
 
 
 static ngx_command_t  ngx_http_image_filter_commands[] = {
 
     { ngx_string("image_filter"),
-      NGX_HTTP_LOC_CONF|NGX_CONF_TAKE13|NGX_CONF_TAKE2,
+      NGX_HTTP_LOC_CONF|NGX_CONF_TAKE123,
       ngx_http_image_filter,
       NGX_HTTP_LOC_CONF_OFFSET,
       0,
@@ -124,6 +129,13 @@ static ngx_command_t  ngx_http_image_fil
       0,
       NULL },
 
+    { ngx_string("image_filter_sharpen"),
+      NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_HTTP_LOC_CONF|NGX_CONF_TAKE1,
+      ngx_http_image_filter_sharpen,
+      NGX_HTTP_LOC_CONF_OFFSET,
+      0,
+      NULL },
+
     { ngx_string("image_filter_transparency"),
       NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_HTTP_LOC_CONF|NGX_CONF_FLAG,
       ngx_conf_set_flag_slot,
@@ -723,8 +735,8 @@ ngx_http_image_size(ngx_http_request_t *
 static ngx_buf_t *
 ngx_http_image_resize(ngx_http_request_t *r, ngx_http_image_filter_ctx_t *ctx)
 {
-    int                            sx, sy, dx, dy, ox, oy, size,
-                                   colors, palette, transparent,
+    int                            sx, sy, dx, dy, ox, oy, ax, ay, size,
+                                   colors, palette, transparent, sharpen,
                                    red, green, blue, t;
     u_char                        *out;
     ngx_buf_t                     *b;
@@ -852,6 +864,9 @@ transparent:
     if (ctx->angle) {
         src = dst;
 
+        ax = (dx % 2 == 0) ? 1 : 0;
+        ay = (dy % 2 == 0) ? 1 : 0;
+
         switch (ctx->angle) {
 
         case 90:
@@ -861,7 +876,17 @@ transparent:
                 gdImageDestroy(src);
                 return NULL;
             }
-            gdImageCopyRotated(dst, src, dy/2, dx/2, 0, 0, dx, dy, ctx->angle);
+            if (ctx->angle == 90) {
+                ox = dy / 2 + ay;
+                oy = dx / 2 - ax;
+
+            } else {
+                ox = dy / 2 - ay;
+                oy = dx / 2 + ax;
+            }
+
+            gdImageCopyRotated(dst, src, ox, oy, 0, 0,
+                               dx + ax, dy + ay, ctx->angle);
             gdImageDestroy(src);
 
             t = dx;
@@ -875,7 +900,8 @@ transparent:
                 gdImageDestroy(src);
                 return NULL;
             }
-            gdImageCopyRotated(dst, src, dx/2, dy/2, 0, 0, dx, dy, ctx->angle);
+            gdImageCopyRotated(dst, src, dx / 2 - ax, dy / 2 - ay, 0, 0,
+                               dx + ax, dy + ay, ctx->angle);
             gdImageDestroy(src);
             break;
         }
@@ -934,6 +960,11 @@ transparent:
         gdImageColorTransparent(dst, gdImageColorExact(dst, red, green, blue));
     }
 
+    sharpen = ngx_http_image_filter_get_value(r, conf->shcv, conf->sharpen);
+    if (sharpen > 0) {
+        gdImageSharpen(dst, sharpen);
+    }
+
     out = ngx_http_image_out(r, ctx->type, dst, &size);
 
     ngx_log_debug3(NGX_LOG_DEBUG_HTTP, r->connection->log, 0,
@@ -1142,6 +1173,7 @@ ngx_http_image_filter_create_conf(ngx_co
 
     conf->filter = NGX_CONF_UNSET_UINT;
     conf->jpeg_quality = NGX_CONF_UNSET_UINT;
+    conf->sharpen = NGX_CONF_UNSET_UINT;
     conf->angle = NGX_CONF_UNSET_UINT;
     conf->transparency = NGX_CONF_UNSET;
     conf->buffer_size = NGX_CONF_UNSET_SIZE;
@@ -1177,6 +1209,12 @@ ngx_http_image_filter_merge_conf(ngx_con
         conf->jqcv = prev->jqcv;
     }
 
+    ngx_conf_merge_uint_value(conf->sharpen, prev->sharpen, 0);
+
+    if (conf->shcv == NULL) {
+        conf->shcv = prev->shcv;
+    }
+
     ngx_conf_merge_uint_value(conf->angle, prev->angle, 0);
     if (conf->acv == NULL) {
         conf->acv = prev->acv;
@@ -1225,7 +1263,11 @@ ngx_http_image_filter(ngx_conf_t *cf, ng
     } else if (cf->args->nelts == 3) {
 
         if (ngx_strcmp(value[i].data, "rotate") == 0) {
-            imcf->filter = NGX_HTTP_IMAGE_ROTATE;
+            if (imcf->filter != NGX_HTTP_IMAGE_RESIZE
+                && imcf->filter != NGX_HTTP_IMAGE_CROP)
+            {
+                imcf->filter = NGX_HTTP_IMAGE_ROTATE;
+            }
 
             ngx_memzero(&ccv, sizeof(ngx_http_compile_complex_value_t));
 
@@ -1368,7 +1410,7 @@ ngx_http_image_filter_jpeg_quality(ngx_c
 
         if (n <= 0) {
             ngx_conf_log_error(NGX_LOG_EMERG, cf, 0,
-                               "invalid parameter \"%V\"", &value[1]);
+                               "invalid value \"%V\"", &value[1]);
             return NGX_CONF_ERROR;
         }
 
@@ -1387,6 +1429,53 @@ ngx_http_image_filter_jpeg_quality(ngx_c
 }
 
 
+static char *
+ngx_http_image_filter_sharpen(ngx_conf_t *cf, ngx_command_t *cmd,
+    void *conf)
+{
+    ngx_http_image_filter_conf_t *imcf = conf;
+
+    ngx_str_t                         *value;
+    ngx_int_t                          n;
+    ngx_http_complex_value_t           cv;
+    ngx_http_compile_complex_value_t   ccv;
+
+    value = cf->args->elts;
+
+    ngx_memzero(&ccv, sizeof(ngx_http_compile_complex_value_t));
+
+    ccv.cf = cf;
+    ccv.value = &value[1];
+    ccv.complex_value = &cv;
+
+    if (ngx_http_compile_complex_value(&ccv) != NGX_OK) {
+        return NGX_CONF_ERROR;
+    }
+
+    if (cv.lengths == NULL) {
+        n = ngx_http_image_filter_value(&value[1]);
+
+        if (n < 0) {
+            ngx_conf_log_error(NGX_LOG_EMERG, cf, 0,
+                               "invalid value \"%V\"", &value[1]);
+            return NGX_CONF_ERROR;
+        }
+
+        imcf->sharpen = (ngx_uint_t) n;
+
+    } else {
+        imcf->shcv = ngx_palloc(cf->pool, sizeof(ngx_http_complex_value_t));
+        if (imcf->shcv == NULL) {
+            return NGX_CONF_ERROR;
+        }
+
+        *imcf->shcv = cv;
+    }
+
+    return NGX_CONF_OK;
+}
+
+
 static ngx_int_t
 ngx_http_image_filter_init(ngx_conf_t *cf)
 {
--- /dev/null
+++ nginx-1.0.0/src/http/modules/ngx_http_mp4_module.c
@@ -0,0 +1,2858 @@
+
+/*
+ * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
+ */
+
+#include <ngx_config.h>
+#include <ngx_core.h>
+#include <ngx_http.h>
+
+
+#define NGX_HTTP_MP4_TRAK_ATOM     0
+#define NGX_HTTP_MP4_TKHD_ATOM     1
+#define NGX_HTTP_MP4_MDIA_ATOM     2
+#define NGX_HTTP_MP4_MDHD_ATOM     3
+#define NGX_HTTP_MP4_HDLR_ATOM     4
+#define NGX_HTTP_MP4_MINF_ATOM     5
+#define NGX_HTTP_MP4_VMHD_ATOM     6
+#define NGX_HTTP_MP4_SMHD_ATOM     7
+#define NGX_HTTP_MP4_DINF_ATOM     8
+#define NGX_HTTP_MP4_STBL_ATOM     9
+#define NGX_HTTP_MP4_STSD_ATOM    10
+#define NGX_HTTP_MP4_STTS_ATOM    11
+#define NGX_HTTP_MP4_STTS_DATA    12
+#define NGX_HTTP_MP4_STSS_ATOM    13
+#define NGX_HTTP_MP4_STSS_DATA    14
+#define NGX_HTTP_MP4_CTTS_ATOM    15
+#define NGX_HTTP_MP4_CTTS_DATA    16
+#define NGX_HTTP_MP4_STSC_ATOM    17
+#define NGX_HTTP_MP4_STSC_CHUNK   18
+#define NGX_HTTP_MP4_STSC_DATA    19
+#define NGX_HTTP_MP4_STSZ_ATOM    20
+#define NGX_HTTP_MP4_STSZ_DATA    21
+#define NGX_HTTP_MP4_STCO_ATOM    22
+#define NGX_HTTP_MP4_STCO_DATA    23
+#define NGX_HTTP_MP4_CO64_ATOM    24
+#define NGX_HTTP_MP4_CO64_DATA    25
+
+#define NGX_HTTP_MP4_LAST_ATOM    NGX_HTTP_MP4_CO64_DATA
+
+
+typedef struct {
+    size_t                buffer_size;
+    size_t                max_buffer_size;
+} ngx_http_mp4_conf_t;
+
+
+typedef struct {
+    u_char                chunk[4];
+    u_char                samples[4];
+    u_char                id[4];
+} ngx_mp4_stsc_entry_t;
+
+
+typedef struct {
+    uint32_t              timescale;
+    uint32_t              time_to_sample_entries;
+    uint32_t              sample_to_chunk_entries;
+    uint32_t              sync_samples_entries;
+    uint32_t              composition_offset_entries;
+    uint32_t              sample_sizes_entries;
+    uint32_t              chunks;
+
+    ngx_uint_t            start_sample;
+    ngx_uint_t            start_chunk;
+    ngx_uint_t            chunk_samples;
+    uint64_t              chunk_samples_size;
+    off_t                 start_offset;
+
+    size_t                tkhd_size;
+    size_t                mdhd_size;
+    size_t                hdlr_size;
+    size_t                vmhd_size;
+    size_t                smhd_size;
+    size_t                dinf_size;
+    size_t                size;
+
+    ngx_chain_t           out[NGX_HTTP_MP4_LAST_ATOM + 1];
+
+    ngx_buf_t             trak_atom_buf;
+    ngx_buf_t             tkhd_atom_buf;
+    ngx_buf_t             mdia_atom_buf;
+    ngx_buf_t             mdhd_atom_buf;
+    ngx_buf_t             hdlr_atom_buf;
+    ngx_buf_t             minf_atom_buf;
+    ngx_buf_t             vmhd_atom_buf;
+    ngx_buf_t             smhd_atom_buf;
+    ngx_buf_t             dinf_atom_buf;
+    ngx_buf_t             stbl_atom_buf;
+    ngx_buf_t             stsd_atom_buf;
+    ngx_buf_t             stts_atom_buf;
+    ngx_buf_t             stts_data_buf;
+    ngx_buf_t             stss_atom_buf;
+    ngx_buf_t             stss_data_buf;
+    ngx_buf_t             ctts_atom_buf;
+    ngx_buf_t             ctts_data_buf;
+    ngx_buf_t             stsc_atom_buf;
+    ngx_buf_t             stsc_chunk_buf;
+    ngx_buf_t             stsc_data_buf;
+    ngx_buf_t             stsz_atom_buf;
+    ngx_buf_t             stsz_data_buf;
+    ngx_buf_t             stco_atom_buf;
+    ngx_buf_t             stco_data_buf;
+    ngx_buf_t             co64_atom_buf;
+    ngx_buf_t             co64_data_buf;
+
+    ngx_mp4_stsc_entry_t  stsc_chunk_entry;
+} ngx_http_mp4_trak_t;
+
+
+typedef struct {
+    ngx_file_t            file;
+
+    u_char               *buffer;
+    u_char               *buffer_start;
+    u_char               *buffer_pos;
+    u_char               *buffer_end;
+    size_t                buffer_size;
+
+    off_t                 offset;
+    off_t                 end;
+    off_t                 content_length;
+    ngx_uint_t            start;
+    uint32_t              timescale;
+    ngx_http_request_t   *request;
+    ngx_array_t           trak;
+    ngx_http_mp4_trak_t   traks[2];
+
+    size_t                ftyp_size;
+    size_t                moov_size;
+
+    ngx_chain_t          *out;
+    ngx_chain_t           ftyp_atom;
+    ngx_chain_t           moov_atom;
+    ngx_chain_t           mvhd_atom;
+    ngx_chain_t           mdat_atom;
+    ngx_chain_t           mdat_data;
+
+    ngx_buf_t             ftyp_atom_buf;
+    ngx_buf_t             moov_atom_buf;
+    ngx_buf_t             mvhd_atom_buf;
+    ngx_buf_t             mdat_atom_buf;
+    ngx_buf_t             mdat_data_buf;
+
+    u_char                moov_atom_header[8];
+    u_char                mdat_atom_header[16];
+} ngx_http_mp4_file_t;
+
+
+typedef struct {
+    char                 *name;
+    ngx_int_t           (*handler)(ngx_http_mp4_file_t *mp4,
+                                   uint64_t atom_data_size);
+} ngx_http_mp4_atom_handler_t;
+
+
+#define ngx_mp4_atom_header(mp4)   (mp4->buffer_pos - 8)
+#define ngx_mp4_atom_data(mp4)     mp4->buffer_pos
+#define ngx_mp4_atom_next(mp4, n)  mp4->buffer_pos += n; mp4->offset += n
+
+
+#define ngx_mp4_set_atom_name(p, n1, n2, n3, n4)                              \
+    ((u_char *) (p))[4] = n1;                                                 \
+    ((u_char *) (p))[5] = n2;                                                 \
+    ((u_char *) (p))[6] = n3;                                                 \
+    ((u_char *) (p))[7] = n4
+
+#define ngx_mp4_get_32value(p)                                                \
+    ( ((uint32_t) ((u_char *) (p))[0] << 24)                                  \
+    + (           ((u_char *) (p))[1] << 16)                                  \
+    + (           ((u_char *) (p))[2] << 8)                                   \
+    + (           ((u_char *) (p))[3]) )
+
+#define ngx_mp4_set_32value(p, n)                                             \
+    ((u_char *) (p))[0] = (u_char) ((n) >> 24);                               \
+    ((u_char *) (p))[1] = (u_char) ((n) >> 16);                               \
+    ((u_char *) (p))[2] = (u_char) ((n) >> 8);                                \
+    ((u_char *) (p))[3] = (u_char)  (n)
+
+#define ngx_mp4_get_64value(p)                                                \
+    ( ((uint64_t) ((u_char *) (p))[0] << 56)                                  \
+    + ((uint64_t) ((u_char *) (p))[1] << 48)                                  \
+    + ((uint64_t) ((u_char *) (p))[2] << 40)                                  \
+    + ((uint64_t) ((u_char *) (p))[3] << 32)                                  \
+    + ((uint64_t) ((u_char *) (p))[4] << 24)                                  \
+    + (           ((u_char *) (p))[5] << 16)                                  \
+    + (           ((u_char *) (p))[6] << 8)                                   \
+    + (           ((u_char *) (p))[7]) )
+
+#define ngx_mp4_set_64value(p, n)                                             \
+    ((u_char *) (p))[0] = (u_char) ((uint64_t) (n) >> 56);                    \
+    ((u_char *) (p))[1] = (u_char) ((uint64_t) (n) >> 48);                    \
+    ((u_char *) (p))[2] = (u_char) ((uint64_t) (n) >> 40);                    \
+    ((u_char *) (p))[3] = (u_char) ((uint64_t) (n) >> 32);                    \
+    ((u_char *) (p))[4] = (u_char) (           (n) >> 24);                    \
+    ((u_char *) (p))[5] = (u_char) (           (n) >> 16);                    \
+    ((u_char *) (p))[6] = (u_char) (           (n) >> 8);                     \
+    ((u_char *) (p))[7] = (u_char)             (n)
+
+#define ngx_mp4_last_trak(mp4)                                                \
+    &((ngx_http_mp4_trak_t *) mp4->trak.elts)[mp4->trak.nelts - 1]
+
+
+static ngx_int_t ngx_http_mp4_process(ngx_http_mp4_file_t *mp4);
+static ngx_int_t ngx_http_mp4_read_atom(ngx_http_mp4_file_t *mp4,
+    ngx_http_mp4_atom_handler_t *atom, uint64_t atom_data_size);
+static ngx_int_t ngx_http_mp4_read(ngx_http_mp4_file_t *mp4);
+static ngx_int_t ngx_http_mp4_read_ftyp_atom(ngx_http_mp4_file_t *mp4,
+    uint64_t atom_data_size);
+static ngx_int_t ngx_http_mp4_read_moov_atom(ngx_http_mp4_file_t *mp4,
+    uint64_t atom_data_size);
+static ngx_int_t ngx_http_mp4_read_mdat_atom(ngx_http_mp4_file_t *mp4,
+    uint64_t atom_data_size);
+static size_t ngx_http_mp4_update_mdat_atom(ngx_http_mp4_file_t *mp4,
+    off_t start_offset);
+static ngx_int_t ngx_http_mp4_read_mvhd_atom(ngx_http_mp4_file_t *mp4,
+    uint64_t atom_data_size);
+static ngx_int_t ngx_http_mp4_read_trak_atom(ngx_http_mp4_file_t *mp4,
+    uint64_t atom_data_size);
+static void ngx_http_mp4_update_trak_atom(ngx_http_mp4_file_t *mp4,
+    ngx_http_mp4_trak_t *trak);
+static ngx_int_t ngx_http_mp4_read_cmov_atom(ngx_http_mp4_file_t *mp4,
+    uint64_t atom_data_size);
+static ngx_int_t ngx_http_mp4_read_tkhd_atom(ngx_http_mp4_file_t *mp4,
+    uint64_t atom_data_size);
+static ngx_int_t ngx_http_mp4_read_mdia_atom(ngx_http_mp4_file_t *mp4,
+    uint64_t atom_data_size);
+static void ngx_http_mp4_update_mdia_atom(ngx_http_mp4_file_t *mp4,
+    ngx_http_mp4_trak_t *trak);
+static ngx_int_t ngx_http_mp4_read_mdhd_atom(ngx_http_mp4_file_t *mp4,
+    uint64_t atom_data_size);
+static ngx_int_t ngx_http_mp4_read_hdlr_atom(ngx_http_mp4_file_t *mp4,
+    uint64_t atom_data_size);
+static ngx_int_t ngx_http_mp4_read_minf_atom(ngx_http_mp4_file_t *mp4,
+    uint64_t atom_data_size);
+static void ngx_http_mp4_update_minf_atom(ngx_http_mp4_file_t *mp4,
+    ngx_http_mp4_trak_t *trak);
+static ngx_int_t ngx_http_mp4_read_dinf_atom(ngx_http_mp4_file_t *mp4,
+    uint64_t atom_data_size);
+static ngx_int_t ngx_http_mp4_read_vmhd_atom(ngx_http_mp4_file_t *mp4,
+    uint64_t atom_data_size);
+static ngx_int_t ngx_http_mp4_read_smhd_atom(ngx_http_mp4_file_t *mp4,
+    uint64_t atom_data_size);
+static ngx_int_t ngx_http_mp4_read_stbl_atom(ngx_http_mp4_file_t *mp4,
+    uint64_t atom_data_size);
+static void ngx_http_mp4_update_stbl_atom(ngx_http_mp4_file_t *mp4,
+    ngx_http_mp4_trak_t *trak);
+static ngx_int_t ngx_http_mp4_read_stsd_atom(ngx_http_mp4_file_t *mp4,
+    uint64_t atom_data_size);
+static ngx_int_t ngx_http_mp4_read_stts_atom(ngx_http_mp4_file_t *mp4,
+    uint64_t atom_data_size);
+static ngx_int_t ngx_http_mp4_update_stts_atom(ngx_http_mp4_file_t *mp4,
+    ngx_http_mp4_trak_t *trak);
+static ngx_int_t ngx_http_mp4_read_stss_atom(ngx_http_mp4_file_t *mp4,
+    uint64_t atom_data_size);
+static ngx_int_t ngx_http_mp4_update_stss_atom(ngx_http_mp4_file_t *mp4,
+    ngx_http_mp4_trak_t *trak);
+static ngx_int_t ngx_http_mp4_read_ctts_atom(ngx_http_mp4_file_t *mp4,
+    uint64_t atom_data_size);
+static void ngx_http_mp4_update_ctts_atom(ngx_http_mp4_file_t *mp4,
+    ngx_http_mp4_trak_t *trak);
+static ngx_int_t ngx_http_mp4_read_stsc_atom(ngx_http_mp4_file_t *mp4,
+    uint64_t atom_data_size);
+static ngx_int_t ngx_http_mp4_update_stsc_atom(ngx_http_mp4_file_t *mp4,
+    ngx_http_mp4_trak_t *trak);
+static ngx_int_t ngx_http_mp4_read_stsz_atom(ngx_http_mp4_file_t *mp4,
+    uint64_t atom_data_size);
+static void ngx_http_mp4_update_stsz_atom(ngx_http_mp4_file_t *mp4,
+    ngx_http_mp4_trak_t *trak);
+static ngx_int_t ngx_http_mp4_read_stco_atom(ngx_http_mp4_file_t *mp4,
+    uint64_t atom_data_size);
+static ngx_int_t ngx_http_mp4_update_stco_atom(ngx_http_mp4_file_t *mp4,
+    ngx_http_mp4_trak_t *trak);
+static void ngx_http_mp4_adjust_stco_atom(ngx_http_mp4_file_t *mp4,
+    ngx_http_mp4_trak_t *trak, int32_t adjustment);
+static ngx_int_t ngx_http_mp4_read_co64_atom(ngx_http_mp4_file_t *mp4,
+    uint64_t atom_data_size);
+static ngx_int_t ngx_http_mp4_update_co64_atom(ngx_http_mp4_file_t *mp4,
+    ngx_http_mp4_trak_t *trak);
+static void ngx_http_mp4_adjust_co64_atom(ngx_http_mp4_file_t *mp4,
+    ngx_http_mp4_trak_t *trak, off_t adjustment);
+static char *ngx_http_mp4(ngx_conf_t *cf, ngx_command_t *cmd, void *conf);
+static void *ngx_http_mp4_create_conf(ngx_conf_t *cf);
+static char *ngx_http_mp4_merge_conf(ngx_conf_t *cf, void *parent, void *child);
+
+static ngx_command_t  ngx_http_mp4_commands[] = {
+
+    { ngx_string("mp4"),
+      NGX_HTTP_LOC_CONF|NGX_CONF_NOARGS,
+      ngx_http_mp4,
+      0,
+      0,
+      NULL },
+
+    { ngx_string("mp4_buffer_size"),
+      NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_HTTP_LOC_CONF|NGX_CONF_TAKE1,
+      ngx_conf_set_size_slot,
+      NGX_HTTP_LOC_CONF_OFFSET,
+      offsetof(ngx_http_mp4_conf_t, buffer_size),
+      NULL },
+
+    { ngx_string("mp4_max_buffer_size"),
+      NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_HTTP_LOC_CONF|NGX_CONF_TAKE1,
+      ngx_conf_set_size_slot,
+      NGX_HTTP_LOC_CONF_OFFSET,
+      offsetof(ngx_http_mp4_conf_t, max_buffer_size),
+      NULL },
+
+      ngx_null_command
+};
+
+
+static ngx_http_module_t  ngx_http_mp4_module_ctx = {
+    NULL,                          /* preconfiguration */
+    NULL,                          /* postconfiguration */
+
+    NULL,                          /* create main configuration */
+    NULL,                          /* init main configuration */
+
+    NULL,                          /* create server configuration */
+    NULL,                          /* merge server configuration */
+
+    ngx_http_mp4_create_conf,      /* create location configuration */
+    ngx_http_mp4_merge_conf        /* merge location configuration */
+};
+
+
+ngx_module_t  ngx_http_mp4_module = {
+    NGX_MODULE_V1,
+    &ngx_http_mp4_module_ctx,      /* module context */
+    ngx_http_mp4_commands,         /* module directives */
+    NGX_HTTP_MODULE,               /* module type */
+    NULL,                          /* init master */
+    NULL,                          /* init module */
+    NULL,                          /* init process */
+    NULL,                          /* init thread */
+    NULL,                          /* exit thread */
+    NULL,                          /* exit process */
+    NULL,                          /* exit master */
+    NGX_MODULE_V1_PADDING
+};
+
+
+static ngx_http_mp4_atom_handler_t  ngx_http_mp4_atoms[] = {
+    { "ftyp", ngx_http_mp4_read_ftyp_atom },
+    { "moov", ngx_http_mp4_read_moov_atom },
+    { "mdat", ngx_http_mp4_read_mdat_atom },
+    { NULL, NULL }
+};
+
+static ngx_http_mp4_atom_handler_t  ngx_http_mp4_moov_atoms[] = {
+    { "mvhd", ngx_http_mp4_read_mvhd_atom },
+    { "trak", ngx_http_mp4_read_trak_atom },
+    { "cmov", ngx_http_mp4_read_cmov_atom },
+    { NULL, NULL }
+};
+
+static ngx_http_mp4_atom_handler_t  ngx_http_mp4_trak_atoms[] = {
+    { "tkhd", ngx_http_mp4_read_tkhd_atom },
+    { "mdia", ngx_http_mp4_read_mdia_atom },
+    { NULL, NULL }
+};
+
+static ngx_http_mp4_atom_handler_t  ngx_http_mp4_mdia_atoms[] = {
+    { "mdhd", ngx_http_mp4_read_mdhd_atom },
+    { "hdlr", ngx_http_mp4_read_hdlr_atom },
+    { "minf", ngx_http_mp4_read_minf_atom },
+    { NULL, NULL }
+};
+
+static ngx_http_mp4_atom_handler_t  ngx_http_mp4_minf_atoms[] = {
+    { "vmhd", ngx_http_mp4_read_vmhd_atom },
+    { "smhd", ngx_http_mp4_read_smhd_atom },
+    { "dinf", ngx_http_mp4_read_dinf_atom },
+    { "stbl", ngx_http_mp4_read_stbl_atom },
+    { NULL, NULL }
+};
+
+static ngx_http_mp4_atom_handler_t  ngx_http_mp4_stbl_atoms[] = {
+    { "stsd", ngx_http_mp4_read_stsd_atom },
+    { "stts", ngx_http_mp4_read_stts_atom },
+    { "stss", ngx_http_mp4_read_stss_atom },
+    { "ctts", ngx_http_mp4_read_ctts_atom },
+    { "stsc", ngx_http_mp4_read_stsc_atom },
+    { "stsz", ngx_http_mp4_read_stsz_atom },
+    { "stco", ngx_http_mp4_read_stco_atom },
+    { "co64", ngx_http_mp4_read_co64_atom },
+    { NULL, NULL }
+};
+
+
+static ngx_int_t
+ngx_http_mp4_handler(ngx_http_request_t *r)
+{
+    u_char                    *last;
+    size_t                     root;
+    ngx_int_t                  rc, start;
+    ngx_uint_t                 level;
+    ngx_str_t                  path, value;
+    ngx_log_t                 *log;
+    ngx_buf_t                 *b;
+    ngx_chain_t                out;
+    ngx_http_mp4_file_t       *mp4;
+    ngx_open_file_info_t       of;
+    ngx_http_core_loc_conf_t  *clcf;
+
+    if (!(r->method & (NGX_HTTP_GET|NGX_HTTP_HEAD))) {
+        return NGX_HTTP_NOT_ALLOWED;
+    }
+
+    if (r->uri.data[r->uri.len - 1] == '/') {
+        return NGX_DECLINED;
+    }
+
+    rc = ngx_http_discard_request_body(r);
+
+    if (rc != NGX_OK) {
+        return rc;
+    }
+
+    last = ngx_http_map_uri_to_path(r, &path, &root, 0);
+    if (last == NULL) {
+        return NGX_HTTP_INTERNAL_SERVER_ERROR;
+    }
+
+    log = r->connection->log;
+
+    path.len = last - path.data;
+
+    ngx_log_debug1(NGX_LOG_DEBUG_HTTP, log, 0,
+                   "http mp4 filename: \"%V\"", &path);
+
+    clcf = ngx_http_get_module_loc_conf(r, ngx_http_core_module);
+
+    ngx_memzero(&of, sizeof(ngx_open_file_info_t));
+
+    of.read_ahead = clcf->read_ahead;
+    of.directio = NGX_MAX_OFF_T_VALUE;
+    of.valid = clcf->open_file_cache_valid;
+    of.min_uses = clcf->open_file_cache_min_uses;
+    of.errors = clcf->open_file_cache_errors;
+    of.events = clcf->open_file_cache_events;
+
+    if (ngx_open_cached_file(clcf->open_file_cache, &path, &of, r->pool)
+        != NGX_OK)
+    {
+        switch (of.err) {
+
+        case 0:
+            return NGX_HTTP_INTERNAL_SERVER_ERROR;
+
+        case NGX_ENOENT:
+        case NGX_ENOTDIR:
+        case NGX_ENAMETOOLONG:
+
+            level = NGX_LOG_ERR;
+            rc = NGX_HTTP_NOT_FOUND;
+            break;
+
+        case NGX_EACCES:
+
+            level = NGX_LOG_ERR;
+            rc = NGX_HTTP_FORBIDDEN;
+            break;
+
+        default:
+
+            level = NGX_LOG_CRIT;
+            rc = NGX_HTTP_INTERNAL_SERVER_ERROR;
+            break;
+        }
+
+        if (rc != NGX_HTTP_NOT_FOUND || clcf->log_not_found) {
+            ngx_log_error(level, log, of.err,
+                          "%s \"%s\" failed", of.failed, path.data);
+        }
+
+        return rc;
+    }
+
+    if (!of.is_file) {
+
+        if (ngx_close_file(of.fd) == NGX_FILE_ERROR) {
+            ngx_log_error(NGX_LOG_ALERT, log, ngx_errno,
+                          ngx_close_file_n " \"%s\" failed", path.data);
+        }
+
+        return NGX_DECLINED;
+    }
+
+    r->root_tested = !r->error_page;
+    r->allow_ranges = 1;
+
+    start = -1;
+    r->headers_out.content_length_n = of.size;
+    mp4 = NULL;
+    b = NULL;
+
+    if (r->args.len) {
+
+        if (ngx_http_arg(r, (u_char *) "start", 5, &value) == NGX_OK) {
+
+            /*
+             * A Flash player may send start value with a lot of digits
+             * after dot so strtod() is used instead of atofp().  NaNs and
+             * infinities become negative numbers after (int) conversion.
+             */
+
+            ngx_set_errno(0);
+            start = (int) (strtod((char *) value.data, NULL) * 1000);
+
+            if (ngx_errno == 0 && start >= 0) {
+                r->allow_ranges = 0;
+
+                mp4 = ngx_pcalloc(r->pool, sizeof(ngx_http_mp4_file_t));
+                if (mp4 == NULL) {
+                    return NGX_HTTP_INTERNAL_SERVER_ERROR;
+                }
+
+                mp4->file.fd = of.fd;
+                mp4->file.name = path;
+                mp4->file.log = r->connection->log;;
+                mp4->end = of.size;
+                mp4->start = (ngx_uint_t) start;
+                mp4->request = r;
+
+                switch (ngx_http_mp4_process(mp4)) {
+
+                case NGX_DECLINED:
+                    if (mp4->buffer) {
+                        ngx_pfree(r->pool, mp4->buffer);
+                    }
+
+                    ngx_pfree(r->pool, mp4);
+                    mp4 = NULL;
+
+                    break;
+
+                case NGX_OK:
+                    r->headers_out.content_length_n = mp4->content_length;
+                    break;
+
+                default: /* NGX_ERROR */
+                    if (mp4->buffer) {
+                        ngx_pfree(r->pool, mp4->buffer);
+                    }
+
+                    ngx_pfree(r->pool, mp4);
+
+                    return NGX_HTTP_INTERNAL_SERVER_ERROR;
+                }
+            }
+        }
+    }
+
+    log->action = "sending mp4 to client";
+
+    if (clcf->directio <= of.size) {
+
+        /*
+         * DIRECTIO is set on transfer only
+         * to allow kernel to cache "moov" atom
+         */
+
+        if (ngx_directio_on(of.fd) == NGX_FILE_ERROR) {
+            ngx_log_error(NGX_LOG_ALERT, log, ngx_errno,
+                          ngx_directio_on_n " \"%s\" failed", path.data);
+        }
+
+        of.is_directio = 1;
+
+        if (mp4) {
+            mp4->file.directio = 1;
+        }
+    }
+
+    r->headers_out.status = NGX_HTTP_OK;
+    r->headers_out.last_modified_time = of.mtime;
+
+    if (ngx_http_set_content_type(r) != NGX_OK) {
+        return NGX_HTTP_INTERNAL_SERVER_ERROR;
+    }
+
+    if (mp4 == NULL) {
+        b = ngx_pcalloc(r->pool, sizeof(ngx_buf_t));
+        if (b == NULL) {
+            return NGX_HTTP_INTERNAL_SERVER_ERROR;
+        }
+
+        b->file = ngx_pcalloc(r->pool, sizeof(ngx_file_t));
+        if (b->file == NULL) {
+            return NGX_HTTP_INTERNAL_SERVER_ERROR;
+        }
+    }
+
+    rc = ngx_http_send_header(r);
+
+    if (rc == NGX_ERROR || rc > NGX_OK || r->header_only) {
+        return rc;
+    }
+
+    if (mp4) {
+        return ngx_http_output_filter(r, mp4->out);
+    }
+
+    b->file_pos = 0;
+    b->file_last = of.size;
+
+    b->in_file = b->file_last ? 1 : 0;
+    b->last_buf = 1;
+    b->last_in_chain = 1;
+
+    b->file->fd = of.fd;
+    b->file->name = path;
+    b->file->log = log;
+    b->file->directio = of.is_directio;
+
+    out.buf = b;
+    out.next = NULL;
+
+    return ngx_http_output_filter(r, &out);
+}
+
+
+static ngx_int_t
+ngx_http_mp4_process(ngx_http_mp4_file_t *mp4)
+{
+    off_t                  start_offset, adjustment;
+    ngx_int_t              rc;
+    ngx_uint_t             i, j;
+    ngx_chain_t          **prev;
+    ngx_http_mp4_trak_t   *trak;
+    ngx_http_mp4_conf_t   *conf;
+
+    ngx_log_debug1(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                   "mp4 start:%ui", mp4->start);
+
+    conf = ngx_http_get_module_loc_conf(mp4->request, ngx_http_mp4_module);
+
+    mp4->buffer_size = conf->buffer_size;
+
+    rc = ngx_http_mp4_read_atom(mp4, ngx_http_mp4_atoms, mp4->end);
+    if (rc != NGX_OK) {
+        return rc;
+    }
+
+    if (mp4->trak.nelts == 0) {
+        ngx_log_error(NGX_LOG_ERR, mp4->file.log, 0,
+                      "no mp4 trak atoms were found in \"%s\"",
+                      mp4->file.name.data);
+        return NGX_ERROR;
+    }
+
+    if (mp4->mdat_atom.buf == NULL) {
+        ngx_log_error(NGX_LOG_ERR, mp4->file.log, 0,
+                      "no mp4 mdat atom was found in \"%s\"",
+                      mp4->file.name.data);
+        return NGX_ERROR;
+    }
+
+    prev = &mp4->out;
+
+    if (mp4->ftyp_atom.buf) {
+        *prev = &mp4->ftyp_atom;
+        prev = &mp4->ftyp_atom.next;
+    }
+
+    *prev = &mp4->moov_atom;
+    prev = &mp4->moov_atom.next;
+
+    if (mp4->mvhd_atom.buf) {
+        mp4->moov_size += mp4->mvhd_atom_buf.last - mp4->mvhd_atom_buf.pos;
+        *prev = &mp4->mvhd_atom;
+        prev = &mp4->mvhd_atom.next;
+    }
+
+    start_offset = mp4->end;
+    trak = mp4->trak.elts;
+
+    for (i = 0; i < mp4->trak.nelts; i++) {
+
+        if (ngx_http_mp4_update_stts_atom(mp4, &trak[i]) != NGX_OK) {
+            return NGX_ERROR;
+        }
+
+        if (ngx_http_mp4_update_stss_atom(mp4, &trak[i]) != NGX_OK) {
+            return NGX_ERROR;
+        }
+
+        ngx_http_mp4_update_ctts_atom(mp4, &trak[i]);
+
+        if (ngx_http_mp4_update_stsc_atom(mp4, &trak[i]) != NGX_OK) {
+            return NGX_ERROR;
+        }
+
+        ngx_http_mp4_update_stsz_atom(mp4, &trak[i]);
+
+        if (trak[i].out[NGX_HTTP_MP4_CO64_DATA].buf) {
+            if (ngx_http_mp4_update_co64_atom(mp4, &trak[i]) != NGX_OK) {
+                return NGX_ERROR;
+            }
+
+        } else {
+            if (ngx_http_mp4_update_stco_atom(mp4, &trak[i]) != NGX_OK) {
+                return NGX_ERROR;
+            }
+        }
+
+        ngx_http_mp4_update_stbl_atom(mp4, &trak[i]);
+        ngx_http_mp4_update_minf_atom(mp4, &trak[i]);
+        trak[i].size += trak[i].mdhd_size;
+        trak[i].size += trak[i].hdlr_size;
+        ngx_http_mp4_update_mdia_atom(mp4, &trak[i]);
+        trak[i].size += trak[i].tkhd_size;
+        ngx_http_mp4_update_trak_atom(mp4, &trak[i]);
+
+        mp4->moov_size += trak[i].size;
+
+        if (start_offset > trak[i].start_offset) {
+            start_offset = trak[i].start_offset;
+        }
+
+        *prev = &trak[i].out[NGX_HTTP_MP4_TRAK_ATOM];
+        prev = &trak[i].out[NGX_HTTP_MP4_TRAK_ATOM].next;
+
+        for (j = 0; j < NGX_HTTP_MP4_LAST_ATOM + 1; j++) {
+            if (trak[i].out[j].buf) {
+                *prev = &trak[i].out[j];
+                prev = &trak[i].out[j].next;
+            }
+        }
+    }
+
+    mp4->moov_size += 8;
+
+    ngx_mp4_set_32value(mp4->moov_atom_header, mp4->moov_size);
+    ngx_mp4_set_atom_name(mp4->moov_atom_header, 'm', 'o', 'o', 'v');
+    mp4->content_length += mp4->moov_size;
+
+    *prev = &mp4->mdat_atom;
+
+    adjustment = mp4->ftyp_size + mp4->moov_size
+                 + ngx_http_mp4_update_mdat_atom(mp4, start_offset)
+                 - start_offset;
+
+    ngx_log_debug1(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                   "mp4 adjustment:%D", adjustment);
+
+    for (i = 0; i < mp4->trak.nelts; i++) {
+        if (trak[i].out[NGX_HTTP_MP4_CO64_DATA].buf) {
+            ngx_http_mp4_adjust_co64_atom(mp4, &trak[i], adjustment);
+        } else {
+            ngx_http_mp4_adjust_stco_atom(mp4, &trak[i], (int32_t) adjustment);
+        }
+    }
+
+    return NGX_OK;
+}
+
+
+typedef struct {
+    u_char    size[4];
+    u_char    name[4];
+} ngx_mp4_atom_header_t;
+
+typedef struct {
+    u_char    size[4];
+    u_char    name[4];
+    u_char    size64[8];
+} ngx_mp4_atom_header64_t;
+
+
+static ngx_int_t
+ngx_http_mp4_read_atom(ngx_http_mp4_file_t *mp4,
+    ngx_http_mp4_atom_handler_t *atom, uint64_t atom_data_size)
+{
+    off_t        end;
+    size_t       atom_header_size;
+    u_char      *atom_header, *atom_name;
+    uint64_t     atom_size;
+    ngx_int_t    rc;
+    ngx_uint_t   n;
+
+    end = mp4->offset + atom_data_size;
+
+    while (mp4->offset < end) {
+
+        if (mp4->buffer_pos + sizeof(uint32_t) > mp4->buffer_end) {
+            if (ngx_http_mp4_read(mp4) != NGX_OK) {
+                return NGX_ERROR;
+            }
+        }
+
+        atom_header = mp4->buffer_pos;
+        atom_size = ngx_mp4_get_32value(atom_header);
+        atom_header_size = sizeof(ngx_mp4_atom_header_t);
+
+        if (atom_size == 0) {
+            ngx_log_debug0(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                           "mp4 atom end");
+            return NGX_OK;
+        }
+
+        if (atom_size < sizeof(ngx_mp4_atom_header_t)) {
+
+            if (atom_size == 1) {
+
+                if (mp4->buffer_pos + sizeof(ngx_mp4_atom_header64_t)
+                    > mp4->buffer_end)
+                {
+                    if (ngx_http_mp4_read(mp4) != NGX_OK) {
+                        return NGX_ERROR;
+                    }
+
+                    atom_header = mp4->buffer_pos;
+                }
+
+                /* 64-bit atom size */
+                atom_size = ngx_mp4_get_64value(atom_header + 8);
+                atom_header_size = sizeof(ngx_mp4_atom_header64_t);
+
+            } else {
+                ngx_log_error(NGX_LOG_ERR, mp4->file.log, 0,
+                              "\"%s\" mp4 atom is too small:%uL",
+                              mp4->file.name.data, atom_size);
+                return NGX_ERROR;
+            }
+        }
+
+        if (mp4->buffer_pos + sizeof(ngx_mp4_atom_header_t) > mp4->buffer_end) {
+            if (ngx_http_mp4_read(mp4) != NGX_OK) {
+                return NGX_ERROR;
+            }
+
+            atom_header = mp4->buffer_pos;
+        }
+
+        atom_name = atom_header + sizeof(uint32_t);
+
+        ngx_log_debug4(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                       "mp4 atom: %*s @%O:%uL",
+                       4, atom_name, mp4->offset, atom_size);
+
+        for (n = 0; atom[n].name; n++) {
+
+            if (ngx_strncmp(atom_name, atom[n].name, 4) == 0) {
+
+                ngx_mp4_atom_next(mp4, atom_header_size);
+
+                rc = atom[n].handler(mp4, atom_size - atom_header_size);
+                if (rc != NGX_OK) {
+                    return rc;
+                }
+
+                goto next;
+            }
+        }
+
+        ngx_mp4_atom_next(mp4, atom_size);
+
+    next:
+        continue;
+    }
+
+    return NGX_OK;
+}
+
+
+static ngx_int_t
+ngx_http_mp4_read(ngx_http_mp4_file_t *mp4)
+{
+    ngx_int_t  n;
+
+    if (mp4->offset + (off_t) mp4->buffer_size > mp4->end) {
+        mp4->buffer_size = (size_t) (mp4->end - mp4->offset);
+    }
+
+    if (mp4->buffer == NULL) {
+        mp4->buffer = ngx_palloc(mp4->request->pool, mp4->buffer_size);
+        if (mp4->buffer == NULL) {
+            return NGX_ERROR;
+        }
+
+        mp4->buffer_start = mp4->buffer;
+        mp4->buffer_end = mp4->buffer + mp4->buffer_size;
+    }
+
+    n = ngx_read_file(&mp4->file, mp4->buffer_start, mp4->buffer_size,
+                      mp4->offset);
+
+    if (n == NGX_ERROR) {
+        return NGX_ERROR;
+    }
+
+    if (n == 0) {
+        return NGX_OK;
+    }
+
+    mp4->buffer_pos = mp4->buffer_start;
+
+    return NGX_OK;
+}
+
+
+static ngx_int_t
+ngx_http_mp4_read_ftyp_atom(ngx_http_mp4_file_t *mp4, uint64_t atom_data_size)
+{
+    u_char     *ftyp_atom;
+    size_t      atom_size;
+    ngx_buf_t  *atom;
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0, "mp4 ftyp atom");
+
+    if (atom_data_size > 1024) {
+        ngx_log_error(NGX_LOG_ERR, mp4->file.log, 0,
+                      "\"%s\" mp4 ftyp atom is too large:%uL",
+                      mp4->file.name.data, atom_data_size);
+        return NGX_ERROR;
+    }
+
+    atom_size = sizeof(ngx_mp4_atom_header_t) + (size_t) atom_data_size;
+
+    ftyp_atom = ngx_palloc(mp4->request->pool, atom_size);
+    if (ftyp_atom == NULL) {
+        return NGX_ERROR;
+    }
+
+    ngx_mp4_set_32value(ftyp_atom, atom_size);
+    ngx_mp4_set_atom_name(ftyp_atom, 'f', 't', 'y', 'p');
+
+    /*
+     * only moov atom content is guaranteed to be in mp4->buffer
+     * during sending response, so ftyp atom content should be copied
+     */
+    ngx_memcpy(ftyp_atom + sizeof(ngx_mp4_atom_header_t),
+               ngx_mp4_atom_data(mp4), (size_t) atom_data_size);
+
+    atom = &mp4->ftyp_atom_buf;
+    atom->temporary = 1;
+    atom->pos = ftyp_atom;
+    atom->last = ftyp_atom + atom_size;
+
+    mp4->ftyp_atom.buf = atom;
+    mp4->ftyp_size = atom_size;
+    mp4->content_length = atom_size;
+
+    ngx_mp4_atom_next(mp4, atom_data_size);
+
+    return NGX_OK;
+}
+
+
+/*
+ * Small excess buffer to process atoms after moov atom, mp4->buffer_start
+ * will be set to this buffer part after moov atom processing.
+ */
+#define NGX_HTTP_MP4_MOOV_BUFFER_EXCESS  (4 * 1024)
+
+static ngx_int_t
+ngx_http_mp4_read_moov_atom(ngx_http_mp4_file_t *mp4, uint64_t atom_data_size)
+{
+    ngx_int_t             rc;
+    ngx_uint_t            no_mdat;
+    ngx_buf_t            *atom;
+    ngx_http_mp4_conf_t  *conf;
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0, "mp4 moov atom");
+
+    no_mdat = (mp4->mdat_atom.buf == NULL);
+
+    if (no_mdat && mp4->start == 0) {
+        /*
+         * send original file if moov atom resides before
+         * mdat atom and client requests integral file
+         */
+        return NGX_DECLINED;
+    }
+
+    conf = ngx_http_get_module_loc_conf(mp4->request, ngx_http_mp4_module);
+
+    if (atom_data_size > mp4->buffer_size) {
+
+        if (atom_data_size > conf->max_buffer_size) {
+            ngx_log_error(NGX_LOG_ERR, mp4->file.log, 0,
+                          "\"%s\" mp4 moov atom is too large:%uL, "
+                          "you may want to increase mp4_max_buffer_size",
+                          mp4->file.name.data, atom_data_size);
+            return NGX_ERROR;
+        }
+
+        ngx_pfree(mp4->request->pool, mp4->buffer);
+        mp4->buffer = NULL;
+        mp4->buffer_pos = NULL;
+        mp4->buffer_end = NULL;
+
+        mp4->buffer_size = (size_t) atom_data_size
+                         + NGX_HTTP_MP4_MOOV_BUFFER_EXCESS * no_mdat;
+    }
+
+    mp4->trak.elts = &mp4->traks;
+    mp4->trak.size = sizeof(ngx_http_mp4_trak_t);
+    mp4->trak.nalloc = 2;
+    mp4->trak.pool = mp4->request->pool;
+
+    atom = &mp4->moov_atom_buf;
+    atom->temporary = 1;
+    atom->pos = mp4->moov_atom_header;
+    atom->last = mp4->moov_atom_header + 8;
+
+    mp4->moov_atom.buf = &mp4->moov_atom_buf;
+
+    rc = ngx_http_mp4_read_atom(mp4, ngx_http_mp4_moov_atoms, atom_data_size);
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0, "mp4 moov atom done");
+
+    if (no_mdat) {
+        mp4->buffer_start = mp4->buffer_pos;
+        mp4->buffer_size = NGX_HTTP_MP4_MOOV_BUFFER_EXCESS;
+
+    } else {
+        /* skip atoms after moov atom */
+        mp4->offset = mp4->end;
+    }
+
+    return rc;
+}
+
+
+static ngx_int_t
+ngx_http_mp4_read_mdat_atom(ngx_http_mp4_file_t *mp4, uint64_t atom_data_size)
+{
+    ngx_buf_t  *data;
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0, "mp4 mdat atom");
+
+    data = &mp4->mdat_data_buf;
+    data->file = &mp4->file;
+    data->in_file = 1;
+    data->last_buf = 1;
+    data->last_in_chain = 1;
+    data->file_last = mp4->offset + atom_data_size;
+
+    mp4->mdat_atom.buf = &mp4->mdat_atom_buf;
+    mp4->mdat_atom.next = &mp4->mdat_data;
+    mp4->mdat_data.buf = data;
+
+    if (mp4->trak.nelts) {
+        /* skip atoms after mdat atom */
+        mp4->offset = mp4->end;
+
+    } else {
+        ngx_mp4_atom_next(mp4, atom_data_size);
+    }
+
+    return NGX_OK;
+}
+
+
+static size_t
+ngx_http_mp4_update_mdat_atom(ngx_http_mp4_file_t *mp4, off_t start_offset)
+{
+    off_t       atom_data_size;
+    u_char     *atom_header;
+    uint32_t    atom_header_size;
+    uint64_t    atom_size;
+    ngx_buf_t  *atom;
+
+    atom_data_size = mp4->mdat_data.buf->file_last - start_offset;
+    mp4->mdat_data.buf->file_pos = start_offset;
+
+    ngx_log_debug2(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                   "mdat new offset @%O:%O", start_offset, atom_data_size);
+
+    atom_header = mp4->mdat_atom_header;
+
+    if ((uint64_t) atom_data_size > 0xffffffff) {
+        atom_size = 1;
+        atom_header_size = sizeof(ngx_mp4_atom_header64_t);
+        ngx_mp4_set_64value(atom_header + sizeof(ngx_mp4_atom_header_t),
+                            sizeof(ngx_mp4_atom_header64_t) + atom_data_size);
+    } else {
+        atom_size = sizeof(ngx_mp4_atom_header_t) + atom_data_size;
+        atom_header_size = sizeof(ngx_mp4_atom_header_t);
+    }
+
+    mp4->content_length += atom_header_size + atom_data_size;
+
+    ngx_mp4_set_32value(atom_header, atom_size);
+    ngx_mp4_set_atom_name(atom_header, 'm', 'd', 'a', 't');
+
+    atom = &mp4->mdat_atom_buf;
+    atom->temporary = 1;
+    atom->pos = atom_header;
+    atom->last = atom_header + atom_header_size;
+
+    return atom_header_size;
+}
+
+
+typedef struct {
+    u_char    size[4];
+    u_char    name[4];
+    u_char    version[1];
+    u_char    flags[3];
+    u_char    creation_time[4];
+    u_char    modification_time[4];
+    u_char    timescale[4];
+    u_char    duration[4];
+    u_char    rate[4];
+    u_char    volume[2];
+    u_char    reserved[10];
+    u_char    matrix[36];
+    u_char    preview_time[4];
+    u_char    preview_duration[4];
+    u_char    poster_time[4];
+    u_char    selection_time[4];
+    u_char    selection_duration[4];
+    u_char    current_time[4];
+    u_char    next_track_id[4];
+} ngx_mp4_mvhd_atom_t;
+
+typedef struct {
+    u_char    size[4];
+    u_char    name[4];
+    u_char    version[1];
+    u_char    flags[3];
+    u_char    creation_time[8];
+    u_char    modification_time[8];
+    u_char    timescale[4];
+    u_char    duration[8];
+    u_char    rate[4];
+    u_char    volume[2];
+    u_char    reserved[10];
+    u_char    matrix[36];
+    u_char    preview_time[4];
+    u_char    preview_duration[4];
+    u_char    poster_time[4];
+    u_char    selection_time[4];
+    u_char    selection_duration[4];
+    u_char    current_time[4];
+    u_char    next_track_id[4];
+} ngx_mp4_mvhd64_atom_t;
+
+
+static ngx_int_t
+ngx_http_mp4_read_mvhd_atom(ngx_http_mp4_file_t *mp4, uint64_t atom_data_size)
+{
+    u_char                 *atom_header;
+    size_t                  atom_size;
+    uint32_t                timescale;
+    uint64_t                duration;
+    ngx_buf_t              *atom;
+    ngx_mp4_mvhd_atom_t    *mvhd_atom;
+    ngx_mp4_mvhd64_atom_t  *mvhd64_atom;
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0, "mp4 mvhd atom");
+
+    atom_header = ngx_mp4_atom_header(mp4);
+    mvhd_atom = (ngx_mp4_mvhd_atom_t *) atom_header;
+    mvhd64_atom = (ngx_mp4_mvhd64_atom_t *) atom_header;
+    ngx_mp4_set_atom_name(atom_header, 'm', 'v', 'h', 'd');
+
+    if (mvhd_atom->version[0] == 0) {
+        /* version 0: 32-bit duration */
+        timescale = ngx_mp4_get_32value(mvhd_atom->timescale);
+        duration = ngx_mp4_get_32value(mvhd_atom->duration);
+
+    } else {
+        /* version 1: 64-bit duration */
+        timescale = ngx_mp4_get_32value(mvhd64_atom->timescale);
+        duration = ngx_mp4_get_64value(mvhd64_atom->duration);
+    }
+
+    mp4->timescale = timescale;
+
+    ngx_log_debug3(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                   "mvhd timescale:%uD, duration:%uL, time:%.3fs",
+                   timescale, duration, (double) duration / timescale);
+
+    duration -= (uint64_t) mp4->start * timescale / 1000;
+
+    ngx_log_debug2(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                   "mvhd new duration:%uL, time:%.3fs",
+                   duration, (double) duration / timescale);
+
+    atom_size = sizeof(ngx_mp4_atom_header_t) + (size_t) atom_data_size;
+    ngx_mp4_set_32value(mvhd_atom->size, atom_size);
+
+    if (mvhd_atom->version[0] == 0) {
+        ngx_mp4_set_32value(mvhd_atom->duration, duration);
+
+    } else {
+        ngx_mp4_set_64value(mvhd64_atom->duration, duration);
+    }
+
+    atom = &mp4->mvhd_atom_buf;
+    atom->temporary = 1;
+    atom->pos = atom_header;
+    atom->last = atom_header + atom_size;
+
+    mp4->mvhd_atom.buf = atom;
+
+    ngx_mp4_atom_next(mp4, atom_data_size);
+
+    return NGX_OK;
+}
+
+
+static ngx_int_t
+ngx_http_mp4_read_trak_atom(ngx_http_mp4_file_t *mp4, uint64_t atom_data_size)
+{
+    u_char               *atom_header, *atom_end;
+    off_t                 atom_file_end;
+    ngx_int_t             rc;
+    ngx_buf_t            *atom;
+    ngx_http_mp4_trak_t  *trak;
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0, "mp4 trak atom");
+
+    trak = ngx_array_push(&mp4->trak);
+    if (trak == NULL) {
+        return NGX_ERROR;
+    }
+
+    ngx_memzero(trak, sizeof(ngx_http_mp4_trak_t));
+
+    atom_header = ngx_mp4_atom_header(mp4);
+    ngx_mp4_set_atom_name(atom_header, 't', 'r', 'a', 'k');
+
+    atom = &trak->trak_atom_buf;
+    atom->temporary = 1;
+    atom->pos = atom_header;
+    atom->last = atom_header + sizeof(ngx_mp4_atom_header_t);
+
+    trak->out[NGX_HTTP_MP4_TRAK_ATOM].buf = atom;
+
+    atom_end = mp4->buffer_pos + atom_data_size;
+    atom_file_end = mp4->offset + atom_data_size;
+
+    rc = ngx_http_mp4_read_atom(mp4, ngx_http_mp4_trak_atoms, atom_data_size);
+
+    ngx_log_debug1(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                   "mp4 trak atom: %i", rc);
+
+    if (rc == NGX_DECLINED) {
+        /* skip this trak */
+        ngx_memzero(trak, sizeof(ngx_http_mp4_trak_t));
+        mp4->trak.nelts--;
+        mp4->buffer_pos = atom_end;
+        mp4->offset = atom_file_end;
+        return NGX_OK;
+    }
+
+    return rc;
+}
+
+
+static void
+ngx_http_mp4_update_trak_atom(ngx_http_mp4_file_t *mp4,
+    ngx_http_mp4_trak_t *trak)
+{
+    ngx_buf_t  *atom;
+
+    trak->size += sizeof(ngx_mp4_atom_header_t);
+    atom = &trak->trak_atom_buf;
+    ngx_mp4_set_32value(atom->pos, trak->size);
+}
+
+
+static ngx_int_t
+ngx_http_mp4_read_cmov_atom(ngx_http_mp4_file_t *mp4, uint64_t atom_data_size)
+{
+    ngx_log_error(NGX_LOG_ERR, mp4->file.log, 0,
+                  "\"%s\" mp4 compressed moov atom (cmov) is not supported",
+                  mp4->file.name.data);
+
+    return NGX_ERROR;
+}
+
+
+typedef struct {
+    u_char    size[4];
+    u_char    name[4];
+    u_char    version[1];
+    u_char    flags[3];
+    u_char    creation_time[4];
+    u_char    modification_time[4];
+    u_char    track_id[4];
+    u_char    reserved1[4];
+    u_char    duration[4];
+    u_char    reserved2[8];
+    u_char    layer[2];
+    u_char    group[2];
+    u_char    volume[2];
+    u_char    reverved3[2];
+    u_char    matrix[36];
+    u_char    width[4];
+    u_char    heigth[4];
+} ngx_mp4_tkhd_atom_t;
+
+typedef struct {
+    u_char    size[4];
+    u_char    name[4];
+    u_char    version[1];
+    u_char    flags[3];
+    u_char    creation_time[8];
+    u_char    modification_time[8];
+    u_char    track_id[4];
+    u_char    reserved1[4];
+    u_char    duration[8];
+    u_char    reserved2[8];
+    u_char    layer[2];
+    u_char    group[2];
+    u_char    volume[2];
+    u_char    reverved3[2];
+    u_char    matrix[36];
+    u_char    width[4];
+    u_char    heigth[4];
+} ngx_mp4_tkhd64_atom_t;
+
+
+static ngx_int_t
+ngx_http_mp4_read_tkhd_atom(ngx_http_mp4_file_t *mp4, uint64_t atom_data_size)
+{
+    u_char                 *atom_header;
+    size_t                  atom_size;
+    uint64_t                duration;
+    ngx_buf_t              *atom;
+    ngx_http_mp4_trak_t    *trak;
+    ngx_mp4_tkhd_atom_t    *tkhd_atom;
+    ngx_mp4_tkhd64_atom_t  *tkhd64_atom;
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0, "mp4 tkhd atom");
+
+    atom_header = ngx_mp4_atom_header(mp4);
+    tkhd_atom = (ngx_mp4_tkhd_atom_t *) atom_header;
+    tkhd64_atom = (ngx_mp4_tkhd64_atom_t *) atom_header;
+    ngx_mp4_set_atom_name(tkhd_atom, 't', 'k', 'h', 'd');
+
+    if (tkhd_atom->version[0] == 0) {
+        /* version 0: 32-bit duration */
+        duration = ngx_mp4_get_32value(tkhd_atom->duration);
+
+    } else {
+        /* version 1: 64-bit duration */
+        duration = ngx_mp4_get_64value(tkhd64_atom->duration);
+    }
+
+    ngx_log_debug2(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                   "tkhd duration:%uL, time:%.3fs",
+                   duration, (double) duration / mp4->timescale);
+
+    duration -= (uint64_t) mp4->start * mp4->timescale / 1000;
+
+    ngx_log_debug2(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                   "tkhd new duration:%uL, time:%.3fs",
+                   duration, (double) duration / mp4->timescale);
+
+    atom_size = sizeof(ngx_mp4_atom_header_t) + (size_t) atom_data_size;
+
+    trak = ngx_mp4_last_trak(mp4);
+    trak->tkhd_size = atom_size;
+
+    ngx_mp4_set_32value(tkhd_atom->size, atom_size);
+
+    if (tkhd_atom->version[0] == 0) {
+        ngx_mp4_set_32value(tkhd_atom->duration, duration);
+
+    } else {
+        ngx_mp4_set_64value(tkhd64_atom->duration, duration);
+    }
+
+    atom = &trak->tkhd_atom_buf;
+    atom->temporary = 1;
+    atom->pos = atom_header;
+    atom->last = atom_header + atom_size;
+
+    trak->out[NGX_HTTP_MP4_TKHD_ATOM].buf = atom;
+
+    ngx_mp4_atom_next(mp4, atom_data_size);
+
+    return NGX_OK;
+}
+
+
+static ngx_int_t
+ngx_http_mp4_read_mdia_atom(ngx_http_mp4_file_t *mp4, uint64_t atom_data_size)
+{
+    u_char               *atom_header;
+    ngx_buf_t            *atom;
+    ngx_http_mp4_trak_t  *trak;
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0, "process mdia atom");
+
+    atom_header = ngx_mp4_atom_header(mp4);
+    ngx_mp4_set_atom_name(atom_header, 'm', 'd', 'i', 'a');
+
+    trak = ngx_mp4_last_trak(mp4);
+
+    atom = &trak->mdia_atom_buf;
+    atom->temporary = 1;
+    atom->pos = atom_header;
+    atom->last = atom_header + sizeof(ngx_mp4_atom_header_t);
+
+    trak->out[NGX_HTTP_MP4_MDIA_ATOM].buf = atom;
+
+    return ngx_http_mp4_read_atom(mp4, ngx_http_mp4_mdia_atoms, atom_data_size);
+}
+
+
+static void
+ngx_http_mp4_update_mdia_atom(ngx_http_mp4_file_t *mp4,
+    ngx_http_mp4_trak_t *trak)
+{
+    ngx_buf_t  *atom;
+
+    trak->size += sizeof(ngx_mp4_atom_header_t);
+    atom = &trak->mdia_atom_buf;
+    ngx_mp4_set_32value(atom->pos, trak->size);
+}
+
+
+typedef struct {
+    u_char    size[4];
+    u_char    name[4];
+    u_char    version[1];
+    u_char    flags[3];
+    u_char    creation_time[4];
+    u_char    modification_time[4];
+    u_char    timescale[4];
+    u_char    duration[4];
+    u_char    language[2];
+    u_char    quality[2];
+} ngx_mp4_mdhd_atom_t;
+
+typedef struct {
+    u_char    size[4];
+    u_char    name[4];
+    u_char    version[1];
+    u_char    flags[3];
+    u_char    creation_time[8];
+    u_char    modification_time[8];
+    u_char    timescale[4];
+    u_char    duration[8];
+    u_char    language[2];
+    u_char    quality[2];
+} ngx_mp4_mdhd64_atom_t;
+
+
+static ngx_int_t
+ngx_http_mp4_read_mdhd_atom(ngx_http_mp4_file_t *mp4, uint64_t atom_data_size)
+{
+    u_char                 *atom_header;
+    size_t                  atom_size;
+    uint32_t                timescale;
+    uint64_t                duration;
+    ngx_buf_t              *atom;
+    ngx_http_mp4_trak_t    *trak;
+    ngx_mp4_mdhd_atom_t    *mdhd_atom;
+    ngx_mp4_mdhd64_atom_t  *mdhd64_atom;
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0, "mp4 mdhd atom");
+
+    atom_header = ngx_mp4_atom_header(mp4);
+    mdhd_atom = (ngx_mp4_mdhd_atom_t *) atom_header;
+    mdhd64_atom = (ngx_mp4_mdhd64_atom_t *) atom_header;
+    ngx_mp4_set_atom_name(mdhd_atom, 'm', 'd', 'h', 'd');
+
+    if (mdhd_atom->version[0] == 0) {
+        /* version 0: everything is 32-bit */
+        timescale = ngx_mp4_get_32value(mdhd_atom->timescale);
+        duration = ngx_mp4_get_32value(mdhd_atom->duration);
+
+    } else {
+        /* version 1: 64-bit duration and 32-bit timescale */
+        timescale = ngx_mp4_get_32value(mdhd64_atom->timescale);
+        duration = ngx_mp4_get_64value(mdhd64_atom->duration);
+    }
+
+    ngx_log_debug3(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                   "mdhd timescale:%uD, duration:%uL, time:%.3fs",
+                   timescale, duration, (double) duration / timescale);
+
+    duration -= (uint64_t) mp4->start * timescale / 1000;
+
+    ngx_log_debug2(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                   "mdhd new duration:%uL, time:%.3fs",
+                   duration, (double) duration / timescale);
+
+    atom_size = sizeof(ngx_mp4_atom_header_t) + (size_t) atom_data_size;
+
+    trak = ngx_mp4_last_trak(mp4);
+    trak->mdhd_size = atom_size;
+    trak->timescale = timescale;
+
+    ngx_mp4_set_32value(mdhd_atom->size, atom_size);
+
+    if (mdhd_atom->version[0] == 0) {
+        ngx_mp4_set_32value(mdhd_atom->duration, duration);
+
+    } else {
+        ngx_mp4_set_64value(mdhd64_atom->duration, duration);
+    }
+
+    atom = &trak->mdhd_atom_buf;
+    atom->temporary = 1;
+    atom->pos = atom_header;
+    atom->last = atom_header + atom_size;
+
+    trak->out[NGX_HTTP_MP4_MDHD_ATOM].buf = atom;
+
+    ngx_mp4_atom_next(mp4, atom_data_size);
+
+    return NGX_OK;
+}
+
+
+static ngx_int_t
+ngx_http_mp4_read_hdlr_atom(ngx_http_mp4_file_t *mp4, uint64_t atom_data_size)
+{
+    u_char              *atom_header;
+    size_t               atom_size;
+    ngx_buf_t            *atom;
+    ngx_http_mp4_trak_t  *trak;
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0, "mp4 hdlr atom");
+
+    atom_header = ngx_mp4_atom_header(mp4);
+    atom_size = sizeof(ngx_mp4_atom_header_t) + (size_t) atom_data_size;
+    ngx_mp4_set_32value(atom_header, atom_size);
+    ngx_mp4_set_atom_name(atom_header, 'h', 'd', 'l', 'r');
+
+    trak = ngx_mp4_last_trak(mp4);
+
+    atom = &trak->hdlr_atom_buf;
+    atom->temporary = 1;
+    atom->pos = atom_header;
+    atom->last = atom_header + atom_size;
+
+    trak->hdlr_size = atom_size;
+    trak->out[NGX_HTTP_MP4_HDLR_ATOM].buf = atom;
+
+    ngx_mp4_atom_next(mp4, atom_data_size);
+
+    return NGX_OK;
+}
+
+
+static ngx_int_t
+ngx_http_mp4_read_minf_atom(ngx_http_mp4_file_t *mp4, uint64_t atom_data_size)
+{
+    u_char               *atom_header;
+    ngx_buf_t            *atom;
+    ngx_http_mp4_trak_t  *trak;
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0, "process minf atom");
+
+    atom_header = ngx_mp4_atom_header(mp4);
+    ngx_mp4_set_atom_name(atom_header, 'm', 'i', 'n', 'f');
+
+    trak = ngx_mp4_last_trak(mp4);
+
+    atom = &trak->minf_atom_buf;
+    atom->temporary = 1;
+    atom->pos = atom_header;
+    atom->last = atom_header + sizeof(ngx_mp4_atom_header_t);
+
+    trak->out[NGX_HTTP_MP4_MINF_ATOM].buf = atom;
+
+    return ngx_http_mp4_read_atom(mp4, ngx_http_mp4_minf_atoms, atom_data_size);
+}
+
+
+static void
+ngx_http_mp4_update_minf_atom(ngx_http_mp4_file_t *mp4,
+    ngx_http_mp4_trak_t *trak)
+{
+    ngx_buf_t  *atom;
+
+    trak->size += sizeof(ngx_mp4_atom_header_t)
+               + trak->vmhd_size
+               + trak->smhd_size
+               + trak->dinf_size;
+    atom = &trak->minf_atom_buf;
+    ngx_mp4_set_32value(atom->pos, trak->size);
+}
+
+
+static ngx_int_t
+ngx_http_mp4_read_vmhd_atom(ngx_http_mp4_file_t *mp4, uint64_t atom_data_size)
+{
+    u_char              *atom_header;
+    size_t               atom_size;
+    ngx_buf_t            *atom;
+    ngx_http_mp4_trak_t  *trak;
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0, "mp4 vmhd atom");
+
+    atom_header = ngx_mp4_atom_header(mp4);
+    atom_size = sizeof(ngx_mp4_atom_header_t) + (size_t) atom_data_size;
+    ngx_mp4_set_32value(atom_header, atom_size);
+    ngx_mp4_set_atom_name(atom_header, 'v', 'm', 'h', 'd');
+
+    trak = ngx_mp4_last_trak(mp4);
+
+    atom = &trak->vmhd_atom_buf;
+    atom->temporary = 1;
+    atom->pos = atom_header;
+    atom->last = atom_header + atom_size;
+
+    trak->vmhd_size += atom_size;
+    trak->out[NGX_HTTP_MP4_VMHD_ATOM].buf = atom;
+
+    ngx_mp4_atom_next(mp4, atom_data_size);
+
+    return NGX_OK;
+}
+
+
+static ngx_int_t
+ngx_http_mp4_read_smhd_atom(ngx_http_mp4_file_t *mp4, uint64_t atom_data_size)
+{
+    u_char              *atom_header;
+    size_t               atom_size;
+    ngx_buf_t            *atom;
+    ngx_http_mp4_trak_t  *trak;
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0, "mp4 smhd atom");
+
+    atom_header = ngx_mp4_atom_header(mp4);
+    atom_size = sizeof(ngx_mp4_atom_header_t) + (size_t) atom_data_size;
+    ngx_mp4_set_32value(atom_header, atom_size);
+    ngx_mp4_set_atom_name(atom_header, 's', 'm', 'h', 'd');
+
+    trak = ngx_mp4_last_trak(mp4);
+
+    atom = &trak->smhd_atom_buf;
+    atom->temporary = 1;
+    atom->pos = atom_header;
+    atom->last = atom_header + atom_size;
+
+    trak->vmhd_size += atom_size;
+    trak->out[NGX_HTTP_MP4_SMHD_ATOM].buf = atom;
+
+    ngx_mp4_atom_next(mp4, atom_data_size);
+
+    return NGX_OK;
+}
+
+
+static ngx_int_t
+ngx_http_mp4_read_dinf_atom(ngx_http_mp4_file_t *mp4, uint64_t atom_data_size)
+{
+    u_char              *atom_header;
+    size_t               atom_size;
+    ngx_buf_t            *atom;
+    ngx_http_mp4_trak_t  *trak;
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0, "mp4 dinf atom");
+
+    atom_header = ngx_mp4_atom_header(mp4);
+    atom_size = sizeof(ngx_mp4_atom_header_t) + (size_t) atom_data_size;
+    ngx_mp4_set_32value(atom_header, atom_size);
+    ngx_mp4_set_atom_name(atom_header, 'd', 'i', 'n', 'f');
+
+    trak = ngx_mp4_last_trak(mp4);
+
+    atom = &trak->dinf_atom_buf;
+    atom->temporary = 1;
+    atom->pos = atom_header;
+    atom->last = atom_header + atom_size;
+
+    trak->dinf_size += atom_size;
+    trak->out[NGX_HTTP_MP4_DINF_ATOM].buf = atom;
+
+    ngx_mp4_atom_next(mp4, atom_data_size);
+
+    return NGX_OK;
+}
+
+
+static ngx_int_t
+ngx_http_mp4_read_stbl_atom(ngx_http_mp4_file_t *mp4, uint64_t atom_data_size)
+{
+    u_char               *atom_header;
+    ngx_buf_t            *atom;
+    ngx_http_mp4_trak_t  *trak;
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0, "process stbl atom");
+
+    atom_header = ngx_mp4_atom_header(mp4);
+    ngx_mp4_set_atom_name(atom_header, 's', 't', 'b', 'l');
+
+    trak = ngx_mp4_last_trak(mp4);
+
+    atom = &trak->stbl_atom_buf;
+    atom->temporary = 1;
+    atom->pos = atom_header;
+    atom->last = atom_header + sizeof(ngx_mp4_atom_header_t);
+
+    trak->out[NGX_HTTP_MP4_STBL_ATOM].buf = atom;
+
+    return ngx_http_mp4_read_atom(mp4, ngx_http_mp4_stbl_atoms, atom_data_size);
+}
+
+
+static void
+ngx_http_mp4_update_stbl_atom(ngx_http_mp4_file_t *mp4,
+    ngx_http_mp4_trak_t *trak)
+{
+    ngx_buf_t  *atom;
+
+    trak->size += sizeof(ngx_mp4_atom_header_t);
+    atom = &trak->stbl_atom_buf;
+    ngx_mp4_set_32value(atom->pos, trak->size);
+}
+
+
+typedef struct {
+    u_char    size[4];
+    u_char    name[4];
+    u_char    version[1];
+    u_char    flags[3];
+    u_char    entries[4];
+
+    u_char    media_size[4];
+    u_char    media_name[4];
+} ngx_mp4_stsd_atom_t;
+
+
+static ngx_int_t
+ngx_http_mp4_read_stsd_atom(ngx_http_mp4_file_t *mp4, uint64_t atom_data_size)
+{
+    u_char               *atom_header, *atom_table;
+    size_t                atom_size;
+    ngx_buf_t            *atom;
+    ngx_mp4_stsd_atom_t  *stsd_atom;
+    ngx_http_mp4_trak_t  *trak;
+
+    /* sample description atom */
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0, "mp4 stsd atom");
+
+    atom_header = ngx_mp4_atom_header(mp4);
+    stsd_atom = (ngx_mp4_stsd_atom_t *) atom_header;
+    atom_size = sizeof(ngx_mp4_atom_header_t) + (size_t) atom_data_size;
+    atom_table = atom_header + atom_size;
+    ngx_mp4_set_32value(stsd_atom->size, atom_size);
+    ngx_mp4_set_atom_name(stsd_atom, 's', 't', 's', 'd');
+
+    if ((uint64_t) (sizeof(ngx_mp4_stsd_atom_t) - sizeof(ngx_mp4_atom_header_t))
+         > atom_data_size)
+    {
+        ngx_log_error(NGX_LOG_ERR, mp4->file.log, 0,
+                      "\"%s\" mp4 stsd atom too large",
+                      mp4->file.name.data);
+        return NGX_ERROR;
+    }
+
+    ngx_log_debug3(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                   "stsd entries:%uD, media:%*s",
+                   ngx_mp4_get_32value(stsd_atom->entries),
+                   4, stsd_atom->media_name);
+
+    /* supported media format: "avc1" (H.264) and "mp4a" (MPEG-4/AAC) */
+
+    if (ngx_strncmp(stsd_atom->media_name, "avc1", 4) != 0
+        && ngx_strncmp(stsd_atom->media_name, "mp4a", 4) != 0)
+    {
+        return NGX_DECLINED;
+    }
+
+    trak = ngx_mp4_last_trak(mp4);
+
+    atom = &trak->stsd_atom_buf;
+    atom->temporary = 1;
+    atom->pos = atom_header;
+    atom->last = atom_table;
+
+    trak->out[NGX_HTTP_MP4_STSD_ATOM].buf = atom;
+    trak->size += atom_size;
+
+    ngx_mp4_atom_next(mp4, atom_data_size);
+
+    return NGX_OK;
+}
+
+
+typedef struct {
+    u_char    size[4];
+    u_char    name[4];
+    u_char    version[1];
+    u_char    flags[3];
+    u_char    entries[4];
+} ngx_mp4_stts_atom_t;
+
+typedef struct {
+    u_char    count[4];
+    u_char    duration[4];
+} ngx_mp4_stts_entry_t;
+
+
+static ngx_int_t
+ngx_http_mp4_read_stts_atom(ngx_http_mp4_file_t *mp4, uint64_t atom_data_size)
+{
+    u_char               *atom_header, *atom_table, *atom_end;
+    uint32_t              entries;
+    ngx_buf_t            *atom, *data;
+    ngx_mp4_stts_atom_t  *stts_atom;
+    ngx_http_mp4_trak_t  *trak;
+
+    /* time-to-sample atom */
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0, "mp4 stts atom");
+
+    atom_header = ngx_mp4_atom_header(mp4);
+    stts_atom = (ngx_mp4_stts_atom_t *) atom_header;
+    ngx_mp4_set_atom_name(stts_atom, 's', 't', 't', 's');
+
+    entries = ngx_mp4_get_32value(stts_atom->entries);
+
+    ngx_log_debug1(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                   "mp4 time-to-sample entries:%uD", entries);
+
+    atom_table = atom_header + sizeof(ngx_mp4_stts_atom_t);
+    atom_end = atom_table + entries * sizeof(ngx_mp4_stts_entry_t);
+
+    if ((uint64_t) (atom_end - stts_atom->version) > atom_data_size) {
+        ngx_log_error(NGX_LOG_ERR, mp4->file.log, 0,
+                      "\"%s\" mp4 stts atom too large",
+                      mp4->file.name.data);
+        return NGX_ERROR;
+    }
+
+    trak = ngx_mp4_last_trak(mp4);
+    trak->time_to_sample_entries = entries;
+
+    atom = &trak->stts_atom_buf;
+    atom->temporary = 1;
+    atom->pos = atom_header;
+    atom->last = atom_table;
+
+    data = &trak->stts_data_buf;
+    data->temporary = 1;
+    data->pos = atom_table;
+    data->last = atom_end;
+
+    trak->out[NGX_HTTP_MP4_STTS_ATOM].buf = atom;
+    trak->out[NGX_HTTP_MP4_STTS_DATA].buf = data;
+
+    ngx_mp4_atom_next(mp4, atom_data_size);
+
+    return NGX_OK;
+}
+
+
+static ngx_int_t
+ngx_http_mp4_update_stts_atom(ngx_http_mp4_file_t *mp4,
+    ngx_http_mp4_trak_t *trak)
+{
+    size_t                 atom_size;
+    uint32_t               entries, count, duration;
+    uint64_t               start_time;
+    ngx_buf_t             *atom, *data;
+    ngx_uint_t             start_sample;
+    ngx_mp4_stts_atom_t   *stts_atom;
+    ngx_mp4_stts_entry_t  *entry, *end;
+
+    /*
+     * mdia.minf.stbl.stts updating requires trak->timescale
+     * from mdia.mdhd atom which may reside after mdia.minf
+     */
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                   "mp4 stts atom update");
+
+    data = trak->out[NGX_HTTP_MP4_STTS_DATA].buf;
+
+    if (data == NULL) {
+        ngx_log_error(NGX_LOG_ERR, mp4->file.log, 0,
+                      "no mp4 stts atoms were found in \"%s\"",
+                      mp4->file.name.data);
+        return NGX_ERROR;
+    }
+
+    entries = trak->time_to_sample_entries;
+    start_time = (uint64_t) mp4->start * trak->timescale / 1000;
+
+    ngx_log_debug1(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                   "time-to-sample start_time:%uL", start_time);
+
+    start_sample = 0;
+    entry = (ngx_mp4_stts_entry_t *) data->pos;
+    end = (ngx_mp4_stts_entry_t *) data->last;
+
+    while (entry < end) {
+        count = ngx_mp4_get_32value(entry->count);
+        duration = ngx_mp4_get_32value(entry->duration);
+
+        ngx_log_debug2(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                       "count:%uD, duration:%uD", count, duration);
+
+        if (start_time < (uint64_t) count * duration) {
+            start_sample += (ngx_uint_t) (start_time / duration);
+            count -= start_sample;
+            ngx_mp4_set_32value(entry->count, count);
+            goto found;
+        }
+
+        start_sample += count;
+        start_time -= count * duration;
+        entries--;
+        entry++;
+    }
+
+    ngx_log_error(NGX_LOG_ERR, mp4->file.log, 0,
+                  "start time is out mp4 stts samples in \"%s\"",
+                  mp4->file.name.data);
+
+    return NGX_ERROR;
+
+found:
+
+    ngx_log_debug2(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                   "start_sample:%ui, new count:%uD", start_sample, count);
+
+    trak->start_sample = start_sample;
+
+    data->pos = (u_char *) entry;
+    atom_size = sizeof(ngx_mp4_stts_atom_t) + (data->last - data->pos);
+    trak->size += atom_size;
+
+    atom = trak->out[NGX_HTTP_MP4_STTS_ATOM].buf;
+    stts_atom = (ngx_mp4_stts_atom_t *) atom->pos;
+    ngx_mp4_set_32value(stts_atom->size, atom_size);
+    ngx_mp4_set_32value(stts_atom->entries, entries);
+
+    return NGX_OK;
+}
+
+
+typedef struct {
+    u_char    size[4];
+    u_char    name[4];
+    u_char    version[1];
+    u_char    flags[3];
+    u_char    entries[4];
+} ngx_http_mp4_stss_atom_t;
+
+
+static ngx_int_t
+ngx_http_mp4_read_stss_atom(ngx_http_mp4_file_t *mp4, uint64_t atom_data_size)
+{
+    u_char                    *atom_header, *atom_table, *atom_end;
+    uint32_t                   entries;
+    ngx_buf_t                 *atom, *data;
+    ngx_http_mp4_trak_t       *trak;
+    ngx_http_mp4_stss_atom_t  *stss_atom;
+
+    /* sync samples atom */
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0, "mp4 stss atom");
+
+    atom_header = ngx_mp4_atom_header(mp4);
+    stss_atom = (ngx_http_mp4_stss_atom_t *) atom_header;
+    ngx_mp4_set_atom_name(stss_atom, 's', 't', 's', 's');
+
+    entries = ngx_mp4_get_32value(stss_atom->entries);
+
+    ngx_log_debug1(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                   "sync sample entries:%uD", entries);
+
+    trak = ngx_mp4_last_trak(mp4);
+    trak->sync_samples_entries = entries;
+
+    atom_table = atom_header + sizeof(ngx_http_mp4_stss_atom_t);
+
+    atom = &trak->stss_atom_buf;
+    atom->temporary = 1;
+    atom->pos = atom_header;
+    atom->last = atom_table;
+
+    atom_end = atom_table + entries * sizeof(uint32_t);
+
+    if ((uint64_t) (atom_end - stss_atom->version) > atom_data_size) {
+        ngx_log_error(NGX_LOG_ERR, mp4->file.log, 0,
+                      "\"%s\" mp4 stss atom too large", mp4->file.name.data);
+        return NGX_ERROR;
+    }
+
+    data = &trak->stss_data_buf;
+    data->temporary = 1;
+    data->pos = atom_table;
+    data->last = atom_end;
+
+    trak->out[NGX_HTTP_MP4_STSS_ATOM].buf = atom;
+    trak->out[NGX_HTTP_MP4_STSS_DATA].buf = data;
+
+    ngx_mp4_atom_next(mp4, atom_data_size);
+
+    return NGX_OK;
+}
+
+
+static ngx_int_t
+ngx_http_mp4_update_stss_atom(ngx_http_mp4_file_t *mp4,
+    ngx_http_mp4_trak_t *trak)
+{
+    size_t                     atom_size;
+    uint32_t                   entries, sample, start_sample, *entry, *end;
+    ngx_buf_t                 *atom, *data;
+    ngx_http_mp4_stss_atom_t  *stss_atom;
+
+    /*
+     * mdia.minf.stbl.stss updating requires trak->start_sample
+     * from mdia.minf.stbl.stts which depends on value from mdia.mdhd
+     * atom which may reside after mdia.minf
+     */
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                   "mp4 stss atom update");
+
+    data = trak->out[NGX_HTTP_MP4_STSS_DATA].buf;
+
+    if (data == NULL) {
+        return NGX_OK;
+    }
+
+    /* sync samples starts from 1 */
+    start_sample = trak->start_sample + 1;
+    entries = trak->sync_samples_entries;
+
+    entry = (uint32_t *) data->pos;
+    end = (uint32_t *) data->last;
+
+    while (entry < end) {
+        sample = ngx_mp4_get_32value(entry);
+
+        ngx_log_debug2(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                       "start:%uD, sync:%uD", start_sample, sample);
+
+        if (sample >= start_sample) {
+            goto found;
+        }
+
+        entries--;
+        entry++;
+    }
+
+    ngx_log_error(NGX_LOG_ERR, mp4->file.log, 0,
+                  "start sample is out of mp4 stss atom in \"%s\"",
+                  mp4->file.name.data);
+
+    return NGX_ERROR;
+
+found:
+
+    data->pos = (u_char *) entry;
+
+    start_sample = trak->start_sample;
+
+    while (entry < end) {
+        sample = ngx_mp4_get_32value(entry);
+        sample -= start_sample;
+        ngx_mp4_set_32value(entry, sample);
+        entry++;
+    }
+
+    atom_size = sizeof(ngx_http_mp4_stss_atom_t) + (data->last - data->pos);
+    trak->size += atom_size;
+
+    atom = trak->out[NGX_HTTP_MP4_STSS_ATOM].buf;
+    stss_atom = (ngx_http_mp4_stss_atom_t *) atom->pos;
+
+    ngx_mp4_set_32value(stss_atom->size, atom_size);
+    ngx_mp4_set_32value(stss_atom->entries, entries);
+
+    return NGX_OK;
+}
+
+
+typedef struct {
+    u_char    size[4];
+    u_char    name[4];
+    u_char    version[1];
+    u_char    flags[3];
+    u_char    entries[4];
+} ngx_mp4_ctts_atom_t;
+
+typedef struct {
+    u_char    count[4];
+    u_char    offset[4];
+} ngx_mp4_ctts_entry_t;
+
+
+static ngx_int_t
+ngx_http_mp4_read_ctts_atom(ngx_http_mp4_file_t *mp4, uint64_t atom_data_size)
+{
+    u_char               *atom_header, *atom_table, *atom_end;
+    uint32_t              entries;
+    ngx_buf_t            *atom, *data;
+    ngx_mp4_ctts_atom_t  *ctts_atom;
+    ngx_http_mp4_trak_t  *trak;
+
+    /* composition offsets atom */
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0, "mp4 ctts atom");
+
+    atom_header = ngx_mp4_atom_header(mp4);
+    ctts_atom = (ngx_mp4_ctts_atom_t *) atom_header;
+    ngx_mp4_set_atom_name(ctts_atom, 'c', 't', 't', 's');
+
+    entries = ngx_mp4_get_32value(ctts_atom->entries);
+
+    ngx_log_debug1(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                   "composition offset entries:%uD", entries);
+
+    trak = ngx_mp4_last_trak(mp4);
+    trak->composition_offset_entries = entries;
+
+    atom_table = atom_header + sizeof(ngx_mp4_ctts_atom_t);
+
+    atom = &trak->ctts_atom_buf;
+    atom->temporary = 1;
+    atom->pos = atom_header;
+    atom->last = atom_table;
+
+    atom_end = atom_table + entries * sizeof(ngx_mp4_ctts_entry_t);
+
+    if ((uint64_t) (atom_end - ctts_atom->version) > atom_data_size) {
+        ngx_log_error(NGX_LOG_ERR, mp4->file.log, 0,
+                      "\"%s\" mp4 ctts atom too large", mp4->file.name.data);
+        return NGX_ERROR;
+    }
+
+    data = &trak->ctts_data_buf;
+    data->temporary = 1;
+    data->pos = atom_table;
+    data->last = atom_end;
+
+    trak->out[NGX_HTTP_MP4_CTTS_ATOM].buf = atom;
+    trak->out[NGX_HTTP_MP4_CTTS_DATA].buf = data;
+
+    ngx_mp4_atom_next(mp4, atom_data_size);
+
+    return NGX_OK;
+}
+
+
+static void
+ngx_http_mp4_update_ctts_atom(ngx_http_mp4_file_t *mp4,
+    ngx_http_mp4_trak_t *trak)
+{
+    size_t                 atom_size;
+    uint32_t               entries, count, start_sample;
+    ngx_buf_t             *atom, *data;
+    ngx_mp4_ctts_atom_t   *ctts_atom;
+    ngx_mp4_ctts_entry_t  *entry, *end;
+
+    /*
+     * mdia.minf.stbl.ctts updating requires trak->start_sample
+     * from mdia.minf.stbl.stts which depends on value from mdia.mdhd
+     * atom which may reside after mdia.minf
+     */
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                   "mp4 ctts atom update");
+
+    data = trak->out[NGX_HTTP_MP4_CTTS_DATA].buf;
+
+    if (data == NULL) {
+        return;
+    }
+
+    /* sync samples starts from 1 */
+    start_sample = trak->start_sample + 1;
+    entries = trak->composition_offset_entries;
+    entry = (ngx_mp4_ctts_entry_t *) data->pos;
+    end = (ngx_mp4_ctts_entry_t *) data->last;
+
+    while (entry < end) {
+        count = ngx_mp4_get_32value(entry->count);
+
+        ngx_log_debug3(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                       "start:%uD, count:%uD, offset:%uD",
+                       start_sample, count, ngx_mp4_get_32value(entry->offset));
+
+         if (start_sample <= count) {
+             count -= (start_sample - 1);
+             ngx_mp4_set_32value(entry->count, count);
+             goto found;
+         }
+
+         start_sample -= count;
+         entries--;
+         entry++;
+    }
+
+    trak->out[NGX_HTTP_MP4_CTTS_ATOM].buf = NULL;
+    trak->out[NGX_HTTP_MP4_CTTS_DATA].buf = NULL;
+
+    return;
+
+found:
+
+    data->pos = (u_char *) entry;
+    atom_size = sizeof(ngx_mp4_ctts_atom_t) + (data->last - data->pos);
+    trak->size += atom_size;
+
+    atom = trak->out[NGX_HTTP_MP4_CTTS_ATOM].buf;
+    ctts_atom = (ngx_mp4_ctts_atom_t *) atom->pos;
+
+    ngx_mp4_set_32value(ctts_atom->size, atom_size);
+    ngx_mp4_set_32value(ctts_atom->entries, entries);
+
+    return;
+}
+
+
+typedef struct {
+    u_char    size[4];
+    u_char    name[4];
+    u_char    version[1];
+    u_char    flags[3];
+    u_char    entries[4];
+} ngx_mp4_stsc_atom_t;
+
+
+static ngx_int_t
+ngx_http_mp4_read_stsc_atom(ngx_http_mp4_file_t *mp4, uint64_t atom_data_size)
+{
+    u_char               *atom_header, *atom_table, *atom_end;
+    uint32_t              entries;
+    ngx_buf_t            *atom, *data;
+    ngx_mp4_stsc_atom_t  *stsc_atom;
+    ngx_http_mp4_trak_t  *trak;
+
+    /* sample-to-chunk atom */
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0, "mp4 stsc atom");
+
+    atom_header = ngx_mp4_atom_header(mp4);
+    stsc_atom = (ngx_mp4_stsc_atom_t *) atom_header;
+    ngx_mp4_set_atom_name(stsc_atom, 's', 't', 's', 'c');
+
+    entries = ngx_mp4_get_32value(stsc_atom->entries);
+
+    ngx_log_debug1(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                   "sample-to-chunk entries:%uD", entries);
+
+    atom_table = atom_header + sizeof(ngx_mp4_stsc_atom_t);
+    atom_end = atom_table + entries * sizeof(ngx_mp4_stsc_entry_t);
+
+    if ((uint64_t) (atom_end - stsc_atom->version) > atom_data_size) {
+        ngx_log_error(NGX_LOG_ERR, mp4->file.log, 0,
+                      "\"%s\" mp4 stsc atom too large",
+                      mp4->file.name.data);
+        return NGX_ERROR;
+    }
+
+    trak = ngx_mp4_last_trak(mp4);
+    trak->sample_to_chunk_entries = entries;
+
+    atom = &trak->stsc_atom_buf;
+    atom->temporary = 1;
+    atom->pos = atom_header;
+    atom->last = atom_table;
+
+    data = &trak->stsc_data_buf;
+    data->temporary = 1;
+    data->pos = atom_table;
+    data->last = atom_end;
+
+    trak->out[NGX_HTTP_MP4_STSC_ATOM].buf = atom;
+    trak->out[NGX_HTTP_MP4_STSC_DATA].buf = data;
+
+    ngx_mp4_atom_next(mp4, atom_data_size);
+
+    return NGX_OK;
+}
+
+
+static ngx_int_t
+ngx_http_mp4_update_stsc_atom(ngx_http_mp4_file_t *mp4,
+    ngx_http_mp4_trak_t *trak)
+{
+    size_t                 atom_size;
+    uint32_t               start_sample, entries, chunk, samples, id,
+                           next_chunk, n;
+    ngx_buf_t             *atom, *data, *buf;
+    ngx_mp4_stsc_atom_t   *stsc_atom;
+    ngx_mp4_stsc_entry_t  *entry, *first, *end;
+
+    /*
+     * mdia.minf.stbl.stsc updating requires trak->start_sample
+     * from mdia.minf.stbl.stts which depends on value from mdia.mdhd
+     * atom which may reside after mdia.minf
+     */
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                   "mp4 stsc atom update");
+
+    data = trak->out[NGX_HTTP_MP4_STSC_DATA].buf;
+
+    if (data == NULL) {
+        ngx_log_error(NGX_LOG_ERR, mp4->file.log, 0,
+                      "no mp4 stsc atoms were found in \"%s\"",
+                      mp4->file.name.data);
+        return NGX_ERROR;
+    }
+
+    start_sample = (uint32_t) trak->start_sample;
+    entries = trak->sample_to_chunk_entries - 1;
+
+    entry = (ngx_mp4_stsc_entry_t *) data->pos;
+    end = (ngx_mp4_stsc_entry_t *) data->last;
+
+    chunk = ngx_mp4_get_32value(entry->chunk);
+    samples = ngx_mp4_get_32value(entry->samples);
+    id = ngx_mp4_get_32value(entry->id);
+    entry++;
+
+    while (entry < end) {
+
+        next_chunk = ngx_mp4_get_32value(entry->chunk);
+
+        ngx_log_debug5(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                       "start_sample:%uD, chunk:%uD, chunks:%uD, "
+                       "samples:%uD, id:%uD",
+                       start_sample, chunk, next_chunk - chunk, samples, id);
+
+        n = (next_chunk - chunk) * samples;
+
+        if (start_sample <= n) {
+            goto found;
+        }
+
+        start_sample -= n;
+
+        chunk = next_chunk;
+        samples = ngx_mp4_get_32value(entry->samples);
+        id = ngx_mp4_get_32value(entry->id);
+        entries--;
+        entry++;
+    }
+
+    next_chunk = trak->chunks;
+
+    ngx_log_debug4(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                   "start_sample:%uD, chunk:%uD, chunks:%uD, samples:%uD",
+                   start_sample, chunk, next_chunk - chunk, samples);
+
+    n = (next_chunk - chunk) * samples;
+
+    if (start_sample > n) {
+        ngx_log_error(NGX_LOG_ERR, mp4->file.log, 0,
+                      "start time is out mp4 stsc chunks in \"%s\"",
+                      mp4->file.name.data);
+        return NGX_ERROR;
+    }
+
+found:
+
+    entries++;
+    entry--;
+
+    if (samples == 0) {
+        ngx_log_error(NGX_LOG_ERR, mp4->file.log, 0,
+                      "zero number of samples in \"%s\"",
+                      mp4->file.name.data);
+        return NGX_ERROR;
+    }
+
+    trak->start_chunk = chunk - 1;
+
+    trak->start_chunk += start_sample / samples;
+    trak->chunk_samples = start_sample % samples;
+
+    ngx_log_debug2(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                   "start chunk:%ui, samples:%uD",
+                   trak->start_chunk, trak->chunk_samples);
+
+    data->pos = (u_char *) entry;
+    atom_size = sizeof(ngx_mp4_stsc_atom_t) + (data->last - data->pos);
+
+    ngx_mp4_set_32value(entry->chunk, 1);
+
+    if (trak->chunk_samples) {
+
+        first = &trak->stsc_chunk_entry;
+        ngx_mp4_set_32value(first->chunk, 1);
+        ngx_mp4_set_32value(first->samples, samples - trak->chunk_samples);
+        ngx_mp4_set_32value(first->id, id);
+
+        buf = &trak->stsc_chunk_buf;
+        buf->temporary = 1;
+        buf->pos = (u_char *) first;
+        buf->last = (u_char *) first + sizeof(ngx_mp4_stsc_entry_t);
+
+        trak->out[NGX_HTTP_MP4_STSC_CHUNK].buf = buf;
+
+        ngx_mp4_set_32value(entry->chunk, 2);
+
+        atom_size += sizeof(ngx_mp4_stsc_entry_t);
+    }
+
+    while (++entry < end) {
+        chunk = ngx_mp4_get_32value(entry->chunk);
+        chunk -= trak->start_chunk;
+        ngx_mp4_set_32value(entry->chunk, chunk);
+    }
+
+    trak->size += atom_size;
+
+    atom = trak->out[NGX_HTTP_MP4_STSC_ATOM].buf;
+    stsc_atom = (ngx_mp4_stsc_atom_t *) atom->pos;
+
+    ngx_mp4_set_32value(stsc_atom->size, atom_size);
+    ngx_mp4_set_32value(stsc_atom->entries, entries);
+
+    return NGX_OK;
+}
+
+
+typedef struct {
+    u_char    size[4];
+    u_char    name[4];
+    u_char    version[1];
+    u_char    flags[3];
+    u_char    uniform_size[4];
+    u_char    entries[4];
+} ngx_mp4_stsz_atom_t;
+
+
+static ngx_int_t
+ngx_http_mp4_read_stsz_atom(ngx_http_mp4_file_t *mp4, uint64_t atom_data_size)
+{
+    u_char               *atom_header, *atom_table, *atom_end;
+    size_t                atom_size;
+    uint32_t              entries, size;
+    ngx_buf_t            *atom, *data;
+    ngx_mp4_stsz_atom_t  *stsz_atom;
+    ngx_http_mp4_trak_t  *trak;
+
+    /* sample sizes atom */
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0, "mp4 stsz atom");
+
+    atom_header = ngx_mp4_atom_header(mp4);
+    stsz_atom = (ngx_mp4_stsz_atom_t *) atom_header;
+    ngx_mp4_set_atom_name(stsz_atom, 's', 't', 's', 'z');
+
+    size = ngx_mp4_get_32value(stsz_atom->uniform_size);
+    entries = ngx_mp4_get_32value(stsz_atom->entries);
+
+    ngx_log_debug2(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                   "sample uniform size:%uD, entries:%uD", size, entries);
+
+    trak = ngx_mp4_last_trak(mp4);
+    trak->sample_sizes_entries = entries;
+
+    atom_table = atom_header + sizeof(ngx_mp4_stsz_atom_t);
+
+    atom = &trak->stsz_atom_buf;
+    atom->temporary = 1;
+    atom->pos = atom_header;
+    atom->last = atom_table;
+
+    trak->out[NGX_HTTP_MP4_STSZ_ATOM].buf = atom;
+
+    if (size == 0) {
+        atom_end = atom_table + entries * sizeof(uint32_t);
+
+        if ((uint64_t) (atom_end - stsz_atom->version) > atom_data_size) {
+            ngx_log_error(NGX_LOG_ERR, mp4->file.log, 0,
+                          "\"%s\" mp4 stsz atom too large",
+                          mp4->file.name.data);
+            return NGX_ERROR;
+        }
+
+        data = &trak->stsz_data_buf;
+        data->temporary = 1;
+        data->pos = atom_table;
+        data->last = atom_end;
+
+        trak->out[NGX_HTTP_MP4_STSZ_DATA].buf = data;
+
+    } else {
+        /* if size != 0 then all samples are the same size */
+        /* TODO : chunk samples */
+        atom_size = sizeof(ngx_mp4_atom_header_t) + (size_t) atom_data_size;
+        ngx_mp4_set_32value(atom_header, atom_size);
+        trak->size += atom_size;
+    }
+
+    ngx_mp4_atom_next(mp4, atom_data_size);
+
+    return NGX_OK;
+}
+
+
+static void
+ngx_http_mp4_update_stsz_atom(ngx_http_mp4_file_t *mp4,
+    ngx_http_mp4_trak_t *trak)
+{
+    size_t                atom_size;
+    uint32_t             *pos, *end;
+    ngx_buf_t            *atom, *data;
+    ngx_mp4_stsz_atom_t  *stsz_atom;
+
+    /*
+     * mdia.minf.stbl.stsz updating requires trak->start_sample
+     * from mdia.minf.stbl.stts which depends on value from mdia.mdhd
+     * atom which may reside after mdia.minf
+     */
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                   "mp4 stsz atom update");
+
+    data = trak->out[NGX_HTTP_MP4_STSZ_DATA].buf;
+
+    if (data) {
+        data->pos += trak->start_sample * sizeof(uint32_t);
+        end = (uint32_t *) data->pos;
+
+        for (pos = end - trak->chunk_samples; pos < end; pos++) {
+            trak->chunk_samples_size += ngx_mp4_get_32value(pos);
+        }
+
+        ngx_log_debug1(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                       "chunk samples sizes:%uL", trak->chunk_samples_size);
+
+        atom_size = sizeof(ngx_mp4_stsz_atom_t) + (data->last - data->pos);
+        trak->size += atom_size;
+
+        atom = trak->out[NGX_HTTP_MP4_STSZ_ATOM].buf;
+        stsz_atom = (ngx_mp4_stsz_atom_t *) atom->pos;
+
+        ngx_mp4_set_32value(stsz_atom->size, atom_size);
+        ngx_mp4_set_32value(stsz_atom->entries,
+                            trak->sample_sizes_entries - trak->start_sample);
+    }
+}
+
+
+typedef struct {
+    u_char    size[4];
+    u_char    name[4];
+    u_char    version[1];
+    u_char    flags[3];
+    u_char    entries[4];
+} ngx_mp4_stco_atom_t;
+
+
+static ngx_int_t
+ngx_http_mp4_read_stco_atom(ngx_http_mp4_file_t *mp4, uint64_t atom_data_size)
+{
+    u_char               *atom_header, *atom_table, *atom_end;
+    uint32_t              entries;
+    ngx_buf_t            *atom, *data;
+    ngx_mp4_stco_atom_t  *stco_atom;
+    ngx_http_mp4_trak_t  *trak;
+
+    /* chunk offsets atom */
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0, "mp4 stco atom");
+
+    atom_header = ngx_mp4_atom_header(mp4);
+    stco_atom = (ngx_mp4_stco_atom_t *) atom_header;
+    ngx_mp4_set_atom_name(stco_atom, 's', 't', 'c', 'o');
+
+    entries = ngx_mp4_get_32value(stco_atom->entries);
+
+    ngx_log_debug1(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0, "chunks:%uD", entries);
+
+    atom_table = atom_header + sizeof(ngx_mp4_stco_atom_t);
+    atom_end = atom_table + entries * sizeof(uint32_t);
+
+    if ((uint64_t) (atom_end - stco_atom->version) > atom_data_size) {
+        ngx_log_error(NGX_LOG_ERR, mp4->file.log, 0,
+                      "\"%s\" mp4 stco atom too large", mp4->file.name.data);
+        return NGX_ERROR;
+    }
+
+    trak = ngx_mp4_last_trak(mp4);
+    trak->chunks = entries;
+
+    atom = &trak->stco_atom_buf;
+    atom->temporary = 1;
+    atom->pos = atom_header;
+    atom->last = atom_table;
+
+    data = &trak->stco_data_buf;
+    data->temporary = 1;
+    data->pos = atom_table;
+    data->last = atom_end;
+
+    trak->out[NGX_HTTP_MP4_STCO_ATOM].buf = atom;
+    trak->out[NGX_HTTP_MP4_STCO_DATA].buf = data;
+
+    ngx_mp4_atom_next(mp4, atom_data_size);
+
+    return NGX_OK;
+}
+
+
+static ngx_int_t
+ngx_http_mp4_update_stco_atom(ngx_http_mp4_file_t *mp4,
+    ngx_http_mp4_trak_t *trak)
+{
+    size_t                atom_size;
+    ngx_buf_t            *atom, *data;
+    ngx_mp4_stco_atom_t  *stco_atom;
+
+    /*
+     * mdia.minf.stbl.stco updating requires trak->start_chunk
+     * from mdia.minf.stbl.stsc which depends on value from mdia.mdhd
+     * atom which may reside after mdia.minf
+     */
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                   "mp4 stco atom update");
+
+    data = trak->out[NGX_HTTP_MP4_STCO_DATA].buf;
+
+    if (data == NULL) {
+        ngx_log_error(NGX_LOG_ERR, mp4->file.log, 0,
+                      "no mp4 stco atoms were found in \"%s\"",
+                      mp4->file.name.data);
+        return NGX_ERROR;
+    }
+
+    data->pos += trak->start_chunk * sizeof(uint32_t);
+    atom_size = sizeof(ngx_mp4_stco_atom_t) + (data->last - data->pos);
+    trak->size += atom_size;
+
+    trak->start_offset = ngx_mp4_get_32value(data->pos);
+    trak->start_offset += trak->chunk_samples_size;
+    ngx_mp4_set_32value(data->pos, trak->start_offset);
+
+    ngx_log_debug1(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                   "start chunk offset:%uD", trak->start_offset);
+
+    atom = trak->out[NGX_HTTP_MP4_STCO_ATOM].buf;
+    stco_atom = (ngx_mp4_stco_atom_t *) atom->pos;
+
+    ngx_mp4_set_32value(stco_atom->size, atom_size);
+    ngx_mp4_set_32value(stco_atom->entries, trak->chunks - trak->start_chunk);
+
+    return NGX_OK;
+}
+
+
+static void
+ngx_http_mp4_adjust_stco_atom(ngx_http_mp4_file_t *mp4,
+    ngx_http_mp4_trak_t *trak, int32_t adjustment)
+{
+    uint32_t    offset, *entry, *end;
+    ngx_buf_t  *data;
+
+    /*
+     * moov.trak.mdia.minf.stbl.stco adjustment requires
+     * minimal start offset of all traks and new moov atom size
+     */
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                   "mp4 stco atom adjustment");
+
+    data = trak->out[NGX_HTTP_MP4_STCO_DATA].buf;
+    entry = (uint32_t *) data->pos;
+    end = (uint32_t *) data->last;
+
+    while (entry < end) {
+        offset = ngx_mp4_get_32value(entry);
+        offset += adjustment;
+        ngx_mp4_set_32value(entry, offset);
+        entry++;
+    }
+}
+
+
+typedef struct {
+    u_char    size[4];
+    u_char    name[4];
+    u_char    version[1];
+    u_char    flags[3];
+    u_char    entries[4];
+} ngx_mp4_co64_atom_t;
+
+
+static ngx_int_t
+ngx_http_mp4_read_co64_atom(ngx_http_mp4_file_t *mp4, uint64_t atom_data_size)
+{
+    u_char               *atom_header, *atom_table, *atom_end;
+    uint32_t              entries;
+    ngx_buf_t            *atom, *data;
+    ngx_mp4_co64_atom_t  *co64_atom;
+    ngx_http_mp4_trak_t  *trak;
+
+    /* chunk offsets atom */
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0, "mp4 co64 atom");
+
+    atom_header = ngx_mp4_atom_header(mp4);
+    co64_atom = (ngx_mp4_co64_atom_t *) atom_header;
+    ngx_mp4_set_atom_name(co64_atom, 'c', 'o', '6', '4');
+
+    entries = ngx_mp4_get_32value(co64_atom->entries);
+
+    ngx_log_debug1(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0, "chunks:%uD", entries);
+
+    atom_table = atom_header + sizeof(ngx_mp4_co64_atom_t);
+    atom_end = atom_table + entries * sizeof(uint64_t);
+
+    if ((uint64_t) (atom_end - co64_atom->version) > atom_data_size) {
+        ngx_log_error(NGX_LOG_ERR, mp4->file.log, 0,
+                      "\"%s\" mp4 co64 atom too large", mp4->file.name.data);
+        return NGX_ERROR;
+    }
+
+    trak = ngx_mp4_last_trak(mp4);
+    trak->chunks = entries;
+
+    atom = &trak->co64_atom_buf;
+    atom->temporary = 1;
+    atom->pos = atom_header;
+    atom->last = atom_table;
+
+    data = &trak->co64_data_buf;
+    data->temporary = 1;
+    data->pos = atom_table;
+    data->last = atom_end;
+
+    trak->out[NGX_HTTP_MP4_CO64_ATOM].buf = atom;
+    trak->out[NGX_HTTP_MP4_CO64_DATA].buf = data;
+
+    ngx_mp4_atom_next(mp4, atom_data_size);
+
+    return NGX_OK;
+}
+
+
+static ngx_int_t
+ngx_http_mp4_update_co64_atom(ngx_http_mp4_file_t *mp4,
+    ngx_http_mp4_trak_t *trak)
+{
+    size_t                atom_size;
+    ngx_buf_t            *atom, *data;
+    ngx_mp4_co64_atom_t  *co64_atom;
+
+    /*
+     * mdia.minf.stbl.co64 updating requires trak->start_chunk
+     * from mdia.minf.stbl.stsc which depends on value from mdia.mdhd
+     * atom which may reside after mdia.minf
+     */
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                   "mp4 co64 atom update");
+
+    data = trak->out[NGX_HTTP_MP4_CO64_DATA].buf;
+
+    if (data == NULL) {
+        ngx_log_error(NGX_LOG_ERR, mp4->file.log, 0,
+                      "no mp4 co64 atoms were found in \"%s\"",
+                      mp4->file.name.data);
+        return NGX_ERROR;
+    }
+
+    data->pos += trak->start_chunk * sizeof(uint64_t);
+    atom_size = sizeof(ngx_mp4_co64_atom_t) + (data->last - data->pos);
+    trak->size += atom_size;
+
+    trak->start_offset = ngx_mp4_get_64value(data->pos);
+    trak->start_offset += trak->chunk_samples_size;
+    ngx_mp4_set_64value(data->pos, trak->start_offset);
+
+    ngx_log_debug1(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                   "start chunk offset:%uL", trak->start_offset);
+
+    atom = trak->out[NGX_HTTP_MP4_CO64_ATOM].buf;
+    co64_atom = (ngx_mp4_co64_atom_t *) atom->pos;
+
+    ngx_mp4_set_32value(co64_atom->size, atom_size);
+    ngx_mp4_set_32value(co64_atom->entries, trak->chunks - trak->start_chunk);
+
+    return NGX_OK;
+}
+
+
+static void
+ngx_http_mp4_adjust_co64_atom(ngx_http_mp4_file_t *mp4,
+    ngx_http_mp4_trak_t *trak, off_t adjustment)
+{
+    uint64_t    offset, *entry, *end;
+    ngx_buf_t  *data;
+
+    /*
+     * moov.trak.mdia.minf.stbl.co64 adjustment requires
+     * minimal start offset of all traks and new moov atom size
+     */
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, mp4->file.log, 0,
+                   "mp4 co64 atom adjustment");
+
+    data = trak->out[NGX_HTTP_MP4_CO64_DATA].buf;
+    entry = (uint64_t *) data->pos;
+    end = (uint64_t *) data->last;
+
+    while (entry < end) {
+        offset = ngx_mp4_get_64value(entry);
+        offset += adjustment;
+        ngx_mp4_set_64value(entry, offset);
+        entry++;
+    }
+}
+
+
+static char *
+ngx_http_mp4(ngx_conf_t *cf, ngx_command_t *cmd, void *conf)
+{
+    ngx_http_core_loc_conf_t  *clcf;
+
+    clcf = ngx_http_conf_get_module_loc_conf(cf, ngx_http_core_module);
+    clcf->handler = ngx_http_mp4_handler;
+
+    return NGX_CONF_OK;
+}
+
+
+static void *
+ngx_http_mp4_create_conf(ngx_conf_t *cf)
+{
+    ngx_http_mp4_conf_t  *conf;
+
+    conf = ngx_palloc(cf->pool, sizeof(ngx_http_mp4_conf_t));
+    if (conf == NULL) {
+        return NULL;
+    }
+
+    conf->buffer_size = NGX_CONF_UNSET_SIZE;
+    conf->max_buffer_size = NGX_CONF_UNSET_SIZE;
+
+    return conf;
+}
+
+
+static char *
+ngx_http_mp4_merge_conf(ngx_conf_t *cf, void *parent, void *child)
+{
+    ngx_http_mp4_conf_t *prev = parent;
+    ngx_http_mp4_conf_t *conf = child;
+
+    ngx_conf_merge_size_value(conf->buffer_size, prev->buffer_size, 512 * 1024);
+    ngx_conf_merge_size_value(conf->max_buffer_size, prev->max_buffer_size,
+                              10 * 1024 * 1024);
+
+    return NGX_CONF_OK;
+}
--- nginx-1.0.0.orig/src/http/modules/ngx_http_degradation_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_degradation_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/http/modules/ngx_http_gzip_static_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_gzip_static_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/http/modules/ngx_http_upstream_ip_hash_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_upstream_ip_hash_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/http/modules/ngx_http_proxy_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_proxy_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -457,8 +458,8 @@ static ngx_http_module_t  ngx_http_proxy
     NULL,                                  /* create server configuration */
     NULL,                                  /* merge server configuration */
 
-    ngx_http_proxy_create_loc_conf,        /* create location configration */
-    ngx_http_proxy_merge_loc_conf          /* merge location configration */
+    ngx_http_proxy_create_loc_conf,        /* create location configuration */
+    ngx_http_proxy_merge_loc_conf          /* merge location configuration */
 };
 
 
@@ -642,15 +643,17 @@ ngx_http_proxy_eval(ngx_http_request_t *
         return NGX_ERROR;
     }
 
-    if (ngx_strncasecmp(proxy.data, (u_char *) "http://", 7) == 0) {
-
+    if (proxy.len > 7
+        && ngx_strncasecmp(proxy.data, (u_char *) "http://", 7) == 0)
+    {
         add = 7;
         port = 80;
 
 #if (NGX_HTTP_SSL)
 
-    } else if (ngx_strncasecmp(proxy.data, (u_char *) "https://", 8) == 0) {
-
+    } else if (proxy.len > 8
+               && ngx_strncasecmp(proxy.data, (u_char *) "https://", 8) == 0)
+    {
         add = 8;
         port = 443;
         r->upstream->ssl = 1;
@@ -1130,12 +1133,11 @@ ngx_http_proxy_create_request(ngx_http_r
             body = body->next;
         }
 
-        b->flush = 1;
-
     } else {
         u->request_bufs = cl;
     }
 
+    b->flush = 1;
     cl->next = NULL;
 
     return NGX_OK;
@@ -1276,8 +1278,10 @@ ngx_http_proxy_process_header(ngx_http_r
             h->value.data = h->key.data + h->key.len + 1;
             h->lowcase_key = h->key.data + h->key.len + 1 + h->value.len + 1;
 
-            ngx_cpystrn(h->key.data, r->header_name_start, h->key.len + 1);
-            ngx_cpystrn(h->value.data, r->header_start, h->value.len + 1);
+            ngx_memcpy(h->key.data, r->header_name_start, h->key.len);
+            h->key.data[h->key.len] = '\0';
+            ngx_memcpy(h->value.data, r->header_start, h->value.len);
+            h->value.data[h->value.len] = '\0';
 
             if (h->key.len == r->lowcase_index) {
                 ngx_memcpy(h->lowcase_key, r->lowcase_header, h->key.len);
@@ -1707,6 +1711,8 @@ ngx_http_proxy_create_loc_conf(ngx_conf_
     conf->headers_hash_max_size = NGX_CONF_UNSET_UINT;
     conf->headers_hash_bucket_size = NGX_CONF_UNSET_UINT;
 
+    ngx_str_set(&conf->upstream.module, "proxy");
+
     return conf;
 }
 
@@ -1719,7 +1725,6 @@ ngx_http_proxy_merge_loc_conf(ngx_conf_t
 
     u_char                     *p;
     size_t                      size;
-    ngx_keyval_t               *s;
     ngx_hash_init_t             hash;
     ngx_http_core_loc_conf_t   *clcf;
     ngx_http_proxy_redirect_t  *pr;
@@ -1901,17 +1906,21 @@ ngx_http_proxy_merge_loc_conf(ngx_conf_t
                               (NGX_CONF_BITMASK_SET
                                |NGX_HTTP_UPSTREAM_FT_OFF));
 
+    if (conf->upstream.cache_use_stale & NGX_HTTP_UPSTREAM_FT_OFF) {
+        conf->upstream.cache_use_stale = NGX_CONF_BITMASK_SET
+                                         |NGX_HTTP_UPSTREAM_FT_OFF;
+    }
+
+    if (conf->upstream.cache_use_stale & NGX_HTTP_UPSTREAM_FT_ERROR) {
+        conf->upstream.cache_use_stale |= NGX_HTTP_UPSTREAM_FT_NOLIVE;
+    }
+
     if (conf->upstream.cache_methods == 0) {
         conf->upstream.cache_methods = prev->upstream.cache_methods;
     }
 
     conf->upstream.cache_methods |= NGX_HTTP_GET|NGX_HTTP_HEAD;
 
-    if (conf->upstream.cache_use_stale & NGX_HTTP_UPSTREAM_FT_OFF) {
-        conf->upstream.cache_use_stale = NGX_CONF_BITMASK_SET
-                                         |NGX_HTTP_UPSTREAM_FT_OFF;
-    }
-
     ngx_conf_merge_ptr_value(conf->upstream.cache_bypass,
                              prev->upstream.cache_bypass, NULL);
 
@@ -2064,22 +2073,6 @@ ngx_http_proxy_merge_loc_conf(ngx_conf_t
         if (ngx_http_script_compile(&sc) != NGX_OK) {
             return NGX_CONF_ERROR;
         }
-
-        if (conf->headers_source == NULL) {
-            conf->headers_source = ngx_array_create(cf->pool, 4,
-                                                    sizeof(ngx_keyval_t));
-            if (conf->headers_source == NULL) {
-                return NGX_CONF_ERROR;
-            }
-        }
-
-        s = ngx_array_push(conf->headers_source);
-        if (s == NULL) {
-            return NGX_CONF_ERROR;
-        }
-
-        ngx_str_set(&s->key, "Content-Length");
-        ngx_str_set(&s->value, "$proxy_internal_body_length");
     }
 
     if (ngx_http_proxy_merge_headers(cf, conf, prev) != NGX_OK) {
@@ -2098,7 +2091,7 @@ ngx_http_proxy_merge_headers(ngx_conf_t 
     size_t                        size;
     uintptr_t                    *code;
     ngx_uint_t                    i;
-    ngx_array_t                   headers_names;
+    ngx_array_t                   headers_names, headers_merged;
     ngx_keyval_t                 *src, *s, *h;
     ngx_hash_key_t               *hk;
     ngx_hash_init_t               hash;
@@ -2114,6 +2107,8 @@ ngx_http_proxy_merge_headers(ngx_conf_t 
     }
 
     if (conf->headers_set_hash.buckets
+        && ((conf->body_source.data == NULL)
+            == (prev->body_source.data == NULL))
 #if (NGX_HTTP_CACHE)
         && ((conf->upstream.cache == NULL) == (prev->upstream.cache == NULL))
 #endif
@@ -2129,6 +2124,12 @@ ngx_http_proxy_merge_headers(ngx_conf_t 
         return NGX_ERROR;
     }
 
+    if (ngx_array_init(&headers_merged, cf->temp_pool, 4, sizeof(ngx_keyval_t))
+        != NGX_OK)
+    {
+        return NGX_ERROR;
+    }
+
     if (conf->headers_source == NULL) {
         conf->headers_source = ngx_array_create(cf->pool, 4,
                                                 sizeof(ngx_keyval_t));
@@ -2148,8 +2149,6 @@ ngx_http_proxy_merge_headers(ngx_conf_t 
     }
 
 
-    src = conf->headers_source->elts;
-
 #if (NGX_HTTP_CACHE)
 
     h = conf->upstream.cache ? ngx_http_proxy_cache_headers:
@@ -2160,31 +2159,51 @@ ngx_http_proxy_merge_headers(ngx_conf_t 
 
 #endif
 
+    src = conf->headers_source->elts;
+    for (i = 0; i < conf->headers_source->nelts; i++) {
+
+        s = ngx_array_push(&headers_merged);
+        if (s == NULL) {
+            return NGX_ERROR;
+        }
+
+        *s = src[i];
+    }
+
     while (h->key.len) {
 
-        for (i = 0; i < conf->headers_source->nelts; i++) {
+        src = headers_merged.elts;
+        for (i = 0; i < headers_merged.nelts; i++) {
             if (ngx_strcasecmp(h->key.data, src[i].key.data) == 0) {
                 goto next;
             }
         }
 
-        s = ngx_array_push(conf->headers_source);
+        s = ngx_array_push(&headers_merged);
         if (s == NULL) {
             return NGX_ERROR;
         }
 
         *s = *h;
 
-        src = conf->headers_source->elts;
-
     next:
 
         h++;
     }
 
+    if (conf->body_source.data) {
+        s = ngx_array_push(&headers_merged);
+        if (s == NULL) {
+            return NGX_ERROR;
+        }
 
-    src = conf->headers_source->elts;
-    for (i = 0; i < conf->headers_source->nelts; i++) {
+        ngx_str_set(&s->key, "Content-Length");
+        ngx_str_set(&s->value, "$proxy_internal_body_length");
+    }
+
+
+    src = headers_merged.elts;
+    for (i = 0; i < headers_merged.nelts; i++) {
 
         hk = ngx_array_push(&headers_names);
         if (hk == NULL) {
@@ -2479,6 +2498,8 @@ ngx_http_proxy_redirect(ngx_conf_t *cf, 
         return NGX_CONF_OK;
     }
 
+    plcf->redirect = 1;
+
     value = cf->args->elts;
 
     if (cf->args->nelts == 2) {
@@ -2754,7 +2775,9 @@ ngx_http_proxy_set_ssl(ngx_conf_t *cf, n
     plcf->upstream.ssl->log = cf->log;
 
     if (ngx_ssl_create(plcf->upstream.ssl,
-                       NGX_SSL_SSLv2|NGX_SSL_SSLv3|NGX_SSL_TLSv1, NULL)
+                       NGX_SSL_SSLv2|NGX_SSL_SSLv3|NGX_SSL_TLSv1
+                                    |NGX_SSL_TLSv1_1|NGX_SSL_TLSv1_2,
+                       NULL)
         != NGX_OK)
     {
         return NGX_ERROR;
--- nginx-1.0.0.orig/src/http/modules/ngx_http_random_index_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_random_index_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -48,8 +49,8 @@ static ngx_http_module_t  ngx_http_rando
     NULL,                                  /* create server configuration */
     NULL,                                  /* merge server configuration */
 
-    ngx_http_random_index_create_loc_conf, /* create location configration */
-    ngx_http_random_index_merge_loc_conf   /* merge location configration */
+    ngx_http_random_index_create_loc_conf, /* create location configuration */
+    ngx_http_random_index_merge_loc_conf   /* merge location configuration */
 };
 
 
--- nginx-1.0.0.orig/src/http/modules/ngx_http_rewrite_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_rewrite_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -111,8 +112,8 @@ static ngx_http_module_t  ngx_http_rewri
     NULL,                                  /* create server configuration */
     NULL,                                  /* merge server configuration */
 
-    ngx_http_rewrite_create_loc_conf,      /* create location configration */
-    ngx_http_rewrite_merge_loc_conf        /* merge location configration */
+    ngx_http_rewrite_create_loc_conf,      /* create location configuration */
+    ngx_http_rewrite_merge_loc_conf        /* merge location configuration */
 };
 
 
@@ -135,10 +136,22 @@ ngx_module_t  ngx_http_rewrite_module = 
 static ngx_int_t
 ngx_http_rewrite_handler(ngx_http_request_t *r)
 {
+    ngx_int_t                     index;
     ngx_http_script_code_pt       code;
     ngx_http_script_engine_t     *e;
+    ngx_http_core_srv_conf_t     *cscf;
+    ngx_http_core_main_conf_t    *cmcf;
     ngx_http_rewrite_loc_conf_t  *rlcf;
 
+    cmcf = ngx_http_get_module_main_conf(r, ngx_http_core_module);
+    cscf = ngx_http_get_module_srv_conf(r, ngx_http_core_module);
+    index = cmcf->phase_engine.location_rewrite_index;
+
+    if (r->phase_handler == index && r->loc_conf == cscf->ctx->loc_conf) {
+        /* skipping location rewrite phase for server null location */
+        return NGX_DECLINED;
+    }
+
     rlcf = ngx_http_get_module_loc_conf(r, ngx_http_rewrite_module);
 
     if (rlcf->codes == NULL) {
@@ -167,8 +180,8 @@ ngx_http_rewrite_handler(ngx_http_reques
         code(e);
     }
 
-    if (e->status == NGX_DECLINED) {
-        return NGX_DECLINED;
+    if (e->status < NGX_HTTP_BAD_REQUEST) {
+        return e->status;
     }
 
     if (r->err_status == 0) {
--- nginx-1.0.0.orig/src/http/modules/ngx_http_ssi_filter_module.h
+++ nginx-1.0.0/src/http/modules/ngx_http_ssi_filter_module.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -64,6 +65,12 @@ typedef struct {
     ngx_list_t               *variables;
     ngx_array_t              *blocks;
 
+#if (NGX_PCRE)
+    ngx_uint_t                ncaptures;
+    int                      *captures;
+    u_char                   *captures_data;
+#endif
+
     unsigned                  conditional:2;
     unsigned                  encoding:2;
     unsigned                  block:1;
--- nginx-1.0.0.orig/src/http/modules/ngx_http_ssl_module.h
+++ nginx-1.0.0/src/http/modules/ngx_http_ssl_module.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -32,6 +33,7 @@ typedef struct {
     ngx_str_t                       certificate;
     ngx_str_t                       certificate_key;
     ngx_str_t                       dhparam;
+    ngx_str_t                       ecdh_curve;
     ngx_str_t                       client_certificate;
     ngx_str_t                       crl;
 
--- nginx-1.0.0.orig/src/http/modules/ngx_http_split_clients_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_split_clients_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -87,14 +88,14 @@ ngx_http_split_clients_variable(ngx_http
         return NGX_OK;
     }
 
-    hash = ngx_crc32_short(val.data, val.len);
+    hash = ngx_murmur_hash2(val.data, val.len);
 
     part = ctx->parts.elts;
 
     for (i = 0; i < ctx->parts.nelts; i++) {
 
         ngx_log_debug2(NGX_LOG_DEBUG_HTTP, r->connection->log, 0,
-                       "%D %D", hash, part[i].percent);
+                       "http split: %uD %uD", hash, part[i].percent);
 
         if (hash < part[i].percent) {
             *v = part[i].value;
--- nginx-1.0.0.orig/src/http/modules/ngx_http_headers_filter_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_headers_filter_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -145,9 +146,12 @@ ngx_http_headers_filter(ngx_http_request
         || r != r->main
         || (r->headers_out.status != NGX_HTTP_OK
             && r->headers_out.status != NGX_HTTP_NO_CONTENT
+            && r->headers_out.status != NGX_HTTP_PARTIAL_CONTENT
             && r->headers_out.status != NGX_HTTP_MOVED_PERMANENTLY
             && r->headers_out.status != NGX_HTTP_MOVED_TEMPORARILY
-            && r->headers_out.status != NGX_HTTP_NOT_MODIFIED))
+            && r->headers_out.status != NGX_HTTP_SEE_OTHER
+            && r->headers_out.status != NGX_HTTP_NOT_MODIFIED
+            && r->headers_out.status != NGX_HTTP_TEMPORARY_REDIRECT))
     {
         return ngx_http_next_header_filter(r);
     }
@@ -253,7 +257,7 @@ ngx_http_set_expires(ngx_http_request_t 
         return NGX_ERROR;
     }
 
-    if (conf->expires_time == 0) {
+    if (conf->expires_time == 0 && conf->expires != NGX_HTTP_EXPIRES_DAILY) {
         ngx_memcpy(expires->value.data, ngx_cached_http_time.data,
                    ngx_cached_http_time.len + 1);
         ngx_str_set(&cc->value, "max-age=0");
@@ -262,16 +266,16 @@ ngx_http_set_expires(ngx_http_request_t 
 
     now = ngx_time();
 
-    if (conf->expires == NGX_HTTP_EXPIRES_ACCESS
-        || r->headers_out.last_modified_time == -1)
+    if (conf->expires == NGX_HTTP_EXPIRES_DAILY) {
+        expires_time = ngx_next_time(conf->expires_time);
+        max_age = expires_time - now;
+
+    } else if (conf->expires == NGX_HTTP_EXPIRES_ACCESS
+               || r->headers_out.last_modified_time == -1)
     {
         expires_time = now + conf->expires_time;
         max_age = conf->expires_time;
 
-    } else if (conf->expires == NGX_HTTP_EXPIRES_DAILY) {
-        expires_time = ngx_next_time(conf->expires_time);
-        max_age = expires_time - now;
-
     } else {
         expires_time = r->headers_out.last_modified_time + conf->expires_time;
         max_age = expires_time - now;
@@ -507,7 +511,7 @@ ngx_http_headers_expires(ngx_conf_t *cf,
         minus = 0;
 
         if (hcf->expires == NGX_HTTP_EXPIRES_MODIFIED) {
-            return "daily time can not be used with \"modified\" parameter";
+            return "daily time cannot be used with \"modified\" parameter";
         }
 
         hcf->expires = NGX_HTTP_EXPIRES_DAILY;
--- nginx-1.0.0.orig/src/http/modules/ngx_http_empty_gif_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_empty_gif_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 #include <ngx_config.h>
@@ -111,19 +112,12 @@ static ngx_str_t  ngx_http_gif_type = ng
 static ngx_int_t
 ngx_http_empty_gif_handler(ngx_http_request_t *r)
 {
-    ngx_int_t                 rc;
     ngx_http_complex_value_t  cv;
 
     if (!(r->method & (NGX_HTTP_GET|NGX_HTTP_HEAD))) {
         return NGX_HTTP_NOT_ALLOWED;
     }
 
-    rc = ngx_http_discard_request_body(r);
-
-    if (rc != NGX_OK) {
-        return rc;
-    }
-
     ngx_memzero(&cv, sizeof(ngx_http_complex_value_t));
 
     cv.value.len = sizeof(ngx_empty_gif);
--- nginx-1.0.0.orig/src/http/modules/ngx_http_flv_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_flv_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 #include <ngx_config.h>
@@ -23,7 +24,7 @@ static ngx_command_t  ngx_http_flv_comma
 };
 
 
-static u_char  ngx_flv_header[] = "FLV\x1\x1\0\0\0\x9\0\0\0\x9";
+static u_char  ngx_flv_header[] = "FLV\x1\x5\0\0\0\x9\0\0\0\0";
 
 
 static ngx_http_module_t  ngx_http_flv_module_ctx = {
--- nginx-1.0.0.orig/src/http/modules/ngx_http_fastcgi_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_fastcgi_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -142,6 +143,9 @@ static ngx_int_t ngx_http_fastcgi_add_va
 static void *ngx_http_fastcgi_create_loc_conf(ngx_conf_t *cf);
 static char *ngx_http_fastcgi_merge_loc_conf(ngx_conf_t *cf,
     void *parent, void *child);
+static ngx_int_t ngx_http_fastcgi_merge_params(ngx_conf_t *cf,
+    ngx_http_fastcgi_loc_conf_t *conf, ngx_http_fastcgi_loc_conf_t *prev);
+
 static ngx_int_t ngx_http_fastcgi_script_name_variable(ngx_http_request_t *r,
     ngx_http_variable_value_t *v, uintptr_t data);
 static ngx_int_t ngx_http_fastcgi_path_info_variable(ngx_http_request_t *r,
@@ -431,7 +435,7 @@ static ngx_command_t  ngx_http_fastcgi_c
       &ngx_http_upstream_ignore_headers_masks },
 
     { ngx_string("fastcgi_catch_stderr"),
-      NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_HTTP_LOC_CONF|NGX_CONF_FLAG,
+      NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_HTTP_LOC_CONF|NGX_CONF_TAKE1,
       ngx_conf_set_str_array_slot,
       NGX_HTTP_LOC_CONF_OFFSET,
       offsetof(ngx_http_fastcgi_loc_conf_t, catch_stderr),
@@ -737,7 +741,15 @@ ngx_http_fastcgi_create_request(ngx_http
         lowcase_key = NULL;
 
         if (flcf->header_params) {
-            ignored = ngx_palloc(r->pool, flcf->header_params * sizeof(void *));
+            n = 0;
+            part = &r->headers_in.headers.part;
+
+            while (part) {
+                n += part->nelts;
+                part = part->next;
+            }
+
+            ignored = ngx_palloc(r->pool, n * sizeof(void *));
             if (ignored == NULL) {
                 return NGX_ERROR;
             }
@@ -1434,10 +1446,10 @@ ngx_http_fastcgi_process_header(ngx_http
                     h->lowcase_key = h->key.data + h->key.len + 1
                                      + h->value.len + 1;
 
-                    ngx_cpystrn(h->key.data, r->header_name_start,
-                                h->key.len + 1);
-                    ngx_cpystrn(h->value.data, r->header_start,
-                                h->value.len + 1);
+                    ngx_memcpy(h->key.data, r->header_name_start, h->key.len);
+                    h->key.data[h->key.len] = '\0';
+                    ngx_memcpy(h->value.data, r->header_start, h->value.len);
+                    h->value.data[h->value.len] = '\0';
                 }
 
                 h->hash = r->header_hash;
@@ -1695,8 +1707,10 @@ ngx_http_fastcgi_input_filter(ngx_event_
         }
 
         if (p->free) {
-            b = p->free->buf;
-            p->free = p->free->next;
+            cl = p->free;
+            b = cl->buf;
+            p->free = cl->next;
+            ngx_free_chain(p->pool, cl);
 
         } else {
             b = ngx_alloc_buf(p->pool);
@@ -2003,6 +2017,8 @@ ngx_http_fastcgi_create_loc_conf(ngx_con
 
     conf->catch_stderr = NGX_CONF_UNSET_PTR;
 
+    ngx_str_set(&conf->upstream.module, "fastcgi");
+
     return conf;
 }
 
@@ -2013,17 +2029,9 @@ ngx_http_fastcgi_merge_loc_conf(ngx_conf
     ngx_http_fastcgi_loc_conf_t *prev = parent;
     ngx_http_fastcgi_loc_conf_t *conf = child;
 
-    u_char                       *p;
     size_t                        size;
-    uintptr_t                    *code;
-    ngx_uint_t                    i;
-    ngx_array_t                   headers_names;
-    ngx_keyval_t                 *src;
-    ngx_hash_key_t               *hk;
     ngx_hash_init_t               hash;
     ngx_http_core_loc_conf_t     *clcf;
-    ngx_http_script_compile_t     sc;
-    ngx_http_script_copy_code_t  *copy;
 
     if (conf->upstream.store != 0) {
         ngx_conf_merge_value(conf->upstream.store,
@@ -2207,6 +2215,10 @@ ngx_http_fastcgi_merge_loc_conf(ngx_conf
                                          |NGX_HTTP_UPSTREAM_FT_OFF;
     }
 
+    if (conf->upstream.cache_use_stale & NGX_HTTP_UPSTREAM_FT_ERROR) {
+        conf->upstream.cache_use_stale |= NGX_HTTP_UPSTREAM_FT_NOLIVE;
+    }
+
     if (conf->upstream.cache_methods == 0) {
         conf->upstream.cache_methods = prev->upstream.cache_methods;
     }
@@ -2281,95 +2293,146 @@ ngx_http_fastcgi_merge_loc_conf(ngx_conf
     }
 #endif
 
-    if (conf->params_source == NULL) {
-        conf->flushes = prev->flushes;
-        conf->params_len = prev->params_len;
-        conf->params = prev->params;
-        conf->params_source = prev->params_source;
-        conf->headers_hash = prev->headers_hash;
+    if (ngx_http_fastcgi_merge_params(cf, conf, prev) != NGX_OK) {
+        return NGX_CONF_ERROR;
+    }
 
-#if (NGX_HTTP_CACHE)
+    return NGX_CONF_OK;
+}
 
-        if (conf->params_source == NULL) {
 
-            if ((conf->upstream.cache == NULL)
-                == (prev->upstream.cache == NULL))
-            {
-                return NGX_CONF_OK;
-            }
+static ngx_int_t
+ngx_http_fastcgi_merge_params(ngx_conf_t *cf,
+    ngx_http_fastcgi_loc_conf_t *conf, ngx_http_fastcgi_loc_conf_t *prev)
+{
+    u_char                       *p;
+    size_t                        size;
+    uintptr_t                    *code;
+    ngx_uint_t                    i, nsrc;
+    ngx_array_t                   headers_names;
+#if (NGX_HTTP_CACHE)
+    ngx_array_t                   params_merged;
+#endif
+    ngx_keyval_t                 *src;
+    ngx_hash_key_t               *hk;
+    ngx_hash_init_t               hash;
+    ngx_http_script_compile_t     sc;
+    ngx_http_script_copy_code_t  *copy;
 
-            /* 6 is a number of ngx_http_fastcgi_cache_headers entries */
-            conf->params_source = ngx_array_create(cf->pool, 6,
-                                                   sizeof(ngx_keyval_t));
-            if (conf->params_source == NULL) {
-                return NGX_CONF_ERROR;
-            }
-        }
-#else
+    if (conf->params_source == NULL) {
+        conf->params_source = prev->params_source;
+
+        if (prev->headers_hash.buckets
+#if (NGX_HTTP_CACHE)
+            && ((conf->upstream.cache == NULL) == (prev->upstream.cache == NULL))
+#endif
+           )
+        {
+            conf->flushes = prev->flushes;
+            conf->params_len = prev->params_len;
+            conf->params = prev->params;
+            conf->headers_hash = prev->headers_hash;
+            conf->header_params = prev->header_params;
 
-        if (conf->params_source == NULL) {
-            return NGX_CONF_OK;
+            return NGX_OK;
         }
+    }
 
+    if (conf->params_source == NULL
+#if (NGX_HTTP_CACHE)
+        && (conf->upstream.cache == NULL)
 #endif
+       )
+    {
+        conf->headers_hash.buckets = (void *) 1;
+        return NGX_OK;
     }
 
     conf->params_len = ngx_array_create(cf->pool, 64, 1);
     if (conf->params_len == NULL) {
-        return NGX_CONF_ERROR;
+        return NGX_ERROR;
     }
 
     conf->params = ngx_array_create(cf->pool, 512, 1);
     if (conf->params == NULL) {
-        return NGX_CONF_ERROR;
+        return NGX_ERROR;
     }
 
     if (ngx_array_init(&headers_names, cf->temp_pool, 4, sizeof(ngx_hash_key_t))
         != NGX_OK)
     {
-        return NGX_CONF_ERROR;
+        return NGX_ERROR;
     }
 
-    src = conf->params_source->elts;
+    if (conf->params_source) {
+        src = conf->params_source->elts;
+        nsrc = conf->params_source->nelts;
+
+    } else {
+        src = NULL;
+        nsrc = 0;
+    }
 
 #if (NGX_HTTP_CACHE)
 
     if (conf->upstream.cache) {
         ngx_keyval_t  *h, *s;
 
-        for (h = ngx_http_fastcgi_cache_headers; h->key.len; h++) {
+        if (ngx_array_init(&params_merged, cf->temp_pool, 4, sizeof(ngx_keyval_t))
+            != NGX_OK)
+        {
+            return NGX_ERROR;
+        }
+
+        for (i = 0; i < nsrc; i++) {
+
+            s = ngx_array_push(&params_merged);
+            if (s == NULL) {
+                return NGX_ERROR;
+            }
+
+            *s = src[i];
+        }
+
+        h = ngx_http_fastcgi_cache_headers;
 
-            for (i = 0; i < conf->params_source->nelts; i++) {
+        while (h->key.len) {
+
+            src = params_merged.elts;
+            nsrc = params_merged.nelts;
+
+            for (i = 0; i < nsrc; i++) {
                 if (ngx_strcasecmp(h->key.data, src[i].key.data) == 0) {
                     goto next;
                 }
             }
 
-            s = ngx_array_push(conf->params_source);
+            s = ngx_array_push(&params_merged);
             if (s == NULL) {
-                return NGX_CONF_ERROR;
+                return NGX_ERROR;
             }
 
             *s = *h;
 
-            src = conf->params_source->elts;
-
         next:
 
             h++;
         }
+
+        src = params_merged.elts;
+        nsrc = params_merged.nelts;
     }
 
 #endif
 
-    for (i = 0; i < conf->params_source->nelts; i++) {
+    for (i = 0; i < nsrc; i++) {
 
         if (src[i].key.len > sizeof("HTTP_") - 1
             && ngx_strncmp(src[i].key.data, "HTTP_", sizeof("HTTP_") - 1) == 0)
         {
             hk = ngx_array_push(&headers_names);
             if (hk == NULL) {
-                return NGX_CONF_ERROR;
+                return NGX_ERROR;
             }
 
             hk->key.len = src[i].key.len - 5;
@@ -2385,7 +2448,7 @@ ngx_http_fastcgi_merge_loc_conf(ngx_conf
         copy = ngx_array_push_n(conf->params_len,
                                 sizeof(ngx_http_script_copy_code_t));
         if (copy == NULL) {
-            return NGX_CONF_ERROR;
+            return NGX_ERROR;
         }
 
         copy->code = (ngx_http_script_code_pt) ngx_http_script_copy_len_code;
@@ -2394,11 +2457,11 @@ ngx_http_fastcgi_merge_loc_conf(ngx_conf
 
         size = (sizeof(ngx_http_script_copy_code_t)
                 + src[i].key.len + sizeof(uintptr_t) - 1)
-                & ~(sizeof(uintptr_t) - 1);
+               & ~(sizeof(uintptr_t) - 1);
 
         copy = ngx_array_push_n(conf->params, size);
         if (copy == NULL) {
-            return NGX_CONF_ERROR;
+            return NGX_ERROR;
         }
 
         copy->code = ngx_http_script_copy_code;
@@ -2417,12 +2480,12 @@ ngx_http_fastcgi_merge_loc_conf(ngx_conf
         sc.values = &conf->params;
 
         if (ngx_http_script_compile(&sc) != NGX_OK) {
-            return NGX_CONF_ERROR;
+            return NGX_ERROR;
         }
 
         code = ngx_array_push_n(conf->params_len, sizeof(uintptr_t));
         if (code == NULL) {
-            return NGX_CONF_ERROR;
+            return NGX_ERROR;
         }
 
         *code = (uintptr_t) NULL;
@@ -2430,7 +2493,7 @@ ngx_http_fastcgi_merge_loc_conf(ngx_conf
 
         code = ngx_array_push_n(conf->params, sizeof(uintptr_t));
         if (code == NULL) {
-            return NGX_CONF_ERROR;
+            return NGX_ERROR;
         }
 
         *code = (uintptr_t) NULL;
@@ -2438,12 +2501,11 @@ ngx_http_fastcgi_merge_loc_conf(ngx_conf
 
     code = ngx_array_push_n(conf->params_len, sizeof(uintptr_t));
     if (code == NULL) {
-        return NGX_CONF_ERROR;
+        return NGX_ERROR;
     }
 
     *code = (uintptr_t) NULL;
 
-
     conf->header_params = headers_names.nelts;
 
     hash.hash = &conf->headers_hash;
@@ -2454,12 +2516,7 @@ ngx_http_fastcgi_merge_loc_conf(ngx_conf
     hash.pool = cf->pool;
     hash.temp_pool = NULL;
 
-    if (ngx_hash_init(&hash, headers_names.elts, headers_names.nelts) != NGX_OK)
-    {
-        return NGX_CONF_ERROR;
-    }
-
-    return NGX_CONF_OK;
+    return ngx_hash_init(&hash, headers_names.elts, headers_names.nelts);
 }
 
 
--- nginx-1.0.0.orig/src/http/modules/ngx_http_addition_filter_module.c
+++ nginx-1.0.0/src/http/modules/ngx_http_addition_filter_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/http/modules/perl/nginx.pm
+++ nginx-1.0.0/src/http/modules/perl/nginx.pm
@@ -21,7 +21,9 @@ our @EXPORT = qw(
     HTTP_MOVED_PERMANENTLY
     HTTP_MOVED_TEMPORARILY
     HTTP_REDIRECT
+    HTTP_SEE_OTHER
     HTTP_NOT_MODIFIED
+    HTTP_TEMPORARY_REDIRECT
 
     HTTP_BAD_REQUEST
     HTTP_UNAUTHORIZED
@@ -48,7 +50,7 @@ our @EXPORT = qw(
     HTTP_INSUFFICIENT_STORAGE
 );
 
-our $VERSION = '1.0.0';
+our $VERSION = '1.0.14';
 
 require XSLoader;
 XSLoader::load('nginx', $VERSION);
@@ -67,7 +69,9 @@ use constant HTTP_PARTIAL_CONTENT       
 use constant HTTP_MOVED_PERMANENTLY         => 301;
 use constant HTTP_MOVED_TEMPORARILY         => 302;
 use constant HTTP_REDIRECT                  => 302;
+use constant HTTP_SEE_OTHER                 => 303;
 use constant HTTP_NOT_MODIFIED              => 304;
+use constant HTTP_TEMPORARY_REDIRECT        => 307;
 
 use constant HTTP_BAD_REQUEST               => 400;
 use constant HTTP_UNAUTHORIZED              => 401;
--- nginx-1.0.0.orig/src/http/modules/perl/ngx_http_perl_module.c
+++ nginx-1.0.0/src/http/modules/perl/ngx_http_perl_module.c
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/src/http/modules/perl/nginx.xs
+++ nginx-1.0.0/src/http/modules/perl/nginx.xs
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
@@ -474,6 +475,13 @@ header_out(r, key, value)
         r->headers_out.content_length = header;
     }
 
+    if (header->key.len == sizeof("Content-Encoding") - 1
+        && ngx_strncasecmp(header->key.data, "Content-Encoding",
+                           sizeof("Content-Encoding") - 1) == 0)
+    {
+        r->headers_out.content_encoding = header;
+    }
+
 
 void
 filename(r)
@@ -836,7 +844,7 @@ variable(r, name, value = NULL)
     var.len = len;
     var.data = lowcase;
 
-    #if (NGX_LOG_DEBUG)
+    #if (NGX_DEBUG)
 
     if (value) {
         ngx_log_debug2(NGX_LOG_DEBUG_HTTP, r->connection->log, 0,
--- nginx-1.0.0.orig/src/http/modules/perl/Makefile.PL
+++ nginx-1.0.0/src/http/modules/perl/Makefile.PL
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 use 5.006001;
 use ExtUtils::MakeMaker;
@@ -24,7 +25,11 @@ WriteMakefile(
                          "-I ../../../../../$ENV{NGX_OBJS} " .
                          ($ENV{NGX_PCRE} =~ /^(YES|NO)/ ? "" :
                              ($ENV{NGX_PCRE} =~ m#^/# ? "-I $ENV{NGX_PCRE} " :
-                                  "-I ../../../../../$ENV{NGX_PCRE} ")),
+                                  "-I ../../../../../$ENV{NGX_PCRE} ")) .
+                         ($ENV{NGX_OPENSSL} =~ /^(YES|NO)/ ? "" :
+                             ($ENV{NGX_OPENSSL} =~ m#^/# ?
+                                  "-I $ENV{NGX_OPENSSL}/.openssl/include " :
+                      "-I ../../../../../$ENV{NGX_OPENSSL}/.openssl/include ")),
 
     depend => {
         'nginx.c'     =>
--- nginx-1.0.0.orig/src/http/modules/perl/ngx_http_perl_module.h
+++ nginx-1.0.0/src/http/modules/perl/ngx_http_perl_module.h
@@ -1,6 +1,7 @@
 
 /*
  * Copyright (C) Igor Sysoev
+ * Copyright (C) Nginx, Inc.
  */
 
 
--- nginx-1.0.0.orig/man/nginx.8
+++ nginx-1.0.0/man/nginx.8
@@ -1,5 +1,6 @@
 .\"
 .\" Copyright (c) 2010 Sergey A. Osokin
+.\" Copyright (c) 2011,2012 Nginx, Inc.
 .\" All rights reserved.
 .\"
 .\" Redistribution and use in source and binary forms, with or without
@@ -24,7 +25,7 @@
 .\" SUCH DAMAGE.
 .\"
 .\"
-.Dd November 14, 2010
+.Dd August 10, 2011
 .Dt NGINX 8
 .Os
 .Sh NAME
@@ -177,25 +178,25 @@ Test configuration file
 .Pa ~/mynginx.conf
 with global directives for PID and quantity of worker processes.
 .Sh SEE ALSO
-.Xr nginx.conf 5
+.\"Xr nginx.conf 5
+.\"Pp
+Documentation at
+.Pa http://nginx.org/
+and
+.Pa http://sysoev.ru/nginx/ .
+.Pp
+For questions and technical support, please refer to
+.Pa http://nginx.org/en/support.html .
 .Sh HISTORY
 Development of
 .Nm
 started in 2002, with the first public release on October 4, 2004.
 .Sh AUTHORS
+.An -nosplit
 .An Igor Sysoev Aq igor@sysoev.ru
 .Pp
-Documentation available on
-.Pa http://nginx.org/
-and
-.Pa http://sysoev.ru/nginx/ .
-.Pp
 This manual page was written by
 .An Sergey A. Osokin Aq osa@FreeBSD.org.ru
 as a result of compilation of many
 .Nm
 documents all over the world.
-.Sh BUGS
-Report to mailing list
-.Aq Li nginx@nginx.org
-if you found one.
--- nginx-1.0.0.orig/auto/make
+++ nginx-1.0.0/auto/make
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 echo "creating $NGX_MAKEFILE"
--- nginx-1.0.0.orig/auto/have
+++ nginx-1.0.0/auto/have
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 cat << END >> $NGX_AUTO_CONFIG_H
--- nginx-1.0.0.orig/auto/stubs
+++ nginx-1.0.0/auto/stubs
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 have=NGX_SUPPRESS_WARN . auto/have
--- nginx-1.0.0.orig/auto/summary
+++ nginx-1.0.0/auto/summary
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 ### STUB
@@ -51,6 +52,7 @@ esac
 case $MD5 in
     YES)   echo "  + md5: using $MD5_LIB library" ;;
     NONE)  echo "  + md5 library is not used" ;;
+    NO)    echo "  + using builtin md5 code" ;;
     *)     echo "  + using md5 library: $MD5" ;;
 esac
 
--- nginx-1.0.0.orig/auto/install
+++ nginx-1.0.0/auto/install
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 if [ $USE_PERL = YES ]; then
@@ -53,7 +54,7 @@ esac
 
 
 case ".$NGX_ERROR_LOG_PATH" in
-    ./*)
+    ./* | .)
     ;;
 
     *)
@@ -72,14 +73,28 @@ case ".$NGX_HTTP_LOG_PATH" in
 esac
 
 
+if test -f man/nginx.8 ; then
+    NGX_MAN=man/nginx.8
+else
+    NGX_MAN=docs/man/nginx.8
+fi
+
+if test -d html ; then
+    NGX_HTML=html
+else
+    NGX_HTML=docs/html
+fi
+
 cat << END                                                    >> $NGX_MAKEFILE
 
-manpage:
+manpage:	$NGX_OBJS/nginx.8
+
+$NGX_OBJS/nginx.8:	$NGX_MAN $NGX_AUTO_CONFIG_H
 	sed -e "s|%%PREFIX%%|$NGX_PREFIX|" \\
 		-e "s|%%PID_PATH%%|$NGX_PID_PATH|" \\
 		-e "s|%%CONF_PATH%%|$NGX_CONF_PATH|" \\
-		-e "s|%%ERROR_LOG_PATH%%|$NGX_ERROR_LOG_PATH|" \\
-		< man/nginx.8 > $NGX_OBJS/nginx.8
+		-e "s|%%ERROR_LOG_PATH%%|${NGX_ERROR_LOG_PATH:-stderr}|" \\
+		< $NGX_MAN > \$@
 
 install:	$NGX_OBJS${ngx_dirsep}nginx${ngx_binext} \
 		$NGX_INSTALL_PERL_MODULES
@@ -133,11 +148,11 @@ install:	$NGX_OBJS${ngx_dirsep}nginx${ng
 		mkdir -p '\$(DESTDIR)`dirname "$NGX_HTTP_LOG_PATH"`'
 
 	test -d '\$(DESTDIR)$NGX_PREFIX/html' \
-		|| cp -r html '\$(DESTDIR)$NGX_PREFIX'
+		|| cp -R $NGX_HTML '\$(DESTDIR)$NGX_PREFIX'
 END
 
 
-if test -n "\$(DESTDIR)$NGX_ERROR_LOG_PATH"; then
+if test -n "$NGX_ERROR_LOG_PATH"; then
     cat << END                                                >> $NGX_MAKEFILE
 
 	test -d '\$(DESTDIR)`dirname "$NGX_ERROR_LOG_PATH"`' || \
--- nginx-1.0.0.orig/auto/feature
+++ nginx-1.0.0/auto/feature
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 echo $ngx_n "checking for $ngx_feature ...$ngx_c"
@@ -52,7 +53,7 @@ if [ -x $NGX_AUTOTEST ]; then
 
         yes)
             # /bin/sh is used to intercept "Killed" or "Abort trap" messages
-            if /bin/sh -c $NGX_AUTOTEST >/dev/null 2>&1; then
+            if /bin/sh -c $NGX_AUTOTEST >> $NGX_AUTOCONF_ERR 2>&1; then
                 echo " found"
                 ngx_found=yes
 
@@ -67,7 +68,7 @@ if [ -x $NGX_AUTOTEST ]; then
 
         value)
             # /bin/sh is used to intercept "Killed" or "Abort trap" messages
-            if /bin/sh -c $NGX_AUTOTEST >/dev/null 2>&1; then
+            if /bin/sh -c $NGX_AUTOTEST >> $NGX_AUTOCONF_ERR 2>&1; then
                 echo " found"
                 ngx_found=yes
 
@@ -85,7 +86,7 @@ END
 
         bug)
             # /bin/sh is used to intercept "Killed" or "Abort trap" messages
-            if /bin/sh -c $NGX_AUTOTEST >/dev/null 2>&1; then
+            if /bin/sh -c $NGX_AUTOTEST >> $NGX_AUTOCONF_ERR 2>&1; then
                 echo " not found"
 
             else
--- nginx-1.0.0.orig/auto/define
+++ nginx-1.0.0/auto/define
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 cat << END >> $NGX_AUTO_CONFIG_H
--- nginx-1.0.0.orig/auto/endianess
+++ nginx-1.0.0/auto/endianess
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 echo $ngx_n "checking for system endianess ...$ngx_c"
--- nginx-1.0.0.orig/auto/have_headers
+++ nginx-1.0.0/auto/have_headers
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 cat << END >> $NGX_AUTO_HEADERS_H
--- nginx-1.0.0.orig/auto/init
+++ nginx-1.0.0/auto/init
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 NGX_MAKEFILE=$NGX_OBJS/Makefile
--- nginx-1.0.0.orig/auto/include
+++ nginx-1.0.0/auto/include
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 echo $ngx_n "checking for $ngx_include ...$ngx_c"
--- nginx-1.0.0.orig/auto/headers
+++ nginx-1.0.0/auto/headers
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 ngx_include="unistd.h";      . auto/include
--- nginx-1.0.0.orig/auto/unix
+++ nginx-1.0.0/auto/unix
@@ -1,5 +1,390 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
+
+
+NGX_USER=${NGX_USER:-nobody}
+
+if [ -z "$NGX_GROUP" ]; then
+    if [ $NGX_USER = nobody ]; then
+        if grep nobody /etc/group 2>&1 >/dev/null; then
+            echo "checking for nobody group ... found"
+            NGX_GROUP=nobody
+        else
+            echo "checking for nobody group ... not found"
+
+            if grep nogroup /etc/group 2>&1 >/dev/null; then
+                echo "checking for nogroup group ... found"
+                NGX_GROUP=nogroup
+            else
+                echo "checking for nogroup group ... not found"
+                NGX_GROUP=nobody
+            fi
+        fi
+    else
+        NGX_GROUP=$NGX_USER
+    fi
+fi
+
+
+ngx_feature="poll()"
+ngx_feature_name=
+ngx_feature_run=no
+ngx_feature_incs="#include <poll.h>"
+ngx_feature_path=
+ngx_feature_libs=
+ngx_feature_test="int  n, dp; struct pollfd  pl;
+                  dp = 0;
+                  pl.fd = 0;
+                  pl.events = 0;
+                  pl.revents = 0;
+                  n = poll(&pl, 1, 0)"
+. auto/feature
+
+if [ $ngx_found = no ]; then
+    EVENT_POLL=NONE
+fi
+
+
+ngx_feature="/dev/poll"
+ngx_feature_name="NGX_HAVE_DEVPOLL"
+ngx_feature_run=no
+ngx_feature_incs="#include <sys/devpoll.h>"
+ngx_feature_path=
+ngx_feature_libs=
+ngx_feature_test="int  n, dp; struct dvpoll  dvp;
+                  dp = 0;
+                  dvp.dp_fds = NULL;
+                  dvp.dp_nfds = 0;
+                  dvp.dp_timeout = 0;
+                  n = ioctl(dp, DP_POLL, &dvp)"
+. auto/feature
+
+if [ $ngx_found = yes ]; then
+    CORE_SRCS="$CORE_SRCS $DEVPOLL_SRCS"
+    EVENT_MODULES="$EVENT_MODULES $DEVPOLL_MODULE"
+    EVENT_FOUND=YES
+fi
+
+
+if test -z "$NGX_KQUEUE_CHECKED"; then
+    ngx_feature="kqueue"
+    ngx_feature_name="NGX_HAVE_KQUEUE"
+    ngx_feature_run=no
+    ngx_feature_incs="#include <sys/event.h>"
+    ngx_feature_path=
+    ngx_feature_libs=
+    ngx_feature_test="int kq; kq = kqueue()"
+    . auto/feature
+
+    if [ $ngx_found = yes ]; then
+
+        have=NGX_HAVE_CLEAR_EVENT . auto/have
+        EVENT_MODULES="$EVENT_MODULES $KQUEUE_MODULE"
+        CORE_SRCS="$CORE_SRCS $KQUEUE_SRCS"
+        EVENT_FOUND=YES
+
+        ngx_feature="kqueue's NOTE_LOWAT"
+        ngx_feature_name="NGX_HAVE_LOWAT_EVENT"
+        ngx_feature_run=no
+        ngx_feature_incs="#include <sys/event.h>"
+        ngx_feature_path=
+        ngx_feature_libs=
+        ngx_feature_test="struct kevent  kev;
+                          kev.fflags = NOTE_LOWAT;"
+        . auto/feature
+
+
+        ngx_feature="kqueue's EVFILT_TIMER"
+        ngx_feature_name="NGX_HAVE_TIMER_EVENT"
+        ngx_feature_run=yes
+        ngx_feature_incs="#include <sys/event.h>
+                          #include <sys/time.h>"
+        ngx_feature_path=
+        ngx_feature_libs=
+        ngx_feature_test="int      kq;
+                  struct kevent    kev;
+                  struct timespec  ts;
+
+                  if ((kq = kqueue()) == -1) return 1;
+
+                  kev.ident = 0;
+                  kev.filter = EVFILT_TIMER;
+                  kev.flags = EV_ADD|EV_ENABLE;
+                  kev.fflags = 0;
+                  kev.data = 1000;
+                  kev.udata = 0;
+
+                  ts.tv_sec = 0;
+                  ts.tv_nsec = 0;
+
+                  if (kevent(kq, &kev, 1, &kev, 1, &ts) == -1) return 1;
+
+                  if (kev.flags & EV_ERROR) return 1;"
+
+        . auto/feature
+    fi
+fi
+
+
+if [ "$NGX_SYSTEM" = "NetBSD" ]; then
+
+    # NetBSD 2.0 incompatibly defines kevent.udata as "intptr_t"
+
+    cat << END >> $NGX_AUTO_CONFIG_H
+
+#define NGX_KQUEUE_UDATA_T
+
+END
+
+else
+    cat << END >> $NGX_AUTO_CONFIG_H
+
+#define NGX_KQUEUE_UDATA_T  (void *)
+
+END
+
+fi
+
+
+ngx_feature="crypt()"
+ngx_feature_name=
+ngx_feature_run=no
+ngx_feature_incs=
+ngx_feature_path=
+ngx_feature_libs=
+ngx_feature_test="crypt(\"test\", \"salt\");"
+. auto/feature
+
+
+if [ $ngx_found = no ]; then
+
+    ngx_feature="crypt() in libcrypt"
+    ngx_feature_name=
+    ngx_feature_run=no
+    ngx_feature_incs=
+    ngx_feature_path=
+    ngx_feature_libs=-lcrypt
+    . auto/feature
+
+    if [ $ngx_found = yes ]; then
+        CRYPT_LIB="-lcrypt"
+    fi
+fi
+
+
+ngx_feature="F_READAHEAD"
+ngx_feature_name="NGX_HAVE_F_READAHEAD"
+ngx_feature_run=no
+ngx_feature_incs="#include <fcntl.h>"
+ngx_feature_path=
+ngx_feature_libs=
+ngx_feature_test="fcntl(0, F_READAHEAD, 1);"
+. auto/feature
+
+
+ngx_feature="posix_fadvise()"
+ngx_feature_name="NGX_HAVE_POSIX_FADVISE"
+ngx_feature_run=no
+ngx_feature_incs="#include <fcntl.h>"
+ngx_feature_path=
+ngx_feature_libs=
+ngx_feature_test="posix_fadvise(0, 0, 0, POSIX_FADV_SEQUENTIAL);"
+. auto/feature
+
+
+ngx_feature="O_DIRECT"
+ngx_feature_name="NGX_HAVE_O_DIRECT"
+ngx_feature_run=no
+ngx_feature_incs="#include <fcntl.h>"
+ngx_feature_path=
+ngx_feature_libs=
+ngx_feature_test="fcntl(0, F_SETFL, O_DIRECT);"
+. auto/feature
+
+
+if [ $ngx_found = yes -a "$NGX_SYSTEM" = "Linux" ]; then
+    have=NGX_HAVE_ALIGNED_DIRECTIO . auto/have
+fi
+
+ngx_feature="F_NOCACHE"
+ngx_feature_name="NGX_HAVE_F_NOCACHE"
+ngx_feature_run=no
+ngx_feature_incs="#include <fcntl.h>"
+ngx_feature_path=
+ngx_feature_libs=
+ngx_feature_test="fcntl(0, F_NOCACHE, 1);"
+. auto/feature
+
+
+ngx_feature="directio()"
+ngx_feature_name="NGX_HAVE_DIRECTIO"
+ngx_feature_run=no
+ngx_feature_incs="#include <sys/types.h>
+                  #include <sys/fcntl.h>"
+ngx_feature_path=
+ngx_feature_libs=
+ngx_feature_test="directio(0, DIRECTIO_ON);"
+. auto/feature
+
+
+ngx_feature="statfs()"
+ngx_feature_name="NGX_HAVE_STATFS"
+ngx_feature_run=no
+ngx_feature_incs="$NGX_INCLUDE_SYS_PARAM_H
+                  $NGX_INCLUDE_SYS_MOUNT_H
+                  $NGX_INCLUDE_SYS_VFS_H"
+ngx_feature_path=
+ngx_feature_libs=
+ngx_feature_test="struct statfs  fs;
+                  statfs(NULL, &fs);"
+. auto/feature
+
+
+ngx_feature="statvfs()"
+ngx_feature_name="NGX_HAVE_STATVFS"
+ngx_feature_run=no
+ngx_feature_incs="#include <sys/types.h>
+                  #include <sys/statvfs.h>"
+ngx_feature_path=
+ngx_feature_libs=
+ngx_feature_test="struct statvfs  fs;
+                  statvfs(NULL, &fs);"
+. auto/feature
+
+
+ngx_feature="dlopen()"
+ngx_feature_name=
+ngx_feature_run=no
+ngx_feature_incs="#include <dlfcn.h>"
+ngx_feature_path=
+ngx_feature_libs=
+ngx_feature_test="dlopen(NULL, 0)"
+. auto/feature
+
+
+if [ $ngx_found != yes ]; then
+
+    ngx_feature="dlopen() in libdl"
+    ngx_feature_libs="-ldl"
+    . auto/feature
+
+    if [ $ngx_found = yes ]; then
+        NGX_LIBDL="-ldl"
+    fi
+fi
+
+
+ngx_feature="sched_yield()"
+ngx_feature_name="NGX_HAVE_SCHED_YIELD"
+ngx_feature_run=no
+ngx_feature_incs="#include <sched.h>"
+ngx_feature_path=
+ngx_feature_libs=
+ngx_feature_test="sched_yield()"
+. auto/feature
+
+
+if [ $ngx_found != yes ]; then
+
+    ngx_feature="sched_yield() in librt"
+    ngx_feature_libs="-lrt"
+    . auto/feature
+
+    if [ $ngx_found = yes ]; then
+        CORE_LIBS="$CORE_LIBS -lrt"
+    fi
+fi
+
+
+ngx_feature="SO_SETFIB"
+ngx_feature_name="NGX_HAVE_SETFIB"
+ngx_feature_run=no
+ngx_feature_incs="#include <sys/socket.h>"
+ngx_feature_path=
+ngx_feature_libs=
+ngx_feature_test="setsockopt(0, SOL_SOCKET, SO_SETFIB, NULL, 4)"
+. auto/feature
+
+
+ngx_feature="SO_ACCEPTFILTER"
+ngx_feature_name="NGX_HAVE_DEFERRED_ACCEPT"
+ngx_feature_run=no
+ngx_feature_incs="#include <sys/socket.h>"
+ngx_feature_path=
+ngx_feature_libs=
+ngx_feature_test="setsockopt(0, SOL_SOCKET, SO_ACCEPTFILTER, NULL, 0)"
+. auto/feature
+
+
+ngx_feature="TCP_DEFER_ACCEPT"
+ngx_feature_name="NGX_HAVE_DEFERRED_ACCEPT"
+ngx_feature_run=no
+ngx_feature_incs="#include <sys/socket.h>
+                  #include <netinet/in.h>
+                  #include <netinet/tcp.h>"
+ngx_feature_path=
+ngx_feature_libs=
+ngx_feature_test="setsockopt(0, IPPROTO_TCP, TCP_DEFER_ACCEPT, NULL, 0)"
+. auto/feature
+
+
+ngx_feature="accept4()"
+ngx_feature_name="NGX_HAVE_ACCEPT4"
+ngx_feature_run=no
+ngx_feature_incs="#include <sys/socket.h>"
+ngx_feature_path=
+ngx_feature_libs=
+ngx_feature_test="accept4(0, NULL, NULL, SOCK_NONBLOCK)"
+. auto/feature
+
+if [ $NGX_FILE_AIO = YES ]; then
+
+    ngx_feature="kqueue AIO support"
+    ngx_feature_name="NGX_HAVE_FILE_AIO"
+    ngx_feature_run=no
+    ngx_feature_incs="#include <aio.h>"
+    ngx_feature_path=
+    ngx_feature_libs=
+    ngx_feature_test="int  n; struct aiocb  iocb;
+                      iocb.aio_sigevent.sigev_notify = SIGEV_KEVENT;
+                      n = aio_read(&iocb)"
+    . auto/feature
+
+    if [ $ngx_found = yes ]; then
+        CORE_SRCS="$CORE_SRCS $FILE_AIO_SRCS"
+
+    elif [ $ngx_found = no ]; then
+
+        ngx_feature="Linux AIO support"
+        ngx_feature_name="NGX_HAVE_FILE_AIO"
+        ngx_feature_run=no
+        ngx_feature_incs="#include <linux/aio_abi.h>
+                          #include <sys/syscall.h>"
+        ngx_feature_path=
+        ngx_feature_libs=
+        ngx_feature_test="int  n = SYS_eventfd;
+                          struct iocb  iocb;
+                          iocb.aio_lio_opcode = IOCB_CMD_PREAD;
+                          iocb.aio_flags = IOCB_FLAG_RESFD;
+                          iocb.aio_resfd = -1;"
+        . auto/feature
+
+        if [ $ngx_found = yes ]; then
+            have=NGX_HAVE_EVENTFD . auto/have
+            CORE_SRCS="$CORE_SRCS $LINUX_AIO_SRCS"
+
+        else
+            cat << END
+
+$0: no supported file AIO was found
+Currently file AIO is supported on FreeBSD 4.3+ and Linux 2.6.22+ only
+
+END
+           exit 1
+        fi
+    fi
+fi
 
 
 have=NGX_HAVE_UNIX_DOMAIN . auto/have
@@ -112,7 +497,8 @@ ngx_feature_test="char buf[1]; ssize_t n
 ngx_feature="sys_nerr"
 ngx_feature_name="NGX_SYS_NERR"
 ngx_feature_run=value
-ngx_feature_incs='#include <stdio.h>'
+ngx_feature_incs='#include <errno.h>
+                  #include <stdio.h>'
 ngx_feature_path=
 ngx_feature_libs=
 ngx_feature_test='printf("%d", sys_nerr);'
@@ -141,18 +527,23 @@ if [ $ngx_found = no ]; then
     ngx_feature_name=NGX_SYS_NERR
     ngx_feature_run=value
     ngx_feature_incs='#include <errno.h>
+                      #include <string.h>
                       #include <stdio.h>'
     ngx_feature_path=
     ngx_feature_libs=
     ngx_feature_test='int  n;
+                      char *p;
                       for (n = 1; n < 1000; n++) {
                           errno = 0;
-                          strerror(n);
-                          if (errno == EINVAL) {
-                              printf("%d", n);
-                              return 0;
+                          p = strerror(n);
+                          if (errno == EINVAL
+                              || p == NULL
+                              || strncmp(p, "Unknown error", 13) == 0)
+                          {
+                              break;
                           }
-                     }'
+                      }
+                      printf("%d", n);'
     . auto/feature
 fi
 
@@ -229,6 +620,44 @@ ngx_feature_test="int  id;
 . auto/feature
 
 
+ngx_feature="POSIX semaphores"
+ngx_feature_name="NGX_HAVE_POSIX_SEM"
+ngx_feature_run=yes
+ngx_feature_incs="#include <semaphore.h>"
+ngx_feature_path=
+ngx_feature_libs=
+ngx_feature_test="sem_t  sem;
+                  if (sem_init(&sem, 1, 0) == -1) return 1;
+                  sem_destroy(&sem);"
+. auto/feature
+
+
+if [ $ngx_found = no ]; then
+
+    # Linux has POSIX semaphores in libpthread
+    ngx_feature="POSIX semaphores in libpthread"
+    ngx_feature_libs=-lpthread
+    . auto/feature
+
+    if [ $ngx_found = yes ]; then
+        CORE_LIBS="$CORE_LIBS -lpthread"
+    fi
+fi
+
+
+if [ $ngx_found = no ]; then
+
+    # Solaris has POSIX semaphores in librt
+    ngx_feature="POSIX semaphores in librt"
+    ngx_feature_libs=-lrt
+    . auto/feature
+
+    if [ $ngx_found = yes ]; then
+        CORE_LIBS="$CORE_LIBS -lrt"
+    fi
+fi
+
+
 ngx_feature="struct msghdr.msg_control"
 ngx_feature_name="NGX_HAVE_MSGHDR_MSG_CONTROL"
 ngx_feature_run=no
@@ -278,3 +707,13 @@ ngx_feature_path=
 ngx_feature_libs=
 ngx_feature_test="struct dirent  dir; dir.d_type = DT_REG"
 . auto/feature
+
+
+ngx_feature="sysconf(_SC_NPROCESSORS_ONLN)"
+ngx_feature_name="NGX_HAVE_SC_NPROCESSORS_ONLN"
+ngx_feature_run=no
+ngx_feature_incs=
+ngx_feature_path=
+ngx_feature_libs=
+ngx_feature_test="sysconf(_SC_NPROCESSORS_ONLN)"
+. auto/feature
--- nginx-1.0.0.orig/auto/modules
+++ nginx-1.0.0/auto/modules
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 if [ $EVENT_SELECT = NO -a $EVENT_FOUND = NO ]; then
@@ -197,6 +198,8 @@ if [ $HTTP_RANDOM_INDEX = YES ]; then
 fi
 
 if [ $HTTP_AUTH_BASIC = YES ]; then
+    USE_MD5=YES
+    USE_SHA1=YES
     have=NGX_CRYPT . auto/have
     HTTP_MODULES="$HTTP_MODULES $HTTP_AUTH_BASIC_MODULE"
     HTTP_SRCS="$HTTP_SRCS $HTTP_AUTH_BASIC_SRCS"
@@ -332,6 +335,11 @@ if [ $HTTP_FLV = YES ]; then
     HTTP_SRCS="$HTTP_SRCS $HTTP_FLV_SRCS"
 fi
 
+if [ $HTTP_MP4 = YES ]; then
+    HTTP_MODULES="$HTTP_MODULES $HTTP_MP4_MODULE"
+    HTTP_SRCS="$HTTP_SRCS $HTTP_MP4_SRCS"
+fi
+
 if [ $HTTP_UPSTREAM_IP_HASH = YES ]; then
     HTTP_MODULES="$HTTP_MODULES $HTTP_UPSTREAM_IP_HASH_MODULE"
     HTTP_SRCS="$HTTP_SRCS $HTTP_UPSTREAM_IP_HASH_SRCS"
--- nginx-1.0.0.orig/auto/nohave
+++ nginx-1.0.0/auto/nohave
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 cat << END >> $NGX_AUTO_CONFIG_H
--- nginx-1.0.0.orig/auto/sources
+++ nginx-1.0.0/auto/sources
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 CORE_MODULES="ngx_core_module ngx_errlog_module ngx_conf_module"
@@ -22,6 +23,7 @@ CORE_DEPS="src/core/nginx.h \
            src/core/ngx_file.h \
            src/core/ngx_crc.h \
            src/core/ngx_crc32.h \
+           src/core/ngx_murmurhash.h \
            src/core/ngx_md5.h \
            src/core/ngx_sha1.h \
            src/core/ngx_rbtree.h \
@@ -33,7 +35,8 @@ CORE_DEPS="src/core/nginx.h \
            src/core/ngx_cycle.h \
            src/core/ngx_conf_file.h \
            src/core/ngx_resolver.h \
-           src/core/ngx_open_file_cache.h"
+           src/core/ngx_open_file_cache.h \
+           src/core/ngx_crypt.h"
 
 
 CORE_SRCS="src/core/nginx.c \
@@ -50,6 +53,8 @@ CORE_SRCS="src/core/nginx.c \
            src/core/ngx_inet.c \
            src/core/ngx_file.c \
            src/core/ngx_crc32.c \
+           src/core/ngx_murmurhash.c \
+           src/core/ngx_md5.c \
            src/core/ngx_rbtree.c \
            src/core/ngx_radix_tree.c \
            src/core/ngx_slab.c \
@@ -61,7 +66,8 @@ CORE_SRCS="src/core/nginx.c \
            src/core/ngx_cpuinfo.c \
            src/core/ngx_conf_file.c \
            src/core/ngx_resolver.c \
-           src/core/ngx_open_file_cache.c"
+           src/core/ngx_open_file_cache.c \
+           src/core/ngx_crypt.c"
 
 
 REGEX_DEPS=src/core/ngx_regex.h
@@ -458,6 +464,10 @@ HTTP_FLV_MODULE=ngx_http_flv_module
 HTTP_FLV_SRCS=src/http/modules/ngx_http_flv_module.c
 
 
+HTTP_MP4_MODULE=ngx_http_mp4_module
+HTTP_MP4_SRCS=src/http/modules/ngx_http_mp4_module.c
+
+
 HTTP_GZIP_STATIC_MODULE=ngx_http_gzip_static_module
 HTTP_GZIP_STATIC_SRCS=src/http/modules/ngx_http_gzip_static_module.c
 
--- nginx-1.0.0.orig/auto/options
+++ nginx-1.0.0/auto/options
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 help=no
@@ -92,6 +93,7 @@ HTTP_BROWSER=YES
 HTTP_SECURE_LINK=NO
 HTTP_DEGRADATION=NO
 HTTP_FLV=NO
+HTTP_MP4=NO
 HTTP_GZIP_STATIC=NO
 HTTP_UPSTREAM_IP_HASH=YES
 
@@ -201,6 +203,7 @@ do
         --with-http_sub_module)          HTTP_SUB=YES               ;;
         --with-http_dav_module)          HTTP_DAV=YES               ;;
         --with-http_flv_module)          HTTP_FLV=YES               ;;
+        --with-http_mp4_module)          HTTP_MP4=YES               ;;
         --with-http_gzip_static_module)  HTTP_GZIP_STATIC=YES       ;;
         --with-http_random_index_module) HTTP_RANDOM_INDEX=YES      ;;
         --with-http_secure_link_module)  HTTP_SECURE_LINK=YES       ;;
@@ -302,21 +305,21 @@ if [ $help = yes ]; then
 
 cat << END
 
-  --help                             this message
+  --help                             print this message
 
-  --prefix=PATH                      set the installation prefix
-  --sbin-path=PATH                   set path to the nginx binary file
-  --conf-path=PATH                   set path to the nginx.conf file
-  --error-log-path=PATH              set path to the error log
-  --pid-path=PATH                    set path to nginx.pid file
-  --lock-path=PATH                   set path to nginx.lock file
-
-  --user=USER                        set non-privilege user
-                                     for the worker processes
-  --group=GROUP                      set non-privilege group
-                                     for the worker processes
+  --prefix=PATH                      set installation prefix
+  --sbin-path=PATH                   set nginx binary pathname
+  --conf-path=PATH                   set nginx.conf pathname
+  --error-log-path=PATH              set error log pathname
+  --pid-path=PATH                    set nginx.pid pathname
+  --lock-path=PATH                   set nginx.lock pathname
+
+  --user=USER                        set non-privileged user for
+                                     worker processes
+  --group=GROUP                      set non-privileged group for
+                                     worker processes
 
-  --builddir=DIR                     set the build directory
+  --builddir=DIR                     set build directory
 
   --with-rtsig_module                enable rtsig module
   --with-select_module               enable select module
@@ -324,8 +327,8 @@ cat << END
   --with-poll_module                 enable poll module
   --without-poll_module              disable poll module
 
-  --with-file-aio                    enable file aio support
-  --with-ipv6                        enable ipv6 support
+  --with-file-aio                    enable file AIO support
+  --with-ipv6                        enable IPv6 support
 
   --with-http_ssl_module             enable ngx_http_ssl_module
   --with-http_realip_module          enable ngx_http_realip_module
@@ -336,6 +339,7 @@ cat << END
   --with-http_sub_module             enable ngx_http_sub_module
   --with-http_dav_module             enable ngx_http_dav_module
   --with-http_flv_module             enable ngx_http_flv_module
+  --with-http_mp4_module             enable ngx_http_mp4_module
   --with-http_gzip_static_module     enable ngx_http_gzip_static_module
   --with-http_random_index_module    enable ngx_http_random_index_module
   --with-http_secure_link_module     enable ngx_http_secure_link_module
@@ -367,17 +371,20 @@ cat << END
                                      disable ngx_http_upstream_ip_hash_module
 
   --with-http_perl_module            enable ngx_http_perl_module
-  --with-perl_modules_path=PATH      set path to the perl modules
-  --with-perl=PATH                   set path to the perl binary
+  --with-perl_modules_path=PATH      set Perl modules path
+  --with-perl=PATH                   set perl binary pathname
 
-  --http-log-path=PATH               set path to the http access log
-  --http-client-body-temp-path=PATH  set path to the http client request body
-                                     temporary files
-  --http-proxy-temp-path=PATH        set path to the http proxy temporary files
-  --http-fastcgi-temp-path=PATH      set path to the http fastcgi temporary
-                                     files
-  --http-uwsgi-temp-path=PATH        set path to the http uwsgi temporary files
-  --http-scgi-temp-path=PATH         set path to the http scgi temporary files
+  --http-log-path=PATH               set http access log pathname
+  --http-client-body-temp-path=PATH  set path to store
+                                     http client request body temporary files
+  --http-proxy-temp-path=PATH        set path to store
+                                     http proxy temporary files
+  --http-fastcgi-temp-path=PATH      set path to store
+                                     http fastcgi temporary files
+  --http-uwsgi-temp-path=PATH        set path to store
+                                     http uwsgi temporary files
+  --http-scgi-temp-path=PATH         set path to store
+                                     http scgi temporary files
 
   --without-http                     disable HTTP server
   --without-http-cache               disable HTTP cache
@@ -393,40 +400,40 @@ cat << END
 
   --add-module=PATH                  enable an external module
 
-  --with-cc=PATH                     set path to C compiler
-  --with-cpp=PATH                    set path to C preprocessor
-  --with-cc-opt=OPTIONS              set additional options for C compiler
-  --with-ld-opt=OPTIONS              set additional options for linker
-  --with-cpu-opt=CPU                 build for specified CPU, the valid values:
+  --with-cc=PATH                     set C compiler pathname
+  --with-cpp=PATH                    set C preprocessor pathname
+  --with-cc-opt=OPTIONS              set additional C compiler options
+  --with-ld-opt=OPTIONS              set additional linker options
+  --with-cpu-opt=CPU                 build for the specified CPU, valid values:
                                      pentium, pentiumpro, pentium3, pentium4,
                                      athlon, opteron, sparc32, sparc64, ppc64
 
   --without-pcre                     disable PCRE library usage
   --with-pcre                        force PCRE library usage
   --with-pcre=DIR                    set path to PCRE library sources
-  --with-pcre-opt=OPTIONS            set additional options for PCRE building
+  --with-pcre-opt=OPTIONS            set additional build options for PCRE
 
   --with-md5=DIR                     set path to md5 library sources
-  --with-md5-opt=OPTIONS             set additional options for md5 building
+  --with-md5-opt=OPTIONS             set additional build options for md5
   --with-md5-asm                     use md5 assembler sources
 
   --with-sha1=DIR                    set path to sha1 library sources
-  --with-sha1-opt=OPTIONS            set additional options for sha1 building
+  --with-sha1-opt=OPTIONS            set additional build options for sha1
   --with-sha1-asm                    use sha1 assembler sources
 
   --with-zlib=DIR                    set path to zlib library sources
-  --with-zlib-opt=OPTIONS            set additional options for zlib building
+  --with-zlib-opt=OPTIONS            set additional build options for zlib
   --with-zlib-asm=CPU                use zlib assembler sources optimized
-                                     for specified CPU, the valid values:
+                                     for the specified CPU, valid values:
                                      pentium, pentiumpro
 
   --with-libatomic                   force libatomic_ops library usage
   --with-libatomic=DIR               set path to libatomic_ops library sources
 
   --with-openssl=DIR                 set path to OpenSSL library sources
-  --with-openssl-opt=OPTIONS         set additional options for OpenSSL building
+  --with-openssl-opt=OPTIONS         set additional build options for OpenSSL
 
-  --with-debug                       enable the debugging logging
+  --with-debug                       enable debug logging
 
 END
 
--- nginx-1.0.0.orig/auto/os/conf
+++ nginx-1.0.0/auto/os/conf
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 echo "checking for $NGX_SYSTEM specific features"
--- nginx-1.0.0.orig/auto/os/linux
+++ nginx-1.0.0/auto/os/linux
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 have=NGX_LINUX . auto/have_headers
@@ -18,7 +19,9 @@ CC_AUX_FLAGS="$cc_aux_flags -D_GNU_SOURC
 # Linux kernel version
 
 version=$((`uname -r \
-       | sed 's/^\([0-9]*\)\.\([0-9]*\)\.\([0-9]*\).*/\1*256*256+\2*256+\3/'`))
+    | sed -n -e 's/^\([0-9][0-9]*\)\.\([0-9][0-9]*\)\.\([0-9][0-9]*\).*/ \
+                                                 \1*256*256+\2*256+\3/p' \
+             -e 's/^\([0-9][0-9]*\)\.\([0-9][0-9]*\).*/\1*256*256+\2*256/p'`))
 
 version=${version:-0}
 
--- nginx-1.0.0.orig/auto/os/solaris
+++ nginx-1.0.0/auto/os/solaris
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 have=NGX_SOLARIS . auto/have_headers
--- nginx-1.0.0.orig/auto/os/freebsd
+++ nginx-1.0.0/auto/os/freebsd
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 have=NGX_FREEBSD . auto/have_headers
@@ -49,6 +50,15 @@ if [ $osreldate -gt 502103 ]; then
     have=NGX_HAVE_AIO_SENDFILE . auto/have
 fi
 
+# POSIX semaphores
+# http://www.freebsd.org/cgi/query-pr.cgi?pr=kern/127545
+
+if [ $osreldate -ge 701106 ]; then
+    echo " + POSIX semaphores should work"
+else
+    have=NGX_HAVE_POSIX_SEM . auto/nohave
+fi
+
 
 # kqueue
 
--- nginx-1.0.0.orig/auto/os/darwin
+++ nginx-1.0.0/auto/os/darwin
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 have=NGX_DARWIN . auto/have_headers
--- nginx-1.0.0.orig/auto/os/win32
+++ nginx-1.0.0/auto/os/win32
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 have=NGX_WIN32 . auto/have_headers
--- nginx-1.0.0.orig/auto/types/value
+++ nginx-1.0.0/auto/types/value
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 cat << END >> $NGX_AUTO_CONFIG_H
--- nginx-1.0.0.orig/auto/types/typedef
+++ nginx-1.0.0/auto/types/typedef
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 echo $ngx_n "checking for $ngx_type ...$ngx_c"
--- nginx-1.0.0.orig/auto/types/uintptr_t
+++ nginx-1.0.0/auto/types/uintptr_t
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 echo $ngx_n "checking for uintptr_t ...$ngx_c"
--- nginx-1.0.0.orig/auto/types/sizeof
+++ nginx-1.0.0/auto/types/sizeof
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 echo $ngx_n "checking for $ngx_type size ...$ngx_c"
--- nginx-1.0.0.orig/auto/cc/bcc
+++ nginx-1.0.0/auto/cc/bcc
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 # Borland C++ 5.5
--- nginx-1.0.0.orig/auto/cc/conf
+++ nginx-1.0.0/auto/cc/conf
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 LINK="\$(CC)"
--- nginx-1.0.0.orig/auto/cc/msvc
+++ nginx-1.0.0/auto/cc/msvc
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 # MSVC 6.0 SP2
--- nginx-1.0.0.orig/auto/cc/acc
+++ nginx-1.0.0/auto/cc/acc
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 # aCC: HP ANSI C++ B3910B A.03.55.02
--- nginx-1.0.0.orig/auto/cc/gcc
+++ nginx-1.0.0/auto/cc/gcc
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 # gcc 2.7.2.3, 2.8.1, 2.95.4, egcs-1.1.2
--- nginx-1.0.0.orig/auto/cc/name
+++ nginx-1.0.0/auto/cc/name
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 if [ "$NGX_PLATFORM" != win32 ]; then
@@ -25,6 +26,13 @@ fi
 
 if [ "$CC" = cl ]; then
     if `$NGX_WINE $CC -v 2>&1 \
+        | grep '^Microsoft (R) 32-bit C/C++ Optimizing Compiler Version 16' \
+        >/dev/null 2>&1`; then
+
+        NGX_CC_NAME=msvc10
+        echo " + using Microsoft Visual C++ 10 compiler"
+
+    else if `$NGX_WINE $CC -v 2>&1 \
         | grep '^Microsoft (R) 32-bit C/C++ Optimizing Compiler Version 14' \
         >/dev/null 2>&1`; then
 
@@ -43,6 +51,7 @@ if [ "$CC" = cl ]; then
         echo " + using Microsoft Visual C++ compiler"
     fi
     fi
+    fi
 
 else
 if [ "$CC" = wcl386 ]; then
@@ -55,16 +64,16 @@ if [ "$CC" = bcc32 ]; then
     echo " + using Borland C++ compiler"
 
 else
-if `$CC -v 2>&1 | grep 'gcc version' >/dev/null 2>&1`; then
-    NGX_CC_NAME=gcc
-    echo " + using GNU C compiler"
-
-else
 if `$CC -V 2>&1 | grep '^Intel(R) C' >/dev/null 2>&1`; then
     NGX_CC_NAME=icc
     echo " + using Intel C++ compiler"
 
 else
+if `$CC -v 2>&1 | grep 'gcc version' >/dev/null 2>&1`; then
+    NGX_CC_NAME=gcc
+    echo " + using GNU C compiler"
+
+else
 if `$CC -V 2>&1 | grep 'Sun C' >/dev/null 2>&1`; then
     NGX_CC_NAME=sunc
     echo " + using Sun C compiler"
--- nginx-1.0.0.orig/auto/cc/ccc
+++ nginx-1.0.0/auto/cc/ccc
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 # Compaq C V6.5-207
--- nginx-1.0.0.orig/auto/cc/owc
+++ nginx-1.0.0/auto/cc/owc
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 # Open Watcom C 1.0, 1.2, 1.3
--- nginx-1.0.0.orig/auto/cc/icc
+++ nginx-1.0.0/auto/cc/icc
@@ -1,8 +1,9 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
-# Intel C++ compiler 7.1, 8.0, 8.1, 9.0
+# Intel C++ compiler 7.1, 8.0, 8.1, 9.0, 11.1
 
 NGX_ICC_VER=`$CC -V 2>&1 | grep 'Version' 2>&1 \
                          | sed -e 's/^.* Version \([^ ]*\) *Build.*$/\1/'`
@@ -15,32 +16,7 @@ have=NGX_COMPILER value="\"Intel C Compi
 # optimizations
 
 CFLAGS="$CFLAGS -O"
-# inline the functions declared with __inline
-#CFLAGS="$CFLAGS -Ob1"
-# inline any function, at the compiler's discretion
-CFLAGS="$CFLAGS -Ob2"
 
-# multi-file IP optimizations
-case "$NGX_ICC_VER" in
-    9.*)
-        IPO="-ipo"
-    ;;
-
-    # 8.1.38 under FreeBSD can not link -ipo
-    8.1)
-        IPO="-ip"
-    ;;
-
-    *)
-        IPO="-ipo -ipo_obj"
-    ;;
-esac
-
-# single-file IP optimizations
-#IPO="-ip"
-
-CFLAGS="$CFLAGS $IPO"
-CORE_LINK="$CORE_LINK $IPO"
 CORE_LINK="$CORE_LINK -opt_report_file=$NGX_OBJS/opt_report_file"
 
 
@@ -64,15 +40,15 @@ esac
 CFLAGS="$CFLAGS $CPU_OPT"
 
 if [ ".$PCRE_OPT" = "." ]; then
-    PCRE_OPT="-O $IPO $CPU_OPT"
+    PCRE_OPT="-O $CPU_OPT"
 fi
 
 if [ ".$MD5_OPT" = "." ]; then
-    MD5_OPT="-O $IPO $CPU_OPT"
+    MD5_OPT="-O $CPU_OPT"
 fi
 
 if [ ".$ZLIB_OPT" = "." ]; then
-    ZLIB_OPT="-O $IPO $CPU_OPT"
+    ZLIB_OPT="-O $CPU_OPT"
 fi
 
 
--- nginx-1.0.0.orig/auto/cc/sunc
+++ nginx-1.0.0/auto/cc/sunc
@@ -1,11 +1,14 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 # Sun C 5.7 Patch 117837-04 2005/05/11    Sun Studio 10
 # Sun C 5.8 2005/10/13                    Sun Studio 11
 # Sun C 5.9 SunOS_i386 2007/05/03         Sun Studio 12
 # Sun C 5.9 SunOS_sparc 2007/05/03
+# Sun C 5.10 SunOS_i386 2009/06/03        Sun Studio 12.1
+# Sun C 5.11 SunOS_i386 2010/08/13        Sun Studio 12.2
 
 NGX_SUNC_VER=`$CC -V 2>&1 | grep 'Sun C' 2>&1 \
                           | sed -e 's/^.* Sun C \(.*\)/\1/'`
@@ -57,9 +60,19 @@ esac
 
 # optimizations
 
+# 20736 == 0x5100, Sun Studio 12.1
+
+if [ "$ngx_sunc_ver" -ge 20736 ]; then
+    ngx_fast="-fast"
+
+else
+    # older versions had problems with bit-fields
+    ngx_fast="-fast -xalias_level=any"
+fi
+
 IPO=-xipo
-CFLAGS="$CFLAGS -fast $IPO"
-CORE_LINK="$CORE_LINK -fast $IPO"
+CFLAGS="$CFLAGS $ngx_fast $IPO"
+CORE_LINK="$CORE_LINK $ngx_fast $IPO"
 
 
 case $CPU in
@@ -126,15 +139,15 @@ CFLAGS="$CFLAGS $CPU_OPT"
 
 
 if [ ".$PCRE_OPT" = "." ]; then
-    PCRE_OPT="-fast $IPO $CPU_OPT"
+    PCRE_OPT="$ngx_fast $IPO $CPU_OPT"
 fi
 
 if [ ".$MD5_OPT" = "." ]; then
-    MD5_OPT="-fast $IPO $CPU_OPT"
+    MD5_OPT="$ngx_fast $IPO $CPU_OPT"
 fi
 
 if [ ".$ZLIB_OPT" = "." ]; then
-    ZLIB_OPT="-fast $IPO $CPU_OPT"
+    ZLIB_OPT="$ngx_fast $IPO $CPU_OPT"
 fi
 
 
--- nginx-1.0.0.orig/auto/lib/make
+++ nginx-1.0.0/auto/lib/make
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 if [ $PCRE != NONE -a $PCRE != NO -a $PCRE != YES ]; then
--- nginx-1.0.0.orig/auto/lib/conf
+++ nginx-1.0.0/auto/lib/conf
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 if [ $USE_PCRE = YES -o $PCRE != NONE ]; then
@@ -29,6 +30,7 @@ if [ $USE_MD5 = YES ]; then
     if [ $USE_OPENSSL = YES ]; then
         have=NGX_HAVE_OPENSSL_MD5_H . auto/have
         have=NGX_OPENSSL_MD5 . auto/have
+        have=NGX_HAVE_MD5 . auto/have
         MD5=YES
         MD5_LIB=OpenSSL
 
@@ -42,6 +44,7 @@ if [ $USE_SHA1 = YES ]; then
 
     if [ $USE_OPENSSL = YES ]; then
         have=NGX_HAVE_OPENSSL_SHA1_H . auto/have
+        have=NGX_HAVE_SHA1 . auto/have
         SHA1=YES
         SHA1_LIB=OpenSSL
 
--- nginx-1.0.0.orig/auto/lib/test
+++ nginx-1.0.0/auto/lib/test
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 echo $ngx_n "checking for $ngx_lib ...$ngx_c"
--- nginx-1.0.0.orig/auto/lib/libgd/conf
+++ nginx-1.0.0/auto/lib/libgd/conf
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
     ngx_feature="GD library"
--- nginx-1.0.0.orig/auto/lib/perl/make
+++ nginx-1.0.0/auto/lib/perl/make
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 cat << END                                                    >> $NGX_MAKEFILE
@@ -27,6 +28,7 @@ $NGX_OBJS/src/http/modules/perl/Makefile
 		&& NGX_PM_CFLAGS="\$(NGX_PM_CFLAGS) -g $NGX_CC_OPT"	\
 			NGX_PCRE=$PCRE					\
 			NGX_OBJS=$NGX_OBJS				\
+			NGX_OPENSSL=$OPENSSL				\
 		$NGX_PERL Makefile.PL					\
 			LIB=$NGX_PERL_MODULES				\
 			INSTALLSITEMAN3DIR=$NGX_PERL_MODULES_MAN
--- nginx-1.0.0.orig/auto/lib/perl/conf
+++ nginx-1.0.0/auto/lib/perl/conf
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 echo "checking for perl"
--- nginx-1.0.0.orig/auto/lib/geoip/conf
+++ nginx-1.0.0/auto/lib/geoip/conf
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
     ngx_feature="GeoIP library"
--- nginx-1.0.0.orig/auto/lib/zlib/make
+++ nginx-1.0.0/auto/lib/zlib/make
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 case "$NGX_CC_NAME" in
--- nginx-1.0.0.orig/auto/lib/zlib/conf
+++ nginx-1.0.0/auto/lib/zlib/conf
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 if [ $ZLIB != NONE ]; then
--- nginx-1.0.0.orig/auto/lib/zlib/makefile.msvc
+++ nginx-1.0.0/auto/lib/zlib/makefile.msvc
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 CFLAGS = -nologo -O2 -Ob1 -Oi -Gs $(LIBC) $(CPU_OPT)
--- nginx-1.0.0.orig/auto/lib/zlib/makefile.bcc
+++ nginx-1.0.0/auto/lib/zlib/makefile.bcc
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 CFLAGS = -q -O2 -tWM -w-8004 -w-8012 $(CPU_OPT)
--- nginx-1.0.0.orig/auto/lib/zlib/makefile.owc
+++ nginx-1.0.0/auto/lib/zlib/makefile.owc
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 CFLAGS = -zq -bt=nt -ot -op -oi -oe -s -bm $(CPU_OPT)
--- nginx-1.0.0.orig/auto/lib/openssl/make
+++ nginx-1.0.0/auto/lib/openssl/make
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 case "$CC" in
--- nginx-1.0.0.orig/auto/lib/openssl/conf
+++ nginx-1.0.0/auto/lib/openssl/conf
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 if [ $OPENSSL != NONE ]; then
--- nginx-1.0.0.orig/auto/lib/openssl/makefile.msvc
+++ nginx-1.0.0/auto/lib/openssl/makefile.msvc
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 all:
--- nginx-1.0.0.orig/auto/lib/openssl/makefile.bcc
+++ nginx-1.0.0/auto/lib/openssl/makefile.bcc
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 all:
--- nginx-1.0.0.orig/auto/lib/google-perftools/conf
+++ nginx-1.0.0/auto/lib/google-perftools/conf
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
     ngx_feature="Google perftools"
--- nginx-1.0.0.orig/auto/lib/sha1/make
+++ nginx-1.0.0/auto/lib/sha1/make
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 case "$NGX_CC_NAME" in
--- nginx-1.0.0.orig/auto/lib/sha1/conf
+++ nginx-1.0.0/auto/lib/sha1/conf
@@ -1,9 +1,11 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 if [ $SHA1 != NONE ]; then
 
+    have=NGX_HAVE_SHA1 . auto/have
     CORE_INCS="$CORE_INCS $SHA1"
 
     case "$NGX_CC_NAME" in
@@ -41,7 +43,7 @@ else
         # FreeBSD
 
         ngx_feature="sha1 in system md library"
-        ngx_feature_name=
+        ngx_feature_name=NGX_HAVE_SHA1
         ngx_feature_run=no
         ngx_feature_incs="#include <sha.h>"
         ngx_feature_path=
--- nginx-1.0.0.orig/auto/lib/sha1/makefile.msvc
+++ nginx-1.0.0/auto/lib/sha1/makefile.msvc
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 CFLAGS = -nologo -O2 -Ob1 -Oi -Gs $(LIBC) $(CPU_OPT) -D L_ENDIAN
--- nginx-1.0.0.orig/auto/lib/sha1/makefile.bcc
+++ nginx-1.0.0/auto/lib/sha1/makefile.bcc
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 CFLAGS = -q -O2 -tWM $(CPU_OPT) -DL_ENDIAN
--- nginx-1.0.0.orig/auto/lib/sha1/makefile.owc
+++ nginx-1.0.0/auto/lib/sha1/makefile.owc
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 CFLAGS = -zq -bt=nt -bm -ot -op -oi -oe -s $(CPU_OPT)
--- nginx-1.0.0.orig/auto/lib/pcre/make
+++ nginx-1.0.0/auto/lib/pcre/make
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 case "$NGX_CC_NAME" in
--- nginx-1.0.0.orig/auto/lib/pcre/conf
+++ nginx-1.0.0/auto/lib/pcre/conf
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 if [ $PCRE != NONE ]; then
--- nginx-1.0.0.orig/auto/lib/pcre/makefile.msvc
+++ nginx-1.0.0/auto/lib/pcre/makefile.msvc
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 CFLAGS =	-O2 -Ob1 -Oi -Gs $(LIBC) $(CPU_OPT)
--- nginx-1.0.0.orig/auto/lib/pcre/makefile.bcc
+++ nginx-1.0.0/auto/lib/pcre/makefile.bcc
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 CFLAGS =	-q -O2 -tWM -w-8004 $(CPU_OPT)
--- nginx-1.0.0.orig/auto/lib/pcre/makefile.owc
+++ nginx-1.0.0/auto/lib/pcre/makefile.owc
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 CFLAGS =	-c -zq -bt=nt -ot -op -oi -oe -s -bm $(CPU_OPT)
--- nginx-1.0.0.orig/auto/lib/md5/make
+++ nginx-1.0.0/auto/lib/md5/make
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 case "$NGX_CC_NAME" in
--- nginx-1.0.0.orig/auto/lib/md5/conf
+++ nginx-1.0.0/auto/lib/md5/conf
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 if [ $MD5 != NONE ]; then
@@ -14,6 +15,7 @@ if [ $MD5 != NONE ]; then
         OPENSSL_MD5=NO
     fi
 
+    have=NGX_HAVE_MD5 . auto/have
     CORE_INCS="$CORE_INCS $MD5"
 
     case "$NGX_CC_NAME" in
@@ -51,7 +53,7 @@ else
             # FreeBSD, Solaris 10
 
             ngx_feature="system md library"
-            ngx_feature_name=
+            ngx_feature_name=NGX_HAVE_MD5
             ngx_feature_run=no
             ngx_feature_incs="#include <md5.h>"
             ngx_feature_path=
@@ -87,6 +89,7 @@ else
 
             if [ $ngx_found = yes ]; then
                 have=NGX_HAVE_OPENSSL_MD5_H . auto/have
+                have=NGX_HAVE_MD5 . auto/have
             fi
         fi
 
@@ -97,17 +100,4 @@ else
         fi
     fi
 
-    if [ $MD5 != YES ]; then
-cat << END
-
-$0: error: the HTTP cache module requires md5 functions
-from OpenSSL library.  You can either disable the module by using
---without-http-cache option, or install the OpenSSL library into the system,
-or build the OpenSSL library statically from the source with nginx by using
---with-http_ssl_module --with-openssl=<path> options.
-
-END
-        exit 1
-    fi
-
 fi
--- nginx-1.0.0.orig/auto/lib/md5/makefile.msvc
+++ nginx-1.0.0/auto/lib/md5/makefile.msvc
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 CFLAGS = -nologo -O2 -Ob1 -Oi -Gs $(LIBC) $(CPU_OPT) -D L_ENDIAN
--- nginx-1.0.0.orig/auto/lib/md5/makefile.bcc
+++ nginx-1.0.0/auto/lib/md5/makefile.bcc
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 CFLAGS = -q -O2 -tWM $(CPU_OPT) -DL_ENDIAN
--- nginx-1.0.0.orig/auto/lib/md5/makefile.owc
+++ nginx-1.0.0/auto/lib/md5/makefile.owc
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 CFLAGS = -zq -bt=nt -bm -ot -op -oi -oe -s $(CPU_OPT)
--- nginx-1.0.0.orig/auto/lib/libxslt/conf
+++ nginx-1.0.0/auto/lib/libxslt/conf
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
     ngx_feature="libxslt"
--- nginx-1.0.0.orig/auto/lib/libatomic/make
+++ nginx-1.0.0/auto/lib/libatomic/make
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
     cat << END                                            >> $NGX_MAKEFILE
--- nginx-1.0.0.orig/auto/lib/libatomic/conf
+++ nginx-1.0.0/auto/lib/libatomic/conf
@@ -1,5 +1,6 @@
 
 # Copyright (C) Igor Sysoev
+# Copyright (C) Nginx, Inc.
 
 
 if [ $NGX_LIBATOMIC != YES ]; then
